%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 11.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: APS Workgroup
%%CreationDate: 11/2/2011
%%BoundingBox: 0 0 205 178
%%HiResBoundingBox: 0 0 204.6724 177.5503
%%CropBox: 0 0 204.6724 177.5503
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 112 8%%BeginData: 7512 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD12FFA8FD7DFFA8A827AFFD76FFA8A8FF7DA8A87D7D53A8FD76FF
%527DA87D52FD07FFA8FD74FF7DA87DA8A8FD05FFA8FD74FFA87DFF7D52FD
%07FFA9FD45FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FD1AFFA8FD45FFA8FD1FFFA8FD1AFFA8FD44FFAFA8FD07
%FFA8FD07FFA8FD0DFFA9AFFD19FFA8FD45FFA8FFFFFFA87DA9FFFF7D7DFD
%05FF7D7D7DFFA884A8AF7DFFA87DFD04FFA8FD60FFA8FFFF522853FFFF52
%A8FFA87DA8FFA87D7DFF7D27A8527D527D7DA8FD1DFFA8FD45FFA8FFFFFF
%525252FFFF7D7DFF7D7D7DFFA88452FF84525352527D7DA8A8FFFFFFA8FD
%19FFAFA8FD45FFA8FFFFFF7DFFFFFF84A8FFFFA8FFFFA87DA8FFA87DA884
%7EFFA87DFFFFFFA8FD1AFFA8FD45FFA8FD1FFFA8FD1AFFA8FD63FFA8FD1A
%FFA8FD45FFA8FD1FFFA8FD1AFFA8FD44FFAFA8FD07FFA8FD07FFA8FD0DFF
%A8AFFD19FFA8FD45FFA8FFFFFFCACFCFFFFF7D7DFD05FFA8527DFFA884A8
%AF7DFFA87DFD04FFA8FD60FFA8FFFFC38DCAFFFF52A8FFA87DA8FFA8527D
%FF7D27A8527D527D7DA8FD1DFFA8FD45FFA8FFFFFFCAC3CAFFFF7D7DFF7D
%7D7DFFA8A852FF84525352527D7DA8A8FFFFFFA8FD19FFAFA8FD45FFA8FF
%CAFD05FF84A8FFFFA8FFFFFF7DA8FFA87DA8847EFFA87DFFFFFFA8FD1AFF
%A8FD45FFA8FD1FFFA8FD1AFFA8FD63FFA8FD1AFFA8FD45FFA8FD1FFFA8FD
%15FFAF7DFFFFFFA8FD44FFAFA8FFFFFFA7FFFFFF7DA8FD05FFA97DA9FFFF
%A8FD05FFA8FFFFFFA8AFFD13FFA8FF7D52A9FFA8FD45FFA8FFFFFF8382AE
%FFFF527DFFA8FFFFFF7D527DFF7D53A8A859A87D7DA8FFFFFFA8FD13FFA8
%7D7D52FD49FFA8FFFF828283FFFF7DA8FF7D527EFF7D527DFFA8527D527D
%287EA8A8FD12FF7D7DFF527DFD06FFA8FD45FFA8FFFFFFA882AEFFFF7D7D
%FF7D84A8FF7D7D59FFA8527D7D52A87D7DA8FFFFFFA8FD0EFF7D7DA87D7D
%A8FD05FFA8A8FD45FFA8FFFFFFAEFD0BFFA8FFFFFFA8FFA8FFFFFFA8FFFF
%FFA8FD10FF7DFF7D7DA8FD05FFA8FD45FFA8FD1FFFA8FD0EFFA8A8FF847D
%FD07FFA8FD29FFA8FD39FFA8FD1AFFA8FD29FF7D7D52FD19FFA8FD1FFFA8
%FD1AFFA8FD26FF7D2752515353A9FD17FFAFA8FFFFA97EFFFFFF7DA8FD06
%FF7DFFA87DA8FD05FFA8FFA8FFFFAFFD19FFA8FD27FF4B76577C535353A9
%FD16FFA8FFFFFF547E7EFFFF527DFFA8FFFFFFA852847D7D7EFFA852AF7D
%7DA87D7DFFA8FD40FF527652532F5329537DFD17FFA8FFFF7E537EFFFF7D
%A8FF7D527EFFFF7D7D7DFF52FF7D53527D5252A8A8A8FD1AFFA8FD25FF7E
%7752592F5453595359A8FD15FFA8FFFFFFA9A9A9FFFF7D7DFF7D84A8FFFF
%7DA88452A8FFA8527D527DA87D7DFFA8FD04FFA87DA8A8A8FD10FFAFA8FD
%23FF53522F5953597E7E5153527EFD16FFA9FD11FFA8FD07FFA8FFA8FFA8
%FD05FFFD047DFD11FFA8FD23FF52532E5957ADFFFFFF52532F53FD15FFA8
%FD1FFFA8FD04FF7D7D7D52FD12FFA8FD21FFA176525858AECFFFFFFF7D58
%52537EFD15FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FD06FFA8FFA87E7D7EA8FD0DFFA8FD21FFA87D7B8283FD
%06FFA827592F59CFFD3AFFA87D7DA87D7D7DFD0DFFA8FD1FFF7C7552597C
%A7FD07FF522D2F2E7DFD3AFFA8527D7D7DFD0EFFA8FD1DFFA8A852585853
%5383FD08FFA852535959FD3AFFA8537DA8A8AFA8FD2AFF7D2E5352582E5A
%A8FD09FF2776525383FD3AFFFD057DFD0DFFA8FD1DFF82594C7782AEFD0B
%FF7D4B535384FD3BFFA8A8A8FD0EFFAFA8FD19FFCAA87D8357597EFD0DFF
%A8274C2F2FA8FD39FF7DA87D7DFD0EFFA8FD1BFF939A7D83CFFD0FFF5276
%2F2F53FD38FF7D7D527D7DFD0FFFA8FD19FFA8764B7DFD11FFA82653292F
%7EFD37FF7DAFA8A8FD0FFFA8FD1AFFA8537DFD13FF524B532F7EFD37FF7D
%7D52527DFD0AFF7D52FFFFFFA8FD17FF7D7C2F7E7EFD13FFA8274C2F29A8
%FD36FFA852A8A8A8FD08FFA8A85252A8FFA8FD17FF7D52585953A9FD14FF
%527629532F7EFD35FFA8A87DA8A8FFFFFF7D7DFF7D52FFA8A87DFD19FFA7
%A1515858FD17FF4B53292929A8FD36FF845252A8FFFFA87DA87DA8A8FD05
%FFA8FD12FF7E537EA8C38DCAA8CFFD17FFA852532F5329FD34FF847D7DA8
%7D7D84FFA87DA87D52AFFD05FFA8A8FD10FFAE2E522852A8C9A8FD1AFF7D
%5153292953FD34FFA8FFFFA8FD04FFA8FF7DA8FD06FFA8FD11FF82842E53
%52FD1EFF7D52532954A9FD32FFA852525352FD0FFFA8FD0DFFCACACA8381
%A77DFD1FFFA84B522F2954FD33FFA8FFFFA87EFD0DFFA8FD0EFFCA8DC3AE
%AEFD22FF7D522F2F297EFD33FFA8FF7DA8A8FD0DFFA8FD0BFFA8FFA8C2A1
%FD25FF2752292F29A8FD31FF7DFD0452A8FD0CFFA8FD0BFF845252FD28FF
%A82777295453FD31FF7D7DFF52FD1AFF7D5252A8FD28FF7D4B53292F53FD
%30FFA87D52A8FD0EFFA8FD0BFFA87D7DFD2AFF52522F2954FD2FFF7D7D7E
%A8A87DA8FD0CFFAFA8FD37FF7D27522F2954A8FD2EFFA87D7D7DA8FD0DFF
%A8FD39FF535229542954FD30FFA8FD10FFA8FD39FF52522953297EFD2CFF
%A87DA8527DFD0EFFA8FD3BFF4B76295353FD2CFF52A852FF52A8FD0EFFA8
%FD3AFFA85153292953FD2BFFA8527DA87DFD0EFFA8FD3CFFA8523029537E
%FD2BFFFD04A8FD4CFFA84C2F292F7EFD3CFFA8FD3EFFA7285329537EFD3B
%FFAFA8FD3EFFA8292F292F52FD3AFFA8FD40FFA8295329537DFD3AFFA8FD
%40FF7E292F295352A8FD33FFA8A87DA8FD43FF7E2953295352A8FD2DFFA8
%FFFFFFA8A8527D52A8FD42FFCF7E292F292F527DFD2AFFA8A8FF7DA8A87D
%A87D7D7DA8FD44FF7E29542953527DFD29FF7D53A87D52FD05FFA8FFA8FD
%44FF7E292F2929287DA8FD28FF7DA87DA8A8FD05FFA8FD46FFA92953292F
%297DA8FD26FFA87DFF7D52FD07FFA8FD47FF532F292F2953A8FD30FFA8FD
%49FF7E5329542953A8FD30FFA8FD49FFA85329532953A8FD2EFFA8FD4BFF
%A954295429537EFD2EFFA8FD4CFF5A292F292953FD2CFFA8FD4EFFA92953
%295453FD7BFFA92929292F53FD2AFFA8FD51FF532F292F53FD29FFAFA8FD
%51FF532929297EFD28FFA8FD53FF535429A9FD29FFA8FD53FFA8A9A9FD28
%FFA8FD80FFA8FD7EFFA8FDFCFFFFFFFFA8FD7FFFAFA8FD7EFFA8FD7CFF84
%A87DFFA8FD78FFA8FFFD047DA8FD74FFA8A8FFA87DA859A87D5352FD75FF
%7D52FF7D7DA8FFFFFFA8FFA8FD11FFA9FD07FFA8FD0BFFA9FD3FFFA8FD0E
%FFA87DA8847DA8FD06FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FF
%A8A8A8FFA8A8A8FFAFFFA8FFA8A9A8FFA8A8A8FFA8AFA8FFA8A8A8FFA8A8
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A9A8FFA8FFA8FFA8A8A8FFA8A8A8FF
%A8FFA8FFA8FFA8FFA8A9A8FFA8FFA8FFA8A8A8FFA8A8A8FD0EFF7DFF527D
%FD0AFFA8FD17FF7DA8FD18FFA8FD19FF7DFD18FFA87DFD0AFFA8FFFFFFA8
%FD07FFA8FF7D59FD16FFA87D52FD18FF52A8FD17FFA8527DFD17FF7D52FD
%11FFA8A8FFA87DA87DA87DFD12FFA8A8FF7DA87D7DFD13FFA8FFA87DFF7D
%A8FD12FFA8A8FFA87DA852FD13FFA8A8FF7DA8A852FD11FF7D52FF527D7D
%FD15FF527D7D7D52A8A8FD12FFA927A8597D7DFD14FF7D52FF527D7DFFA8
%FD12FF7D7DA87D7DA8FD13FF7DA87DA87DFD15FFA87D7DA87DA8FD14FF7D
%7D7DFF7DFD14FFA87DA87DA87DFD14FFA8847DAF7DFD14FF53FF527DA8FD
%15FF7D7DA85253FD15FF7DA87D7D7DFD14FFA852FF535384FD14FFA87DA8
%527DFD17FFA8FD19FFA8FD17FFA8FFA8FD19FFA8FD5EFFA8FFFFFF7E527D
%7DA8FF7D7D7DA8FD71FF7D7D52A8FFA859FF7DA87D7E27A87DFD71FF52A8
%7D7DFF7D5259527D7DA87DFF7D7DFD70FF7DA852A8FFA87DFF7D7D7DFF52
%FF7DA8FD71FF7D527DFFA8A8FFA8A87E7DA87D7DA8FD72FF7DA8FD06FFA8
%7EFFFF7DFD74FFA8FD07FFA8FFA9FD30FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2011-11-02T07:21:54+05:30</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>224</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA4AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FUm8z+a9O8uQW01&#xA;9Fcypd3ENrGbaB5VV55UhVpZABHEvKUbuwr0Wp2xVBXXnm0XzBL5ftbSWW/Ba3gupSsVi18Lb64t&#xA;o8y+rKrmD4ywhYAeLfDiqW3dt+Z915w8t3skVpaaDavP+lrOzvpJeZkgmRWl9S2t/URD6ZRR0cmo&#xA;Ioyqs4xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xVKfNWgDX9H/AEaZ/qwNzZ3Pq8ef+8d3FdceNV+36PGtdq136YqlP+Az/i/9NfXh+jvrn6V/Rfo/&#xA;F+kPqX1D1fX5/Y9Hfh6dee/LtirLMVQaRRHV5pSimVYIQr0HIAvLtXriqMxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KqV5M0FpPMoBaKNnAPQlVJxVT9PUv9/w/wDIl/8AqrirvT1L/f8AD/yJ&#xA;f/qriqyJr2VS0V3byKrMhKxMQGQlWXaXqCKHFV/p6l/v+H/kS/8A1VxV3p6l/v8Ah/5Ev/1VxV3p&#xA;6l/v+H/kS/8A1VxV3p6l/v8Ah/5Ev/1VxVZK+oQBHeWJ0MkaMoiZTR3CbEyN/N4YqjMVdirsVdir&#xA;sVdiqGj/AOOlP/xhh/4nLiqJxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KobVP+Obd/8YZP&#xA;+IHFUn/MKLzPL5M1VPK7FddaIfUypVX+2vqCNm+EOY+QQno1MVSb8pofOEWmal/iE3otnvGbR01Z&#xA;45b9bfgoInaL4ft14jrT6MVQ3lKx13RPKXmGHSbS6OqprmoSW0N4kly0kct7ySSMXl1ZLKjW7BuQ&#xA;uAC1TVn5AqpnaS+bNR8p63H5hsJluXgmSC2tY4bGeVGiNViaK/1NQ7HZWMiUPbvirHPJtpq9hoHn&#xA;S20uyubOxkQ3Og/V7CXTpI5pbUxvBbWN232oniR+fLjI7k4qxx7j8xE0KzhW01eawFzeiSf6xq0F&#xA;wz+hAbRx/o9zqSRCRpvglUoWG7+nxGFWTeX284t5jsh5gXVhqwayK/VDKNK+q/o9DdetUfVi/wBb&#xA;9SvL979nh8OKvR9R/wB50/4zQf8AJ5MConFXYq7FXYq7FXYqho/+OlP/AMYYf+Jy4qicVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdiqG1T/jm3f/ABhk/wCIHFUTirsVWxTRSqWidZFVmQlSCAyE&#xA;qy7dwRQ4quxV2KuxV2KobUf950/4zQf8nkxVE4q7FXYq7FXYq7FUNH/x0p/+MMP/ABOXFUTirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVQ2qf8AHNu/+MMn/EDirWqRXc2mXcVm/p3ckMi278uH&#xA;GRlIU8gr8aHvxORmCYkDm24JRE4mX02L932IPyvZa7Z6UINcvFvtQ9SRnul2VlZiVovFOFBtx3+e&#xA;QwxkB6ty3a3JinkvFHhhQ2/B3Yl5Ssdd0Tyl5hh0m0ujqqa5qEltDeJJctJHLe8kkjF5dWSyo1uw&#xA;bkLgAtU1Z+QNriJrYXHnG+8r6yuuWckN+YJks4Ybe3t5HrCacFTUNSRmLbDlIny74qxPyJoN3ofl&#xA;nzTa6HaXsFsbGM6ZeSafFY6lJefV5FlUQmO1WQxPw9NmG5JHJuuKpG9x+YiaFZwraavNYC5vRJP9&#xA;Y1aC4Z/QgNo4/wBHudSSISNN8EqlCw3f0+Iwqyby+3nFvMdkPMC6sNWDWRX6oZRpX1X9Hobr1qj6&#xA;sX+t+pXl+9+zw+HFXo+o/wC86f8AGaD/AJPJgVE4q7FXYq7FXYqhpNU0yK/h06W7hTULhWkt7NpE&#xA;E0iJ9pkjJ5MF7kDFXR/8dKf/AIww/wDE5cVROKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;Dap/xzbv/jDJ/wAQOKonFVsUscsayROskbCqupBUjxBGAEEWEA2o2Oo2N/HJLZzLPHFNLbyMv7Ms&#xA;DmKVD7q6kHClXd0jRndgqKCzMxoABuSScVQul6vpOrWgvNKvYNQtGJVbm1lSaMsuxAeMstRiqLxV&#xA;2KobUf8AedP+M0H/ACeTFUTirsVdiqQecfNM/lyytrtNNlv4p7q2tZpUkijjgFzcR24eTm3qHeX4&#xA;QiNU9eI3xVLbrzvLN5ll8vxwNbWUly2kJrkUsZlj1E2P14IkEkUkdFh6OxPx/CUIxVZB+Xd3H5zs&#xA;fMs2v3d89rCsU0VykYaX01uljr9WFtbgL9dbrAX2+FlBfkqyhJVGrzR0bkYISDxbj9uX9qnH8cVR&#xA;mKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVDap/xzbv/jDJ/wAQOKqetWdze6VdWttL6E8q&#xA;FUk9/AkbgN0JGVZ4GUCAaJYZIkxICD8q6dd2VhILiMWyzSNLDYK3NbdW/YDb9T8R7b5VpMcoR32s&#xA;8u5hggYjfby7mNeW/K2u6P5V17TdItE0fUJ9YvbmweKS2gR4JroSRSK4g1BEH1ekdHtyw48aKOLZ&#xA;lNyJ/QPnW68k+YdK1edLzUtQtLi3sRLcxzR/vYGjCu9vY6UUBZt/hY/5WKpP5W8qeabXQPN9tPBd&#xA;A6vbqbNb2e0ivXujZm2l/fWHqQRR8Y4hE3HkNy2KsWf8vPPS6FZ2cWi2506G5vWOkzRWzsfXggSC&#xA;4e2ivrazR43SWjRTbVD+nzLUKsm8v+TfMlp5jsp9Z04anfxNZOvmf10T0YINPSCe3Ch/XJe5V34B&#xA;Sj8+TGoxV6PqP+86f8ZoP+TyYFROKuxV2Kpdr+hWeuab+j7tpEg9e2uKxEBuVpcR3KCrBhQvEA23&#xA;Tw64ql/+CNL/AMU/4i9e49b1PrP1Hkn1X639X+qfWePD1PU+r/u/t8afs13xVkOKoaP/AI6U/wDx&#xA;hh/4nLiqJxV2KuxV2KuxV2KuxV2KuxVjHmn8yvJ/lm5Sx1O+B1SVQ9vpkCmW5krXjRF2XlQ0LlR7&#xA;4JSERZ5KEp8n/m5pevaxJpF3anTL2qi1UyrMszFSzR1ULxdKbgingTksQOSHGAeH8BhGYPl+P0s9&#xA;wM3Yq7FXYq7FUNqn/HNu/wDjDJ/xA4qiJJI40LyMERd2ZjQD5k4gKthngnUvDIsqg0LIwYV8KjCQ&#xA;RzVSsdRsb+OSWzmWeOKaW3kZf2ZYHMUqH3V1IOBURiqW3PmXy5a2n1y51WzgszM1sLmS4iSP10Yo&#xA;0XNmC81ZSCvWoxVMgQwBBqDuCOhGKuxVDaj/ALzp/wAZoP8Ak8mKonFUvPmPy8s97btqloJ9NjM2&#xA;oxGeLnbxAcjJOvKsagb1agxVMMVdirsVdiqGj/46U/8Axhh/4nLiqJxV2KuxV2KuxV2KuxV2KpB5&#xA;u86aP5Xt7eTUBM73bNHbQ26CSRmVeRopK5KMbBJIAHU7L+P0vmua91/VdUm16T1Z9TvVdTdC0dya&#xA;AejGhUcfjCUFBQAZZPRY8h4Z0aMB/eAf1rH9Hu5lhn1EDtGNxs/prrvQo+/opavpOoWF3E94s0Bl&#xA;iF1DDdwtbNK7pGsxijp8QR2ArXwPemZkZ48NY4DntY3qMblvfvLTOMpbyNnYX18rvo+j/wAs9fg1&#xA;nyjZtHHJFJp6JYXKyihMsEScmG52IYHfMHLueLapbiu4t8T06jZlOVsnYq7FXYqhtU/45t3/AMYZ&#xA;P+IHFUD5t0OTXfLl9pMcqwvdoEWR15qKMG3UEVG2W4MnBMS7kEWEJ5J8sT+X7O+hmNqGvbxrsRWM&#xA;Jt7eMNFHHwSMs9P7qvXvk9RmEyKvYVuiMaSPy35W13R/KuvabpFomj6hPrF7c2DxSW0CPBNdCSKR&#xA;XEGoIg+r0jo9uWHHjRRxbMdknnlfTfMq6dd23mqZb8zsVVHmgu1MTLxZG9Kw0xaHuGRvn2xVhdl5&#xA;K13RfqtxbaEl7aWd35hji0SB7aJRb6nc87SRQ7xwrGIo+DKDyVX2XquKojzT5G12b8tvLmgLbPq9&#xA;3pcdvHexo1uyu0Vq0VWhuzFDOgcjZpEYbOp5KMVSNvIX5mz6/LdcbeyuH05oodUiJkMXLSPqos1n&#xA;e5M/BL0+sAYDUjmZK/DirMvJmiy6Zp91XQh5egmuLLhZetHLzkjMaSzFIWkiXm3cHk9OT0OFWcYF&#xA;eWed/IVrBoeq+pqy2k1/cXw0uaKyee6b9LpKbuyeOJy90H5lo+Khk4r1CYqyVPzEVXLXnlvXLKzX&#xA;c30tmskYX+YpBJNOoHese2Ksqtbq3u7aG6tpFmtp0WWGVDVXRxyVlI6gg1xVUxV2KoaP/jpT/wDG&#xA;GH/icuKonFXYq7FXYq7FXYq7FUo8yea9F8u2f1nUpuLMD6FtH8U0pArxjSor8zt4nITmIiyzx4zK&#xA;66Anu2Dwd9N/xz5oOopdzo11fc0Mrl5YbWWiJbG3Sf4aICeUVPFiehxpajPjmYmNQltvH48pdzDV&#xA;GAqI5igd7uW+8aFcI2vc78tntPlDyHpPly2t/SX1LyKL02mJJAr14g9PCvhlkMHrOSW+Q8y0Y8Ai&#xA;b/iYz+f2iJd+TYtZFvJPLoFzHeOIiOQtSfTuvhNOQ9FieopStdsyeKQ+k0W6QsUwT8nPNy6Hr40+&#xA;+muE0+/XiVYloRdTFGjk+HkBWMAEk5l6iYnDjHCRfTYiIsGwa/i22cSGThNcg+h8w3MdirsVdiqy&#xA;eFJoZIXrwkUo1OtGFDiqj9UuP+W2b7of+qeKu+qXH/LbN90P/VPFXfVLj/ltm+6H/qnirvqlx/y2&#xA;zfdD/wBU8Vd9UuP+W2b7of8Aqnirvqlx/wAts33Q/wDVPFXfVLj/AJbZvuh/6p4q0bF2K+pdSyKr&#xA;K/AiIAlGDCvFAeo8cVRWKsW/Mry5f+YfK0+mWfqsZiVnigunspJIXjeN0Eihkb7dfTkHBqUbxxVh&#xA;2haRf2mqWdxa+WvMtzqenhvqza7q0T2EDSRtEzgi6uv2GK/BExoemKvVrb6z9Wi+tcPrPBfX9KvD&#xA;nT4uHLfjXpXFVTFXYqho/wDjpT/8YYf+Jy4qicVdirsVdirsVdiqQeb9aW10bUbWwv4bfXGtZGs4&#xA;yVeZWKkCUQ15ME+10ptvleXIIRMudMZy4Y28C0ny55v8yeYJpGN7d3CwyW3168DSvFEBI6Ks0nJE&#xA;5t04kBjk5+HkwXHhlOPCaEuZ6ivuYTjIw7ze/wDNPI8/juPd3vX/AMufyti8pXMt9Ldrd3c8EcJA&#xA;i4CMpXkQxd616bAdMvzZvEAsUbJ53zWGOtzzZ7lLap3NvDc28tvOoeGZGjlQ7hlcUYH5g4q+P5NP&#xA;vPLGuah5e9WdL3Rrl0tPTZCzUo1rMQOOzRMp5AVr75l6eQl6ZcFdbu+DmaI62xzYoGIlW/I79ehr&#xA;nX4sPqzyjr9pr3l+01G2lMwdeErMoR/Vj+F+SAtxJIrTwzE4JQ9Mt5BGOVxCcYs3Yq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FWE/mpqkdlYaJb3GqvounanqsdpqOoxzi0eOD6tcTUW4JHp8nhVa1xVjf5YX&#xA;vlzUtWNzc+c5tW1q31DULbTNOk1VXSW1t3lhgk+pxuFlJt19T1OJr9quKvWsVdiqWS+ZtEi1+Ly/&#xA;Jc01aeL1o7fhIQUPMisgX0wxELkKW5EKSBQYqio/+OlP/wAYYf8AicuKonFXYq7FXYq7FUDqmuaN&#xA;pSxnUr2C0M3IW6TSKjysi8mWNSQXanZd8jOQiCTyCJEAWXitn5f/AMZ/mfFrVlLcWWnT+hq4N1Gg&#xA;ldbOeNGSIxSyDi7xhasBRaih2yzJoeA8dg9Ps9znfylKenGChwje976+fLfl8eb3KzsrSyt1t7WJ&#xA;YYEqVjQUAqan8cqhARFAUHAjEAUFbJsnYq7FXg3/ADkZ5Ture8tfOdsiHTuEdjrvXkgMnG2npUbK&#xA;0nA7+H0WYcpxyEh0/FJqwYnr+LQP5DeaYtK1z9EXNyRZaqKQAmP0xdbcTUMSeajiD3NNs2OuHiDj&#xA;A+O/Lp0/scTHLhlRfQ+apynYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWOee4NAm0eIazLPEizq1mLQO&#xA;9w9wEfikcKLJ6zFeXwFGHem1QqwvQte1TSNWie+8u3h0ZOXPWZ9Jigu4lKEcyLB5uY/m/cRUFT7Y&#xA;VZR581zV7Xy5Y6z5f1CCO1kvNOEr+iJzPb3l5BDSKQuEQMkpqxRqjpxPxYFSe68w63c+e5dKkvJF&#xA;0ubUm0N9Ii4wyCBtI+vm+S4j4XKP6vwArIAF6Dnviqd2/wCWmgW/mix8yRT3rX1hF6EQuLl7vktJ&#xA;wA81161zT/Sn+BZQhPElTxWirIEdhq8yemxUwQkyfDxHxy7deX4YqjMVdirsVWySRxRvLIwSNAWd&#xA;2NAFAqSTgJAFlSaeZW/59+XjrBsrqxngtA/Fr9D6qIpn+rpJKoAKKX69xUVG+ZU8AEOIG+X2i2EZ&#xA;g8kH5g8oeZfOfm6a4uoV0uLTIprK2mlhd4ru1mmarIxKmKRfTXxqKmlCM1UuPJcSKrcfA7Ow12kw&#xA;jDCWOfFOXMfzTQPx/A5hm/lDyHoXlqFHtIFGoNF6dzdgsS4LBmABNAvIDtmcMuQwEZy4nXY4cI82&#xA;SZFsdirsVdiqB13RNN13R7vSNThE9hfRtDcRHaqt3BHRgdwR0O+Kvlbzn5F1fyprh06dzJxje4sb&#xA;2jD14ImA58tx6qBl9QV67jYjNpoddGAGOfU0Pj0YakAjiHPr+vn83rP5EfmDLqlvL5c1Sdpb+2Uz&#xA;Wc8rs7yxV+NCWJ3jqKDw+Rw9pabhPHHkxxTvZ69mqbXYq7FXYq7FXYq7FXYq7FXYq7FXYqkvnDRd&#xA;Z1nQbjT9I1ibQ7yZWVb6BEd6MjLxqw5LuwPJCrinwsMVY4mkea9E1XSbnUNc1vzLBGZA1pbQWEMK&#xA;n0SvqXRQW8kigMSq1YlgNq0xVnF1aWl3D6N1DHcQ8kk9OVQ684nEkbUYEVR1DKexFcVUf0PpH6U/&#xA;S31G3/Svp+h+kPST6x6Va+n6tOfGv7NaYqi8VQ0f/HSn/wCMMP8AxOXFUTirsVdirD59S1PXdY1X&#xA;y1Pp72lnEjNa6rSUxytGYmVaNGqGjOeY5UI+zXcjCyXl4sZ2He52q0GP8tGYncpc47bc/Py7vfWy&#xA;AT8mvKV5ewarq9qH1ISGe5gtWaG0d+YkVXhTirqjqD8XU9cy8UsghU5GXx2HkPIOsxQIG/Nn+SbX&#xA;Yq7FXYq7FXYq7FWJfmf5NufNXlhrSxeOLVrOVLvTZZRVBNHUFG8FkRmQ/PIyjxCkj5vl7SNd1HR9&#xA;Zh1ewBtL+xmZXhYVEU61SaFxX5gjwOdBo5jNh4Jm5cj3+RcbLDglceXT9Xw/a+sfJfm3TvNOgwan&#xA;ZuOZULdwitYpgoLoa+BOx7jNPnwyxyot0ZWE9ylk7FXYq7FXYq7FXYq7FXYq7FXYqkXniSzPlbUb&#xA;G5u7eybVLebT7ae8p6Hr3ELpGJOXw0J7Hr074q8qsvy08q/WdJu9a8o6d5d0XS0lOp3t3d280V4D&#xA;B6aBCjtt6hEnOTifhpTfCr2jSY9Pj0qzj01Fj05IIlso0HFFgCARhVNKAJSgwKisVdiqGj/46U//&#xA;ABhh/wCJy4qicVdiryn81/yx8y+adfivtNa1mhNitnbtdz3EL6dci49X67bLCKO5T4d6HYb02xV6&#xA;pCjJEiM5dlUBnPViBSv04quxV2KuxV2KuxV2KuxV2KuxV89/n55JttI1aDzTaQrDpOqyC31rgSBH&#xA;euSYrtloQA/2JCKb07nJ488sUuOPTmO8d36vNmKkDE9eXkfxsUk/Jzzb/hnzgLXULsW2lXoMF2Xb&#xA;9ysgH7qRjuBRtuXQA7mmbzVxGbCJwF9R7nDiTGVHZ9OQzQzwpNC6ywyqHjkQhlZWFQykbEEdDmhI&#xA;rYuSvwK7FXYq7FXYq7FXYq7FXYq7FUh8460unWFrbiwTVLnV7lNPtLGVlSKSSRHlb1WZXARY4nY/&#xA;CelKYqwLytb+TR5vt57TyZpVnp1/e3thomrQqhna404SGV/RMSrGj+hLwZHr8O/XFXreKuxV2Koa&#xA;P/jpT/8AGGH/AInLiqJxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVDanpljqmnXOm38K3FleRtDcQt&#xA;0ZHFGH3Yq+UfPn5e6v5Q1mSzuCZ9OkBfSr9tzNCg3SQ/7+jFOX8w+Id82ug1ojWMjY8j+hjkx8QM&#xA;r3Fbfp+G339C9V/5x/8AO0Nzp8nle8mY3tuXnsi5BDQfDWNSd6oamnh7DD2np6PGOTXil0exZqW5&#xA;2KuxV2KuxV2KuxV2KuxV2Kpdr2gabrliLO/WTgrrNDLBLJBNFKn2JIpYirowr1BxVLtN8h6Hp1/p&#xA;t1bNP6WkW7W2m2TycoIjJX1Z6Ec2mkDEM7sdvmcVZFirsVdiqGj/AOOlP/xhh/4nLiqJxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KpV5n8t6b5j0afStQUmGYVSRac4pADxkQmvxLXvsehqCRhBrdQX&#xA;y75n8seZPIfmOFpKwSxv6+nXsR+BwjdVPt3U7069c6LS5xnx1LnyP63GyQ4Ts98/Lj81tH82wRWc&#xA;xFpryoTNZnZZOIqzwk1qO/E7j3Arml1Wmlil5dG6ErDO8xmbsVdirsVdirsVdirsVdirsVdirsVd&#xA;irHfMfnnSNAvo7G7iuZbqe3a5gSGP4ZOM8NskSSSGOMyyTXKKF5bVq3EEEqory9rVrrStqNsjxJJ&#xA;EqPDLxEkcsM08UsT8GdeUciMp4sRUbE4qnGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpF508&#xA;n6Z5s0STS74mPf1Le4QAvFKAeLCvbfcdxl2DNLHLiDGUbD5Y8w6Brvk/zC9nc87e8tX52t3ESvJQ&#xA;fgmicbiv3jp1zoQYajH+Ni428S9k/LD87I9QaHRvM8qJeNxjtdUpwSVjsqXA+ykjHo4+Bjt8LEKd&#xA;BqNLPEfVy73JjMS5PYMx2TsVdirsVdirsVdirsVdirsVYf8Amg2pQaBbXtjqNzYvb6jpqvFbFEWd&#xA;J9Qt4WSVijSceLnZHWvRqjbFWO3V7dXf5ny6TdXElw0961rPoMsjPZvoL6T6jTvbNWJq3p4GQrWv&#xA;wVpirM5fIPk17eO2TSYLa3himhhitAbVUW5eKSUoIDGFcvbxsHHxArUEYqidI0q20u4+o2CiKwt7&#xA;eJVibnI5JkmYsZXZmYsSSxapJ3JxVNsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqQecPI+&#xA;gebLEWuqwkvHX6tdRnjLETSpU+BpuDtl2HUTxm4ljKIL5p86eQPMfky/P1hWexZ2W01FAAki7/aA&#xA;LcGI6qx+/N/jzYtRHhIvvBccxMSzf8qfzkbT/S0TzFKW0+gW0u25O8R/lY7lo/Duv+rQLrNV2eYe&#xA;qO8ftH6/x72yOW+b3yKWKaJJoXWSKRQ8ciEMrKwqGUjYgjNa3LsVdirsVdirsVdirsVdirsVdirs&#xA;VQ0f/HSn/wCMMP8AxOXFUTirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqG1LTbDU7Gaxv&#xA;4FubOccZoXFVYVr+sVyUZGJsc0EW+fvzM/JS70QTav5fDXOjovOe1JLTwAfaYfzxjrXqO+2+bzSd&#xA;oCXpn9TRPHW4Qn5W/m/deWWXStXL3OhOfgYfFJbE90H7SE/aX6RvUF1fZ4n6obS+9EMlbPo3T9Rs&#xA;dRsob2xnS4tJ1DxTRmqsD/n0zRSiQaLkA2iMCXYq7FXYq7FXYq7FXYq7FXYqho/+OlP/AMYYf+Jy&#xA;4qicVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeQfmh+ScGpCXWfLMSw6hu9zp4o&#xA;kc2xJaPssh8Oh9j12uj7QMfTPl3tM8d7h5n+X/5h6z5G1aS3njkk05nKahpr1VkdTRnQNTjItKb9&#xA;eh7EbDU6WOaNjn0LXCfC+pLC9gvrC2voK+hdRJPFyFDwkUMtR8jnOSiYkg9HKV8irsVdirsVdirs&#xA;VdirsVdiqGj/AOOlP/xhh/4nLiqJxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KsU8y/ld5L8x6h+kNTsib0qEkmikeIuBsvMKQGIG1etPozKw6zJjFA7MTAFktjZwWVlb2VuCtvax&#xA;pDCpNSEjUKoqeuwzGlIkknqyVsCuxV2KuxV2KuxV2KuxV2KoaP8A46U//GGH/icuKonFXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqo3d7Z2cQmu547eIu&#xA;kYkldUUvIwRFqxA5O7BVHc7YqhbrzDoltdy2Ul5G2owwNdvp0R9a8MC9XS2j5zOOw4oanYb4qw3z&#xA;X+ZlzprRz2qQ2WlSadeXZvtVt723kSa0ntoiGtXjglK8bqqAbyN8NUHxFVP/ACRrN3rWl2+qXbW7&#xA;T3VtGzPaMrwsBLOqspSSdRVQCyiRuJqORpXFWR4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWK/mN5YOu6Lbrb2MV3qdpfWFxZyyCP1IUjvoJLho5JKcP&#xA;3CNy4mrDbfpiqT/4W1//AJWJ9c+qf7j/ANK/pj9M+pFX0f0T+j/qPp8vVr6vx/Y48f2uWKvQsVQk&#xA;thI94blLuaHlGsbQoIih4FiG+ONmr8f81MVS7SNVh1W71S1tru8WTSLr6ldetFFEDL6Uc1UDRhmT&#xA;jKKNSh6iq0JVTIWVwCx+vTnka0Ih22A2/d+2KuFlcci316fcAUpDTav/ABX74qtNhcEOPr9wOfcC&#xA;Go2p8P7vbFXNYXBJP1+4FeOwENPhNf8Afffviq19MmcANf3NA3Kn7nrzDj/dfalPliqS/wCKLT/F&#xA;H+HfXvfX5+h9c42v1f6z9X+t/Vq09X1Pq/73+748f2q7YqnxsrglT9enHE1oBDvsRv8Au/fFXPZX&#xA;DKV+vTioIqBCCK+H7vFXGyuCVP16ccTWgEO+xG/7v3xVabC4Nf8AT7jdg3SHalNh+76GmKtHTrgg&#xA;j9IXO4YV/c/tGv8Avvt2xVAa7eweXdBv9YvLu8ezsI5LqdYYo5pSoJduKrH79TRVG5IAJxVMY7ea&#xA;SNZBez0cBhVYa0Ir/vvFW1srhRT69OdyakQ9zX/feKuFlcAsfr055GtCIdtgNv3ftiq0WFwAg+v3&#xA;B4dyIananxfu98VcLC4FP9PuNmLdId612P7voK4qtGmTAoTf3LGNuSk+j14cN/3fvX54qk+m+ZIr&#xA;7zHe6Arahb3VmjS+tPHbLHKiuIyyABpQvI/CZEUOKlOS74qnhsrjkG+vT7AilIab0/4r9sVcbK4J&#xA;U/XpxxNaAQ77Eb/u/fFXGyuOQb69PsCKUhpvT/iv2xVaLC4FP9PuNmLdId612P7voK4q0NOuAAP0&#xA;hc7BRX9z+ya/77798VSrzN5s0/ylY2b3lvdXVvIywGaERHhTioaRpHhDMxYcUSrufsqaHFWRYq7F&#xA;XYq7FWG6q2q2/wCZ2jLFqFzLZ32m6mx0t2RbVZLdrQI4CIrliZTUyM1P2aVNVWJeRo7PzNf6fZaw&#xA;R5hibSjeeZbPUwL2Oz1pZkREWGf1Ftn4POojQL8Kg07lV6nYaPpunzXctlAsD3siS3PEnizxwpbp&#xA;Ra8V4xQotFAG2KozFXYq7FXYq8iuNR1W0h1W21TXL1tKh82paapqss/1eWDTzpcMwX1rcW628ZuG&#xA;RSYwv2j3JOKsk/LjRLS80yx8zX0cs+st9ZjgvZpZiZbZJ5IbWd4i3ptK9oqD1SnMqaVptirOcVdi&#xA;rsVdirD/ADq2pW/mTyfcW2o3MNvcar9UudOjKLbyo1ldy8pKJ6rEGNfhL8O/GtDirE/ItzNr11Fp&#xA;Oo3k+pfpTRrxfO+nTzyulrevNHEsKpy/0ZmV509OPj8KhvcqvW0RURUUUVQAB7DFW8VdirsVQ+oW&#xA;s13ZS28N3NYySCi3duIjKm/VPWSaOvb4kOKvIIdeum8neSZte1m7sdNu9EuJ59SW6lglm1JI4TbJ&#xA;LOrK7FlaV1UsfUYUIPQlWeeQPLcFlplvrlxBPb+Ydatbe519XnuGRrx4kMx+rvI8MbBhx+FRQDiN&#xA;sCsrxV2KuxV2KvPPN935lsvN98dLvrmeSTyvqt1p2lngYEvbeS1WFkRVRnYs/wDuxmIqQtAaYql3&#xA;k7SND803eoQT3d1rmgWcNjJa3Mt7dSf6ZMjm+geQSKXT93CzwPVFbbiOgKvVMCuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxVhfm78wr3RbrVYdN0f9KpoOnjU9ZkNyLf0opBKY0jBjk9RyLd2bpQ&#xA;eJ2xVR/MjzRqWn+T9L1PT7uXS2v77Top7iCFLqWO3upVEvpxPHNzcI2wCEk9BirHdM/Mi806915p&#xA;NWute0rSdFk1R21GxGm3QuEk4pFHH6FoZI3UGrcPhNN98VXP5v8AzF0678zR37xTw+WdM07VJ3T0&#xA;w0lfUku4hGIloJo4pAv7z92UXduTUKvWIZY5okmiYPFIodGHQqwqDgVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirB/wAyPy/OvaVrN3plxd2+tXWlz2X1&#xA;e1ljijveKSNbw3HqqV4iSQ7hlNGILUxVOrnytb6pomjWWoNJE+lzWN6ohZQfXsWWRVYkOChdKNTt&#xA;0OKoXzb5A0zzG93cTzSxXNzpV1o3wlTGIrtkfmVKluaSRKy0Ye9cVSXV/JWr6no19d8ZrbX/ADLp&#xA;tvo2uWwmhNrGgYpLcjYszRxyy8OLfFyoV7hV6BFFHFEkUa8Y41Coo7KooBiq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>49.606689</stDim:w>
            <stDim:h>70.157511</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>003.001</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>hv______.PFB; hv______.PFM</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -177.55 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 177.55 li
204.672 177.55 li
204.672 0 li
cp
clp
[1 0 0 1 0 0 ]ct
34.541 155.581 mo
34.541 6.55322 li
198.735 6.55322 li
198.735 155.581 li
34.541 155.581 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.166667 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
34.541 155.581 mo
34.541 6.55322 li
198.735 6.55322 li
198.735 155.581 li
34.541 155.581 li
@
34.541 155.581 mo
34.541 153.915 li
34.541 155.581 mo
34.541 154.748 li
34.541 155.581 mo
34.541 6.55322 li
34.541 155.581 mo
198.735 155.581 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 127 /minus put
def
/UniqueID 44701 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 718 737 523 538 688 703] def
/OtherBlues [270 281 -220 -207] def
/FamilyBlues [-19 0 718 737 523 538 688 703] def
/FamilyOtherBlues [270 281 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/zero <1C60D8A8C9B7EF326C968E306016D52B972317960D8F5FD9CF1940741
2ACDAB79CA610AF5680AA7B72207450A6242E2E0D68A5786F14263E889E5C8F2
E3B1F3B57C131555AFBBA2F2574AAA6D70E3BCBA1C3BCCEEE066DF7> |-
/one <1C60D8A8C9B7EF322B88E7B3B83FEFDBAEDBDBF34DA8137760E7130B21
E4AD345C85AC723F334BEB61938BD65CFC89B4FB9FF8> |-
/minus <1C60D8A8C9B7F374CC52CC6AFA414A834D96E3500AE21BFB98508788
FC7E> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SYHDPH+Helvetica /Helvetica findfont ct_VMDictPut
/SYHDPH+Helvetica*1 
[48{/.notdef}rp /zero /one 77{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPH+Helvetica nf
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
27.0698 166.415 mo
(10)
[4.44824 0 ]xsh
SYHDPH+Helvetica*1 [5.33333 0 0 -5.33333 0 0 ]msf
35.958 161.466 mo
(\1771)
[3.11475 0 ]xsh
75.5684 155.581 mo
75.5684 153.915 li
75.5684 155.581 mo
75.5684 154.748 li
73.7075 155.581 mo
73.7075 154.748 li
71.5962 155.581 mo
71.5962 154.748 li
69.2075 155.581 mo
69.2075 154.748 li
66.4575 155.581 mo
66.4575 154.748 li
63.2075 155.581 mo
63.2075 154.748 li
59.2354 155.581 mo
59.2354 154.748 li
54.124 155.581 mo
54.124 154.748 li
46.874 155.581 mo
46.874 154.748 li
@
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
69.6509 166.415 mo
(10)
[4.44824 0 ]xsh
SYHDPH+Helvetica*1 [5.33333 0 0 -5.33333 0 0 ]msf
78.5386 161.466 mo
(0)sh
116.625 155.581 mo
116.625 153.915 li
116.625 155.581 mo
116.625 154.748 li
114.735 155.581 mo
114.735 154.748 li
112.652 155.581 mo
112.652 154.748 li
110.263 155.581 mo
110.263 154.748 li
107.513 155.581 mo
107.513 154.748 li
104.263 155.581 mo
104.263 154.748 li
100.291 155.581 mo
100.291 154.748 li
95.1519 155.581 mo
95.1519 154.748 li
87.9297 155.581 mo
87.9297 154.748 li
@
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
110.706 166.415 mo
(10)
[4.44824 0 ]xsh
SYHDPH+Helvetica*1 [5.33333 0 0 -5.33333 0 0 ]msf
119.596 161.466 mo
(1)sh
157.679 155.581 mo
157.679 153.915 li
157.679 155.581 mo
157.679 154.748 li
155.791 155.581 mo
155.791 154.748 li
153.708 155.581 mo
153.708 154.748 li
151.318 155.581 mo
151.318 154.748 li
148.568 155.581 mo
148.568 154.748 li
145.318 155.581 mo
145.318 154.748 li
141.346 155.581 mo
141.346 154.748 li
136.208 155.581 mo
136.208 154.748 li
128.985 155.581 mo
128.985 154.748 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPH+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF326B521ECF54C8B5A1823FE69FA06387976EF15912CA
2CDA2533C9465BA7A26890CB14E00D5302DA30754A8D882285488F566A848DB1
47F35FB324475F64975761151E92421F0A87A071DBDCE313F43B7ED0EE45382A
201B4EE4186F1FFE753A5DFF15AB1D98FE235181891E842EE4EC730EB3A21CE3
8A847AF33F417CDE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPH+Helvetica /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/SYHDPH+Helvetica*1 
[48{/.notdef}rp /zero /one /two 76{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPH+Helvetica nf
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
151.765 166.415 mo
(10)
[4.44824 0 ]xsh
SYHDPH+Helvetica*1 [5.33333 0 0 -5.33333 0 0 ]msf
160.653 161.466 mo
(2)sh
198.735 155.581 mo
198.735 153.915 li
198.735 155.581 mo
198.735 154.748 li
196.846 155.581 mo
196.846 154.748 li
194.735 155.581 mo
194.735 154.748 li
192.375 155.581 mo
192.375 154.748 li
189.625 155.581 mo
189.625 154.748 li
186.375 155.581 mo
186.375 154.748 li
182.375 155.581 mo
182.375 154.748 li
177.263 155.581 mo
177.263 154.748 li
170.041 155.581 mo
170.041 154.748 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPH+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32628E1261785C20D980324E75073C191110FF1DF4
F419F448F462DDCBF01F49514B54CF7F0EB797563420F11FA9B2A870CA2FAFCA
7BF082E8CA0E2FF35D921F9F1AC34584712B0A0077B0C704E6D603F8AD41559F
54EB34B872207887B41FB66A1203507BC16DAB327994FA639B9001AE05899646
700CF8E1B6168C5B7CF545795406B8E1F23BB3C2F5D73EC7968D39A5B597FC2B
C81D1DC416629EB76E1C99970D381D679CD5A57691EAF8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPH+Helvetica /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/SYHDPH+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three 75{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPH+Helvetica nf
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
192.82 166.415 mo
(10)
[4.44824 0 ]xsh
SYHDPH+Helvetica*1 [5.33333 0 0 -5.33333 0 0 ]msf
201.708 161.466 mo
(3)sh
34.541 155.581 mo
36.1797 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
@
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
15.6533 158.552 mo
(10)
[4.44775 0 ]xsh
SYHDPH+Helvetica*1 [5.33333 0 0 -5.33333 0 0 ]msf
24.5415 153.607 mo
(\177)sh
27.6558 153.607 mo
(12)
[2.96533 0 ]xsh
34.541 118.303 mo
36.1797 118.303 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
@
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
15.6533 121.274 mo
(10)
[4.44775 0 ]xsh
SYHDPH+Helvetica*1 [5.33333 0 0 -5.33333 0 0 ]msf
24.5415 116.329 mo
(\177)sh
27.6558 116.329 mo
(10)
[2.96533 0 ]xsh
34.541 81.0532 mo
36.1797 81.0532 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPH+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF3215BE57159D4F4BFA3C872F39ADA92BFE9288487A
97C6EFD98F578BBC2816F32D04509AD26EEA95F04BA1945FA81AF290563239CF
0739378BE51FE126D55A1BC75807D245336424C9214BC46BA6D4CEC05163B30F
75014D6052F2FC7397D286353B5ED17ABCA76ED3D83B8303060D3490C1FF5CCC
7BE6E338C40F50110AC16AF7E8E791FB357412BEC619138DE3107B599DC60AB8
D303142F26A30837419BF59F47881153A58F64FE59AE91D9C7C833E81BE56AAE
FBE2F7B6282D006375F76B8AD9A83CFA32DAD6A43E42C103A582803691A9856C
CFF6D9043F2C28AC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPH+Helvetica /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/SYHDPH+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three 4{/.notdef}rp /eight 70{/.notdef}rp 
/minus 128{/.notdef}rp]
SYHDPH+Helvetica nf
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
15.6533 84.0239 mo
(10)
[4.44775 0 ]xsh
SYHDPH+Helvetica*1 [5.33333 0 0 -5.33333 0 0 ]msf
24.5415 79.0796 mo
(\177)sh
27.6558 79.0796 mo
(8)sh
34.541 43.8032 mo
36.1797 43.8032 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPH+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7EF326DA8A82F3E3A701BDBF87B0445B24BB4A9441F8832
C322D1BC33CF817D969D30356F5A9C7B6A3BC04BCB60307EEA3C8DBDCAEDF63B
B0D16D5E88C603BCDDAF740BE4D413C23FF83ABB568EDD80EC21C6080EFCCE97
BC5B698D120BBDD3ACB1C21306A55CFC0AF870A681C2F910A278AFB09345386F
B78FE3E94B4F156D6934F4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPH+Helvetica /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/SYHDPH+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three 2{/.notdef}rp /six /.notdef 
/eight 70{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPH+Helvetica nf
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
15.6533 46.7739 mo
(10)
[4.44775 0 ]xsh
SYHDPH+Helvetica*1 [5.33333 0 0 -5.33333 0 0 ]msf
24.5415 41.8296 mo
(\177)sh
27.6558 41.8296 mo
(6)sh
34.541 6.55322 mo
36.1797 6.55322 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPH+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF322BF511E331CA00D363470942D767E1013D8E7F4F5
9F447A73A07F5975B5A79C571CD13B4D3557C550D5B9A82EC34D373E687DACA8
586AE16B88F81251D9B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPH+Helvetica /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/SYHDPH+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three /four /.notdef /six 
/.notdef /eight 70{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPH+Helvetica nf
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
15.6533 9.52637 mo
(10)
[4.44775 0 ]xsh
SYHDPH+Helvetica*1 [5.33333 0 0 -5.33333 0 0 ]msf
24.5415 4.58105 mo
(\177)sh
27.6558 4.58105 mo
(4)sh
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
34.541 155.581 mo
34.541 155.581 li
@
gsave
51.2354 128.942 mo
165.068 128.942 li
165.068 45.8867 li
51.2354 45.8867 li
51.2354 128.942 li
cp
clp
1 lw
151.733 115.545 mo
151.733 116.465 150.986 117.212 150.066 117.212 cv
149.146 117.212 148.4 116.465 148.4 115.545 cv
148.4 114.625 149.146 113.878 150.066 113.878 cv
150.986 113.878 151.733 114.625 151.733 115.545 cv
151.653 115.225 mo
151.653 116.145 150.906 116.892 149.986 116.892 cv
149.066 116.892 148.32 116.145 148.32 115.225 cv
148.32 114.305 149.066 113.559 149.986 113.559 cv
150.906 113.559 151.653 114.305 151.653 115.225 cv
151.573 115.225 mo
151.573 116.145 150.826 116.892 149.906 116.892 cv
148.986 116.892 148.24 116.145 148.24 115.225 cv
148.24 114.305 148.986 113.559 149.906 113.559 cv
150.826 113.559 151.573 114.305 151.573 115.225 cv
151.453 114.985 mo
151.453 115.906 150.707 116.652 149.787 116.652 cv
148.867 116.652 148.12 115.906 148.12 114.985 cv
148.12 114.065 148.867 113.319 149.787 113.319 cv
150.707 113.319 151.453 114.065 151.453 114.985 cv
151.373 114.985 mo
151.373 115.906 150.626 116.652 149.707 116.652 cv
148.787 116.652 148.04 115.906 148.04 114.985 cv
148.04 114.065 148.787 113.319 149.707 113.319 cv
150.626 113.319 151.373 114.065 151.373 114.985 cv
151.292 115.305 mo
151.292 116.225 150.546 116.972 149.626 116.972 cv
148.707 116.972 147.959 116.225 147.959 115.305 cv
147.959 114.385 148.707 113.638 149.626 113.638 cv
150.546 113.638 151.292 114.385 151.292 115.305 cv
151.173 114.945 mo
151.173 115.866 150.426 116.612 149.506 116.612 cv
148.586 116.612 147.839 115.866 147.839 114.945 cv
147.839 114.025 148.586 113.279 149.506 113.279 cv
150.426 113.279 151.173 114.025 151.173 114.945 cv
151.093 114.826 mo
151.093 115.746 150.346 116.492 149.426 116.492 cv
148.506 116.492 147.759 115.746 147.759 114.826 cv
147.759 113.906 148.506 113.159 149.426 113.159 cv
150.346 113.159 151.093 113.906 151.093 114.826 cv
151.013 114.786 mo
151.013 115.706 150.266 116.452 149.346 116.452 cv
148.426 116.452 147.679 115.706 147.679 114.786 cv
147.679 113.866 148.426 113.119 149.346 113.119 cv
150.266 113.119 151.013 113.866 151.013 114.786 cv
150.893 114.585 mo
150.893 115.505 150.146 116.252 149.226 116.252 cv
148.306 116.252 147.56 115.505 147.56 114.585 cv
147.56 113.666 148.306 112.918 149.226 112.918 cv
150.146 112.918 150.893 113.666 150.893 114.585 cv
150.813 114.425 mo
150.813 115.345 150.066 116.092 149.146 116.092 cv
148.226 116.092 147.48 115.345 147.48 114.425 cv
147.48 113.505 148.226 112.758 149.146 112.758 cv
150.066 112.758 150.813 113.505 150.813 114.425 cv
150.733 114.345 mo
150.733 115.265 149.986 116.012 149.066 116.012 cv
148.146 116.012 147.4 115.265 147.4 114.345 cv
147.4 113.425 148.146 112.678 149.066 112.678 cv
149.986 112.678 150.733 113.425 150.733 114.345 cv
150.613 114.345 mo
150.613 115.265 149.867 116.012 148.947 116.012 cv
148.026 116.012 147.28 115.265 147.28 114.345 cv
147.28 113.425 148.026 112.678 148.947 112.678 cv
149.867 112.678 150.613 113.425 150.613 114.345 cv
150.533 114.145 mo
150.533 115.065 149.787 115.812 148.867 115.812 cv
147.947 115.812 147.2 115.065 147.2 114.145 cv
147.2 113.225 147.947 112.479 148.867 112.479 cv
149.787 112.479 150.533 113.225 150.533 114.145 cv
150.413 113.945 mo
150.413 114.866 149.667 115.612 148.746 115.612 cv
147.826 115.612 147.08 114.866 147.08 113.945 cv
147.08 113.025 147.826 112.279 148.746 112.279 cv
149.667 112.279 150.413 113.025 150.413 113.945 cv
150.333 114.065 mo
150.333 114.985 149.586 115.732 148.667 115.732 cv
147.746 115.732 147 114.985 147 114.065 cv
147 113.145 147.746 112.399 148.667 112.399 cv
149.586 112.399 150.333 113.145 150.333 114.065 cv
150.253 114.105 mo
150.253 115.025 149.506 115.772 148.586 115.772 cv
147.667 115.772 146.919 115.025 146.919 114.105 cv
146.919 113.185 147.667 112.439 148.586 112.439 cv
149.506 112.439 150.253 113.185 150.253 114.105 cv
150.173 113.866 mo
150.173 114.786 149.426 115.532 148.506 115.532 cv
147.586 115.532 146.839 114.786 146.839 113.866 cv
146.839 112.945 147.586 112.199 148.506 112.199 cv
149.426 112.199 150.173 112.945 150.173 113.866 cv
150.052 113.945 mo
150.052 114.866 149.306 115.612 148.386 115.612 cv
147.466 115.612 146.719 114.866 146.719 113.945 cv
146.719 113.025 147.466 112.279 148.386 112.279 cv
149.306 112.279 150.052 113.025 150.052 113.945 cv
149.933 113.906 mo
149.933 114.826 149.186 115.572 148.266 115.572 cv
147.346 115.572 146.599 114.826 146.599 113.906 cv
146.599 112.985 147.346 112.239 148.266 112.239 cv
149.186 112.239 149.933 112.985 149.933 113.906 cv
149.853 113.786 mo
149.853 114.706 149.106 115.452 148.186 115.452 cv
147.266 115.452 146.519 114.706 146.519 113.786 cv
146.519 112.866 147.266 112.119 148.186 112.119 cv
149.106 112.119 149.853 112.866 149.853 113.786 cv
149.773 114.105 mo
149.773 115.025 149.026 115.772 148.106 115.772 cv
147.186 115.772 146.439 115.025 146.439 114.105 cv
146.439 113.185 147.186 112.439 148.106 112.439 cv
149.026 112.439 149.773 113.185 149.773 114.105 cv
149.653 114.305 mo
149.653 115.225 148.906 115.972 147.986 115.972 cv
147.066 115.972 146.32 115.225 146.32 114.305 cv
146.32 113.385 147.066 112.638 147.986 112.638 cv
148.906 112.638 149.653 113.385 149.653 114.305 cv
149.573 113.906 mo
149.573 114.826 148.826 115.572 147.906 115.572 cv
146.986 115.572 146.24 114.826 146.24 113.906 cv
146.24 112.985 146.986 112.239 147.906 112.239 cv
148.826 112.239 149.573 112.985 149.573 113.906 cv
149.453 113.385 mo
149.453 114.305 148.707 115.052 147.787 115.052 cv
146.867 115.052 146.12 114.305 146.12 113.385 cv
146.12 112.465 146.867 111.718 147.787 111.718 cv
148.707 111.718 149.453 112.465 149.453 113.385 cv
149.333 113.105 mo
149.333 114.025 148.586 114.772 147.667 114.772 cv
146.746 114.772 146 114.025 146 113.105 cv
146 112.185 146.746 111.439 147.667 111.439 cv
148.586 111.439 149.333 112.185 149.333 113.105 cv
149.253 113.065 mo
149.253 113.985 148.506 114.732 147.586 114.732 cv
146.667 114.732 145.919 113.985 145.919 113.065 cv
145.919 112.145 146.667 111.399 147.586 111.399 cv
148.506 111.399 149.253 112.145 149.253 113.065 cv
149.132 113.305 mo
149.132 114.225 148.386 114.972 147.466 114.972 cv
146.546 114.972 145.799 114.225 145.799 113.305 cv
145.799 112.385 146.546 111.638 147.466 111.638 cv
148.386 111.638 149.132 112.385 149.132 113.305 cv
149.052 113.425 mo
149.052 114.345 148.306 115.092 147.386 115.092 cv
146.466 115.092 145.719 114.345 145.719 113.425 cv
145.719 112.505 146.466 111.758 147.386 111.758 cv
148.306 111.758 149.052 112.505 149.052 113.425 cv
148.933 113.385 mo
148.933 114.305 148.186 115.052 147.266 115.052 cv
146.346 115.052 145.599 114.305 145.599 113.385 cv
145.599 112.465 146.346 111.718 147.266 111.718 cv
148.186 111.718 148.933 112.465 148.933 113.385 cv
148.853 113.425 mo
148.853 114.345 148.106 115.092 147.186 115.092 cv
146.266 115.092 145.519 114.345 145.519 113.425 cv
145.519 112.505 146.266 111.758 147.186 111.758 cv
148.106 111.758 148.853 112.505 148.853 113.425 cv
148.733 113.145 mo
148.733 114.065 147.986 114.812 147.066 114.812 cv
146.146 114.812 145.4 114.065 145.4 113.145 cv
145.4 112.225 146.146 111.479 147.066 111.479 cv
147.986 111.479 148.733 112.225 148.733 113.145 cv
148.613 112.906 mo
148.613 113.826 147.867 114.572 146.947 114.572 cv
146.026 114.572 145.28 113.826 145.28 112.906 cv
145.28 111.985 146.026 111.239 146.947 111.239 cv
147.867 111.239 148.613 111.985 148.613 112.906 cv
148.493 112.746 mo
148.493 113.666 147.746 114.412 146.826 114.412 cv
145.906 114.412 145.16 113.666 145.16 112.746 cv
145.16 111.826 145.906 111.079 146.826 111.079 cv
147.746 111.079 148.493 111.826 148.493 112.746 cv
148.413 112.505 mo
148.413 113.425 147.667 114.172 146.746 114.172 cv
145.826 114.172 145.08 113.425 145.08 112.505 cv
145.08 111.585 145.826 110.838 146.746 110.838 cv
147.667 110.838 148.413 111.585 148.413 112.505 cv
148.333 112.666 mo
148.333 113.585 147.586 114.332 146.667 114.332 cv
145.746 114.332 145 113.585 145 112.666 cv
145 111.746 145.746 110.999 146.667 110.999 cv
147.586 110.999 148.333 111.746 148.333 112.666 cv
148.212 112.585 mo
148.212 113.505 147.466 114.252 146.546 114.252 cv
145.626 114.252 144.879 113.505 144.879 112.585 cv
144.879 111.666 145.626 110.918 146.546 110.918 cv
147.466 110.918 148.212 111.666 148.212 112.585 cv
148.093 112.345 mo
148.093 113.265 147.346 114.012 146.426 114.012 cv
145.506 114.012 144.759 113.265 144.759 112.345 cv
144.759 111.425 145.506 110.678 146.426 110.678 cv
147.346 110.678 148.093 111.425 148.093 112.345 cv
147.973 112.345 mo
147.973 113.265 147.226 114.012 146.306 114.012 cv
145.386 114.012 144.64 113.265 144.64 112.345 cv
144.64 111.425 145.386 110.678 146.306 110.678 cv
147.226 110.678 147.973 111.425 147.973 112.345 cv
147.853 112.305 mo
147.853 113.225 147.106 113.972 146.186 113.972 cv
145.266 113.972 144.519 113.225 144.519 112.305 cv
144.519 111.385 145.266 110.638 146.186 110.638 cv
147.106 110.638 147.853 111.385 147.853 112.305 cv
147.773 112.025 mo
147.773 112.945 147.026 113.692 146.106 113.692 cv
145.186 113.692 144.439 112.945 144.439 112.025 cv
144.439 111.105 145.186 110.359 146.106 110.359 cv
147.026 110.359 147.773 111.105 147.773 112.025 cv
147.653 111.866 mo
147.653 112.786 146.906 113.532 145.986 113.532 cv
145.066 113.532 144.32 112.786 144.32 111.866 cv
144.32 110.945 145.066 110.199 145.986 110.199 cv
146.906 110.199 147.653 110.945 147.653 111.866 cv
147.533 112.105 mo
147.533 113.025 146.787 113.772 145.867 113.772 cv
144.947 113.772 144.2 113.025 144.2 112.105 cv
144.2 111.185 144.947 110.439 145.867 110.439 cv
146.787 110.439 147.533 111.185 147.533 112.105 cv
147.453 112.185 mo
147.453 113.105 146.707 113.852 145.787 113.852 cv
144.867 113.852 144.12 113.105 144.12 112.185 cv
144.12 111.265 144.867 110.519 145.787 110.519 cv
146.707 110.519 147.453 111.265 147.453 112.185 cv
147.292 111.826 mo
147.292 112.746 146.546 113.492 145.626 113.492 cv
144.707 113.492 143.959 112.746 143.959 111.826 cv
143.959 110.906 144.707 110.159 145.626 110.159 cv
146.546 110.159 147.292 110.906 147.292 111.826 cv
147.173 111.545 mo
147.173 112.465 146.426 113.212 145.506 113.212 cv
144.586 113.212 143.839 112.465 143.839 111.545 cv
143.839 110.625 144.586 109.878 145.506 109.878 cv
146.426 109.878 147.173 110.625 147.173 111.545 cv
147.052 111.465 mo
147.052 112.385 146.306 113.132 145.386 113.132 cv
144.466 113.132 143.719 112.385 143.719 111.465 cv
143.719 110.545 144.466 109.798 145.386 109.798 cv
146.306 109.798 147.052 110.545 147.052 111.465 cv
146.973 111.666 mo
146.973 112.585 146.226 113.332 145.306 113.332 cv
144.386 113.332 143.64 112.585 143.64 111.666 cv
143.64 110.746 144.386 109.999 145.306 109.999 cv
146.226 109.999 146.973 110.746 146.973 111.666 cv
146.853 111.505 mo
146.853 112.425 146.106 113.172 145.186 113.172 cv
144.266 113.172 143.519 112.425 143.519 111.505 cv
143.519 110.585 144.266 109.838 145.186 109.838 cv
146.106 109.838 146.853 110.585 146.853 111.505 cv
146.733 111.305 mo
146.733 112.225 145.986 112.972 145.066 112.972 cv
144.146 112.972 143.4 112.225 143.4 111.305 cv
143.4 110.385 144.146 109.638 145.066 109.638 cv
145.986 109.638 146.733 110.385 146.733 111.305 cv
146.573 111.545 mo
146.573 112.465 145.826 113.212 144.906 113.212 cv
143.986 113.212 143.24 112.465 143.24 111.545 cv
143.24 110.625 143.986 109.878 144.906 109.878 cv
145.826 109.878 146.573 110.625 146.573 111.545 cv
146.493 111.265 mo
146.493 112.185 145.746 112.932 144.826 112.932 cv
143.906 112.932 143.16 112.185 143.16 111.265 cv
143.16 110.345 143.906 109.599 144.826 109.599 cv
145.746 109.599 146.493 110.345 146.493 111.265 cv
146.373 110.985 mo
146.373 111.906 145.626 112.652 144.707 112.652 cv
143.787 112.652 143.04 111.906 143.04 110.985 cv
143.04 110.065 143.787 109.319 144.707 109.319 cv
145.626 109.319 146.373 110.065 146.373 110.985 cv
146.253 110.906 mo
146.253 111.826 145.506 112.572 144.586 112.572 cv
143.667 112.572 142.919 111.826 142.919 110.906 cv
142.919 109.985 143.667 109.239 144.586 109.239 cv
145.506 109.239 146.253 109.985 146.253 110.906 cv
146.132 110.706 mo
146.132 111.625 145.386 112.372 144.466 112.372 cv
143.546 112.372 142.799 111.625 142.799 110.706 cv
142.799 109.786 143.546 109.039 144.466 109.039 cv
145.386 109.039 146.132 109.786 146.132 110.706 cv
146.013 110.746 mo
146.013 111.666 145.266 112.412 144.346 112.412 cv
143.426 112.412 142.679 111.666 142.679 110.746 cv
142.679 109.826 143.426 109.079 144.346 109.079 cv
145.266 109.079 146.013 109.826 146.013 110.746 cv
145.853 110.906 mo
145.853 111.826 145.106 112.572 144.186 112.572 cv
143.266 112.572 142.519 111.826 142.519 110.906 cv
142.519 109.985 143.266 109.239 144.186 109.239 cv
145.106 109.239 145.853 109.985 145.853 110.906 cv
145.773 110.826 mo
145.773 111.746 145.026 112.492 144.106 112.492 cv
143.186 112.492 142.439 111.746 142.439 110.826 cv
142.439 109.906 143.186 109.159 144.106 109.159 cv
145.026 109.159 145.773 109.906 145.773 110.826 cv
145.613 110.545 mo
145.613 111.465 144.867 112.212 143.947 112.212 cv
143.026 112.212 142.28 111.465 142.28 110.545 cv
142.28 109.625 143.026 108.878 143.947 108.878 cv
144.867 108.878 145.613 109.625 145.613 110.545 cv
145.533 110.465 mo
145.533 111.385 144.787 112.132 143.867 112.132 cv
142.947 112.132 142.2 111.385 142.2 110.465 cv
142.2 109.545 142.947 108.798 143.867 108.798 cv
144.787 108.798 145.533 109.545 145.533 110.465 cv
145.373 110.225 mo
145.373 111.145 144.626 111.892 143.707 111.892 cv
142.787 111.892 142.04 111.145 142.04 110.225 cv
142.04 109.305 142.787 108.559 143.707 108.559 cv
144.626 108.559 145.373 109.305 145.373 110.225 cv
145.212 110.065 mo
145.212 110.985 144.466 111.732 143.546 111.732 cv
142.626 111.732 141.879 110.985 141.879 110.065 cv
141.879 109.145 142.626 108.399 143.546 108.399 cv
144.466 108.399 145.212 109.145 145.212 110.065 cv
145.132 109.746 mo
145.132 110.666 144.386 111.412 143.466 111.412 cv
142.546 111.412 141.799 110.666 141.799 109.746 cv
141.799 108.826 142.546 108.079 143.466 108.079 cv
144.386 108.079 145.132 108.826 145.132 109.746 cv
144.973 109.425 mo
144.973 110.345 144.226 111.092 143.306 111.092 cv
142.386 111.092 141.64 110.345 141.64 109.425 cv
141.64 108.505 142.386 107.758 143.306 107.758 cv
144.226 107.758 144.973 108.505 144.973 109.425 cv
144.853 109.385 mo
144.853 110.305 144.106 111.052 143.186 111.052 cv
142.266 111.052 141.519 110.305 141.519 109.385 cv
141.519 108.465 142.266 107.718 143.186 107.718 cv
144.106 107.718 144.853 108.465 144.853 109.385 cv
144.733 109.225 mo
144.733 110.145 143.986 110.892 143.066 110.892 cv
142.146 110.892 141.4 110.145 141.4 109.225 cv
141.4 108.305 142.146 107.559 143.066 107.559 cv
143.986 107.559 144.733 108.305 144.733 109.225 cv
144.573 109.305 mo
144.573 110.225 143.826 110.972 142.906 110.972 cv
141.986 110.972 141.24 110.225 141.24 109.305 cv
141.24 108.385 141.986 107.638 142.906 107.638 cv
143.826 107.638 144.573 108.385 144.573 109.305 cv
144.453 109.465 mo
144.453 110.385 143.707 111.132 142.787 111.132 cv
141.867 111.132 141.12 110.385 141.12 109.465 cv
141.12 108.545 141.867 107.798 142.787 107.798 cv
143.707 107.798 144.453 108.545 144.453 109.465 cv
144.333 109.385 mo
144.333 110.305 143.586 111.052 142.667 111.052 cv
141.746 111.052 141 110.305 141 109.385 cv
141 108.465 141.746 107.718 142.667 107.718 cv
143.586 107.718 144.333 108.465 144.333 109.385 cv
144.173 109.225 mo
144.173 110.145 143.426 110.892 142.506 110.892 cv
141.586 110.892 140.839 110.145 140.839 109.225 cv
140.839 108.305 141.586 107.559 142.506 107.559 cv
143.426 107.559 144.173 108.305 144.173 109.225 cv
144.093 109.225 mo
144.093 110.145 143.346 110.892 142.426 110.892 cv
141.506 110.892 140.759 110.145 140.759 109.225 cv
140.759 108.305 141.506 107.559 142.426 107.559 cv
143.346 107.559 144.093 108.305 144.093 109.225 cv
143.933 109.185 mo
143.933 110.105 143.186 110.852 142.266 110.852 cv
141.346 110.852 140.599 110.105 140.599 109.185 cv
140.599 108.265 141.346 107.519 142.266 107.519 cv
143.186 107.519 143.933 108.265 143.933 109.185 cv
143.773 108.625 mo
143.773 109.545 143.026 110.292 142.106 110.292 cv
141.186 110.292 140.439 109.545 140.439 108.625 cv
140.439 107.706 141.186 106.958 142.106 106.958 cv
143.026 106.958 143.773 107.706 143.773 108.625 cv
143.653 108.585 mo
143.653 109.505 142.906 110.252 141.986 110.252 cv
141.066 110.252 140.32 109.505 140.32 108.585 cv
140.32 107.666 141.066 106.918 141.986 106.918 cv
142.906 106.918 143.653 107.666 143.653 108.585 cv
143.493 108.706 mo
143.493 109.625 142.746 110.372 141.826 110.372 cv
140.906 110.372 140.16 109.625 140.16 108.706 cv
140.16 107.786 140.906 107.039 141.826 107.039 cv
142.746 107.039 143.493 107.786 143.493 108.706 cv
143.333 108.826 mo
143.333 109.746 142.586 110.492 141.667 110.492 cv
140.746 110.492 140 109.746 140 108.826 cv
140 107.906 140.746 107.159 141.667 107.159 cv
142.586 107.159 143.333 107.906 143.333 108.826 cv
143.212 108.826 mo
143.212 109.746 142.466 110.492 141.546 110.492 cv
140.626 110.492 139.879 109.746 139.879 108.826 cv
139.879 107.906 140.626 107.159 141.546 107.159 cv
142.466 107.159 143.212 107.906 143.212 108.826 cv
143.052 108.185 mo
143.052 109.105 142.306 109.852 141.386 109.852 cv
140.466 109.852 139.719 109.105 139.719 108.185 cv
139.719 107.265 140.466 106.519 141.386 106.519 cv
142.306 106.519 143.052 107.265 143.052 108.185 cv
142.933 108.185 mo
142.933 109.105 142.186 109.852 141.266 109.852 cv
140.346 109.852 139.599 109.105 139.599 108.185 cv
139.599 107.265 140.346 106.519 141.266 106.519 cv
142.186 106.519 142.933 107.265 142.933 108.185 cv
142.773 108.305 mo
142.773 109.225 142.026 109.972 141.106 109.972 cv
140.186 109.972 139.439 109.225 139.439 108.305 cv
139.439 107.385 140.186 106.638 141.106 106.638 cv
142.026 106.638 142.773 107.385 142.773 108.305 cv
142.613 107.866 mo
142.613 108.786 141.867 109.532 140.947 109.532 cv
140.026 109.532 139.28 108.786 139.28 107.866 cv
139.28 106.945 140.026 106.199 140.947 106.199 cv
141.867 106.199 142.613 106.945 142.613 107.866 cv
142.493 107.866 mo
142.493 108.786 141.746 109.532 140.826 109.532 cv
139.906 109.532 139.16 108.786 139.16 107.866 cv
139.16 106.945 139.906 106.199 140.826 106.199 cv
141.746 106.199 142.493 106.945 142.493 107.866 cv
142.333 107.585 mo
142.333 108.505 141.586 109.252 140.667 109.252 cv
139.746 109.252 139 108.505 139 107.585 cv
139 106.666 139.746 105.918 140.667 105.918 cv
141.586 105.918 142.333 106.666 142.333 107.585 cv
142.173 107.305 mo
142.173 108.225 141.426 108.972 140.506 108.972 cv
139.586 108.972 138.839 108.225 138.839 107.305 cv
138.839 106.385 139.586 105.638 140.506 105.638 cv
141.426 105.638 142.173 106.385 142.173 107.305 cv
142.013 107.305 mo
142.013 108.225 141.266 108.972 140.346 108.972 cv
139.426 108.972 138.679 108.225 138.679 107.305 cv
138.679 106.385 139.426 105.638 140.346 105.638 cv
141.266 105.638 142.013 106.385 142.013 107.305 cv
141.853 107.465 mo
141.853 108.385 141.106 109.132 140.186 109.132 cv
139.266 109.132 138.519 108.385 138.519 107.465 cv
138.519 106.545 139.266 105.798 140.186 105.798 cv
141.106 105.798 141.853 106.545 141.853 107.465 cv
141.693 107.385 mo
141.693 108.305 140.947 109.052 140.026 109.052 cv
139.106 109.052 138.359 108.305 138.359 107.385 cv
138.359 106.465 139.106 105.718 140.026 105.718 cv
140.947 105.718 141.693 106.465 141.693 107.385 cv
141.573 107.305 mo
141.573 108.225 140.826 108.972 139.906 108.972 cv
138.986 108.972 138.24 108.225 138.24 107.305 cv
138.24 106.385 138.986 105.638 139.906 105.638 cv
140.826 105.638 141.573 106.385 141.573 107.305 cv
141.413 107.305 mo
141.413 108.225 140.667 108.972 139.746 108.972 cv
138.826 108.972 138.08 108.225 138.08 107.305 cv
138.08 106.385 138.826 105.638 139.746 105.638 cv
140.667 105.638 141.413 106.385 141.413 107.305 cv
141.212 106.906 mo
141.212 107.826 140.466 108.572 139.546 108.572 cv
138.626 108.572 137.879 107.826 137.879 106.906 cv
137.879 105.985 138.626 105.239 139.546 105.239 cv
140.466 105.239 141.212 105.985 141.212 106.906 cv
141.052 106.706 mo
141.052 107.625 140.306 108.372 139.386 108.372 cv
138.466 108.372 137.719 107.625 137.719 106.706 cv
137.719 105.786 138.466 105.039 139.386 105.039 cv
140.306 105.039 141.052 105.786 141.052 106.706 cv
140.893 106.345 mo
140.893 107.265 140.146 108.012 139.226 108.012 cv
138.306 108.012 137.56 107.265 137.56 106.345 cv
137.56 105.425 138.306 104.678 139.226 104.678 cv
140.146 104.678 140.893 105.425 140.893 106.345 cv
140.773 106.105 mo
140.773 107.025 140.026 107.772 139.106 107.772 cv
138.186 107.772 137.439 107.025 137.439 106.105 cv
137.439 105.185 138.186 104.439 139.106 104.439 cv
140.026 104.439 140.773 105.185 140.773 106.105 cv
140.573 106.305 mo
140.573 107.225 139.826 107.972 138.906 107.972 cv
137.986 107.972 137.24 107.225 137.24 106.305 cv
137.24 105.385 137.986 104.638 138.906 104.638 cv
139.826 104.638 140.573 105.385 140.573 106.305 cv
140.413 105.945 mo
140.413 106.866 139.667 107.612 138.746 107.612 cv
137.826 107.612 137.08 106.866 137.08 105.945 cv
137.08 105.025 137.826 104.279 138.746 104.279 cv
139.667 104.279 140.413 105.025 140.413 105.945 cv
140.253 105.945 mo
140.253 106.866 139.506 107.612 138.586 107.612 cv
137.667 107.612 136.919 106.866 136.919 105.945 cv
136.919 105.025 137.667 104.279 138.586 104.279 cv
139.506 104.279 140.253 105.025 140.253 105.945 cv
140.093 106.025 mo
140.093 106.945 139.346 107.692 138.426 107.692 cv
137.506 107.692 136.759 106.945 136.759 106.025 cv
136.759 105.105 137.506 104.359 138.426 104.359 cv
139.346 104.359 140.093 105.105 140.093 106.025 cv
139.893 105.585 mo
139.893 106.505 139.146 107.252 138.226 107.252 cv
137.306 107.252 136.56 106.505 136.56 105.585 cv
136.56 104.666 137.306 103.918 138.226 103.918 cv
139.146 103.918 139.893 104.666 139.893 105.585 cv
139.733 105.706 mo
139.733 106.625 138.986 107.372 138.066 107.372 cv
137.146 107.372 136.4 106.625 136.4 105.706 cv
136.4 104.786 137.146 104.039 138.066 104.039 cv
138.986 104.039 139.733 104.786 139.733 105.706 cv
139.573 105.385 mo
139.573 106.305 138.826 107.052 137.906 107.052 cv
136.986 107.052 136.24 106.305 136.24 105.385 cv
136.24 104.465 136.986 103.718 137.906 103.718 cv
138.826 103.718 139.573 104.465 139.573 105.385 cv
139.373 105.145 mo
139.373 106.065 138.626 106.812 137.707 106.812 cv
136.787 106.812 136.04 106.065 136.04 105.145 cv
136.04 104.225 136.787 103.479 137.707 103.479 cv
138.626 103.479 139.373 104.225 139.373 105.145 cv
139.212 105.185 mo
139.212 106.105 138.466 106.852 137.546 106.852 cv
136.626 106.852 135.879 106.105 135.879 105.185 cv
135.879 104.265 136.626 103.519 137.546 103.519 cv
138.466 103.519 139.212 104.265 139.212 105.185 cv
139.013 105.185 mo
139.013 106.105 138.266 106.852 137.346 106.852 cv
136.426 106.852 135.679 106.105 135.679 105.185 cv
135.679 104.265 136.426 103.519 137.346 103.519 cv
138.266 103.519 139.013 104.265 139.013 105.185 cv
138.853 105.145 mo
138.853 106.065 138.106 106.812 137.186 106.812 cv
136.266 106.812 135.519 106.065 135.519 105.145 cv
135.519 104.225 136.266 103.479 137.186 103.479 cv
138.106 103.479 138.853 104.225 138.853 105.145 cv
138.653 104.505 mo
138.653 105.425 137.906 106.172 136.986 106.172 cv
136.066 106.172 135.32 105.425 135.32 104.505 cv
135.32 103.585 136.066 102.838 136.986 102.838 cv
137.906 102.838 138.653 103.585 138.653 104.505 cv
138.453 104.065 mo
138.453 104.985 137.707 105.732 136.787 105.732 cv
135.867 105.732 135.12 104.985 135.12 104.065 cv
135.12 103.145 135.867 102.399 136.787 102.399 cv
137.707 102.399 138.453 103.145 138.453 104.065 cv
138.253 104.025 mo
138.253 104.945 137.506 105.692 136.586 105.692 cv
135.667 105.692 134.919 104.945 134.919 104.025 cv
134.919 103.105 135.667 102.359 136.586 102.359 cv
137.506 102.359 138.253 103.105 138.253 104.025 cv
138.093 104.145 mo
138.093 105.065 137.346 105.812 136.426 105.812 cv
135.506 105.812 134.759 105.065 134.759 104.145 cv
134.759 103.225 135.506 102.479 136.426 102.479 cv
137.346 102.479 138.093 103.225 138.093 104.145 cv
137.893 104.265 mo
137.893 105.185 137.146 105.932 136.226 105.932 cv
135.306 105.932 134.56 105.185 134.56 104.265 cv
134.56 103.345 135.306 102.599 136.226 102.599 cv
137.146 102.599 137.893 103.345 137.893 104.265 cv
137.693 103.746 mo
137.693 104.666 136.947 105.412 136.026 105.412 cv
135.106 105.412 134.359 104.666 134.359 103.746 cv
134.359 102.826 135.106 102.079 136.026 102.079 cv
136.947 102.079 137.693 102.826 137.693 103.746 cv
137.533 103.305 mo
137.533 104.225 136.787 104.972 135.867 104.972 cv
134.947 104.972 134.2 104.225 134.2 103.305 cv
134.2 102.385 134.947 101.638 135.867 101.638 cv
136.787 101.638 137.533 102.385 137.533 103.305 cv
137.292 103.465 mo
137.292 104.385 136.546 105.132 135.626 105.132 cv
134.707 105.132 133.959 104.385 133.959 103.465 cv
133.959 102.545 134.707 101.798 135.626 101.798 cv
136.546 101.798 137.292 102.545 137.292 103.465 cv
137.093 103.185 mo
137.093 104.105 136.346 104.852 135.426 104.852 cv
134.506 104.852 133.759 104.105 133.759 103.185 cv
133.759 102.265 134.506 101.519 135.426 101.519 cv
136.346 101.519 137.093 102.265 137.093 103.185 cv
136.893 102.826 mo
136.893 103.746 136.146 104.492 135.226 104.492 cv
134.306 104.492 133.56 103.746 133.56 102.826 cv
133.56 101.906 134.306 101.159 135.226 101.159 cv
136.146 101.159 136.893 101.906 136.893 102.826 cv
136.653 102.585 mo
136.653 103.505 135.906 104.252 134.986 104.252 cv
134.066 104.252 133.32 103.505 133.32 102.585 cv
133.32 101.666 134.066 100.918 134.986 100.918 cv
135.906 100.918 136.653 101.666 136.653 102.585 cv
136.493 102.425 mo
136.493 103.345 135.746 104.092 134.826 104.092 cv
133.906 104.092 133.16 103.345 133.16 102.425 cv
133.16 101.505 133.906 100.758 134.826 100.758 cv
135.746 100.758 136.493 101.505 136.493 102.425 cv
136.253 102.265 mo
136.253 103.185 135.506 103.932 134.586 103.932 cv
133.667 103.932 132.919 103.185 132.919 102.265 cv
132.919 101.345 133.667 100.599 134.586 100.599 cv
135.506 100.599 136.253 101.345 136.253 102.265 cv
136.093 102.025 mo
136.093 102.945 135.346 103.692 134.426 103.692 cv
133.506 103.692 132.759 102.945 132.759 102.025 cv
132.759 101.105 133.506 100.359 134.426 100.359 cv
135.346 100.359 136.093 101.105 136.093 102.025 cv
135.853 101.625 mo
135.853 102.545 135.106 103.292 134.186 103.292 cv
133.266 103.292 132.519 102.545 132.519 101.625 cv
132.519 100.706 133.266 99.9585 134.186 99.9585 cv
135.106 99.9585 135.853 100.706 135.853 101.625 cv
135.613 101.385 mo
135.613 102.305 134.867 103.052 133.947 103.052 cv
133.026 103.052 132.28 102.305 132.28 101.385 cv
132.28 100.465 133.026 99.7183 133.947 99.7183 cv
134.867 99.7183 135.613 100.465 135.613 101.385 cv
135.413 100.945 mo
135.413 101.866 134.667 102.612 133.746 102.612 cv
132.826 102.612 132.08 101.866 132.08 100.945 cv
132.08 100.025 132.826 99.2788 133.746 99.2788 cv
134.667 99.2788 135.413 100.025 135.413 100.945 cv
135.173 100.985 mo
135.173 101.906 134.426 102.652 133.506 102.652 cv
132.586 102.652 131.839 101.906 131.839 100.985 cv
131.839 100.065 132.586 99.3188 133.506 99.3188 cv
134.426 99.3188 135.173 100.065 135.173 100.985 cv
134.973 100.786 mo
134.973 101.706 134.226 102.452 133.306 102.452 cv
132.386 102.452 131.64 101.706 131.64 100.786 cv
131.64 99.8657 132.386 99.1187 133.306 99.1187 cv
134.226 99.1187 134.973 99.8657 134.973 100.786 cv
134.733 100.185 mo
134.733 101.105 133.986 101.852 133.066 101.852 cv
132.146 101.852 131.4 101.105 131.4 100.185 cv
131.4 99.2651 132.146 98.519 133.066 98.519 cv
133.986 98.519 134.733 99.2651 134.733 100.185 cv
134.493 99.8257 mo
134.493 100.746 133.746 101.492 132.826 101.492 cv
131.906 101.492 131.16 100.746 131.16 99.8257 cv
131.16 98.9058 131.906 98.1587 132.826 98.1587 cv
133.746 98.1587 134.493 98.9058 134.493 99.8257 cv
134.253 99.7056 mo
134.253 100.625 133.506 101.372 132.586 101.372 cv
131.667 101.372 130.919 100.625 130.919 99.7056 cv
130.919 98.7856 131.667 98.0386 132.586 98.0386 cv
133.506 98.0386 134.253 98.7856 134.253 99.7056 cv
134.013 99.5454 mo
134.013 100.465 133.266 101.212 132.346 101.212 cv
131.426 101.212 130.679 100.465 130.679 99.5454 cv
130.679 98.6255 131.426 97.8784 132.346 97.8784 cv
133.266 97.8784 134.013 98.6255 134.013 99.5454 cv
133.773 99.2251 mo
133.773 100.145 133.026 100.892 132.106 100.892 cv
131.186 100.892 130.439 100.145 130.439 99.2251 cv
130.439 98.3052 131.186 97.5591 132.106 97.5591 cv
133.026 97.5591 133.773 98.3052 133.773 99.2251 cv
133.533 99.1851 mo
133.533 100.105 132.787 100.852 131.867 100.852 cv
130.947 100.852 130.2 100.105 130.2 99.1851 cv
130.2 98.2651 130.947 97.519 131.867 97.519 cv
132.787 97.519 133.533 98.2651 133.533 99.1851 cv
133.253 98.7456 mo
133.253 99.6655 132.506 100.412 131.586 100.412 cv
130.667 100.412 129.919 99.6655 129.919 98.7456 cv
129.919 97.8257 130.667 97.0786 131.586 97.0786 cv
132.506 97.0786 133.253 97.8257 133.253 98.7456 cv
133.013 98.5454 mo
133.013 99.4653 132.266 100.212 131.346 100.212 cv
130.426 100.212 129.679 99.4653 129.679 98.5454 cv
129.679 97.6255 130.426 96.8784 131.346 96.8784 cv
132.266 96.8784 133.013 97.6255 133.013 98.5454 cv
132.773 98.3853 mo
132.773 99.3052 132.026 100.052 131.106 100.052 cv
130.186 100.052 129.439 99.3052 129.439 98.3853 cv
129.439 97.4653 130.186 96.7183 131.106 96.7183 cv
132.026 96.7183 132.773 97.4653 132.773 98.3853 cv
132.493 98.105 mo
132.493 99.0249 131.746 99.772 130.826 99.772 cv
129.906 99.772 129.16 99.0249 129.16 98.105 cv
129.16 97.1851 129.906 96.439 130.826 96.439 cv
131.746 96.439 132.493 97.1851 132.493 98.105 cv
132.253 97.4253 mo
132.253 98.3452 131.506 99.0923 130.586 99.0923 cv
129.667 99.0923 128.919 98.3452 128.919 97.4253 cv
128.919 96.5054 129.667 95.7583 130.586 95.7583 cv
131.506 95.7583 132.253 96.5054 132.253 97.4253 cv
131.933 96.9849 mo
131.933 97.9058 131.186 98.6519 130.266 98.6519 cv
129.346 98.6519 128.599 97.9058 128.599 96.9849 cv
128.599 96.0649 129.346 95.3188 130.266 95.3188 cv
131.186 95.3188 131.933 96.0649 131.933 96.9849 cv
131.693 97.0649 mo
131.693 97.9849 130.947 98.7319 130.026 98.7319 cv
129.106 98.7319 128.359 97.9849 128.359 97.0649 cv
128.359 96.145 129.106 95.3989 130.026 95.3989 cv
130.947 95.3989 131.693 96.145 131.693 97.0649 cv
131.453 96.4253 mo
131.453 97.3452 130.707 98.0923 129.787 98.0923 cv
128.867 98.0923 128.12 97.3452 128.12 96.4253 cv
128.12 95.5054 128.867 94.7583 129.787 94.7583 cv
130.707 94.7583 131.453 95.5054 131.453 96.4253 cv
131.132 95.9058 mo
131.132 96.8257 130.386 97.5718 129.466 97.5718 cv
128.546 97.5718 127.799 96.8257 127.799 95.9058 cv
127.799 94.9849 128.546 94.2388 129.466 94.2388 cv
130.386 94.2388 131.132 94.9849 131.132 95.9058 cv
130.853 95.9849 mo
130.853 96.9058 130.106 97.6519 129.186 97.6519 cv
128.266 97.6519 127.519 96.9058 127.519 95.9849 cv
127.519 95.0649 128.266 94.3188 129.186 94.3188 cv
130.106 94.3188 130.853 95.0649 130.853 95.9849 cv
130.573 95.5454 mo
130.573 96.4653 129.826 97.2124 128.906 97.2124 cv
127.986 97.2124 127.24 96.4653 127.24 95.5454 cv
127.24 94.6255 127.986 93.8784 128.906 93.8784 cv
129.826 93.8784 130.573 94.6255 130.573 95.5454 cv
130.253 94.7856 mo
130.253 95.7056 129.506 96.4517 128.586 96.4517 cv
127.667 96.4517 126.919 95.7056 126.919 94.7856 cv
126.919 93.8657 127.667 93.1187 128.586 93.1187 cv
129.506 93.1187 130.253 93.8657 130.253 94.7856 cv
129.973 93.9448 mo
129.973 94.8657 129.226 95.6118 128.306 95.6118 cv
127.386 95.6118 126.64 94.8657 126.64 93.9448 cv
126.64 93.0249 127.386 92.2788 128.306 92.2788 cv
129.226 92.2788 129.973 93.0249 129.973 93.9448 cv
129.693 93.7456 mo
129.693 94.6655 128.947 95.4116 128.026 95.4116 cv
127.106 95.4116 126.359 94.6655 126.359 93.7456 cv
126.359 92.8257 127.106 92.0786 128.026 92.0786 cv
128.947 92.0786 129.693 92.8257 129.693 93.7456 cv
129.333 94.0649 mo
129.333 94.9849 128.586 95.7319 127.667 95.7319 cv
126.746 95.7319 126 94.9849 126 94.0649 cv
126 93.145 126.746 92.3989 127.667 92.3989 cv
128.586 92.3989 129.333 93.145 129.333 94.0649 cv
129.052 93.3853 mo
129.052 94.3052 128.306 95.0522 127.386 95.0522 cv
126.466 95.0522 125.719 94.3052 125.719 93.3853 cv
125.719 92.4653 126.466 91.7183 127.386 91.7183 cv
128.306 91.7183 129.052 92.4653 129.052 93.3853 cv
128.733 92.1851 mo
128.733 93.105 127.986 93.8521 127.066 93.8521 cv
126.146 93.8521 125.4 93.105 125.4 92.1851 cv
125.4 91.2651 126.146 90.519 127.066 90.519 cv
127.986 90.519 128.733 91.2651 128.733 92.1851 cv
128.413 91.7856 mo
128.413 92.7056 127.667 93.4517 126.746 93.4517 cv
125.826 93.4517 125.08 92.7056 125.08 91.7856 cv
125.08 90.8657 125.826 90.1187 126.746 90.1187 cv
127.667 90.1187 128.413 90.8657 128.413 91.7856 cv
128.093 91.9849 mo
128.093 92.9058 127.346 93.6519 126.426 93.6519 cv
125.506 93.6519 124.759 92.9058 124.759 91.9849 cv
124.759 91.0649 125.506 90.3188 126.426 90.3188 cv
127.346 90.3188 128.093 91.0649 128.093 91.9849 cv
127.693 90.9058 mo
127.693 91.8257 126.947 92.5718 126.026 92.5718 cv
125.106 92.5718 124.359 91.8257 124.359 90.9058 cv
124.359 89.9849 125.106 89.2388 126.026 89.2388 cv
126.947 89.2388 127.693 89.9849 127.693 90.9058 cv
127.373 89.8257 mo
127.373 90.7456 126.626 91.4917 125.707 91.4917 cv
124.787 91.4917 124.04 90.7456 124.04 89.8257 cv
124.04 88.9058 124.787 88.1587 125.707 88.1587 cv
126.626 88.1587 127.373 88.9058 127.373 89.8257 cv
127.013 89.4653 mo
127.013 90.3853 126.266 91.1323 125.346 91.1323 cv
124.426 91.1323 123.679 90.3853 123.679 89.4653 cv
123.679 88.5454 124.426 87.7983 125.346 87.7983 cv
126.266 87.7983 127.013 88.5454 127.013 89.4653 cv
126.653 89.2251 mo
126.653 90.145 125.906 90.8921 124.986 90.8921 cv
124.066 90.8921 123.32 90.145 123.32 89.2251 cv
123.32 88.3052 124.066 87.5591 124.986 87.5591 cv
125.906 87.5591 126.653 88.3052 126.653 89.2251 cv
126.292 89.145 mo
126.292 90.0649 125.546 90.812 124.626 90.812 cv
123.707 90.812 122.959 90.0649 122.959 89.145 cv
122.959 88.2251 123.707 87.479 124.626 87.479 cv
125.546 87.479 126.292 88.2251 126.292 89.145 cv
125.933 88.7056 mo
125.933 89.6255 125.186 90.3716 124.266 90.3716 cv
123.346 90.3716 122.599 89.6255 122.599 88.7056 cv
122.599 87.7856 123.346 87.0386 124.266 87.0386 cv
125.186 87.0386 125.933 87.7856 125.933 88.7056 cv
125.533 87.5454 mo
125.533 88.4653 124.787 89.2124 123.867 89.2124 cv
122.947 89.2124 122.2 88.4653 122.2 87.5454 cv
122.2 86.6255 122.947 85.8784 123.867 85.8784 cv
124.787 85.8784 125.533 86.6255 125.533 87.5454 cv
125.132 86.9058 mo
125.132 87.8257 124.386 88.5718 123.466 88.5718 cv
122.546 88.5718 121.799 87.8257 121.799 86.9058 cv
121.799 85.9849 122.546 85.2388 123.466 85.2388 cv
124.386 85.2388 125.132 85.9849 125.132 86.9058 cv
124.733 86.3452 mo
124.733 87.2651 123.986 88.0122 123.066 88.0122 cv
122.146 88.0122 121.4 87.2651 121.4 86.3452 cv
121.4 85.4253 122.146 84.6787 123.066 84.6787 cv
123.986 84.6787 124.733 85.4253 124.733 86.3452 cv
124.333 85.3853 mo
124.333 86.3052 123.586 87.0522 122.667 87.0522 cv
121.746 87.0522 121 86.3052 121 85.3853 cv
121 84.4653 121.746 83.7188 122.667 83.7188 cv
123.586 83.7188 124.333 84.4653 124.333 85.3853 cv
123.893 84.9453 mo
123.893 85.8657 123.146 86.6118 122.226 86.6118 cv
121.306 86.6118 120.56 85.8657 120.56 84.9453 cv
120.56 84.0254 121.306 83.2788 122.226 83.2788 cv
123.146 83.2788 123.893 84.0254 123.893 84.9453 cv
123.493 84.9453 mo
123.493 85.8657 122.746 86.6118 121.826 86.6118 cv
120.906 86.6118 120.16 85.8657 120.16 84.9453 cv
120.16 84.0254 120.906 83.2788 121.826 83.2788 cv
122.746 83.2788 123.493 84.0254 123.493 84.9453 cv
123.052 83.7456 mo
123.052 84.6655 122.306 85.4121 121.386 85.4121 cv
120.466 85.4121 119.719 84.6655 119.719 83.7456 cv
119.719 82.8257 120.466 82.0786 121.386 82.0786 cv
122.306 82.0786 123.052 82.8257 123.052 83.7456 cv
122.573 82.4653 mo
122.573 83.3853 121.826 84.1323 120.906 84.1323 cv
119.986 84.1323 119.24 83.3853 119.24 82.4653 cv
119.24 81.5454 119.986 80.7988 120.906 80.7988 cv
121.826 80.7988 122.573 81.5454 122.573 82.4653 cv
122.132 81.7856 mo
122.132 82.7056 121.386 83.4521 120.466 83.4521 cv
119.546 83.4521 118.799 82.7056 118.799 81.7856 cv
118.799 80.8652 119.546 80.1187 120.466 80.1187 cv
121.386 80.1187 122.132 80.8652 122.132 81.7856 cv
121.653 81.4253 mo
121.653 82.3452 120.906 83.0923 119.986 83.0923 cv
119.066 83.0923 118.32 82.3452 118.32 81.4253 cv
118.32 80.5054 119.066 79.7588 119.986 79.7588 cv
120.906 79.7588 121.653 80.5054 121.653 81.4253 cv
121.132 80.6655 mo
121.132 81.5854 120.386 82.332 119.466 82.332 cv
118.546 82.332 117.799 81.5854 117.799 80.6655 cv
117.799 79.7456 118.546 78.999 119.466 78.999 cv
120.386 78.999 121.132 79.7456 121.132 80.6655 cv
120.653 80.1855 mo
120.653 81.1055 119.906 81.8521 118.986 81.8521 cv
118.066 81.8521 117.32 81.1055 117.32 80.1855 cv
117.32 79.2656 118.066 78.519 118.986 78.519 cv
119.906 78.519 120.653 79.2656 120.653 80.1855 cv
120.173 79.4653 mo
120.173 80.3853 119.426 81.1323 118.506 81.1323 cv
117.586 81.1323 116.839 80.3853 116.839 79.4653 cv
116.839 78.5454 117.586 77.7988 118.506 77.7988 cv
119.426 77.7988 120.173 78.5454 120.173 79.4653 cv
119.613 79.1055 mo
119.613 80.0254 118.867 80.772 117.947 80.772 cv
117.026 80.772 116.28 80.0254 116.28 79.1055 cv
116.28 78.1855 117.026 77.439 117.947 77.439 cv
118.867 77.439 119.613 78.1855 119.613 79.1055 cv
119.052 78.4253 mo
119.052 79.3452 118.306 80.0923 117.386 80.0923 cv
116.466 80.0923 115.719 79.3452 115.719 78.4253 cv
115.719 77.5054 116.466 76.7588 117.386 76.7588 cv
118.306 76.7588 119.052 77.5054 119.052 78.4253 cv
118.493 77.1855 mo
118.493 78.1055 117.746 78.8521 116.826 78.8521 cv
115.906 78.8521 115.16 78.1055 115.16 77.1855 cv
115.16 76.2656 115.906 75.519 116.826 75.519 cv
117.746 75.519 118.493 76.2656 118.493 77.1855 cv
117.893 76.9854 mo
117.893 77.9053 117.146 78.6523 116.226 78.6523 cv
115.306 78.6523 114.56 77.9053 114.56 76.9854 cv
114.56 76.0654 115.306 75.3188 116.226 75.3188 cv
117.146 75.3188 117.893 76.0654 117.893 76.9854 cv
117.292 76.0254 mo
117.292 76.9453 116.546 77.6919 115.626 77.6919 cv
114.707 77.6919 113.959 76.9453 113.959 76.0254 cv
113.959 75.1055 114.707 74.3589 115.626 74.3589 cv
116.546 74.3589 117.292 75.1055 117.292 76.0254 cv
116.653 74.2656 mo
116.653 75.1855 115.906 75.9321 114.986 75.9321 cv
114.066 75.9321 113.32 75.1855 113.32 74.2656 cv
113.32 73.3452 114.066 72.5986 114.986 72.5986 cv
115.906 72.5986 116.653 73.3452 116.653 74.2656 cv
116.052 73.3853 mo
116.052 74.3057 115.306 75.0522 114.386 75.0522 cv
113.466 75.0522 112.719 74.3057 112.719 73.3853 cv
112.719 72.4653 113.466 71.7188 114.386 71.7188 cv
115.306 71.7188 116.052 72.4653 116.052 73.3853 cv
115.373 72.7056 mo
115.373 73.6255 114.626 74.3721 113.707 74.3721 cv
112.787 74.3721 112.04 73.6255 112.04 72.7056 cv
112.04 71.7856 112.787 71.0386 113.707 71.0386 cv
114.626 71.0386 115.373 71.7856 115.373 72.7056 cv
114.653 70.7856 mo
114.653 71.7056 113.906 72.4521 112.986 72.4521 cv
112.066 72.4521 111.32 71.7056 111.32 70.7856 cv
111.32 69.8652 112.066 69.1187 112.986 69.1187 cv
113.906 69.1187 114.653 69.8652 114.653 70.7856 cv
113.933 68.9053 mo
113.933 69.8257 113.186 70.5723 112.266 70.5723 cv
111.346 70.5723 110.599 69.8257 110.599 68.9053 cv
110.599 67.9854 111.346 67.2388 112.266 67.2388 cv
113.186 67.2388 113.933 67.9854 113.933 68.9053 cv
113.173 67.2256 mo
113.173 68.1455 112.426 68.8921 111.506 68.8921 cv
110.586 68.8921 109.84 68.1455 109.84 67.2256 cv
109.84 66.3057 110.586 65.5586 111.506 65.5586 cv
112.426 65.5586 113.173 66.3057 113.173 67.2256 cv
112.373 65.1455 mo
112.373 66.0654 111.626 66.812 110.707 66.812 cv
109.787 66.812 109.04 66.0654 109.04 65.1455 cv
109.04 64.2256 109.787 63.479 110.707 63.479 cv
111.626 63.479 112.373 64.2256 112.373 65.1455 cv
111.573 62.9453 mo
111.573 63.8652 110.826 64.6123 109.906 64.6123 cv
108.986 64.6123 108.24 63.8652 108.24 62.9453 cv
108.24 62.0254 108.986 61.2788 109.906 61.2788 cv
110.826 61.2788 111.573 62.0254 111.573 62.9453 cv
110.653 61.3057 mo
110.653 62.2256 109.906 62.9722 108.986 62.9722 cv
108.066 62.9722 107.32 62.2256 107.32 61.3057 cv
107.32 60.3853 108.066 59.6387 108.986 59.6387 cv
109.906 59.6387 110.653 60.3853 110.653 61.3057 cv
109.773 58.2656 mo
109.773 59.1855 109.026 59.9321 108.106 59.9321 cv
107.187 59.9321 106.439 59.1855 106.439 58.2656 cv
106.439 57.3452 107.187 56.5986 108.106 56.5986 cv
109.026 56.5986 109.773 57.3452 109.773 58.2656 cv
108.813 55.9453 mo
108.813 56.8652 108.066 57.6123 107.146 57.6123 cv
106.227 57.6123 105.479 56.8652 105.479 55.9453 cv
105.479 55.0254 106.227 54.2788 107.146 54.2788 cv
108.066 54.2788 108.813 55.0254 108.813 55.9453 cv
107.773 54.4253 mo
107.773 55.3452 107.026 56.0923 106.106 56.0923 cv
105.187 56.0923 104.439 55.3452 104.439 54.4253 cv
104.439 53.5054 105.187 52.7588 106.106 52.7588 cv
107.026 52.7588 107.773 53.5054 107.773 54.4253 cv
106.733 52.3853 mo
106.733 53.3057 105.986 54.0522 105.066 54.0522 cv
104.146 54.0522 103.4 53.3057 103.4 52.3853 cv
103.4 51.4653 104.146 50.7188 105.066 50.7188 cv
105.986 50.7188 106.733 51.4653 106.733 52.3853 cv
105.573 50.2656 mo
105.573 51.1855 104.826 51.9321 103.906 51.9321 cv
102.986 51.9321 102.24 51.1855 102.24 50.2656 cv
102.24 49.3452 102.986 48.5986 103.906 48.5986 cv
104.826 48.5986 105.573 49.3452 105.573 50.2656 cv
104.333 50.9854 mo
104.333 51.9053 103.586 52.6523 102.667 52.6523 cv
101.747 52.6523 101 51.9053 101 50.9854 cv
101 50.0654 101.747 49.3188 102.667 49.3188 cv
103.586 49.3188 104.333 50.0654 104.333 50.9854 cv
103.013 51.6255 mo
103.013 52.5454 102.267 53.292 101.346 53.292 cv
100.426 53.292 99.6797 52.5454 99.6797 51.6255 cv
99.6797 50.7056 100.426 49.959 101.346 49.959 cv
102.267 49.959 103.013 50.7056 103.013 51.6255 cv
101.573 52.0254 mo
101.573 52.9453 100.826 53.6919 99.9063 53.6919 cv
98.9863 53.6919 98.2397 52.9453 98.2397 52.0254 cv
98.2397 51.1055 98.9863 50.3589 99.9063 50.3589 cv
100.826 50.3589 101.573 51.1055 101.573 52.0254 cv
100.053 54.3452 mo
100.053 55.2656 99.3062 56.0122 98.3862 56.0122 cv
97.4663 56.0122 96.7197 55.2656 96.7197 54.3452 cv
96.7197 53.4253 97.4663 52.6787 98.3862 52.6787 cv
99.3062 52.6787 100.053 53.4253 100.053 54.3452 cv
98.333 57.1855 mo
98.333 58.1055 97.5864 58.8521 96.6665 58.8521 cv
95.7466 58.8521 94.9995 58.1055 94.9995 57.1855 cv
94.9995 56.2656 95.7466 55.519 96.6665 55.519 cv
97.5864 55.519 98.333 56.2656 98.333 57.1855 cv
96.4531 58.5454 mo
96.4531 59.4653 95.7065 60.2119 94.7861 60.2119 cv
93.8662 60.2119 93.1196 59.4653 93.1196 58.5454 cv
93.1196 57.6255 93.8662 56.8789 94.7861 56.8789 cv
95.7065 56.8789 96.4531 57.6255 96.4531 58.5454 cv
94.333 60.0254 mo
94.333 60.9453 93.5864 61.6919 92.6665 61.6919 cv
91.7466 61.6919 90.9995 60.9453 90.9995 60.0254 cv
90.9995 59.1055 91.7466 58.3589 92.6665 58.3589 cv
93.5864 58.3589 94.333 59.1055 94.333 60.0254 cv
91.9731 63.6655 mo
91.9731 64.5854 91.2266 65.332 90.3062 65.332 cv
89.3862 65.332 88.6396 64.5854 88.6396 63.6655 cv
88.6396 62.7456 89.3862 61.999 90.3062 61.999 cv
91.2266 61.999 91.9731 62.7456 91.9731 63.6655 cv
89.2129 65.4653 mo
89.2129 66.3853 88.4663 67.1323 87.5464 67.1323 cv
86.6265 67.1323 85.8799 66.3853 85.8799 65.4653 cv
85.8799 64.5454 86.6265 63.7988 87.5464 63.7988 cv
88.4663 63.7988 89.2129 64.5454 89.2129 65.4653 cv
85.9731 67.0654 mo
85.9731 67.9854 85.2266 68.7319 84.3062 68.7319 cv
83.3862 68.7319 82.6396 67.9854 82.6396 67.0654 cv
82.6396 66.1455 83.3862 65.3989 84.3062 65.3989 cv
85.2266 65.3989 85.9731 66.1455 85.9731 67.0654 cv
81.9731 71.9453 mo
81.9731 72.8652 81.2266 73.6123 80.3062 73.6123 cv
79.3862 73.6123 78.6396 72.8652 78.6396 71.9453 cv
78.6396 71.0254 79.3862 70.2788 80.3062 70.2788 cv
81.2266 70.2788 81.9731 71.0254 81.9731 71.9453 cv
76.8931 78.0254 mo
76.8931 78.9453 76.1465 79.6919 75.2266 79.6919 cv
74.3062 79.6919 73.5596 78.9453 73.5596 78.0254 cv
73.5596 77.1055 74.3062 76.3589 75.2266 76.3589 cv
76.1465 76.3589 76.8931 77.1055 76.8931 78.0254 cv
69.6528 82.9854 mo
69.6528 83.9053 68.9063 84.6523 67.9863 84.6523 cv
67.0664 84.6523 66.3198 83.9053 66.3198 82.9854 cv
66.3198 82.0654 67.0664 81.3188 67.9863 81.3188 cv
68.9063 81.3188 69.6528 82.0654 69.6528 82.9854 cv
57.293 91.6255 mo
57.293 92.5454 56.5464 93.2915 55.6265 93.2915 cv
54.7065 93.2915 53.9595 92.5454 53.9595 91.6255 cv
53.9595 90.7056 54.7065 89.9585 55.6265 89.9585 cv
56.5464 89.9585 57.293 90.7056 57.293 91.6255 cv
@
162.333 124.505 mo
162.333 125.425 161.586 126.172 160.667 126.172 cv
159.746 126.172 159 125.425 159 124.505 cv
159 123.585 159.746 122.838 160.667 122.838 cv
161.586 122.838 162.333 123.585 162.333 124.505 cv
162.253 124.505 mo
162.253 125.425 161.506 126.172 160.586 126.172 cv
159.667 126.172 158.919 125.425 158.919 124.505 cv
158.919 123.585 159.667 122.838 160.586 122.838 cv
161.506 122.838 162.253 123.585 162.253 124.505 cv
162.212 124.345 mo
162.212 125.265 161.466 126.012 160.546 126.012 cv
159.626 126.012 158.879 125.265 158.879 124.345 cv
158.879 123.425 159.626 122.678 160.546 122.678 cv
161.466 122.678 162.212 123.425 162.212 124.345 cv
162.173 124.345 mo
162.173 125.265 161.426 126.012 160.506 126.012 cv
159.586 126.012 158.839 125.265 158.839 124.345 cv
158.839 123.425 159.586 122.678 160.506 122.678 cv
161.426 122.678 162.173 123.425 162.173 124.345 cv
162.132 124.345 mo
162.132 125.265 161.386 126.012 160.466 126.012 cv
159.546 126.012 158.799 125.265 158.799 124.345 cv
158.799 123.425 159.546 122.678 160.466 122.678 cv
161.386 122.678 162.132 123.425 162.132 124.345 cv
162.093 124.265 mo
162.093 125.185 161.346 125.932 160.426 125.932 cv
159.506 125.932 158.759 125.185 158.759 124.265 cv
158.759 123.345 159.506 122.599 160.426 122.599 cv
161.346 122.599 162.093 123.345 162.093 124.265 cv
162.013 124.265 mo
162.013 125.185 161.266 125.932 160.346 125.932 cv
159.426 125.932 158.679 125.185 158.679 124.265 cv
158.679 123.345 159.426 122.599 160.346 122.599 cv
161.266 122.599 162.013 123.345 162.013 124.265 cv
161.933 124.185 mo
161.933 125.105 161.186 125.852 160.266 125.852 cv
159.346 125.852 158.599 125.105 158.599 124.185 cv
158.599 123.265 159.346 122.519 160.266 122.519 cv
161.186 122.519 161.933 123.265 161.933 124.185 cv
161.893 124.105 mo
161.893 125.025 161.146 125.772 160.226 125.772 cv
159.306 125.772 158.56 125.025 158.56 124.105 cv
158.56 123.185 159.306 122.439 160.226 122.439 cv
161.146 122.439 161.893 123.185 161.893 124.105 cv
161.853 124.025 mo
161.853 124.945 161.106 125.692 160.186 125.692 cv
159.266 125.692 158.519 124.945 158.519 124.025 cv
158.519 123.105 159.266 122.359 160.186 122.359 cv
161.106 122.359 161.853 123.105 161.853 124.025 cv
161.813 124.105 mo
161.813 125.025 161.066 125.772 160.146 125.772 cv
159.226 125.772 158.48 125.025 158.48 124.105 cv
158.48 123.185 159.226 122.439 160.146 122.439 cv
161.066 122.439 161.813 123.185 161.813 124.105 cv
161.773 123.945 mo
161.773 124.866 161.026 125.612 160.106 125.612 cv
159.186 125.612 158.439 124.866 158.439 123.945 cv
158.439 123.025 159.186 122.279 160.106 122.279 cv
161.026 122.279 161.773 123.025 161.773 123.945 cv
161.693 123.906 mo
161.693 124.826 160.947 125.572 160.026 125.572 cv
159.106 125.572 158.359 124.826 158.359 123.906 cv
158.359 122.985 159.106 122.239 160.026 122.239 cv
160.947 122.239 161.693 122.985 161.693 123.906 cv
161.653 124.105 mo
161.653 125.025 160.906 125.772 159.986 125.772 cv
159.066 125.772 158.32 125.025 158.32 124.105 cv
158.32 123.185 159.066 122.439 159.986 122.439 cv
160.906 122.439 161.653 123.185 161.653 124.105 cv
161.613 124.185 mo
161.613 125.105 160.867 125.852 159.947 125.852 cv
159.026 125.852 158.28 125.105 158.28 124.185 cv
158.28 123.265 159.026 122.519 159.947 122.519 cv
160.867 122.519 161.613 123.265 161.613 124.185 cv
161.573 123.985 mo
161.573 124.906 160.826 125.652 159.906 125.652 cv
158.986 125.652 158.24 124.906 158.24 123.985 cv
158.24 123.065 158.986 122.319 159.906 122.319 cv
160.826 122.319 161.573 123.065 161.573 123.985 cv
161.533 123.666 mo
161.533 124.585 160.787 125.332 159.867 125.332 cv
158.947 125.332 158.2 124.585 158.2 123.666 cv
158.2 122.746 158.947 121.999 159.867 121.999 cv
160.787 121.999 161.533 122.746 161.533 123.666 cv
161.453 123.625 mo
161.453 124.545 160.707 125.292 159.787 125.292 cv
158.867 125.292 158.12 124.545 158.12 123.625 cv
158.12 122.706 158.867 121.958 159.787 121.958 cv
160.707 121.958 161.453 122.706 161.453 123.625 cv
161.413 123.706 mo
161.413 124.625 160.667 125.372 159.746 125.372 cv
158.826 125.372 158.08 124.625 158.08 123.706 cv
158.08 122.786 158.826 122.039 159.746 122.039 cv
160.667 122.039 161.413 122.786 161.413 123.706 cv
161.333 123.625 mo
161.333 124.545 160.586 125.292 159.667 125.292 cv
158.746 125.292 158 124.545 158 123.625 cv
158 122.706 158.746 121.958 159.667 121.958 cv
160.586 121.958 161.333 122.706 161.333 123.625 cv
161.292 123.545 mo
161.292 124.465 160.546 125.212 159.626 125.212 cv
158.707 125.212 157.959 124.465 157.959 123.545 cv
157.959 122.625 158.707 121.878 159.626 121.878 cv
160.546 121.878 161.292 122.625 161.292 123.545 cv
161.212 123.545 mo
161.212 124.465 160.466 125.212 159.546 125.212 cv
158.626 125.212 157.879 124.465 157.879 123.545 cv
157.879 122.625 158.626 121.878 159.546 121.878 cv
160.466 121.878 161.212 122.625 161.212 123.545 cv
161.212 123.465 mo
161.212 124.385 160.466 125.132 159.546 125.132 cv
158.626 125.132 157.879 124.385 157.879 123.465 cv
157.879 122.545 158.626 121.798 159.546 121.798 cv
160.466 121.798 161.212 122.545 161.212 123.465 cv
161.132 123.585 mo
161.132 124.505 160.386 125.252 159.466 125.252 cv
158.546 125.252 157.799 124.505 157.799 123.585 cv
157.799 122.666 158.546 121.918 159.466 121.918 cv
160.386 121.918 161.132 122.666 161.132 123.585 cv
161.093 123.465 mo
161.093 124.385 160.346 125.132 159.426 125.132 cv
158.506 125.132 157.759 124.385 157.759 123.465 cv
157.759 122.545 158.506 121.798 159.426 121.798 cv
160.346 121.798 161.093 122.545 161.093 123.465 cv
161.052 123.145 mo
161.052 124.065 160.306 124.812 159.386 124.812 cv
158.466 124.812 157.719 124.065 157.719 123.145 cv
157.719 122.225 158.466 121.479 159.386 121.479 cv
160.306 121.479 161.052 122.225 161.052 123.145 cv
160.973 123.225 mo
160.973 124.145 160.226 124.892 159.306 124.892 cv
158.386 124.892 157.64 124.145 157.64 123.225 cv
157.64 122.305 158.386 121.559 159.306 121.559 cv
160.226 121.559 160.973 122.305 160.973 123.225 cv
160.933 123.545 mo
160.933 124.465 160.186 125.212 159.266 125.212 cv
158.346 125.212 157.599 124.465 157.599 123.545 cv
157.599 122.625 158.346 121.878 159.266 121.878 cv
160.186 121.878 160.933 122.625 160.933 123.545 cv
160.893 123.385 mo
160.893 124.305 160.146 125.052 159.226 125.052 cv
158.306 125.052 157.56 124.305 157.56 123.385 cv
157.56 122.465 158.306 121.718 159.226 121.718 cv
160.146 121.718 160.893 122.465 160.893 123.385 cv
160.813 123.145 mo
160.813 124.065 160.066 124.812 159.146 124.812 cv
158.226 124.812 157.48 124.065 157.48 123.145 cv
157.48 122.225 158.226 121.479 159.146 121.479 cv
160.066 121.479 160.813 122.225 160.813 123.145 cv
160.773 123.065 mo
160.773 123.985 160.026 124.732 159.106 124.732 cv
158.186 124.732 157.439 123.985 157.439 123.065 cv
157.439 122.145 158.186 121.399 159.106 121.399 cv
160.026 121.399 160.773 122.145 160.773 123.065 cv
160.733 123.065 mo
160.733 123.985 159.986 124.732 159.066 124.732 cv
158.146 124.732 157.4 123.985 157.4 123.065 cv
157.4 122.145 158.146 121.399 159.066 121.399 cv
159.986 121.399 160.733 122.145 160.733 123.065 cv
160.653 123.265 mo
160.653 124.185 159.906 124.932 158.986 124.932 cv
158.066 124.932 157.32 124.185 157.32 123.265 cv
157.32 122.345 158.066 121.599 158.986 121.599 cv
159.906 121.599 160.653 122.345 160.653 123.265 cv
160.573 123.425 mo
160.573 124.345 159.826 125.092 158.906 125.092 cv
157.986 125.092 157.24 124.345 157.24 123.425 cv
157.24 122.505 157.986 121.758 158.906 121.758 cv
159.826 121.758 160.573 122.505 160.573 123.425 cv
160.533 123.145 mo
160.533 124.065 159.787 124.812 158.867 124.812 cv
157.947 124.812 157.2 124.065 157.2 123.145 cv
157.2 122.225 157.947 121.479 158.867 121.479 cv
159.787 121.479 160.533 122.225 160.533 123.145 cv
160.493 122.746 mo
160.493 123.666 159.746 124.412 158.826 124.412 cv
157.906 124.412 157.16 123.666 157.16 122.746 cv
157.16 121.826 157.906 121.079 158.826 121.079 cv
159.746 121.079 160.493 121.826 160.493 122.746 cv
160.453 122.826 mo
160.453 123.746 159.707 124.492 158.787 124.492 cv
157.867 124.492 157.12 123.746 157.12 122.826 cv
157.12 121.906 157.867 121.159 158.787 121.159 cv
159.707 121.159 160.453 121.906 160.453 122.826 cv
160.413 122.906 mo
160.413 123.826 159.667 124.572 158.746 124.572 cv
157.826 124.572 157.08 123.826 157.08 122.906 cv
157.08 121.985 157.826 121.239 158.746 121.239 cv
159.667 121.239 160.413 121.985 160.413 122.906 cv
160.333 122.746 mo
160.333 123.666 159.586 124.412 158.667 124.412 cv
157.746 124.412 157 123.666 157 122.746 cv
157 121.826 157.746 121.079 158.667 121.079 cv
159.586 121.079 160.333 121.826 160.333 122.746 cv
160.292 122.786 mo
160.292 123.706 159.546 124.452 158.626 124.452 cv
157.707 124.452 156.959 123.706 156.959 122.786 cv
156.959 121.866 157.707 121.119 158.626 121.119 cv
159.546 121.119 160.292 121.866 160.292 122.786 cv
160.253 122.786 mo
160.253 123.706 159.506 124.452 158.586 124.452 cv
157.667 124.452 156.919 123.706 156.919 122.786 cv
156.919 121.866 157.667 121.119 158.586 121.119 cv
159.506 121.119 160.253 121.866 160.253 122.786 cv
160.173 122.425 mo
160.173 123.345 159.426 124.092 158.506 124.092 cv
157.586 124.092 156.839 123.345 156.839 122.425 cv
156.839 121.505 157.586 120.758 158.506 120.758 cv
159.426 120.758 160.173 121.505 160.173 122.425 cv
160.132 122.385 mo
160.132 123.305 159.386 124.052 158.466 124.052 cv
157.546 124.052 156.799 123.305 156.799 122.385 cv
156.799 121.465 157.546 120.718 158.466 120.718 cv
159.386 120.718 160.132 121.465 160.132 122.385 cv
160.093 122.666 mo
160.093 123.585 159.346 124.332 158.426 124.332 cv
157.506 124.332 156.759 123.585 156.759 122.666 cv
156.759 121.746 157.506 120.999 158.426 120.999 cv
159.346 120.999 160.093 121.746 160.093 122.666 cv
160.013 122.505 mo
160.013 123.425 159.266 124.172 158.346 124.172 cv
157.426 124.172 156.679 123.425 156.679 122.505 cv
156.679 121.585 157.426 120.838 158.346 120.838 cv
159.266 120.838 160.013 121.585 160.013 122.505 cv
159.933 122.345 mo
159.933 123.265 159.186 124.012 158.266 124.012 cv
157.346 124.012 156.599 123.265 156.599 122.345 cv
156.599 121.425 157.346 120.678 158.266 120.678 cv
159.186 120.678 159.933 121.425 159.933 122.345 cv
159.893 122.145 mo
159.893 123.065 159.146 123.812 158.226 123.812 cv
157.306 123.812 156.56 123.065 156.56 122.145 cv
156.56 121.225 157.306 120.479 158.226 120.479 cv
159.146 120.479 159.893 121.225 159.893 122.145 cv
159.853 122.185 mo
159.853 123.105 159.106 123.852 158.186 123.852 cv
157.266 123.852 156.519 123.105 156.519 122.185 cv
156.519 121.265 157.266 120.519 158.186 120.519 cv
159.106 120.519 159.853 121.265 159.853 122.185 cv
159.773 122.345 mo
159.773 123.265 159.026 124.012 158.106 124.012 cv
157.186 124.012 156.439 123.265 156.439 122.345 cv
156.439 121.425 157.186 120.678 158.106 120.678 cv
159.026 120.678 159.773 121.425 159.773 122.345 cv
159.693 122.185 mo
159.693 123.105 158.947 123.852 158.026 123.852 cv
157.106 123.852 156.359 123.105 156.359 122.185 cv
156.359 121.265 157.106 120.519 158.026 120.519 cv
158.947 120.519 159.693 121.265 159.693 122.185 cv
159.653 122.025 mo
159.653 122.945 158.906 123.692 157.986 123.692 cv
157.066 123.692 156.32 122.945 156.32 122.025 cv
156.32 121.105 157.066 120.359 157.986 120.359 cv
158.906 120.359 159.653 121.105 159.653 122.025 cv
159.613 122.105 mo
159.613 123.025 158.867 123.772 157.947 123.772 cv
157.026 123.772 156.28 123.025 156.28 122.105 cv
156.28 121.185 157.026 120.439 157.947 120.439 cv
158.867 120.439 159.613 121.185 159.613 122.105 cv
159.533 122.185 mo
159.533 123.105 158.787 123.852 157.867 123.852 cv
156.947 123.852 156.2 123.105 156.2 122.185 cv
156.2 121.265 156.947 120.519 157.867 120.519 cv
158.787 120.519 159.533 121.265 159.533 122.185 cv
159.493 121.826 mo
159.493 122.746 158.746 123.492 157.826 123.492 cv
156.906 123.492 156.16 122.746 156.16 121.826 cv
156.16 120.906 156.906 120.159 157.826 120.159 cv
158.746 120.159 159.493 120.906 159.493 121.826 cv
159.453 121.746 mo
159.453 122.666 158.707 123.412 157.787 123.412 cv
156.867 123.412 156.12 122.666 156.12 121.746 cv
156.12 120.826 156.867 120.079 157.787 120.079 cv
158.707 120.079 159.453 120.826 159.453 121.746 cv
159.373 121.786 mo
159.373 122.706 158.626 123.452 157.707 123.452 cv
156.787 123.452 156.04 122.706 156.04 121.786 cv
156.04 120.866 156.787 120.119 157.707 120.119 cv
158.626 120.119 159.373 120.866 159.373 121.786 cv
159.292 121.786 mo
159.292 122.706 158.546 123.452 157.626 123.452 cv
156.707 123.452 155.959 122.706 155.959 121.786 cv
155.959 120.866 156.707 120.119 157.626 120.119 cv
158.546 120.119 159.292 120.866 159.292 121.786 cv
159.253 121.746 mo
159.253 122.666 158.506 123.412 157.586 123.412 cv
156.667 123.412 155.919 122.666 155.919 121.746 cv
155.919 120.826 156.667 120.079 157.586 120.079 cv
158.506 120.079 159.253 120.826 159.253 121.746 cv
159.212 121.625 mo
159.212 122.545 158.466 123.292 157.546 123.292 cv
156.626 123.292 155.879 122.545 155.879 121.625 cv
155.879 120.706 156.626 119.958 157.546 119.958 cv
158.466 119.958 159.212 120.706 159.212 121.625 cv
159.132 121.625 mo
159.132 122.545 158.386 123.292 157.466 123.292 cv
156.546 123.292 155.799 122.545 155.799 121.625 cv
155.799 120.706 156.546 119.958 157.466 119.958 cv
158.386 119.958 159.132 120.706 159.132 121.625 cv
159.052 121.786 mo
159.052 122.706 158.306 123.452 157.386 123.452 cv
156.466 123.452 155.719 122.706 155.719 121.786 cv
155.719 120.866 156.466 120.119 157.386 120.119 cv
158.306 120.119 159.052 120.866 159.052 121.786 cv
159.013 121.746 mo
159.013 122.666 158.266 123.412 157.346 123.412 cv
156.426 123.412 155.679 122.666 155.679 121.746 cv
155.679 120.826 156.426 120.079 157.346 120.079 cv
158.266 120.079 159.013 120.826 159.013 121.746 cv
158.973 121.505 mo
158.973 122.425 158.226 123.172 157.306 123.172 cv
156.386 123.172 155.64 122.425 155.64 121.505 cv
155.64 120.585 156.386 119.838 157.306 119.838 cv
158.226 119.838 158.973 120.585 158.973 121.505 cv
158.893 121.545 mo
158.893 122.465 158.146 123.212 157.226 123.212 cv
156.306 123.212 155.56 122.465 155.56 121.545 cv
155.56 120.625 156.306 119.878 157.226 119.878 cv
158.146 119.878 158.893 120.625 158.893 121.545 cv
158.853 121.625 mo
158.853 122.545 158.106 123.292 157.186 123.292 cv
156.266 123.292 155.519 122.545 155.519 121.625 cv
155.519 120.706 156.266 119.958 157.186 119.958 cv
158.106 119.958 158.853 120.706 158.853 121.625 cv
158.813 121.505 mo
158.813 122.425 158.066 123.172 157.146 123.172 cv
156.226 123.172 155.48 122.425 155.48 121.505 cv
155.48 120.585 156.226 119.838 157.146 119.838 cv
158.066 119.838 158.813 120.585 158.813 121.505 cv
158.733 121.305 mo
158.733 122.225 157.986 122.972 157.066 122.972 cv
156.146 122.972 155.4 122.225 155.4 121.305 cv
155.4 120.385 156.146 119.638 157.066 119.638 cv
157.986 119.638 158.733 120.385 158.733 121.305 cv
158.653 121.145 mo
158.653 122.065 157.906 122.812 156.986 122.812 cv
156.066 122.812 155.32 122.065 155.32 121.145 cv
155.32 120.225 156.066 119.479 156.986 119.479 cv
157.906 119.479 158.653 120.225 158.653 121.145 cv
158.573 121.225 mo
158.573 122.145 157.826 122.892 156.906 122.892 cv
155.986 122.892 155.24 122.145 155.24 121.225 cv
155.24 120.305 155.986 119.559 156.906 119.559 cv
157.826 119.559 158.573 120.305 158.573 121.225 cv
158.533 121.305 mo
158.533 122.225 157.787 122.972 156.867 122.972 cv
155.947 122.972 155.2 122.225 155.2 121.305 cv
155.2 120.385 155.947 119.638 156.867 119.638 cv
157.787 119.638 158.533 120.385 158.533 121.305 cv
158.493 121.065 mo
158.493 121.985 157.746 122.732 156.826 122.732 cv
155.906 122.732 155.16 121.985 155.16 121.065 cv
155.16 120.145 155.906 119.399 156.826 119.399 cv
157.746 119.399 158.493 120.145 158.493 121.065 cv
158.413 120.985 mo
158.413 121.906 157.667 122.652 156.746 122.652 cv
155.826 122.652 155.08 121.906 155.08 120.985 cv
155.08 120.065 155.826 119.319 156.746 119.319 cv
157.667 119.319 158.413 120.065 158.413 120.985 cv
158.333 121.025 mo
158.333 121.945 157.586 122.692 156.667 122.692 cv
155.746 122.692 155 121.945 155 121.025 cv
155 120.105 155.746 119.359 156.667 119.359 cv
157.586 119.359 158.333 120.105 158.333 121.025 cv
158.292 120.985 mo
158.292 121.906 157.546 122.652 156.626 122.652 cv
155.707 122.652 154.959 121.906 154.959 120.985 cv
154.959 120.065 155.707 119.319 156.626 119.319 cv
157.546 119.319 158.292 120.065 158.292 120.985 cv
158.253 120.985 mo
158.253 121.906 157.506 122.652 156.586 122.652 cv
155.667 122.652 154.919 121.906 154.919 120.985 cv
154.919 120.065 155.667 119.319 156.586 119.319 cv
157.506 119.319 158.253 120.065 158.253 120.985 cv
158.173 120.906 mo
158.173 121.826 157.426 122.572 156.506 122.572 cv
155.586 122.572 154.839 121.826 154.839 120.906 cv
154.839 119.985 155.586 119.239 156.506 119.239 cv
157.426 119.239 158.173 119.985 158.173 120.906 cv
158.132 120.706 mo
158.132 121.625 157.386 122.372 156.466 122.372 cv
155.546 122.372 154.799 121.625 154.799 120.706 cv
154.799 119.786 155.546 119.039 156.466 119.039 cv
157.386 119.039 158.132 119.786 158.132 120.706 cv
158.052 120.585 mo
158.052 121.505 157.306 122.252 156.386 122.252 cv
155.466 122.252 154.719 121.505 154.719 120.585 cv
154.719 119.666 155.466 118.918 156.386 118.918 cv
157.306 118.918 158.052 119.666 158.052 120.585 cv
157.973 120.666 mo
157.973 121.585 157.226 122.332 156.306 122.332 cv
155.386 122.332 154.64 121.585 154.64 120.666 cv
154.64 119.746 155.386 118.999 156.306 118.999 cv
157.226 118.999 157.973 119.746 157.973 120.666 cv
157.933 120.746 mo
157.933 121.666 157.186 122.412 156.266 122.412 cv
155.346 122.412 154.599 121.666 154.599 120.746 cv
154.599 119.826 155.346 119.079 156.266 119.079 cv
157.186 119.079 157.933 119.826 157.933 120.746 cv
157.853 120.545 mo
157.853 121.465 157.106 122.212 156.186 122.212 cv
155.266 122.212 154.519 121.465 154.519 120.545 cv
154.519 119.625 155.266 118.878 156.186 118.878 cv
157.106 118.878 157.853 119.625 157.853 120.545 cv
157.773 120.585 mo
157.773 121.505 157.026 122.252 156.106 122.252 cv
155.186 122.252 154.439 121.505 154.439 120.585 cv
154.439 119.666 155.186 118.918 156.106 118.918 cv
157.026 118.918 157.773 119.666 157.773 120.585 cv
157.733 120.706 mo
157.733 121.625 156.986 122.372 156.066 122.372 cv
155.146 122.372 154.4 121.625 154.4 120.706 cv
154.4 119.786 155.146 119.039 156.066 119.039 cv
156.986 119.039 157.733 119.786 157.733 120.706 cv
157.693 120.505 mo
157.693 121.425 156.947 122.172 156.026 122.172 cv
155.106 122.172 154.359 121.425 154.359 120.505 cv
154.359 119.585 155.106 118.838 156.026 118.838 cv
156.947 118.838 157.693 119.585 157.693 120.505 cv
157.613 120.305 mo
157.613 121.225 156.867 121.972 155.947 121.972 cv
155.026 121.972 154.28 121.225 154.28 120.305 cv
154.28 119.385 155.026 118.638 155.947 118.638 cv
156.867 118.638 157.613 119.385 157.613 120.305 cv
157.533 120.185 mo
157.533 121.105 156.787 121.852 155.867 121.852 cv
154.947 121.852 154.2 121.105 154.2 120.185 cv
154.2 119.265 154.947 118.519 155.867 118.519 cv
156.787 118.519 157.533 119.265 157.533 120.185 cv
157.493 120.105 mo
157.493 121.025 156.746 121.772 155.826 121.772 cv
154.906 121.772 154.16 121.025 154.16 120.105 cv
154.16 119.185 154.906 118.439 155.826 118.439 cv
156.746 118.439 157.493 119.185 157.493 120.105 cv
157.413 120.025 mo
157.413 120.945 156.667 121.692 155.746 121.692 cv
154.826 121.692 154.08 120.945 154.08 120.025 cv
154.08 119.105 154.826 118.359 155.746 118.359 cv
156.667 118.359 157.413 119.105 157.413 120.025 cv
157.333 120.185 mo
157.333 121.105 156.586 121.852 155.667 121.852 cv
154.746 121.852 154 121.105 154 120.185 cv
154 119.265 154.746 118.519 155.667 118.519 cv
156.586 118.519 157.333 119.265 157.333 120.185 cv
157.292 120.185 mo
157.292 121.105 156.546 121.852 155.626 121.852 cv
154.707 121.852 153.959 121.105 153.959 120.185 cv
153.959 119.265 154.707 118.519 155.626 118.519 cv
156.546 118.519 157.292 119.265 157.292 120.185 cv
157.212 120.065 mo
157.212 120.985 156.466 121.732 155.546 121.732 cv
154.626 121.732 153.879 120.985 153.879 120.065 cv
153.879 119.145 154.626 118.399 155.546 118.399 cv
156.466 118.399 157.212 119.145 157.212 120.065 cv
157.132 119.866 mo
157.132 120.786 156.386 121.532 155.466 121.532 cv
154.546 121.532 153.799 120.786 153.799 119.866 cv
153.799 118.945 154.546 118.199 155.466 118.199 cv
156.386 118.199 157.132 118.945 157.132 119.866 cv
157.093 119.746 mo
157.093 120.666 156.346 121.412 155.426 121.412 cv
154.506 121.412 153.759 120.666 153.759 119.746 cv
153.759 118.826 154.506 118.079 155.426 118.079 cv
156.346 118.079 157.093 118.826 157.093 119.746 cv
157.013 119.786 mo
157.013 120.706 156.266 121.452 155.346 121.452 cv
154.426 121.452 153.679 120.706 153.679 119.786 cv
153.679 118.866 154.426 118.119 155.346 118.119 cv
156.266 118.119 157.013 118.866 157.013 119.786 cv
156.973 119.866 mo
156.973 120.786 156.226 121.532 155.306 121.532 cv
154.386 121.532 153.64 120.786 153.64 119.866 cv
153.64 118.945 154.386 118.199 155.306 118.199 cv
156.226 118.199 156.973 118.945 156.973 119.866 cv
156.893 119.706 mo
156.893 120.625 156.146 121.372 155.226 121.372 cv
154.306 121.372 153.56 120.625 153.56 119.706 cv
153.56 118.786 154.306 118.039 155.226 118.039 cv
156.146 118.039 156.893 118.786 156.893 119.706 cv
156.813 119.706 mo
156.813 120.625 156.066 121.372 155.146 121.372 cv
154.226 121.372 153.48 120.625 153.48 119.706 cv
153.48 118.786 154.226 118.039 155.146 118.039 cv
156.066 118.039 156.813 118.786 156.813 119.706 cv
156.773 119.545 mo
156.773 120.465 156.026 121.212 155.106 121.212 cv
154.186 121.212 153.439 120.465 153.439 119.545 cv
153.439 118.625 154.186 117.878 155.106 117.878 cv
156.026 117.878 156.773 118.625 156.773 119.545 cv
156.653 119.385 mo
156.653 120.305 155.906 121.052 154.986 121.052 cv
154.066 121.052 153.32 120.305 153.32 119.385 cv
153.32 118.465 154.066 117.718 154.986 117.718 cv
155.906 117.718 156.653 118.465 156.653 119.385 cv
156.613 119.265 mo
156.613 120.185 155.867 120.932 154.947 120.932 cv
154.026 120.932 153.28 120.185 153.28 119.265 cv
153.28 118.345 154.026 117.599 154.947 117.599 cv
155.867 117.599 156.613 118.345 156.613 119.265 cv
156.533 119.265 mo
156.533 120.185 155.787 120.932 154.867 120.932 cv
153.947 120.932 153.2 120.185 153.2 119.265 cv
153.2 118.345 153.947 117.599 154.867 117.599 cv
155.787 117.599 156.533 118.345 156.533 119.265 cv
156.493 119.385 mo
156.493 120.305 155.746 121.052 154.826 121.052 cv
153.906 121.052 153.16 120.305 153.16 119.385 cv
153.16 118.465 153.906 117.718 154.826 117.718 cv
155.746 117.718 156.493 118.465 156.493 119.385 cv
156.413 119.385 mo
156.413 120.305 155.667 121.052 154.746 121.052 cv
153.826 121.052 153.08 120.305 153.08 119.385 cv
153.08 118.465 153.826 117.718 154.746 117.718 cv
155.667 117.718 156.413 118.465 156.413 119.385 cv
156.333 119.265 mo
156.333 120.185 155.586 120.932 154.667 120.932 cv
153.746 120.932 153 120.185 153 119.265 cv
153 118.345 153.746 117.599 154.667 117.599 cv
155.586 117.599 156.333 118.345 156.333 119.265 cv
156.253 119.265 mo
156.253 120.185 155.506 120.932 154.586 120.932 cv
153.667 120.932 152.919 120.185 152.919 119.265 cv
152.919 118.345 153.667 117.599 154.586 117.599 cv
155.506 117.599 156.253 118.345 156.253 119.265 cv
156.212 119.225 mo
156.212 120.145 155.466 120.892 154.546 120.892 cv
153.626 120.892 152.879 120.145 152.879 119.225 cv
152.879 118.305 153.626 117.559 154.546 117.559 cv
155.466 117.559 156.212 118.305 156.212 119.225 cv
156.132 118.985 mo
156.132 119.906 155.386 120.652 154.466 120.652 cv
153.546 120.652 152.799 119.906 152.799 118.985 cv
152.799 118.065 153.546 117.319 154.466 117.319 cv
155.386 117.319 156.132 118.065 156.132 118.985 cv
156.093 118.945 mo
156.093 119.866 155.346 120.612 154.426 120.612 cv
153.506 120.612 152.759 119.866 152.759 118.945 cv
152.759 118.025 153.506 117.279 154.426 117.279 cv
155.346 117.279 156.093 118.025 156.093 118.945 cv
155.973 119.065 mo
155.973 119.985 155.226 120.732 154.306 120.732 cv
153.386 120.732 152.64 119.985 152.64 119.065 cv
152.64 118.145 153.386 117.399 154.306 117.399 cv
155.226 117.399 155.973 118.145 155.973 119.065 cv
155.933 119.105 mo
155.933 120.025 155.186 120.772 154.266 120.772 cv
153.346 120.772 152.599 120.025 152.599 119.105 cv
152.599 118.185 153.346 117.439 154.266 117.439 cv
155.186 117.439 155.933 118.185 155.933 119.105 cv
155.853 118.985 mo
155.853 119.906 155.106 120.652 154.186 120.652 cv
153.266 120.652 152.519 119.906 152.519 118.985 cv
152.519 118.065 153.266 117.319 154.186 117.319 cv
155.106 117.319 155.853 118.065 155.853 118.985 cv
155.773 118.706 mo
155.773 119.625 155.026 120.372 154.106 120.372 cv
153.186 120.372 152.439 119.625 152.439 118.706 cv
152.439 117.786 153.186 117.039 154.106 117.039 cv
155.026 117.039 155.773 117.786 155.773 118.706 cv
155.693 118.505 mo
155.693 119.425 154.947 120.172 154.026 120.172 cv
153.106 120.172 152.359 119.425 152.359 118.505 cv
152.359 117.585 153.106 116.838 154.026 116.838 cv
154.947 116.838 155.693 117.585 155.693 118.505 cv
155.653 118.545 mo
155.653 119.465 154.906 120.212 153.986 120.212 cv
153.066 120.212 152.32 119.465 152.32 118.545 cv
152.32 117.625 153.066 116.878 153.986 116.878 cv
154.906 116.878 155.653 117.625 155.653 118.545 cv
155.573 118.625 mo
155.573 119.545 154.826 120.292 153.906 120.292 cv
152.986 120.292 152.24 119.545 152.24 118.625 cv
152.24 117.706 152.986 116.958 153.906 116.958 cv
154.826 116.958 155.573 117.706 155.573 118.625 cv
155.493 118.585 mo
155.493 119.505 154.746 120.252 153.826 120.252 cv
152.906 120.252 152.16 119.505 152.16 118.585 cv
152.16 117.666 152.906 116.918 153.826 116.918 cv
154.746 116.918 155.493 117.666 155.493 118.585 cv
155.453 118.265 mo
155.453 119.185 154.707 119.932 153.787 119.932 cv
152.867 119.932 152.12 119.185 152.12 118.265 cv
152.12 117.345 152.867 116.599 153.787 116.599 cv
154.707 116.599 155.453 117.345 155.453 118.265 cv
155.333 118.265 mo
155.333 119.185 154.586 119.932 153.667 119.932 cv
152.746 119.932 152 119.185 152 118.265 cv
152 117.345 152.746 116.599 153.667 116.599 cv
154.586 116.599 155.333 117.345 155.333 118.265 cv
155.292 118.265 mo
155.292 119.185 154.546 119.932 153.626 119.932 cv
152.707 119.932 151.959 119.185 151.959 118.265 cv
151.959 117.345 152.707 116.599 153.626 116.599 cv
154.546 116.599 155.292 117.345 155.292 118.265 cv
155.212 118.185 mo
155.212 119.105 154.466 119.852 153.546 119.852 cv
152.626 119.852 151.879 119.105 151.879 118.185 cv
151.879 117.265 152.626 116.519 153.546 116.519 cv
154.466 116.519 155.212 117.265 155.212 118.185 cv
155.132 118.225 mo
155.132 119.145 154.386 119.892 153.466 119.892 cv
152.546 119.892 151.799 119.145 151.799 118.225 cv
151.799 117.305 152.546 116.559 153.466 116.559 cv
154.386 116.559 155.132 117.305 155.132 118.225 cv
155.052 118.025 mo
155.052 118.945 154.306 119.692 153.386 119.692 cv
152.466 119.692 151.719 118.945 151.719 118.025 cv
151.719 117.105 152.466 116.359 153.386 116.359 cv
154.306 116.359 155.052 117.105 155.052 118.025 cv
154.973 117.866 mo
154.973 118.786 154.226 119.532 153.306 119.532 cv
152.386 119.532 151.64 118.786 151.64 117.866 cv
151.64 116.945 152.386 116.199 153.306 116.199 cv
154.226 116.199 154.973 116.945 154.973 117.866 cv
154.893 117.945 mo
154.893 118.866 154.146 119.612 153.226 119.612 cv
152.306 119.612 151.56 118.866 151.56 117.945 cv
151.56 117.025 152.306 116.279 153.226 116.279 cv
154.146 116.279 154.893 117.025 154.893 117.945 cv
154.853 117.866 mo
154.853 118.786 154.106 119.532 153.186 119.532 cv
152.266 119.532 151.519 118.786 151.519 117.866 cv
151.519 116.945 152.266 116.199 153.186 116.199 cv
154.106 116.199 154.853 116.945 154.853 117.866 cv
154.773 117.706 mo
154.773 118.625 154.026 119.372 153.106 119.372 cv
152.186 119.372 151.439 118.625 151.439 117.706 cv
151.439 116.786 152.186 116.039 153.106 116.039 cv
154.026 116.039 154.773 116.786 154.773 117.706 cv
154.653 117.465 mo
154.653 118.385 153.906 119.132 152.986 119.132 cv
152.066 119.132 151.32 118.385 151.32 117.465 cv
151.32 116.545 152.066 115.798 152.986 115.798 cv
153.906 115.798 154.653 116.545 154.653 117.465 cv
154.613 117.505 mo
154.613 118.425 153.867 119.172 152.947 119.172 cv
152.026 119.172 151.28 118.425 151.28 117.505 cv
151.28 116.585 152.026 115.838 152.947 115.838 cv
153.867 115.838 154.613 116.585 154.613 117.505 cv
154.533 117.706 mo
154.533 118.625 153.787 119.372 152.867 119.372 cv
151.947 119.372 151.2 118.625 151.2 117.706 cv
151.2 116.786 151.947 116.039 152.867 116.039 cv
153.787 116.039 154.533 116.786 154.533 117.706 cv
154.453 117.826 mo
154.453 118.746 153.707 119.492 152.787 119.492 cv
151.867 119.492 151.12 118.746 151.12 117.826 cv
151.12 116.906 151.867 116.159 152.787 116.159 cv
153.707 116.159 154.453 116.906 154.453 117.826 cv
154.373 117.666 mo
154.373 118.585 153.626 119.332 152.707 119.332 cv
151.787 119.332 151.04 118.585 151.04 117.666 cv
151.04 116.746 151.787 115.999 152.707 115.999 cv
153.626 115.999 154.373 116.746 154.373 117.666 cv
154.292 117.625 mo
154.292 118.545 153.546 119.292 152.626 119.292 cv
151.707 119.292 150.959 118.545 150.959 117.625 cv
150.959 116.706 151.707 115.958 152.626 115.958 cv
153.546 115.958 154.292 116.706 154.292 117.625 cv
154.253 117.706 mo
154.253 118.625 153.506 119.372 152.586 119.372 cv
151.667 119.372 150.919 118.625 150.919 117.706 cv
150.919 116.786 151.667 116.039 152.586 116.039 cv
153.506 116.039 154.253 116.786 154.253 117.706 cv
154.173 117.706 mo
154.173 118.625 153.426 119.372 152.506 119.372 cv
151.586 119.372 150.839 118.625 150.839 117.706 cv
150.839 116.786 151.586 116.039 152.506 116.039 cv
153.426 116.039 154.173 116.786 154.173 117.706 cv
154.093 117.385 mo
154.093 118.305 153.346 119.052 152.426 119.052 cv
151.506 119.052 150.759 118.305 150.759 117.385 cv
150.759 116.465 151.506 115.718 152.426 115.718 cv
153.346 115.718 154.093 116.465 154.093 117.385 cv
153.973 117.065 mo
153.973 117.985 153.226 118.732 152.306 118.732 cv
151.386 118.732 150.64 117.985 150.64 117.065 cv
150.64 116.145 151.386 115.399 152.306 115.399 cv
153.226 115.399 153.973 116.145 153.973 117.065 cv
153.893 117.105 mo
153.893 118.025 153.146 118.772 152.226 118.772 cv
151.306 118.772 150.56 118.025 150.56 117.105 cv
150.56 116.185 151.306 115.439 152.226 115.439 cv
153.146 115.439 153.893 116.185 153.893 117.105 cv
153.853 117.065 mo
153.853 117.985 153.106 118.732 152.186 118.732 cv
151.266 118.732 150.519 117.985 150.519 117.065 cv
150.519 116.145 151.266 115.399 152.186 115.399 cv
153.106 115.399 153.853 116.145 153.853 117.065 cv
153.773 117.145 mo
153.773 118.065 153.026 118.812 152.106 118.812 cv
151.186 118.812 150.439 118.065 150.439 117.145 cv
150.439 116.225 151.186 115.479 152.106 115.479 cv
153.026 115.479 153.773 116.225 153.773 117.145 cv
153.693 116.866 mo
153.693 117.786 152.947 118.532 152.026 118.532 cv
151.106 118.532 150.359 117.786 150.359 116.866 cv
150.359 115.945 151.106 115.199 152.026 115.199 cv
152.947 115.199 153.693 115.945 153.693 116.866 cv
153.613 116.866 mo
153.613 117.786 152.867 118.532 151.947 118.532 cv
151.026 118.532 150.28 117.786 150.28 116.866 cv
150.28 115.945 151.026 115.199 151.947 115.199 cv
152.867 115.199 153.613 115.945 153.613 116.866 cv
153.533 116.746 mo
153.533 117.666 152.787 118.412 151.867 118.412 cv
150.947 118.412 150.2 117.666 150.2 116.746 cv
150.2 115.826 150.947 115.079 151.867 115.079 cv
152.787 115.079 153.533 115.826 153.533 116.746 cv
153.453 116.585 mo
153.453 117.505 152.707 118.252 151.787 118.252 cv
150.867 118.252 150.12 117.505 150.12 116.585 cv
150.12 115.666 150.867 114.918 151.787 114.918 cv
152.707 114.918 153.453 115.666 153.453 116.585 cv
153.333 116.746 mo
153.333 117.666 152.586 118.412 151.667 118.412 cv
150.746 118.412 150 117.666 150 116.746 cv
150 115.826 150.746 115.079 151.667 115.079 cv
152.586 115.079 153.333 115.826 153.333 116.746 cv
153.253 116.545 mo
153.253 117.465 152.506 118.212 151.586 118.212 cv
150.667 118.212 149.919 117.465 149.919 116.545 cv
149.919 115.625 150.667 114.878 151.586 114.878 cv
152.506 114.878 153.253 115.625 153.253 116.545 cv
153.173 116.545 mo
153.173 117.465 152.426 118.212 151.506 118.212 cv
150.586 118.212 149.839 117.465 149.839 116.545 cv
149.839 115.625 150.586 114.878 151.506 114.878 cv
152.426 114.878 153.173 115.625 153.173 116.545 cv
153.093 116.625 mo
153.093 117.545 152.346 118.292 151.426 118.292 cv
150.506 118.292 149.759 117.545 149.759 116.625 cv
149.759 115.706 150.506 114.958 151.426 114.958 cv
152.346 114.958 153.093 115.706 153.093 116.625 cv
153.013 116.425 mo
153.013 117.345 152.266 118.092 151.346 118.092 cv
150.426 118.092 149.679 117.345 149.679 116.425 cv
149.679 115.505 150.426 114.758 151.346 114.758 cv
152.266 114.758 153.013 115.505 153.013 116.425 cv
152.933 116.345 mo
152.933 117.265 152.186 118.012 151.266 118.012 cv
150.346 118.012 149.599 117.265 149.599 116.345 cv
149.599 115.425 150.346 114.678 151.266 114.678 cv
152.186 114.678 152.933 115.425 152.933 116.345 cv
152.853 116.345 mo
152.853 117.265 152.106 118.012 151.186 118.012 cv
150.266 118.012 149.519 117.265 149.519 116.345 cv
149.519 115.425 150.266 114.678 151.186 114.678 cv
152.106 114.678 152.853 115.425 152.853 116.345 cv
152.773 116.265 mo
152.773 117.185 152.026 117.932 151.106 117.932 cv
150.186 117.932 149.439 117.185 149.439 116.265 cv
149.439 115.345 150.186 114.599 151.106 114.599 cv
152.026 114.599 152.773 115.345 152.773 116.265 cv
152.653 116.305 mo
152.653 117.225 151.906 117.972 150.986 117.972 cv
150.066 117.972 149.32 117.225 149.32 116.305 cv
149.32 115.385 150.066 114.638 150.986 114.638 cv
151.906 114.638 152.653 115.385 152.653 116.305 cv
152.573 116.305 mo
152.573 117.225 151.826 117.972 150.906 117.972 cv
149.986 117.972 149.24 117.225 149.24 116.305 cv
149.24 115.385 149.986 114.638 150.906 114.638 cv
151.826 114.638 152.573 115.385 152.573 116.305 cv
152.493 116.025 mo
152.493 116.945 151.746 117.692 150.826 117.692 cv
149.906 117.692 149.16 116.945 149.16 116.025 cv
149.16 115.105 149.906 114.359 150.826 114.359 cv
151.746 114.359 152.493 115.105 152.493 116.025 cv
152.413 115.786 mo
152.413 116.706 151.667 117.452 150.746 117.452 cv
149.826 117.452 149.08 116.706 149.08 115.786 cv
149.08 114.866 149.826 114.119 150.746 114.119 cv
151.667 114.119 152.413 114.866 152.413 115.786 cv
152.333 115.985 mo
152.333 116.906 151.586 117.652 150.667 117.652 cv
149.746 117.652 149 116.906 149 115.985 cv
149 115.065 149.746 114.319 150.667 114.319 cv
151.586 114.319 152.333 115.065 152.333 115.985 cv
152.253 116.105 mo
152.253 117.025 151.506 117.772 150.586 117.772 cv
149.667 117.772 148.919 117.025 148.919 116.105 cv
148.919 115.185 149.667 114.439 150.586 114.439 cv
151.506 114.439 152.253 115.185 152.253 116.105 cv
152.173 115.786 mo
152.173 116.706 151.426 117.452 150.506 117.452 cv
149.586 117.452 148.839 116.706 148.839 115.786 cv
148.839 114.866 149.586 114.119 150.506 114.119 cv
151.426 114.119 152.173 114.866 152.173 115.786 cv
152.093 115.666 mo
152.093 116.585 151.346 117.332 150.426 117.332 cv
149.506 117.332 148.759 116.585 148.759 115.666 cv
148.759 114.746 149.506 113.999 150.426 113.999 cv
151.346 113.999 152.093 114.746 152.093 115.666 cv
152.013 115.505 mo
152.013 116.425 151.266 117.172 150.346 117.172 cv
149.426 117.172 148.679 116.425 148.679 115.505 cv
148.679 114.585 149.426 113.838 150.346 113.838 cv
151.266 113.838 152.013 114.585 152.013 115.505 cv
151.893 115.305 mo
151.893 116.225 151.146 116.972 150.226 116.972 cv
149.306 116.972 148.56 116.225 148.56 115.305 cv
148.56 114.385 149.306 113.638 150.226 113.638 cv
151.146 113.638 151.893 114.385 151.893 115.305 cv
151.813 115.625 mo
151.813 116.545 151.066 117.292 150.146 117.292 cv
149.226 117.292 148.48 116.545 148.48 115.625 cv
148.48 114.706 149.226 113.958 150.146 113.958 cv
151.066 113.958 151.813 114.706 151.813 115.625 cv
@
grestore
gsave
55.791 133.303 mo
169.625 133.303 li
169.625 46.8032 li
55.791 46.8032 li
55.791 133.303 li
cp
clp
1 lw
143.458 109.025 mo
141.125 111.359 li
141.125 109.025 mo
143.458 111.359 li
143.263 108.331 mo
140.929 110.665 li
140.929 108.331 mo
143.263 110.665 li
143.096 108.081 mo
140.763 110.415 li
140.763 108.081 mo
143.096 110.415 li
142.902 108.053 mo
140.568 110.386 li
140.568 108.053 mo
142.902 110.386 li
142.708 107.72 mo
140.375 110.053 li
140.375 107.72 mo
142.708 110.053 li
142.541 107.72 mo
140.208 110.053 li
140.208 107.72 mo
142.541 110.053 li
142.346 107.803 mo
140.013 110.136 li
140.013 107.803 mo
142.346 110.136 li
142.152 107.803 mo
139.818 110.136 li
139.818 107.803 mo
142.152 110.136 li
141.958 107.275 mo
139.625 109.609 li
139.625 107.275 mo
141.958 109.609 li
141.763 106.665 mo
139.429 108.998 li
139.429 106.665 mo
141.763 108.998 li
141.568 106.775 mo
139.235 109.109 li
139.235 106.775 mo
141.568 109.109 li
141.375 106.831 mo
139.041 109.165 li
139.041 106.831 mo
141.375 109.165 li
141.152 106.692 mo
138.818 109.025 li
138.818 106.692 mo
141.152 109.025 li
140.958 106.72 mo
138.625 109.053 li
138.625 106.72 mo
140.958 109.053 li
140.763 106.136 mo
138.429 108.47 li
138.429 106.136 mo
140.763 108.47 li
140.541 105.748 mo
138.208 108.081 li
138.208 105.748 mo
140.541 108.081 li
140.346 105.942 mo
138.013 108.275 li
138.013 105.942 mo
140.346 108.275 li
140.125 105.498 mo
137.791 107.831 li
137.791 105.498 mo
140.125 107.831 li
139.902 105.498 mo
137.568 107.831 li
137.568 105.498 mo
139.902 107.831 li
139.679 105.498 mo
137.346 107.831 li
137.346 105.498 mo
139.679 107.831 li
139.458 104.72 mo
137.125 107.053 li
137.125 104.72 mo
139.458 107.053 li
139.235 104.72 mo
136.902 107.053 li
136.902 104.72 mo
139.235 107.053 li
139.013 104.665 mo
136.679 106.998 li
136.679 104.665 mo
139.013 106.998 li
138.791 104.192 mo
136.458 106.525 li
136.458 104.192 mo
138.791 106.525 li
138.541 103.525 mo
136.208 105.859 li
136.208 103.525 mo
138.541 105.859 li
138.318 103.303 mo
135.985 105.636 li
135.985 103.303 mo
138.318 105.636 li
138.068 103.665 mo
135.735 105.998 li
135.735 103.665 mo
138.068 105.998 li
137.846 103.109 mo
135.513 105.442 li
135.513 103.109 mo
137.846 105.442 li
137.596 102.915 mo
135.263 105.248 li
135.263 102.915 mo
137.596 105.248 li
137.346 102.859 mo
135.013 105.192 li
135.013 102.859 mo
137.346 105.192 li
137.096 102.22 mo
134.763 104.553 li
134.763 102.22 mo
137.096 104.553 li
136.818 101.831 mo
134.485 104.165 li
134.485 101.831 mo
136.818 104.165 li
136.568 101.359 mo
134.235 103.692 li
134.235 101.359 mo
136.568 103.692 li
136.291 100.47 mo
133.958 102.803 li
133.958 100.47 mo
136.291 102.803 li
136.041 100.47 mo
133.708 102.803 li
133.708 100.47 mo
136.041 102.803 li
135.763 100.748 mo
133.429 103.081 li
133.429 100.748 mo
135.763 103.081 li
135.485 100.248 mo
133.152 102.581 li
133.152 100.248 mo
135.485 102.581 li
135.208 99.8589 mo
132.875 102.192 li
132.875 99.8589 mo
135.208 102.192 li
134.929 99.1919 mo
132.596 101.525 li
132.596 99.1919 mo
134.929 101.525 li
134.625 98.7476 mo
132.291 101.081 li
132.291 98.7476 mo
134.625 101.081 li
134.346 98.5532 mo
132.013 100.886 li
132.013 98.5532 mo
134.346 100.886 li
134.041 98.2476 mo
131.708 100.581 li
131.708 98.2476 mo
134.041 100.581 li
133.735 97.8032 mo
131.402 100.136 li
131.402 97.8032 mo
133.735 100.136 li
133.429 96.9146 mo
131.096 99.2476 li
131.096 96.9146 mo
133.429 99.2476 li
133.096 96.4702 mo
130.763 98.8032 li
130.763 96.4702 mo
133.096 98.8032 li
132.791 96.2476 mo
130.458 98.5806 li
130.458 96.2476 mo
132.791 98.5806 li
132.458 95.5532 mo
130.125 97.8862 li
130.125 95.5532 mo
132.458 97.8862 li
132.125 95.1089 mo
129.791 97.4419 li
129.791 95.1089 mo
132.125 97.4419 li
131.791 94.6089 mo
129.458 96.9419 li
129.458 94.6089 mo
131.791 96.9419 li
131.429 94.5806 mo
129.096 96.9146 li
129.096 94.5806 mo
131.429 96.9146 li
131.096 94.3862 mo
128.763 96.7202 li
128.763 94.3862 mo
131.096 96.7202 li
130.735 93.4146 mo
128.402 95.7476 li
128.402 93.4146 mo
130.735 95.7476 li
130.346 93.0249 mo
128.013 95.3589 li
128.013 93.0249 mo
130.346 95.3589 li
129.985 92.3862 mo
127.652 94.7202 li
127.652 92.3862 mo
129.985 94.7202 li
129.596 91.6089 mo
127.263 93.9419 li
127.263 91.6089 mo
129.596 93.9419 li
129.208 91.0249 mo
126.875 93.3589 li
126.875 91.0249 mo
129.208 93.3589 li
128.818 90.3862 mo
126.485 92.7202 li
126.485 90.3862 mo
128.818 92.7202 li
128.402 90.0249 mo
126.068 92.3589 li
126.068 90.0249 mo
128.402 92.3589 li
127.985 88.9976 mo
125.652 91.3306 li
125.652 88.9976 mo
127.985 91.3306 li
127.541 88.0249 mo
125.208 90.3589 li
125.208 88.0249 mo
127.541 90.3589 li
127.096 88.0532 mo
124.763 90.3862 li
124.763 88.0532 mo
127.096 90.3862 li
126.652 87.1919 mo
124.318 89.5249 li
124.318 87.1919 mo
126.652 89.5249 li
126.208 86.2749 mo
123.875 88.6089 li
123.875 86.2749 mo
126.208 88.6089 li
125.708 85.2754 mo
123.375 87.6089 li
123.375 85.2754 mo
125.708 87.6089 li
125.235 84.9146 mo
122.902 87.2476 li
122.902 84.9146 mo
125.235 87.2476 li
124.735 84.2754 mo
122.402 86.6089 li
122.402 84.2754 mo
124.735 86.6089 li
124.208 83.0811 mo
121.875 85.4146 li
121.875 83.0811 mo
124.208 85.4146 li
123.679 83.1089 mo
121.346 85.4419 li
121.346 83.1089 mo
123.679 85.4419 li
123.125 82.0254 mo
120.791 84.3589 li
120.791 82.0254 mo
123.125 84.3589 li
122.568 80.7476 mo
120.235 83.0811 li
120.235 80.7476 mo
122.568 83.0811 li
121.985 80.4697 mo
119.652 82.8032 li
119.652 80.4697 mo
121.985 82.8032 li
121.375 78.9419 mo
119.041 81.2754 li
119.041 78.9419 mo
121.375 81.2754 li
120.763 77.7476 mo
118.429 80.0811 li
118.429 77.7476 mo
120.763 80.0811 li
120.096 78.3032 mo
117.763 80.6367 li
117.763 78.3032 mo
120.096 80.6367 li
119.429 78.1089 mo
117.096 80.4419 li
117.096 78.1089 mo
119.429 80.4419 li
118.735 76.4419 mo
116.402 78.7754 li
116.402 76.4419 mo
118.735 78.7754 li
118.013 75.0532 mo
115.679 77.3867 li
115.679 75.0532 mo
118.013 77.3867 li
117.235 72.9146 mo
114.902 75.2476 li
114.902 72.9146 mo
117.235 75.2476 li
116.458 71.1367 mo
114.125 73.4697 li
114.125 71.1367 mo
116.458 73.4697 li
115.625 69.9976 mo
113.291 72.3311 li
113.291 69.9976 mo
115.625 72.3311 li
114.763 68.9697 mo
112.429 71.3032 li
112.429 68.9697 mo
114.763 71.3032 li
113.846 66.6919 mo
111.513 69.0254 li
111.513 66.6919 mo
113.846 69.0254 li
112.875 64.8032 mo
110.541 67.1367 li
110.541 64.8032 mo
112.875 67.1367 li
111.846 61.2197 mo
109.513 63.5532 li
109.513 61.2197 mo
111.846 63.5532 li
110.763 57.8589 mo
108.43 60.1919 li
108.43 57.8589 mo
110.763 60.1919 li
109.624 54.9976 mo
107.291 57.3311 li
107.291 54.9976 mo
109.624 57.3311 li
108.402 54.0811 mo
106.068 56.4146 li
106.068 54.0811 mo
108.402 56.4146 li
107.068 53.0532 mo
104.735 55.3867 li
104.735 53.0532 mo
107.068 55.3867 li
105.652 50.4146 mo
103.318 52.7476 li
103.318 50.4146 mo
105.652 52.7476 li
104.096 50.0254 mo
101.763 52.3589 li
101.763 50.0254 mo
104.096 52.3589 li
102.402 51.8311 mo
100.068 54.1646 li
100.068 51.8311 mo
102.402 54.1646 li
100.513 52.5532 mo
98.1797 54.8867 li
98.1797 52.5532 mo
100.513 54.8867 li
98.4297 53.3032 mo
96.0962 55.6367 li
96.0962 53.3032 mo
98.4297 55.6367 li
96.041 56.3867 mo
93.7075 58.7197 li
93.7075 56.3867 mo
96.041 58.7197 li
93.291 59.8589 mo
90.9575 62.1919 li
90.9575 59.8589 mo
93.291 62.1919 li
90.041 62.6367 mo
87.7075 64.9697 li
87.7075 62.6367 mo
90.041 64.9697 li
86.0684 67.4146 mo
83.7354 69.7476 li
83.7354 67.4146 mo
86.0684 69.7476 li
80.9297 70.4976 mo
78.5962 72.8311 li
78.5962 70.4976 mo
80.9297 72.8311 li
73.7075 79.6089 mo
71.374 81.9419 li
71.374 79.6089 mo
73.7075 81.9419 li
61.3462 86.3589 mo
59.0132 88.6919 li
59.0132 86.3589 mo
61.3462 88.6919 li
3.05176e-5 .993988 1 3.05176e-5 cmyk
@
grestore
1 lw
155.791 118.415 mo
153.458 120.748 li
153.458 118.415 mo
155.791 120.748 li
155.708 118.442 mo
153.375 120.775 li
153.375 118.442 mo
155.708 120.775 li
155.625 118.331 mo
153.291 120.665 li
153.291 118.331 mo
155.625 120.665 li
155.541 118.025 mo
153.208 120.359 li
153.208 118.025 mo
155.541 120.359 li
155.429 117.748 mo
153.096 120.081 li
153.096 117.748 mo
155.429 120.081 li
155.346 117.886 mo
153.013 120.22 li
153.013 117.886 mo
155.346 120.22 li
155.263 118.22 mo
152.929 120.553 li
152.929 118.22 mo
155.263 120.553 li
155.152 118.165 mo
152.818 120.498 li
152.818 118.165 mo
155.152 120.498 li
155.068 117.942 mo
152.735 120.275 li
152.735 117.942 mo
155.068 120.275 li
154.985 117.581 mo
152.652 119.915 li
152.652 117.581 mo
154.985 119.915 li
154.875 117.553 mo
152.541 119.886 li
152.541 117.553 mo
154.875 119.886 li
154.791 117.609 mo
152.458 119.942 li
152.458 117.609 mo
154.791 119.942 li
154.708 117.553 mo
152.375 119.886 li
152.375 117.553 mo
154.708 119.886 li
154.596 117.581 mo
152.263 119.915 li
152.263 117.581 mo
154.596 119.915 li
154.513 117.609 mo
152.179 119.942 li
152.179 117.609 mo
154.513 119.942 li
154.402 117.442 mo
152.068 119.775 li
152.068 117.442 mo
154.402 119.775 li
154.318 117.275 mo
151.985 119.609 li
151.985 117.275 mo
154.318 119.609 li
154.208 116.942 mo
151.875 119.275 li
151.875 116.942 mo
154.208 119.275 li
154.125 116.886 mo
151.791 119.22 li
151.791 116.886 mo
154.125 119.22 li
154.013 117.053 mo
151.679 119.386 li
151.679 117.053 mo
154.013 119.386 li
153.929 117.053 mo
151.596 119.386 li
151.596 117.053 mo
153.929 119.386 li
153.818 117.025 mo
151.485 119.359 li
151.485 117.025 mo
153.818 119.359 li
153.735 116.803 mo
151.402 119.136 li
151.402 116.803 mo
153.735 119.136 li
153.625 116.609 mo
151.291 118.942 li
151.291 116.609 mo
153.625 118.942 li
153.513 116.442 mo
151.179 118.775 li
151.179 116.442 mo
153.513 118.775 li
153.429 116.47 mo
151.096 118.803 li
151.096 116.47 mo
153.429 118.803 li
153.318 116.386 mo
150.985 118.72 li
150.985 116.386 mo
153.318 118.72 li
153.208 116.165 mo
150.875 118.498 li
150.875 116.165 mo
153.208 118.498 li
153.125 116.025 mo
150.791 118.359 li
150.791 116.025 mo
153.125 118.359 li
153.013 115.803 mo
150.679 118.136 li
150.679 115.803 mo
153.013 118.136 li
152.902 115.609 mo
150.568 117.942 li
150.568 115.609 mo
152.902 117.942 li
152.791 115.942 mo
150.458 118.275 li
150.458 115.942 mo
152.791 118.275 li
152.679 115.886 mo
150.346 118.22 li
150.346 115.886 mo
152.679 118.22 li
152.596 115.609 mo
150.263 117.942 li
150.263 115.609 mo
152.596 117.942 li
152.485 115.665 mo
150.152 117.998 li
150.152 115.665 mo
152.485 117.998 li
152.375 115.775 mo
150.041 118.109 li
150.041 115.775 mo
152.375 118.109 li
152.263 115.831 mo
149.929 118.165 li
149.929 115.831 mo
152.263 118.165 li
152.152 115.803 mo
149.818 118.136 li
149.818 115.803 mo
152.152 118.136 li
152.041 115.665 mo
149.708 117.998 li
149.708 115.665 mo
152.041 117.998 li
151.929 115.386 mo
149.596 117.72 li
149.596 115.386 mo
151.929 117.72 li
151.818 115.165 mo
149.485 117.498 li
149.485 115.165 mo
151.818 117.498 li
151.708 115.136 mo
149.375 117.47 li
149.375 115.136 mo
151.708 117.47 li
151.596 114.97 mo
149.263 117.303 li
149.263 114.97 mo
151.596 117.303 li
151.485 114.665 mo
149.152 116.998 li
149.152 114.665 mo
151.485 116.998 li
151.375 114.859 mo
149.041 117.192 li
149.041 114.859 mo
151.375 117.192 li
151.263 115.081 mo
148.929 117.415 li
148.929 115.081 mo
151.263 117.415 li
151.152 114.998 mo
148.818 117.331 li
148.818 114.998 mo
151.152 117.331 li
151.013 114.831 mo
148.679 117.165 li
148.679 114.831 mo
151.013 117.165 li
150.902 114.47 mo
148.568 116.803 li
148.568 114.47 mo
150.902 116.803 li
150.791 114.47 mo
148.458 116.803 li
148.458 114.47 mo
150.791 116.803 li
150.679 114.665 mo
148.346 116.998 li
148.346 114.665 mo
150.679 116.998 li
150.541 114.303 mo
148.208 116.636 li
148.208 114.303 mo
150.541 116.636 li
150.429 114.109 mo
148.096 116.442 li
148.096 114.109 mo
150.429 116.442 li
150.318 114.025 mo
147.985 116.359 li
147.985 114.025 mo
150.318 116.359 li
150.179 113.942 mo
147.846 116.275 li
147.846 113.942 mo
150.179 116.275 li
150.068 114.053 mo
147.735 116.386 li
147.735 114.053 mo
150.068 116.386 li
149.958 114.025 mo
147.625 116.359 li
147.625 114.025 mo
149.958 116.359 li
149.818 113.692 mo
147.485 116.025 li
147.485 113.692 mo
149.818 116.025 li
149.708 113.525 mo
147.375 115.859 li
147.375 113.525 mo
149.708 115.859 li
149.568 113.72 mo
147.235 116.053 li
147.235 113.72 mo
149.568 116.053 li
149.429 113.525 mo
147.096 115.859 li
147.096 113.525 mo
149.429 115.859 li
149.318 113.498 mo
146.985 115.831 li
146.985 113.498 mo
149.318 115.831 li
149.179 113.303 mo
146.846 115.636 li
146.846 113.303 mo
149.179 115.636 li
149.068 113.081 mo
146.735 115.415 li
146.735 113.081 mo
149.068 115.415 li
148.929 113.053 mo
146.596 115.386 li
146.596 113.053 mo
148.929 115.386 li
148.791 112.665 mo
146.458 114.998 li
146.458 112.665 mo
148.791 114.998 li
148.652 112.775 mo
146.318 115.109 li
146.318 112.775 mo
148.652 115.109 li
148.541 112.636 mo
146.208 114.97 li
146.208 112.636 mo
148.541 114.97 li
148.402 112.415 mo
146.068 114.748 li
146.068 112.415 mo
148.402 114.748 li
148.263 112.692 mo
145.929 115.025 li
145.929 112.692 mo
148.263 115.025 li
148.125 112.386 mo
145.791 114.72 li
145.791 112.386 mo
148.125 114.72 li
147.985 112.22 mo
145.652 114.553 li
145.652 112.22 mo
147.985 114.553 li
147.846 112.248 mo
145.513 114.581 li
145.513 112.248 mo
147.846 114.581 li
147.708 112.136 mo
145.375 114.47 li
145.375 112.136 mo
147.708 114.47 li
147.568 111.915 mo
145.235 114.248 li
145.235 111.915 mo
147.568 114.248 li
147.429 111.748 mo
145.096 114.081 li
145.096 111.748 mo
147.429 114.081 li
147.291 111.609 mo
144.958 113.942 li
144.958 111.609 mo
147.291 113.942 li
147.125 111.581 mo
144.791 113.915 li
144.791 111.581 mo
147.125 113.915 li
146.985 111.553 mo
144.652 113.886 li
144.652 111.553 mo
146.985 113.886 li
146.846 111.415 mo
144.513 113.748 li
144.513 111.415 mo
146.846 113.748 li
146.708 111.359 mo
144.375 113.692 li
144.375 111.359 mo
146.708 113.692 li
146.541 111.192 mo
144.208 113.525 li
144.208 111.192 mo
146.541 113.525 li
146.402 111.136 mo
144.068 113.47 li
144.068 111.136 mo
146.402 113.47 li
146.235 110.942 mo
143.902 113.275 li
143.902 110.942 mo
146.235 113.275 li
146.096 110.97 mo
143.763 113.303 li
143.763 110.97 mo
146.096 113.303 li
145.929 110.692 mo
143.596 113.025 li
143.596 110.692 mo
145.929 113.025 li
145.791 110.442 mo
143.458 112.775 li
143.458 110.442 mo
145.791 112.775 li
145.625 110.831 mo
143.291 113.165 li
143.291 110.831 mo
145.625 113.165 li
145.458 110.331 mo
143.125 112.665 li
143.125 110.331 mo
145.458 112.665 li
145.291 109.859 mo
142.958 112.192 li
142.958 109.859 mo
145.291 112.192 li
145.152 110.025 mo
142.818 112.359 li
142.818 110.025 mo
145.152 112.359 li
144.985 109.859 mo
142.652 112.192 li
142.652 109.859 mo
144.985 112.192 li
144.818 109.859 mo
142.485 112.192 li
142.485 109.859 mo
144.818 112.192 li
144.652 110.303 mo
142.318 112.636 li
142.318 110.303 mo
144.652 112.636 li
144.485 109.72 mo
142.152 112.053 li
142.152 109.72 mo
144.485 112.053 li
144.318 109.22 mo
141.985 111.553 li
141.985 109.22 mo
144.318 111.553 li
144.152 109.331 mo
141.818 111.665 li
141.818 109.331 mo
144.152 111.665 li
143.958 109.275 mo
141.625 111.609 li
141.625 109.275 mo
143.958 111.609 li
143.791 109.025 mo
141.458 111.359 li
141.458 109.025 mo
143.791 111.359 li
143.625 109.053 mo
141.291 111.386 li
141.291 109.053 mo
143.625 111.386 li
3.05176e-5 .993988 1 3.05176e-5 cmyk
@
163.041 124.498 mo
160.708 126.831 li
160.708 124.498 mo
163.041 126.831 li
162.958 124.47 mo
160.625 126.803 li
160.625 124.47 mo
162.958 126.803 li
162.902 124.275 mo
160.568 126.609 li
160.568 124.275 mo
162.902 126.609 li
162.846 124.248 mo
160.513 126.581 li
160.513 124.248 mo
162.846 126.581 li
162.791 124.22 mo
160.458 126.553 li
160.458 124.22 mo
162.791 126.553 li
162.735 124.22 mo
160.402 126.553 li
160.402 124.22 mo
162.735 126.553 li
162.679 124.192 mo
160.346 126.525 li
160.346 124.192 mo
162.679 126.525 li
162.596 124.025 mo
160.263 126.359 li
160.263 124.025 mo
162.596 126.359 li
162.541 124.053 mo
160.208 126.386 li
160.208 124.053 mo
162.541 126.386 li
162.485 123.915 mo
160.152 126.248 li
160.152 123.915 mo
162.485 126.248 li
162.429 123.886 mo
160.096 126.22 li
160.096 123.886 mo
162.429 126.22 li
162.375 123.831 mo
160.041 126.165 li
160.041 123.831 mo
162.375 126.165 li
162.291 123.886 mo
159.958 126.22 li
159.958 123.886 mo
162.291 126.22 li
162.235 123.803 mo
159.902 126.136 li
159.902 123.803 mo
162.235 126.136 li
162.179 123.581 mo
159.846 125.915 li
159.846 123.581 mo
162.179 125.915 li
162.125 123.609 mo
159.791 125.942 li
159.791 123.609 mo
162.125 125.942 li
162.041 123.609 mo
159.708 125.942 li
159.708 123.609 mo
162.041 125.942 li
161.985 123.665 mo
159.652 125.998 li
159.652 123.665 mo
161.985 125.998 li
161.929 123.581 mo
159.596 125.915 li
159.596 123.581 mo
161.929 125.915 li
161.875 123.553 mo
159.541 125.886 li
159.541 123.553 mo
161.875 125.886 li
161.791 123.636 mo
159.458 125.97 li
159.458 123.636 mo
161.791 125.97 li
161.735 123.553 mo
159.402 125.886 li
159.402 123.553 mo
161.735 125.886 li
161.679 123.136 mo
159.346 125.47 li
159.346 123.136 mo
161.679 125.47 li
161.596 123.053 mo
159.263 125.386 li
159.263 123.053 mo
161.596 125.386 li
161.541 123.331 mo
159.208 125.665 li
159.208 123.331 mo
161.541 125.665 li
161.485 122.998 mo
159.152 125.331 li
159.152 122.998 mo
161.485 125.331 li
161.402 122.886 mo
159.068 125.22 li
159.068 122.886 mo
161.402 125.22 li
161.346 122.859 mo
159.013 125.192 li
159.013 122.859 mo
161.346 125.192 li
161.291 122.803 mo
158.958 125.136 li
158.958 122.803 mo
161.291 125.136 li
161.208 122.886 mo
158.875 125.22 li
158.875 122.886 mo
161.208 125.22 li
161.152 122.831 mo
158.818 125.165 li
158.818 122.831 mo
161.152 125.165 li
161.096 122.859 mo
158.763 125.192 li
158.763 122.859 mo
161.096 125.192 li
161.013 122.748 mo
158.679 125.081 li
158.679 122.748 mo
161.013 125.081 li
160.958 122.72 mo
158.625 125.053 li
158.625 122.72 mo
160.958 125.053 li
160.875 122.803 mo
158.541 125.136 li
158.541 122.803 mo
160.875 125.136 li
160.818 122.775 mo
158.485 125.109 li
158.485 122.775 mo
160.818 125.109 li
160.763 122.581 mo
158.429 124.915 li
158.429 122.581 mo
160.763 124.915 li
160.679 122.359 mo
158.346 124.692 li
158.346 122.359 mo
160.679 124.692 li
160.625 122.331 mo
158.291 124.665 li
158.291 122.331 mo
160.625 124.665 li
160.541 122.359 mo
158.208 124.692 li
158.208 122.359 mo
160.541 124.692 li
160.485 122.386 mo
158.152 124.72 li
158.152 122.386 mo
160.485 124.72 li
160.402 122.415 mo
158.068 124.748 li
158.068 122.415 mo
160.402 124.748 li
160.346 122.303 mo
158.013 124.636 li
158.013 122.303 mo
160.346 124.636 li
160.263 122.22 mo
157.929 124.553 li
157.929 122.22 mo
160.263 124.553 li
160.208 122.081 mo
157.875 124.415 li
157.875 122.081 mo
160.208 124.415 li
160.125 122.248 mo
157.791 124.581 li
157.791 122.248 mo
160.125 124.581 li
160.068 122.109 mo
157.735 124.442 li
157.735 122.109 mo
160.068 124.442 li
159.985 121.553 mo
157.652 123.886 li
157.652 121.553 mo
159.985 123.886 li
159.929 121.553 mo
157.596 123.886 li
157.596 121.553 mo
159.929 123.886 li
159.846 121.915 mo
157.513 124.248 li
157.513 121.915 mo
159.846 124.248 li
159.791 122.359 mo
157.458 124.692 li
157.458 122.359 mo
159.791 124.692 li
159.708 122.359 mo
157.375 124.692 li
157.375 122.359 mo
159.708 124.692 li
159.625 121.942 mo
157.291 124.275 li
157.291 121.942 mo
159.625 124.275 li
159.568 121.72 mo
157.235 124.053 li
157.235 121.72 mo
159.568 124.053 li
159.485 121.553 mo
157.152 123.886 li
157.152 121.553 mo
159.485 123.886 li
159.429 121.386 mo
157.096 123.72 li
157.096 121.386 mo
159.429 123.72 li
159.346 121.359 mo
157.013 123.692 li
157.013 121.359 mo
159.346 123.692 li
159.263 121.415 mo
156.929 123.748 li
156.929 121.415 mo
159.263 123.748 li
159.208 121.359 mo
156.875 123.692 li
156.875 121.359 mo
159.208 123.692 li
159.125 121.136 mo
156.791 123.47 li
156.791 121.136 mo
159.125 123.47 li
159.041 120.915 mo
156.708 123.248 li
156.708 120.915 mo
159.041 123.248 li
158.985 121.025 mo
156.652 123.359 li
156.652 121.025 mo
158.985 123.359 li
158.902 121.081 mo
156.568 123.415 li
156.568 121.081 mo
158.902 123.415 li
158.818 121.165 mo
156.485 123.498 li
156.485 121.165 mo
158.818 123.498 li
158.763 121.165 mo
156.429 123.498 li
156.429 121.165 mo
158.763 123.498 li
158.679 120.942 mo
156.346 123.275 li
156.346 120.942 mo
158.679 123.275 li
158.596 120.775 mo
156.263 123.109 li
156.263 120.775 mo
158.596 123.109 li
158.513 120.775 mo
156.179 123.109 li
156.179 120.775 mo
158.513 123.109 li
158.458 120.748 mo
156.125 123.081 li
156.125 120.748 mo
158.458 123.081 li
158.375 120.581 mo
156.041 122.915 li
156.041 120.581 mo
158.375 122.915 li
158.291 120.47 mo
155.958 122.803 li
155.958 120.47 mo
158.291 122.803 li
158.208 120.636 mo
155.875 122.97 li
155.875 120.636 mo
158.208 122.97 li
158.125 120.415 mo
155.791 122.748 li
155.791 120.415 mo
158.125 122.748 li
158.068 120.025 mo
155.735 122.359 li
155.735 120.025 mo
158.068 122.359 li
157.985 120.192 mo
155.652 122.525 li
155.652 120.192 mo
157.985 122.525 li
157.902 120.275 mo
155.568 122.609 li
155.568 120.275 mo
157.902 122.609 li
157.818 120.165 mo
155.485 122.498 li
155.485 120.165 mo
157.818 122.498 li
157.735 120.081 mo
155.402 122.415 li
155.402 120.081 mo
157.735 122.415 li
157.652 119.748 mo
155.318 122.081 li
155.318 119.748 mo
157.652 122.081 li
157.568 119.803 mo
155.235 122.136 li
155.235 119.803 mo
157.568 122.136 li
157.513 120.303 mo
155.179 122.636 li
155.179 120.303 mo
157.513 122.636 li
157.429 120.053 mo
155.096 122.386 li
155.096 120.053 mo
157.429 122.386 li
157.346 119.609 mo
155.013 121.942 li
155.013 119.609 mo
157.346 121.942 li
157.263 119.553 mo
154.929 121.886 li
154.929 119.553 mo
157.263 121.886 li
157.179 119.442 mo
154.846 121.775 li
154.846 119.442 mo
157.179 121.775 li
157.096 119.303 mo
154.763 121.636 li
154.763 119.303 mo
157.096 121.636 li
157.013 119.498 mo
154.679 121.831 li
154.679 119.498 mo
157.013 121.831 li
156.929 119.72 mo
154.596 122.053 li
154.596 119.72 mo
156.929 122.053 li
156.846 119.609 mo
154.513 121.942 li
154.513 119.609 mo
156.846 121.942 li
156.763 119.192 mo
154.429 121.525 li
154.429 119.192 mo
156.763 121.525 li
156.679 118.97 mo
154.346 121.303 li
154.346 118.97 mo
156.679 121.303 li
156.596 119.053 mo
154.263 121.386 li
154.263 119.053 mo
156.596 121.386 li
156.513 119.109 mo
154.179 121.442 li
154.179 119.109 mo
156.513 121.442 li
156.402 119.053 mo
154.068 121.386 li
154.068 119.053 mo
156.402 121.386 li
156.318 118.942 mo
153.985 121.275 li
153.985 118.942 mo
156.318 121.275 li
156.235 118.692 mo
153.902 121.025 li
153.902 118.692 mo
156.235 121.025 li
156.152 118.609 mo
153.818 120.942 li
153.818 118.609 mo
156.152 120.942 li
156.068 118.665 mo
153.735 120.998 li
153.735 118.665 mo
156.068 120.998 li
155.985 118.748 mo
153.652 121.081 li
153.652 118.748 mo
155.985 121.081 li
155.902 118.72 mo
153.568 121.053 li
153.568 118.72 mo
155.902 121.053 li
@
gsave
55.791 133.303 mo
169.625 133.303 li
169.625 46.8032 li
55.791 46.8032 li
55.791 133.303 li
cp
clp
166.375 127.636 mo
164.041 129.97 li
164.041 127.636 mo
166.375 129.97 li
166.318 127.72 mo
163.985 130.053 li
163.985 127.72 mo
166.318 130.053 li
166.291 127.665 mo
163.958 129.998 li
163.958 127.665 mo
166.291 129.998 li
166.235 127.331 mo
163.902 129.665 li
163.902 127.331 mo
166.235 129.665 li
166.179 127.192 mo
163.846 129.525 li
163.846 127.192 mo
166.179 129.525 li
166.125 127.415 mo
163.791 129.748 li
163.791 127.415 mo
166.125 129.748 li
166.068 127.553 mo
163.735 129.886 li
163.735 127.553 mo
166.068 129.886 li
166.041 127.415 mo
163.708 129.748 li
163.708 127.415 mo
166.041 129.748 li
165.985 127.275 mo
163.652 129.609 li
163.652 127.275 mo
165.985 129.609 li
165.929 127.192 mo
163.596 129.525 li
163.596 127.192 mo
165.929 129.525 li
165.875 127.192 mo
163.541 129.525 li
163.541 127.192 mo
165.875 129.525 li
165.818 127.136 mo
163.485 129.47 li
163.485 127.136 mo
165.818 129.47 li
165.791 127.053 mo
163.458 129.386 li
163.458 127.053 mo
165.791 129.386 li
165.735 126.97 mo
163.402 129.303 li
163.402 126.97 mo
165.735 129.303 li
165.679 126.859 mo
163.346 129.192 li
163.346 126.859 mo
165.679 129.192 li
165.625 126.859 mo
163.291 129.192 li
163.291 126.859 mo
165.625 129.192 li
165.568 126.915 mo
163.235 129.248 li
163.235 126.915 mo
165.568 129.248 li
165.513 126.97 mo
163.179 129.303 li
163.179 126.97 mo
165.513 129.303 li
165.458 126.886 mo
163.125 129.22 li
163.125 126.886 mo
165.458 129.22 li
165.429 126.692 mo
163.096 129.025 li
163.096 126.692 mo
165.429 129.025 li
165.375 126.498 mo
163.041 128.831 li
163.041 126.498 mo
165.375 128.831 li
165.318 126.581 mo
162.985 128.915 li
162.985 126.581 mo
165.318 128.915 li
165.263 126.498 mo
162.929 128.831 li
162.929 126.498 mo
165.263 128.831 li
165.208 126.359 mo
162.875 128.692 li
162.875 126.359 mo
165.208 128.692 li
165.152 126.359 mo
162.818 128.692 li
162.818 126.359 mo
165.152 128.692 li
165.096 126.275 mo
162.763 128.609 li
162.763 126.275 mo
165.096 128.609 li
165.041 126.248 mo
162.708 128.581 li
162.708 126.248 mo
165.041 128.581 li
164.985 126.136 mo
162.652 128.47 li
162.652 126.136 mo
164.985 128.47 li
164.929 126.192 mo
162.596 128.525 li
162.596 126.192 mo
164.929 128.525 li
164.902 126.165 mo
162.568 128.498 li
162.568 126.165 mo
164.902 128.498 li
164.846 126.053 mo
162.513 128.386 li
162.513 126.053 mo
164.846 128.386 li
164.791 125.97 mo
162.458 128.303 li
162.458 125.97 mo
164.791 128.303 li
164.735 125.915 mo
162.402 128.248 li
162.402 125.915 mo
164.735 128.248 li
164.679 125.886 mo
162.346 128.22 li
162.346 125.886 mo
164.679 128.22 li
164.625 125.775 mo
162.291 128.109 li
162.291 125.775 mo
164.625 128.109 li
164.568 125.859 mo
162.235 128.192 li
162.235 125.859 mo
164.568 128.192 li
164.513 125.831 mo
162.179 128.165 li
162.179 125.831 mo
164.513 128.165 li
164.458 125.803 mo
162.125 128.136 li
162.125 125.803 mo
164.458 128.136 li
164.402 125.859 mo
162.068 128.192 li
162.068 125.859 mo
164.402 128.192 li
164.346 125.665 mo
162.013 127.998 li
162.013 125.665 mo
164.346 127.998 li
164.291 125.553 mo
161.958 127.886 li
161.958 125.553 mo
164.291 127.886 li
164.235 125.665 mo
161.902 127.998 li
161.902 125.665 mo
164.235 127.998 li
164.179 125.525 mo
161.846 127.859 li
161.846 125.525 mo
164.179 127.859 li
164.125 125.415 mo
161.791 127.748 li
161.791 125.415 mo
164.125 127.748 li
164.068 125.248 mo
161.735 127.581 li
161.735 125.248 mo
164.068 127.581 li
164.013 125.331 mo
161.679 127.665 li
161.679 125.331 mo
164.013 127.665 li
163.958 125.553 mo
161.625 127.886 li
161.625 125.553 mo
163.958 127.886 li
163.902 125.442 mo
161.568 127.775 li
161.568 125.442 mo
163.902 127.775 li
163.846 125.442 mo
161.513 127.775 li
161.513 125.442 mo
163.846 127.775 li
163.791 125.47 mo
161.458 127.803 li
161.458 125.47 mo
163.791 127.803 li
163.735 125.386 mo
161.402 127.72 li
161.402 125.386 mo
163.735 127.72 li
163.679 125.22 mo
161.346 127.553 li
161.346 125.22 mo
163.679 127.553 li
163.625 125.192 mo
161.291 127.525 li
161.291 125.192 mo
163.625 127.525 li
163.568 124.942 mo
161.235 127.275 li
161.235 124.942 mo
163.568 127.275 li
163.485 124.581 mo
161.152 126.915 li
161.152 124.581 mo
163.485 126.915 li
163.429 124.665 mo
161.096 126.998 li
161.096 124.665 mo
163.429 126.998 li
163.375 124.915 mo
161.041 127.248 li
161.041 124.915 mo
163.375 127.248 li
163.318 124.942 mo
160.985 127.275 li
160.985 124.942 mo
163.318 127.275 li
163.263 124.72 mo
160.929 127.053 li
160.929 124.72 mo
163.263 127.053 li
163.208 124.525 mo
160.875 126.859 li
160.875 124.525 mo
163.208 126.859 li
163.152 124.525 mo
160.818 126.859 li
160.818 124.525 mo
163.152 126.859 li
163.096 124.581 mo
160.763 126.915 li
160.763 124.581 mo
163.096 126.915 li
@
grestore
gsave
59.9854 137.053 mo
173.818 137.053 li
173.818 47.1089 li
59.9854 47.1089 li
59.9854 137.053 li
cp
clp
0 lj
158.818 125.498 mo
160.485 123.303 li
158.818 121.109 li
157.152 123.303 li
158.818 125.498 li
158.818 125.498 li
cp
158.735 125.72 mo
160.402 123.525 li
158.735 121.331 li
157.068 123.525 li
158.735 125.72 li
158.735 125.72 li
cp
158.652 125.748 mo
160.318 123.553 li
158.652 121.359 li
156.985 123.553 li
158.652 125.748 li
158.652 125.748 li
cp
158.568 125.636 mo
160.235 123.442 li
158.568 121.248 li
156.902 123.442 li
158.568 125.636 li
158.568 125.636 li
cp
158.458 125.415 mo
160.125 123.22 li
158.458 121.025 li
156.791 123.22 li
158.458 125.415 li
158.458 125.415 li
cp
158.375 125.165 mo
160.041 122.97 li
158.375 120.775 li
156.708 122.97 li
158.375 125.165 li
158.375 125.165 li
cp
158.291 125.248 mo
159.958 123.053 li
158.291 120.859 li
156.625 123.053 li
158.291 125.248 li
158.291 125.248 li
cp
158.208 125.359 mo
159.875 123.165 li
158.208 120.97 li
156.541 123.165 li
158.208 125.359 li
158.208 125.359 li
cp
158.096 125.303 mo
159.763 123.109 li
158.096 120.915 li
156.429 123.109 li
158.096 125.303 li
158.096 125.303 li
cp
158.013 125.165 mo
159.679 122.97 li
158.013 120.775 li
156.346 122.97 li
158.013 125.165 li
158.013 125.165 li
cp
157.902 125.053 mo
159.568 122.859 li
157.902 120.665 li
156.235 122.859 li
157.902 125.053 li
157.902 125.053 li
cp
157.818 124.942 mo
159.485 122.748 li
157.818 120.553 li
156.152 122.748 li
157.818 124.942 li
157.818 124.942 li
cp
157.735 124.886 mo
159.402 122.692 li
157.735 120.498 li
156.068 122.692 li
157.735 124.886 li
157.735 124.886 li
cp
157.625 125.081 mo
159.291 122.886 li
157.625 120.692 li
155.958 122.886 li
157.625 125.081 li
157.625 125.081 li
cp
157.541 125.081 mo
159.208 122.886 li
157.541 120.692 li
155.875 122.886 li
157.541 125.081 li
157.541 125.081 li
cp
157.429 124.748 mo
159.096 122.553 li
157.429 120.359 li
155.763 122.553 li
157.429 124.748 li
157.429 124.748 li
cp
157.346 124.525 mo
159.013 122.331 li
157.346 120.136 li
155.679 122.331 li
157.346 124.525 li
157.346 124.525 li
cp
157.235 124.303 mo
158.902 122.109 li
157.235 119.915 li
155.568 122.109 li
157.235 124.303 li
157.235 124.303 li
cp
157.152 124.081 mo
158.818 121.886 li
157.152 119.692 li
155.485 121.886 li
157.152 124.081 li
157.152 124.081 li
cp
157.041 124.109 mo
158.708 121.915 li
157.041 119.72 li
155.375 121.915 li
157.041 124.109 li
157.041 124.109 li
cp
156.958 124.22 mo
158.625 122.025 li
156.958 119.831 li
155.291 122.025 li
156.958 124.22 li
156.958 124.22 li
cp
156.846 124.303 mo
158.513 122.109 li
156.846 119.915 li
155.179 122.109 li
156.846 124.303 li
156.846 124.303 li
cp
156.763 123.97 mo
158.429 121.775 li
156.763 119.581 li
155.096 121.775 li
156.763 123.97 li
156.763 123.97 li
cp
156.652 123.942 mo
158.318 121.748 li
156.652 119.553 li
154.985 121.748 li
156.652 123.942 li
156.652 123.942 li
cp
156.541 123.97 mo
158.208 121.775 li
156.541 119.581 li
154.875 121.775 li
156.541 123.97 li
156.541 123.97 li
cp
156.458 123.831 mo
158.125 121.636 li
156.458 119.442 li
154.791 121.636 li
156.458 123.831 li
156.458 123.831 li
cp
156.346 123.97 mo
158.013 121.775 li
156.346 119.581 li
154.679 121.775 li
156.346 123.97 li
156.346 123.97 li
cp
156.235 124.025 mo
157.902 121.831 li
156.235 119.636 li
154.568 121.831 li
156.235 124.025 li
156.235 124.025 li
cp
156.152 123.692 mo
157.818 121.498 li
156.152 119.303 li
154.485 121.498 li
156.152 123.692 li
156.152 123.692 li
cp
156.041 123.553 mo
157.708 121.359 li
156.041 119.165 li
154.375 121.359 li
156.041 123.553 li
156.041 123.553 li
cp
155.929 123.525 mo
157.596 121.331 li
155.929 119.136 li
154.263 121.331 li
155.929 123.525 li
155.929 123.525 li
cp
155.818 123.386 mo
157.485 121.192 li
155.818 118.998 li
154.152 121.192 li
155.818 123.386 li
155.818 123.386 li
cp
155.735 123.053 mo
157.402 120.859 li
155.735 118.665 li
154.068 120.859 li
155.735 123.053 li
155.735 123.053 li
cp
155.625 123.248 mo
157.291 121.053 li
155.625 118.859 li
153.958 121.053 li
155.625 123.248 li
155.625 123.248 li
cp
155.513 123.415 mo
157.179 121.22 li
155.513 119.025 li
153.846 121.22 li
155.513 123.415 li
155.513 123.415 li
cp
155.402 123.192 mo
157.068 120.998 li
155.402 118.803 li
153.735 120.998 li
155.402 123.192 li
155.402 123.192 li
cp
155.291 123.025 mo
156.958 120.831 li
155.291 118.636 li
153.625 120.831 li
155.291 123.025 li
155.291 123.025 li
cp
155.179 122.775 mo
156.846 120.581 li
155.179 118.386 li
153.513 120.581 li
155.179 122.775 li
155.179 122.775 li
cp
155.068 122.775 mo
156.735 120.581 li
155.068 118.386 li
153.402 120.581 li
155.068 122.775 li
155.068 122.775 li
cp
154.958 122.775 mo
156.625 120.581 li
154.958 118.386 li
153.291 120.581 li
154.958 122.775 li
154.958 122.775 li
cp
154.846 122.831 mo
156.513 120.636 li
154.846 118.442 li
153.179 120.636 li
154.846 122.831 li
154.846 122.831 li
cp
154.735 122.525 mo
156.402 120.331 li
154.735 118.136 li
153.068 120.331 li
154.735 122.525 li
154.735 122.525 li
cp
154.625 122.303 mo
156.291 120.109 li
154.625 117.915 li
152.958 120.109 li
154.625 122.303 li
154.625 122.303 li
cp
154.513 122.192 mo
156.179 119.998 li
154.513 117.803 li
152.846 119.998 li
154.513 122.192 li
154.513 122.192 li
cp
154.402 122.136 mo
156.068 119.942 li
154.402 117.748 li
152.735 119.942 li
154.402 122.136 li
154.402 122.136 li
cp
154.291 122.359 mo
155.958 120.165 li
154.291 117.97 li
152.625 120.165 li
154.291 122.359 li
154.291 122.359 li
cp
154.179 122.47 mo
155.846 120.275 li
154.179 118.081 li
152.513 120.275 li
154.179 122.47 li
154.179 122.47 li
cp
154.041 122.136 mo
155.708 119.942 li
154.041 117.748 li
152.375 119.942 li
154.041 122.136 li
154.041 122.136 li
cp
153.929 121.859 mo
155.596 119.665 li
153.929 117.47 li
152.263 119.665 li
153.929 121.859 li
153.929 121.859 li
cp
153.818 121.803 mo
155.485 119.609 li
153.818 117.415 li
152.152 119.609 li
153.818 121.803 li
153.818 121.803 li
cp
153.708 121.692 mo
155.375 119.498 li
153.708 117.303 li
152.041 119.498 li
153.708 121.692 li
153.708 121.692 li
cp
153.568 121.886 mo
155.235 119.692 li
153.568 117.498 li
151.902 119.692 li
153.568 121.886 li
153.568 121.886 li
cp
153.458 121.775 mo
155.125 119.581 li
153.458 117.386 li
151.791 119.581 li
153.458 121.775 li
153.458 121.775 li
cp
153.346 121.498 mo
155.013 119.303 li
153.346 117.109 li
151.679 119.303 li
153.346 121.498 li
153.346 121.498 li
cp
153.208 121.415 mo
154.875 119.22 li
153.208 117.025 li
151.541 119.22 li
153.208 121.415 li
153.208 121.415 li
cp
153.096 121.525 mo
154.763 119.331 li
153.096 117.136 li
151.429 119.331 li
153.096 121.525 li
153.096 121.525 li
cp
152.985 121.748 mo
154.652 119.553 li
152.985 117.359 li
151.318 119.553 li
152.985 121.748 li
152.985 121.748 li
cp
152.846 121.136 mo
154.513 118.942 li
152.846 116.748 li
151.179 118.942 li
152.846 121.136 li
152.846 121.136 li
cp
152.735 120.748 mo
154.402 118.553 li
152.735 116.359 li
151.068 118.553 li
152.735 120.748 li
152.735 120.748 li
cp
152.596 120.775 mo
154.263 118.581 li
152.596 116.386 li
150.929 118.581 li
152.596 120.775 li
152.596 120.775 li
cp
152.485 120.636 mo
154.152 118.442 li
152.485 116.248 li
150.818 118.442 li
152.485 120.636 li
152.485 120.636 li
cp
152.346 120.609 mo
154.013 118.415 li
152.346 116.22 li
150.679 118.415 li
152.346 120.609 li
152.346 120.609 li
cp
152.208 120.72 mo
153.875 118.525 li
152.208 116.331 li
150.541 118.525 li
152.208 120.72 li
152.208 120.72 li
cp
152.096 120.581 mo
153.763 118.386 li
152.096 116.192 li
150.429 118.386 li
152.096 120.581 li
152.096 120.581 li
cp
151.958 120.331 mo
153.625 118.136 li
151.958 115.942 li
150.291 118.136 li
151.958 120.331 li
151.958 120.331 li
cp
151.818 120.386 mo
153.485 118.192 li
151.818 115.998 li
150.152 118.192 li
151.818 120.386 li
151.818 120.386 li
cp
151.679 120.331 mo
153.346 118.136 li
151.679 115.942 li
150.013 118.136 li
151.679 120.331 li
151.679 120.331 li
cp
151.568 120.136 mo
153.235 117.942 li
151.568 115.748 li
149.902 117.942 li
151.568 120.136 li
151.568 120.136 li
cp
151.429 120.303 mo
153.096 118.109 li
151.429 115.915 li
149.763 118.109 li
151.429 120.303 li
151.429 120.303 li
cp
151.291 120.136 mo
152.958 117.942 li
151.291 115.748 li
149.625 117.942 li
151.291 120.136 li
151.291 120.136 li
cp
151.152 119.775 mo
152.818 117.581 li
151.152 115.386 li
149.485 117.581 li
151.152 119.775 li
151.152 119.775 li
cp
151.013 119.553 mo
152.679 117.359 li
151.013 115.165 li
149.346 117.359 li
151.013 119.553 li
151.013 119.553 li
cp
150.875 119.636 mo
152.541 117.442 li
150.875 115.248 li
149.208 117.442 li
150.875 119.636 li
150.875 119.636 li
cp
150.735 119.692 mo
152.402 117.498 li
150.735 115.303 li
149.068 117.498 li
150.735 119.692 li
150.735 119.692 li
cp
150.596 119.081 mo
152.263 116.886 li
150.596 114.692 li
148.929 116.886 li
150.596 119.081 li
150.596 119.081 li
cp
150.458 118.942 mo
152.125 116.748 li
150.458 114.553 li
148.791 116.748 li
150.458 118.942 li
150.458 118.942 li
cp
150.318 119.192 mo
151.985 116.998 li
150.318 114.803 li
148.652 116.998 li
150.318 119.192 li
150.318 119.192 li
cp
150.152 119.109 mo
151.818 116.915 li
150.152 114.72 li
148.485 116.915 li
150.152 119.109 li
150.152 119.109 li
cp
150.013 118.998 mo
151.679 116.803 li
150.013 114.609 li
148.346 116.803 li
150.013 118.998 li
150.013 118.998 li
cp
149.875 119.053 mo
151.541 116.859 li
149.875 114.665 li
148.208 116.859 li
149.875 119.053 li
149.875 119.053 li
cp
149.735 118.915 mo
151.402 116.72 li
149.735 114.525 li
148.068 116.72 li
149.735 118.915 li
149.735 118.915 li
cp
149.568 118.553 mo
151.235 116.359 li
149.568 114.165 li
147.902 116.359 li
149.568 118.553 li
149.568 118.553 li
cp
149.429 118.275 mo
151.096 116.081 li
149.429 113.886 li
147.763 116.081 li
149.429 118.275 li
149.429 118.275 li
cp
149.263 117.998 mo
150.929 115.803 li
149.263 113.609 li
147.596 115.803 li
149.263 117.998 li
149.263 117.998 li
cp
149.125 117.97 mo
150.791 115.775 li
149.125 113.581 li
147.458 115.775 li
149.125 117.97 li
149.125 117.97 li
cp
148.958 118.136 mo
150.625 115.942 li
148.958 113.748 li
147.291 115.942 li
148.958 118.136 li
148.958 118.136 li
cp
148.818 118.109 mo
150.485 115.915 li
148.818 113.72 li
147.152 115.915 li
148.818 118.109 li
148.818 118.109 li
cp
148.652 117.775 mo
150.318 115.581 li
148.652 113.386 li
146.985 115.581 li
148.652 117.775 li
148.652 117.775 li
cp
148.485 117.47 mo
150.152 115.275 li
148.485 113.081 li
146.818 115.275 li
148.485 117.47 li
148.485 117.47 li
cp
148.346 117.609 mo
150.013 115.415 li
148.346 113.22 li
146.679 115.415 li
148.346 117.609 li
148.346 117.609 li
cp
148.179 117.47 mo
149.846 115.275 li
148.179 113.081 li
146.513 115.275 li
148.179 117.47 li
148.179 117.47 li
cp
148.013 117.331 mo
149.679 115.136 li
148.013 112.942 li
146.346 115.136 li
148.013 117.331 li
148.013 117.331 li
cp
147.846 117.303 mo
149.513 115.109 li
147.846 112.915 li
146.179 115.109 li
147.846 117.303 li
147.846 117.303 li
cp
147.679 117.275 mo
149.346 115.081 li
147.679 112.886 li
146.013 115.081 li
147.679 117.275 li
147.679 117.275 li
cp
147.513 117.303 mo
149.179 115.109 li
147.513 112.915 li
145.846 115.109 li
147.513 117.303 li
147.513 117.303 li
cp
147.346 116.859 mo
149.013 114.665 li
147.346 112.47 li
145.679 114.665 li
147.346 116.859 li
147.346 116.859 li
cp
147.179 116.998 mo
148.846 114.803 li
147.179 112.609 li
145.513 114.803 li
147.179 116.998 li
147.179 116.998 li
cp
147.013 117.136 mo
148.679 114.942 li
147.013 112.748 li
145.346 114.942 li
147.013 117.136 li
147.013 117.136 li
cp
146.818 116.553 mo
148.485 114.359 li
146.818 112.165 li
145.152 114.359 li
146.818 116.553 li
146.818 116.553 li
cp
146.652 116.525 mo
148.318 114.331 li
146.652 112.136 li
144.985 114.331 li
146.652 116.525 li
146.652 116.525 li
cp
146.485 116.22 mo
148.152 114.025 li
146.485 111.831 li
144.818 114.025 li
146.485 116.22 li
146.485 116.22 li
cp
146.291 116.136 mo
147.958 113.942 li
146.291 111.748 li
144.625 113.942 li
146.291 116.136 li
146.291 116.136 li
cp
146.125 116.136 mo
147.791 113.942 li
146.125 111.748 li
144.458 113.942 li
146.125 116.136 li
146.125 116.136 li
cp
145.929 116.053 mo
147.596 113.859 li
145.929 111.665 li
144.263 113.859 li
145.929 116.053 li
145.929 116.053 li
cp
145.735 115.581 mo
147.402 113.386 li
145.735 111.192 li
144.068 113.386 li
145.735 115.581 li
145.735 115.581 li
cp
145.568 115.025 mo
147.235 112.831 li
145.568 110.636 li
143.902 112.831 li
145.568 115.025 li
145.568 115.025 li
cp
145.375 115.136 mo
147.041 112.942 li
145.375 110.748 li
143.708 112.942 li
145.375 115.136 li
145.375 115.136 li
cp
145.179 115.359 mo
146.846 113.165 li
145.179 110.97 li
143.513 113.165 li
145.179 115.359 li
145.179 115.359 li
cp
144.985 115.025 mo
146.652 112.831 li
144.985 110.636 li
143.318 112.831 li
144.985 115.025 li
144.985 115.025 li
cp
144.791 114.748 mo
146.458 112.553 li
144.791 110.359 li
143.125 112.553 li
144.791 114.748 li
144.791 114.748 li
cp
144.596 114.748 mo
146.263 112.553 li
144.596 110.359 li
142.929 112.553 li
144.596 114.748 li
144.596 114.748 li
cp
144.402 114.248 mo
146.068 112.053 li
144.402 109.859 li
142.735 112.053 li
144.402 114.248 li
144.402 114.248 li
cp
144.208 114.053 mo
145.875 111.859 li
144.208 109.665 li
142.541 111.859 li
144.208 114.053 li
144.208 114.053 li
cp
143.985 114.053 mo
145.652 111.859 li
143.985 109.665 li
142.318 111.859 li
143.985 114.053 li
143.985 114.053 li
cp
143.791 114.053 mo
145.458 111.859 li
143.791 109.665 li
142.125 111.859 li
143.791 114.053 li
143.791 114.053 li
cp
143.568 113.692 mo
145.235 111.498 li
143.568 109.303 li
141.902 111.498 li
143.568 113.692 li
143.568 113.692 li
cp
143.375 113.525 mo
145.041 111.331 li
143.375 109.136 li
141.708 111.331 li
143.375 113.525 li
143.375 113.525 li
cp
143.152 113.053 mo
144.818 110.859 li
143.152 108.665 li
141.485 110.859 li
143.152 113.053 li
143.152 113.053 li
cp
142.929 112.915 mo
144.596 110.72 li
142.929 108.525 li
141.263 110.72 li
142.929 112.915 li
142.929 112.915 li
cp
142.708 112.886 mo
144.375 110.692 li
142.708 108.498 li
141.041 110.692 li
142.708 112.886 li
142.708 112.886 li
cp
142.485 112.831 mo
144.152 110.636 li
142.485 108.442 li
140.818 110.636 li
142.485 112.831 li
142.485 112.831 li
cp
142.263 112.915 mo
143.929 110.72 li
142.263 108.525 li
140.596 110.72 li
142.263 112.915 li
142.263 112.915 li
cp
142.041 112.359 mo
143.708 110.165 li
142.041 107.97 li
140.375 110.165 li
142.041 112.359 li
142.041 112.359 li
cp
141.818 111.525 mo
143.485 109.331 li
141.818 107.136 li
140.152 109.331 li
141.818 111.525 li
141.818 111.525 li
cp
141.568 111.081 mo
143.235 108.886 li
141.568 106.692 li
139.902 108.886 li
141.568 111.081 li
141.568 111.081 li
cp
141.346 111.303 mo
143.013 109.109 li
141.346 106.915 li
139.679 109.109 li
141.346 111.303 li
141.346 111.303 li
cp
141.096 111.192 mo
142.763 108.998 li
141.096 106.803 li
139.429 108.998 li
141.096 111.192 li
141.096 111.192 li
cp
140.875 111.053 mo
142.541 108.859 li
140.875 106.665 li
139.208 108.859 li
140.875 111.053 li
140.875 111.053 li
cp
140.625 111.248 mo
142.291 109.053 li
140.625 106.859 li
138.958 109.053 li
140.625 111.248 li
140.625 111.248 li
cp
140.375 110.748 mo
142.041 108.553 li
140.375 106.359 li
138.708 108.553 li
140.375 110.748 li
140.375 110.748 li
cp
140.125 110.053 mo
141.791 107.859 li
140.125 105.665 li
138.458 107.859 li
140.125 110.053 li
140.125 110.053 li
cp
139.846 109.581 mo
141.513 107.386 li
139.846 105.192 li
138.179 107.386 li
139.846 109.581 li
139.846 109.581 li
cp
139.596 108.498 mo
141.263 106.303 li
139.596 104.109 li
137.929 106.303 li
139.596 108.498 li
139.596 108.498 li
cp
139.346 108.053 mo
141.013 105.859 li
139.346 103.665 li
137.679 105.859 li
139.346 108.053 li
139.346 108.053 li
cp
139.068 108.442 mo
140.735 106.248 li
139.068 104.053 li
137.402 106.248 li
139.068 108.442 li
139.068 108.442 li
cp
138.791 108.442 mo
140.458 106.248 li
138.791 104.053 li
137.125 106.248 li
138.791 108.442 li
138.791 108.442 li
cp
138.513 108.248 mo
140.179 106.053 li
138.513 103.859 li
136.846 106.053 li
138.513 108.248 li
138.513 108.248 li
cp
138.235 107.609 mo
139.902 105.415 li
138.235 103.22 li
136.568 105.415 li
138.235 107.609 li
138.235 107.609 li
cp
137.958 107.109 mo
139.625 104.915 li
137.958 102.72 li
136.291 104.915 li
137.958 107.109 li
137.958 107.109 li
cp
137.652 106.775 mo
139.318 104.581 li
137.652 102.386 li
135.985 104.581 li
137.652 106.775 li
137.652 106.775 li
cp
137.375 106.525 mo
139.041 104.331 li
137.375 102.136 li
135.708 104.331 li
137.375 106.525 li
137.375 106.525 li
cp
137.068 106.165 mo
138.735 103.97 li
137.068 101.775 li
135.402 103.97 li
137.068 106.165 li
137.068 106.165 li
cp
136.763 105.775 mo
138.429 103.581 li
136.763 101.386 li
135.096 103.581 li
136.763 105.775 li
136.763 105.775 li
cp
136.458 105.303 mo
138.125 103.109 li
136.458 100.915 li
134.791 103.109 li
136.458 105.303 li
136.458 105.303 li
cp
136.125 104.609 mo
137.791 102.415 li
136.125 100.22 li
134.458 102.415 li
136.125 104.609 li
136.125 104.609 li
cp
135.818 104.525 mo
137.485 102.331 li
135.818 100.136 li
134.152 102.331 li
135.818 104.525 li
135.818 104.525 li
cp
135.485 104.665 mo
137.152 102.47 li
135.485 100.275 li
133.818 102.47 li
135.485 104.665 li
135.485 104.665 li
cp
135.152 103.609 mo
136.818 101.415 li
135.152 99.2202 li
133.485 101.415 li
135.152 103.609 li
135.152 103.609 li
cp
134.818 102.636 mo
136.485 100.442 li
134.818 98.2476 li
133.152 100.442 li
134.818 102.636 li
134.818 102.636 li
cp
134.458 102.415 mo
136.125 100.22 li
134.458 98.0249 li
132.791 100.22 li
134.458 102.415 li
134.458 102.415 li
cp
134.125 101.525 mo
135.791 99.3306 li
134.125 97.1362 li
132.458 99.3306 li
134.125 101.525 li
134.125 101.525 li
cp
133.763 100.386 mo
135.429 98.1919 li
133.763 95.9976 li
132.096 98.1919 li
133.763 100.386 li
133.763 100.386 li
cp
133.402 100.359 mo
135.068 98.1646 li
133.402 95.9702 li
131.735 98.1646 li
133.402 100.359 li
133.402 100.359 li
cp
133.013 99.9976 mo
134.679 97.8032 li
133.013 95.6089 li
131.346 97.8032 li
133.013 99.9976 li
133.013 99.9976 li
cp
132.625 99.0249 mo
134.291 96.8306 li
132.625 94.6362 li
130.958 96.8306 li
132.625 99.0249 li
132.625 99.0249 li
cp
132.235 98.6646 mo
133.902 96.4702 li
132.235 94.2749 li
130.568 96.4702 li
132.235 98.6646 li
132.235 98.6646 li
cp
131.846 98.4976 mo
133.513 96.3032 li
131.846 94.1089 li
130.179 96.3032 li
131.846 98.4976 li
131.846 98.4976 li
cp
131.429 98.5249 mo
133.096 96.3306 li
131.429 94.1362 li
129.763 96.3306 li
131.429 98.5249 li
131.429 98.5249 li
cp
131.013 97.4976 mo
132.679 95.3032 li
131.013 93.1089 li
129.346 95.3032 li
131.013 97.4976 li
131.013 97.4976 li
cp
130.568 96.1362 mo
132.235 93.9419 li
130.568 91.7476 li
128.902 93.9419 li
130.568 96.1362 li
130.568 96.1362 li
cp
130.152 95.8032 mo
131.818 93.6089 li
130.152 91.4146 li
128.485 93.6089 li
130.152 95.8032 li
130.152 95.8032 li
cp
129.679 95.9419 mo
131.346 93.7476 li
129.679 91.5532 li
128.013 93.7476 li
129.679 95.9419 li
129.679 95.9419 li
cp
129.235 95.0532 mo
130.902 92.8589 li
129.235 90.6646 li
127.568 92.8589 li
129.235 95.0532 li
129.235 95.0532 li
cp
128.735 94.3589 mo
130.402 92.1646 li
128.735 89.9702 li
127.068 92.1646 li
128.735 94.3589 li
128.735 94.3589 li
cp
128.263 93.3032 mo
129.929 91.1089 li
128.263 88.9146 li
126.596 91.1089 li
128.263 93.3032 li
128.263 93.3032 li
cp
127.763 91.4702 mo
129.429 89.2749 li
127.763 87.0806 li
126.096 89.2749 li
127.763 91.4702 li
127.763 91.4702 li
cp
127.235 90.6646 mo
128.902 88.4702 li
127.235 86.2749 li
125.568 88.4702 li
127.235 90.6646 li
127.235 90.6646 li
cp
126.708 89.6646 mo
128.375 87.4702 li
126.708 85.2754 li
125.041 87.4702 li
126.708 89.6646 li
126.708 89.6646 li
cp
126.152 89.4976 mo
127.818 87.3032 li
126.152 85.1089 li
124.485 87.3032 li
126.152 89.4976 li
126.152 89.4976 li
cp
125.596 89.6362 mo
127.263 87.4419 li
125.596 85.2476 li
123.929 87.4419 li
125.596 89.6362 li
125.596 89.6362 li
cp
125.013 88.4419 mo
126.679 86.2476 li
125.013 84.0532 li
123.346 86.2476 li
125.013 88.4419 li
125.013 88.4419 li
cp
124.402 87.3306 mo
126.068 85.1367 li
124.402 82.9419 li
122.735 85.1367 li
124.402 87.3306 li
124.402 87.3306 li
cp
123.791 86.4419 mo
125.458 84.2476 li
123.791 82.0532 li
122.125 84.2476 li
123.791 86.4419 li
123.791 86.4419 li
cp
123.125 85.4976 mo
124.791 83.3032 li
123.125 81.1089 li
121.458 83.3032 li
123.125 85.4976 li
123.125 85.4976 li
cp
122.458 84.7197 mo
124.125 82.5254 li
122.458 80.3311 li
120.791 82.5254 li
122.458 84.7197 li
122.458 84.7197 li
cp
121.763 84.4419 mo
123.429 82.2476 li
121.763 80.0532 li
120.096 82.2476 li
121.763 84.4419 li
121.763 84.4419 li
cp
121.041 82.7476 mo
122.708 80.5532 li
121.041 78.3589 li
119.375 80.5532 li
121.041 82.7476 li
121.041 82.7476 li
cp
120.263 81.3311 mo
121.929 79.1367 li
120.263 76.9419 li
118.596 79.1367 li
120.263 81.3311 li
120.263 81.3311 li
cp
119.485 80.8311 mo
121.152 78.6367 li
119.485 76.4419 li
117.818 78.6367 li
119.485 80.8311 li
119.485 80.8311 li
cp
118.652 79.0532 mo
120.318 76.8589 li
118.652 74.6646 li
116.985 76.8589 li
118.652 79.0532 li
118.652 79.0532 li
cp
117.791 77.5254 mo
119.458 75.3311 li
117.791 73.1367 li
116.125 75.3311 li
117.791 77.5254 li
117.791 77.5254 li
cp
116.875 75.9146 mo
118.541 73.7197 li
116.875 71.5254 li
115.208 73.7197 li
116.875 75.9146 li
116.875 75.9146 li
cp
115.902 73.4697 mo
117.568 71.2754 li
115.902 69.0811 li
114.235 71.2754 li
115.902 73.4697 li
115.902 73.4697 li
cp
114.875 72.6367 mo
116.541 70.4419 li
114.875 68.2476 li
113.208 70.4419 li
114.875 72.6367 li
114.875 72.6367 li
cp
113.791 68.6919 mo
115.458 66.4976 li
113.791 64.3032 li
112.125 66.4976 li
113.791 68.6919 li
113.791 68.6919 li
cp
112.652 65.7197 mo
114.318 63.5254 li
112.652 61.3311 li
110.985 63.5254 li
112.652 65.7197 li
112.652 65.7197 li
cp
111.429 65.1367 mo
113.096 62.9419 li
111.429 60.7476 li
109.763 62.9419 li
111.429 65.1367 li
111.429 65.1367 li
cp
110.096 62.0254 mo
111.763 59.8311 li
110.096 57.6367 li
108.43 59.8311 li
110.096 62.0254 li
110.096 62.0254 li
cp
108.68 58.5532 mo
110.346 56.3589 li
108.68 54.1646 li
107.013 56.3589 li
108.68 58.5532 li
108.68 58.5532 li
cp
107.124 56.3032 mo
108.791 54.1089 li
107.124 51.9146 li
105.458 54.1089 li
107.124 56.3032 li
107.124 56.3032 li
cp
105.43 54.8867 mo
107.096 52.6919 li
105.43 50.4976 li
103.763 52.6919 li
105.43 54.8867 li
105.43 54.8867 li
cp
103.541 53.6919 mo
105.208 51.4976 li
103.541 49.3032 li
101.874 51.4976 li
103.541 53.6919 li
103.541 53.6919 li
cp
101.458 55.6646 mo
103.124 53.4697 li
101.458 51.2754 li
99.791 53.4697 li
101.458 55.6646 li
101.458 55.6646 li
cp
99.0684 58.9697 mo
100.735 56.7754 li
99.0684 54.5811 li
97.4019 56.7754 li
99.0684 58.9697 li
99.0684 58.9697 li
cp
96.3184 60.6089 mo
97.9854 58.4146 li
96.3184 56.2197 li
94.6519 58.4146 li
96.3184 60.6089 li
96.3184 60.6089 li
cp
93.0684 64.6367 mo
94.7354 62.4419 li
93.0684 60.2476 li
91.4019 62.4419 li
93.0684 64.6367 li
93.0684 64.6367 li
cp
89.0962 68.1919 mo
90.7632 65.9976 li
89.0962 63.8032 li
87.4297 65.9976 li
89.0962 68.1919 li
89.0962 68.1919 li
cp
83.9575 71.0811 mo
85.624 68.8867 li
83.9575 66.6919 li
82.291 68.8867 li
83.9575 71.0811 li
83.9575 71.0811 li
cp
76.7354 79.9976 mo
78.4019 77.8032 li
76.7354 75.6089 li
75.0684 77.8032 li
76.7354 79.9976 li
76.7354 79.9976 li
cp
64.374 86.6362 mo
66.041 84.4419 li
64.374 82.2476 li
62.7075 84.4419 li
64.374 86.6362 li
64.374 86.6362 li
cp
.627649 3.05176e-5 1 3.05176e-5 cmyk
@
169.402 134.831 mo
171.068 132.636 li
169.402 130.442 li
167.735 132.636 li
169.402 134.831 li
169.402 134.831 li
cp
169.346 134.72 mo
171.013 132.525 li
169.346 130.331 li
167.679 132.525 li
169.346 134.72 li
169.346 134.72 li
cp
169.318 134.665 mo
170.985 132.47 li
169.318 130.275 li
167.652 132.47 li
169.318 134.665 li
169.318 134.665 li
cp
169.263 134.636 mo
170.929 132.442 li
169.263 130.248 li
167.596 132.442 li
169.263 134.636 li
169.263 134.636 li
cp
169.208 134.47 mo
170.875 132.275 li
169.208 130.081 li
167.541 132.275 li
169.208 134.47 li
169.208 134.47 li
cp
169.152 134.442 mo
170.818 132.248 li
169.152 130.053 li
167.485 132.248 li
169.152 134.442 li
169.152 134.442 li
cp
169.096 134.415 mo
170.763 132.22 li
169.096 130.025 li
167.429 132.22 li
169.096 134.415 li
169.096 134.415 li
cp
169.068 134.303 mo
170.735 132.109 li
169.068 129.915 li
167.402 132.109 li
169.068 134.303 li
169.068 134.303 li
cp
169.013 134.415 mo
170.679 132.22 li
169.013 130.025 li
167.346 132.22 li
169.013 134.415 li
169.013 134.415 li
cp
168.958 134.331 mo
170.625 132.136 li
168.958 129.942 li
167.291 132.136 li
168.958 134.331 li
168.958 134.331 li
cp
168.902 134.165 mo
170.568 131.97 li
168.902 129.775 li
167.235 131.97 li
168.902 134.165 li
168.902 134.165 li
cp
168.846 134.303 mo
170.513 132.109 li
168.846 129.915 li
167.179 132.109 li
168.846 134.303 li
168.846 134.303 li
cp
168.818 134.275 mo
170.485 132.081 li
168.818 129.886 li
167.152 132.081 li
168.818 134.275 li
168.818 134.275 li
cp
168.763 134.248 mo
170.429 132.053 li
168.763 129.859 li
167.096 132.053 li
168.763 134.248 li
168.763 134.248 li
cp
168.708 134.136 mo
170.375 131.942 li
168.708 129.748 li
167.041 131.942 li
168.708 134.136 li
168.708 134.136 li
cp
168.652 133.859 mo
170.318 131.665 li
168.652 129.47 li
166.985 131.665 li
168.652 133.859 li
168.652 133.859 li
cp
168.596 134.053 mo
170.263 131.859 li
168.596 129.665 li
166.929 131.859 li
168.596 134.053 li
168.596 134.053 li
cp
168.541 134.165 mo
170.208 131.97 li
168.541 129.775 li
166.875 131.97 li
168.541 134.165 li
168.541 134.165 li
cp
168.485 133.915 mo
170.152 131.72 li
168.485 129.525 li
166.818 131.72 li
168.485 133.915 li
168.485 133.915 li
cp
168.458 133.831 mo
170.125 131.636 li
168.458 129.442 li
166.791 131.636 li
168.458 133.831 li
168.458 133.831 li
cp
168.402 133.665 mo
170.068 131.47 li
168.402 129.275 li
166.735 131.47 li
168.402 133.665 li
168.402 133.665 li
cp
168.346 133.748 mo
170.013 131.553 li
168.346 129.359 li
166.679 131.553 li
168.346 133.748 li
168.346 133.748 li
cp
168.291 133.72 mo
169.958 131.525 li
168.291 129.331 li
166.625 131.525 li
168.291 133.72 li
168.291 133.72 li
cp
168.235 133.47 mo
169.902 131.275 li
168.235 129.081 li
166.568 131.275 li
168.235 133.47 li
168.235 133.47 li
cp
168.179 133.525 mo
169.846 131.331 li
168.179 129.136 li
166.513 131.331 li
168.179 133.525 li
168.179 133.525 li
cp
168.125 133.581 mo
169.791 131.386 li
168.125 129.192 li
166.458 131.386 li
168.125 133.581 li
168.125 133.581 li
cp
168.068 133.525 mo
169.735 131.331 li
168.068 129.136 li
166.402 131.331 li
168.068 133.525 li
168.068 133.525 li
cp
168.013 133.498 mo
169.679 131.303 li
168.013 129.109 li
166.346 131.303 li
168.013 133.498 li
168.013 133.498 li
cp
167.985 133.692 mo
169.652 131.498 li
167.985 129.303 li
166.318 131.498 li
167.985 133.692 li
167.985 133.692 li
cp
167.929 133.525 mo
169.596 131.331 li
167.929 129.136 li
166.263 131.331 li
167.929 133.525 li
167.929 133.525 li
cp
167.875 133.331 mo
169.541 131.136 li
167.875 128.942 li
166.208 131.136 li
167.875 133.331 li
167.875 133.331 li
cp
167.818 133.331 mo
169.485 131.136 li
167.818 128.942 li
166.152 131.136 li
167.818 133.331 li
167.818 133.331 li
cp
167.763 133.192 mo
169.429 130.998 li
167.763 128.803 li
166.096 130.998 li
167.763 133.192 li
167.763 133.192 li
cp
167.708 133.192 mo
169.375 130.998 li
167.708 128.803 li
166.041 130.998 li
167.708 133.192 li
167.708 133.192 li
cp
167.652 133.165 mo
169.318 130.97 li
167.652 128.775 li
165.985 130.97 li
167.652 133.165 li
167.652 133.165 li
cp
167.596 133.109 mo
169.263 130.915 li
167.596 128.72 li
165.929 130.915 li
167.596 133.109 li
167.596 133.109 li
cp
167.541 133.025 mo
169.208 130.831 li
167.541 128.636 li
165.875 130.831 li
167.541 133.025 li
167.541 133.025 li
cp
167.485 132.915 mo
169.152 130.72 li
167.485 128.525 li
165.818 130.72 li
167.485 132.915 li
167.485 132.915 li
cp
167.429 132.859 mo
169.096 130.665 li
167.429 128.47 li
165.763 130.665 li
167.429 132.859 li
167.429 132.859 li
cp
167.375 132.692 mo
169.041 130.498 li
167.375 128.303 li
165.708 130.498 li
167.375 132.692 li
167.375 132.692 li
cp
167.318 132.859 mo
168.985 130.665 li
167.318 128.47 li
165.652 130.665 li
167.318 132.859 li
167.318 132.859 li
cp
167.263 133.081 mo
168.929 130.886 li
167.263 128.692 li
165.596 130.886 li
167.263 133.081 li
167.263 133.081 li
cp
167.208 132.97 mo
168.875 130.775 li
167.208 128.581 li
165.541 130.775 li
167.208 132.97 li
167.208 132.97 li
cp
167.152 132.831 mo
168.818 130.636 li
167.152 128.442 li
165.485 130.636 li
167.152 132.831 li
167.152 132.831 li
cp
167.096 132.803 mo
168.763 130.609 li
167.096 128.415 li
165.429 130.609 li
167.096 132.803 li
167.096 132.803 li
cp
167.041 132.775 mo
168.708 130.581 li
167.041 128.386 li
165.375 130.581 li
167.041 132.775 li
167.041 132.775 li
cp
166.985 132.248 mo
168.652 130.053 li
166.985 127.859 li
165.318 130.053 li
166.985 132.248 li
166.985 132.248 li
cp
166.929 132.136 mo
168.596 129.942 li
166.929 127.748 li
165.263 129.942 li
166.929 132.136 li
166.929 132.136 li
cp
166.875 132.553 mo
168.541 130.359 li
166.875 128.165 li
165.208 130.359 li
166.875 132.553 li
166.875 132.553 li
cp
166.818 132.581 mo
168.485 130.386 li
166.818 128.192 li
165.152 130.386 li
166.818 132.581 li
166.818 132.581 li
cp
166.763 132.553 mo
168.429 130.359 li
166.763 128.165 li
165.096 130.359 li
166.763 132.553 li
166.763 132.553 li
cp
166.708 132.442 mo
168.375 130.248 li
166.708 128.053 li
165.041 130.248 li
166.708 132.442 li
166.708 132.442 li
cp
166.652 132.275 mo
168.318 130.081 li
166.652 127.886 li
164.985 130.081 li
166.652 132.275 li
166.652 132.275 li
cp
166.596 132.442 mo
168.263 130.248 li
166.596 128.053 li
164.929 130.248 li
166.596 132.442 li
166.596 132.442 li
cp
166.541 132.248 mo
168.208 130.053 li
166.541 127.859 li
164.875 130.053 li
166.541 132.248 li
166.541 132.248 li
cp
166.458 131.915 mo
168.125 129.72 li
166.458 127.525 li
164.791 129.72 li
166.458 131.915 li
166.458 131.915 li
cp
166.402 131.915 mo
168.068 129.72 li
166.402 127.525 li
164.735 129.72 li
166.402 131.915 li
166.402 131.915 li
cp
166.346 132.025 mo
168.013 129.831 li
166.346 127.636 li
164.679 129.831 li
166.346 132.025 li
166.346 132.025 li
cp
166.291 132.053 mo
167.958 129.859 li
166.291 127.665 li
164.625 129.859 li
166.291 132.053 li
166.291 132.053 li
cp
166.235 131.942 mo
167.902 129.748 li
166.235 127.553 li
164.568 129.748 li
166.235 131.942 li
166.235 131.942 li
cp
166.179 131.859 mo
167.846 129.665 li
166.179 127.47 li
164.513 129.665 li
166.179 131.859 li
166.179 131.859 li
cp
166.125 131.859 mo
167.791 129.665 li
166.125 127.47 li
164.458 129.665 li
166.125 131.859 li
166.125 131.859 li
cp
166.068 131.97 mo
167.735 129.775 li
166.068 127.581 li
164.402 129.775 li
166.068 131.97 li
166.068 131.97 li
cp
165.985 131.775 mo
167.652 129.581 li
165.985 127.386 li
164.318 129.581 li
165.985 131.775 li
165.985 131.775 li
cp
165.929 131.553 mo
167.596 129.359 li
165.929 127.165 li
164.263 129.359 li
165.929 131.553 li
165.929 131.553 li
cp
165.875 131.553 mo
167.541 129.359 li
165.875 127.165 li
164.208 129.359 li
165.875 131.553 li
165.875 131.553 li
cp
165.818 131.72 mo
167.485 129.525 li
165.818 127.331 li
164.152 129.525 li
165.818 131.72 li
165.818 131.72 li
cp
165.763 131.72 mo
167.429 129.525 li
165.763 127.331 li
164.096 129.525 li
165.763 131.72 li
165.763 131.72 li
cp
165.708 131.386 mo
167.375 129.192 li
165.708 126.998 li
164.041 129.192 li
165.708 131.386 li
165.708 131.386 li
cp
165.625 131.359 mo
167.291 129.165 li
165.625 126.97 li
163.958 129.165 li
165.625 131.359 li
165.625 131.359 li
cp
165.568 131.415 mo
167.235 129.22 li
165.568 127.025 li
163.902 129.22 li
165.568 131.415 li
165.568 131.415 li
cp
165.513 131.415 mo
167.179 129.22 li
165.513 127.025 li
163.846 129.22 li
165.513 131.415 li
165.513 131.415 li
cp
165.458 131.275 mo
167.125 129.081 li
165.458 126.886 li
163.791 129.081 li
165.458 131.275 li
165.458 131.275 li
cp
165.402 131.081 mo
167.068 128.886 li
165.402 126.692 li
163.735 128.886 li
165.402 131.081 li
165.402 131.081 li
cp
165.318 131.136 mo
166.985 128.942 li
165.318 126.748 li
163.652 128.942 li
165.318 131.136 li
165.318 131.136 li
cp
165.263 131.109 mo
166.929 128.915 li
165.263 126.72 li
163.596 128.915 li
165.263 131.109 li
165.263 131.109 li
cp
165.208 131.053 mo
166.875 128.859 li
165.208 126.665 li
163.541 128.859 li
165.208 131.053 li
165.208 131.053 li
cp
165.152 130.886 mo
166.818 128.692 li
165.152 126.498 li
163.485 128.692 li
165.152 130.886 li
165.152 130.886 li
cp
165.068 130.998 mo
166.735 128.803 li
165.068 126.609 li
163.402 128.803 li
165.068 130.998 li
165.068 130.998 li
cp
165.013 131.053 mo
166.679 128.859 li
165.013 126.665 li
163.346 128.859 li
165.013 131.053 li
165.013 131.053 li
cp
164.958 130.748 mo
166.625 128.553 li
164.958 126.359 li
163.291 128.553 li
164.958 130.748 li
164.958 130.748 li
cp
164.902 130.72 mo
166.568 128.525 li
164.902 126.331 li
163.235 128.525 li
164.902 130.72 li
164.902 130.72 li
cp
164.818 130.831 mo
166.485 128.636 li
164.818 126.442 li
163.152 128.636 li
164.818 130.831 li
164.818 130.831 li
cp
164.763 130.859 mo
166.429 128.665 li
164.763 126.47 li
163.096 128.665 li
164.763 130.859 li
164.763 130.859 li
cp
164.708 130.581 mo
166.375 128.386 li
164.708 126.192 li
163.041 128.386 li
164.708 130.581 li
164.708 130.581 li
cp
164.625 130.525 mo
166.291 128.331 li
164.625 126.136 li
162.958 128.331 li
164.625 130.525 li
164.625 130.525 li
cp
164.568 130.581 mo
166.235 128.386 li
164.568 126.192 li
162.902 128.386 li
164.568 130.581 li
164.568 130.581 li
cp
164.513 130.498 mo
166.179 128.303 li
164.513 126.109 li
162.846 128.303 li
164.513 130.498 li
164.513 130.498 li
cp
164.429 130.303 mo
166.096 128.109 li
164.429 125.915 li
162.763 128.109 li
164.429 130.303 li
164.429 130.303 li
cp
164.375 130.303 mo
166.041 128.109 li
164.375 125.915 li
162.708 128.109 li
164.375 130.303 li
164.375 130.303 li
cp
164.318 130.525 mo
165.985 128.331 li
164.318 126.136 li
162.652 128.331 li
164.318 130.525 li
164.318 130.525 li
cp
164.235 130.22 mo
165.902 128.025 li
164.235 125.831 li
162.568 128.025 li
164.235 130.22 li
164.235 130.22 li
cp
164.179 130.053 mo
165.846 127.859 li
164.179 125.665 li
162.513 127.859 li
164.179 130.053 li
164.179 130.053 li
cp
164.125 130.22 mo
165.791 128.025 li
164.125 125.831 li
162.458 128.025 li
164.125 130.22 li
164.125 130.22 li
cp
164.041 130.248 mo
165.708 128.053 li
164.041 125.859 li
162.375 128.053 li
164.041 130.248 li
164.041 130.248 li
cp
163.985 130.053 mo
165.652 127.859 li
163.985 125.665 li
162.318 127.859 li
163.985 130.053 li
163.985 130.053 li
cp
163.902 130.025 mo
165.568 127.831 li
163.902 125.636 li
162.235 127.831 li
163.902 130.025 li
163.902 130.025 li
cp
163.846 129.942 mo
165.513 127.748 li
163.846 125.553 li
162.179 127.748 li
163.846 129.942 li
163.846 129.942 li
cp
163.791 129.72 mo
165.458 127.525 li
163.791 125.331 li
162.125 127.525 li
163.791 129.72 li
163.791 129.72 li
cp
163.708 129.665 mo
165.375 127.47 li
163.708 125.275 li
162.041 127.47 li
163.708 129.665 li
163.708 129.665 li
cp
163.652 129.665 mo
165.318 127.47 li
163.652 125.275 li
161.985 127.47 li
163.652 129.665 li
163.652 129.665 li
cp
163.568 129.609 mo
165.235 127.415 li
163.568 125.22 li
161.902 127.415 li
163.568 129.609 li
163.568 129.609 li
cp
163.513 129.415 mo
165.179 127.22 li
163.513 125.025 li
161.846 127.22 li
163.513 129.415 li
163.513 129.415 li
cp
163.429 129.609 mo
165.096 127.415 li
163.429 125.22 li
161.763 127.415 li
163.429 129.609 li
163.429 129.609 li
cp
163.375 129.442 mo
165.041 127.248 li
163.375 125.053 li
161.708 127.248 li
163.375 129.442 li
163.375 129.442 li
cp
163.291 129.303 mo
164.958 127.109 li
163.291 124.915 li
161.625 127.109 li
163.291 129.303 li
163.291 129.303 li
cp
163.235 129.442 mo
164.902 127.248 li
163.235 125.053 li
161.568 127.248 li
163.235 129.442 li
163.235 129.442 li
cp
163.152 129.192 mo
164.818 126.998 li
163.152 124.803 li
161.485 126.998 li
163.152 129.192 li
163.152 129.192 li
cp
163.096 129.081 mo
164.763 126.886 li
163.096 124.692 li
161.429 126.886 li
163.096 129.081 li
163.096 129.081 li
cp
163.013 128.97 mo
164.679 126.775 li
163.013 124.581 li
161.346 126.775 li
163.013 128.97 li
163.013 128.97 li
cp
162.958 128.831 mo
164.625 126.636 li
162.958 124.442 li
161.291 126.636 li
162.958 128.831 li
162.958 128.831 li
cp
162.875 128.998 mo
164.541 126.803 li
162.875 124.609 li
161.208 126.803 li
162.875 128.998 li
162.875 128.998 li
cp
162.818 129.165 mo
164.485 126.97 li
162.818 124.775 li
161.152 126.97 li
162.818 129.165 li
162.818 129.165 li
cp
162.735 129.192 mo
164.402 126.998 li
162.735 124.803 li
161.068 126.998 li
162.735 129.192 li
162.735 129.192 li
cp
162.652 128.859 mo
164.318 126.665 li
162.652 124.47 li
160.985 126.665 li
162.652 128.859 li
162.652 128.859 li
cp
162.596 128.72 mo
164.263 126.525 li
162.596 124.331 li
160.929 126.525 li
162.596 128.72 li
162.596 128.72 li
cp
162.513 128.859 mo
164.179 126.665 li
162.513 124.47 li
160.846 126.665 li
162.513 128.859 li
162.513 128.859 li
cp
162.458 129.053 mo
164.125 126.859 li
162.458 124.665 li
160.791 126.859 li
162.458 129.053 li
162.458 129.053 li
cp
162.375 128.775 mo
164.041 126.581 li
162.375 124.386 li
160.708 126.581 li
162.375 128.775 li
162.375 128.775 li
cp
162.291 128.498 mo
163.958 126.303 li
162.291 124.109 li
160.625 126.303 li
162.291 128.498 li
162.291 128.498 li
cp
162.235 128.442 mo
163.902 126.248 li
162.235 124.053 li
160.568 126.248 li
162.235 128.442 li
162.235 128.442 li
cp
162.152 128.415 mo
163.818 126.22 li
162.152 124.025 li
160.485 126.22 li
162.152 128.415 li
162.152 128.415 li
cp
162.068 128.498 mo
163.735 126.303 li
162.068 124.109 li
160.402 126.303 li
162.068 128.498 li
162.068 128.498 li
cp
162.013 128.386 mo
163.679 126.192 li
162.013 123.998 li
160.346 126.192 li
162.013 128.386 li
162.013 128.386 li
cp
161.929 128.359 mo
163.596 126.165 li
161.929 123.97 li
160.263 126.165 li
161.929 128.359 li
161.929 128.359 li
cp
161.846 128.331 mo
163.513 126.136 li
161.846 123.942 li
160.179 126.136 li
161.846 128.331 li
161.846 128.331 li
cp
161.791 128.248 mo
163.458 126.053 li
161.791 123.859 li
160.125 126.053 li
161.791 128.248 li
161.791 128.248 li
cp
161.708 127.97 mo
163.375 125.775 li
161.708 123.581 li
160.041 125.775 li
161.708 127.97 li
161.708 127.97 li
cp
161.625 127.803 mo
163.291 125.609 li
161.625 123.415 li
159.958 125.609 li
161.625 127.803 li
161.625 127.803 li
cp
161.541 127.886 mo
163.208 125.692 li
161.541 123.498 li
159.875 125.692 li
161.541 127.886 li
161.541 127.886 li
cp
161.485 127.97 mo
163.152 125.775 li
161.485 123.581 li
159.818 125.775 li
161.485 127.97 li
161.485 127.97 li
cp
161.402 128.053 mo
163.068 125.859 li
161.402 123.665 li
159.735 125.859 li
161.402 128.053 li
161.402 128.053 li
cp
161.318 127.831 mo
162.985 125.636 li
161.318 123.442 li
159.652 125.636 li
161.318 127.831 li
161.318 127.831 li
cp
161.235 127.72 mo
162.902 125.525 li
161.235 123.331 li
159.568 125.525 li
161.235 127.72 li
161.235 127.72 li
cp
161.179 127.803 mo
162.846 125.609 li
161.179 123.415 li
159.513 125.609 li
161.179 127.803 li
161.179 127.803 li
cp
161.096 127.525 mo
162.763 125.331 li
161.096 123.136 li
159.429 125.331 li
161.096 127.525 li
161.096 127.525 li
cp
161.013 127.248 mo
162.679 125.053 li
161.013 122.859 li
159.346 125.053 li
161.013 127.248 li
161.013 127.248 li
cp
160.929 127.248 mo
162.596 125.053 li
160.929 122.859 li
159.263 125.053 li
160.929 127.248 li
160.929 127.248 li
cp
160.846 127.553 mo
162.513 125.359 li
160.846 123.165 li
159.179 125.359 li
160.846 127.553 li
160.846 127.553 li
cp
160.763 127.47 mo
162.429 125.275 li
160.763 123.081 li
159.096 125.275 li
160.763 127.47 li
160.763 127.47 li
cp
160.679 127.303 mo
162.346 125.109 li
160.679 122.915 li
159.013 125.109 li
160.679 127.303 li
160.679 127.303 li
cp
160.596 127.165 mo
162.263 124.97 li
160.596 122.775 li
158.929 124.97 li
160.596 127.165 li
160.596 127.165 li
cp
160.541 126.97 mo
162.208 124.775 li
160.541 122.581 li
158.875 124.775 li
160.541 126.97 li
160.541 126.97 li
cp
160.458 126.97 mo
162.125 124.775 li
160.458 122.581 li
158.791 124.775 li
160.458 126.97 li
160.458 126.97 li
cp
160.375 126.915 mo
162.041 124.72 li
160.375 122.525 li
158.708 124.72 li
160.375 126.915 li
160.375 126.915 li
cp
160.291 126.859 mo
161.958 124.665 li
160.291 122.47 li
158.625 124.665 li
160.291 126.859 li
160.291 126.859 li
cp
160.208 126.803 mo
161.875 124.609 li
160.208 122.415 li
158.541 124.609 li
160.208 126.803 li
160.208 126.803 li
cp
160.125 126.775 mo
161.791 124.581 li
160.125 122.386 li
158.458 124.581 li
160.125 126.775 li
160.125 126.775 li
cp
160.041 126.748 mo
161.708 124.553 li
160.041 122.359 li
158.375 124.553 li
160.041 126.748 li
160.041 126.748 li
cp
159.958 126.636 mo
161.625 124.442 li
159.958 122.248 li
158.291 124.442 li
159.958 126.636 li
159.958 126.636 li
cp
159.875 126.498 mo
161.541 124.303 li
159.875 122.109 li
158.208 124.303 li
159.875 126.498 li
159.875 126.498 li
cp
159.791 126.275 mo
161.458 124.081 li
159.791 121.886 li
158.125 124.081 li
159.791 126.275 li
159.791 126.275 li
cp
159.708 126.331 mo
161.375 124.136 li
159.708 121.942 li
158.041 124.136 li
159.708 126.331 li
159.708 126.331 li
cp
159.625 126.748 mo
161.291 124.553 li
159.625 122.359 li
157.958 124.553 li
159.625 126.748 li
159.625 126.748 li
cp
159.541 126.665 mo
161.208 124.47 li
159.541 122.275 li
157.875 124.47 li
159.541 126.665 li
159.541 126.665 li
cp
159.429 126.109 mo
161.096 123.915 li
159.429 121.72 li
157.763 123.915 li
159.429 126.109 li
159.429 126.109 li
cp
159.346 126.025 mo
161.013 123.831 li
159.346 121.636 li
157.679 123.831 li
159.346 126.025 li
159.346 126.025 li
cp
159.263 126.165 mo
160.929 123.97 li
159.263 121.775 li
157.596 123.97 li
159.263 126.165 li
159.263 126.165 li
cp
159.179 125.942 mo
160.846 123.748 li
159.179 121.553 li
157.513 123.748 li
159.179 125.942 li
159.179 125.942 li
cp
159.096 125.831 mo
160.763 123.636 li
159.096 121.442 li
157.429 123.636 li
159.096 125.831 li
159.096 125.831 li
cp
159.013 126.165 mo
160.679 123.97 li
159.013 121.775 li
157.346 123.97 li
159.013 126.165 li
159.013 126.165 li
cp
158.929 125.942 mo
160.596 123.748 li
158.929 121.553 li
157.263 123.748 li
158.929 125.942 li
158.929 125.942 li
cp
@
grestore
gsave
61.9854 138.665 mo
175.818 138.665 li
175.818 47.3867 li
61.9854 47.3867 li
61.9854 138.665 li
cp
clp
0 lj
159.513 124.053 mo
162.125 124.053 li
162.125 126.665 li
159.513 126.665 li
159.513 124.053 li
159.513 124.053 li
cp
159.429 124.136 mo
162.041 124.136 li
162.041 126.748 li
159.429 126.748 li
159.429 124.136 li
159.429 124.136 li
cp
159.346 123.915 mo
161.958 123.915 li
161.958 126.525 li
159.346 126.525 li
159.346 123.915 li
159.346 123.915 li
cp
159.235 123.72 mo
161.846 123.72 li
161.846 126.331 li
159.235 126.331 li
159.235 123.72 li
159.235 123.72 li
cp
159.152 123.636 mo
161.763 123.636 li
161.763 126.248 li
159.152 126.248 li
159.152 123.636 li
159.152 123.636 li
cp
159.068 123.581 mo
161.679 123.581 li
161.679 126.192 li
159.068 126.192 li
159.068 123.581 li
159.068 123.581 li
cp
158.985 123.442 mo
161.596 123.442 li
161.596 126.053 li
158.985 126.053 li
158.985 123.442 li
158.985 123.442 li
cp
158.875 123.415 mo
161.485 123.415 li
161.485 126.025 li
158.875 126.025 li
158.875 123.415 li
158.875 123.415 li
cp
158.791 123.165 mo
161.402 123.165 li
161.402 125.775 li
158.791 125.775 li
158.791 123.165 li
158.791 123.165 li
cp
158.708 122.942 mo
161.318 122.942 li
161.318 125.553 li
158.708 125.553 li
158.708 122.942 li
158.708 122.942 li
cp
158.596 123.165 mo
161.208 123.165 li
161.208 125.775 li
158.596 125.775 li
158.596 123.165 li
158.596 123.165 li
cp
158.513 123.331 mo
161.125 123.331 li
161.125 125.942 li
158.513 125.942 li
158.513 123.331 li
158.513 123.331 li
cp
158.402 123.303 mo
161.013 123.303 li
161.013 125.915 li
158.402 125.915 li
158.402 123.303 li
158.402 123.303 li
cp
158.318 123.136 mo
160.929 123.136 li
160.929 125.748 li
158.318 125.748 li
158.318 123.136 li
158.318 123.136 li
cp
158.235 123.109 mo
160.846 123.109 li
160.846 125.72 li
158.235 125.72 li
158.235 123.109 li
158.235 123.109 li
cp
158.125 123.025 mo
160.735 123.025 li
160.735 125.636 li
158.125 125.636 li
158.125 123.025 li
158.125 123.025 li
cp
158.041 122.803 mo
160.652 122.803 li
160.652 125.415 li
158.041 125.415 li
158.041 122.803 li
158.041 122.803 li
cp
157.929 122.636 mo
160.541 122.636 li
160.541 125.248 li
157.929 125.248 li
157.929 122.636 li
157.929 122.636 li
cp
157.846 122.665 mo
160.458 122.665 li
160.458 125.275 li
157.846 125.275 li
157.846 122.665 li
157.846 122.665 li
cp
157.735 122.665 mo
160.346 122.665 li
160.346 125.275 li
157.735 125.275 li
157.735 122.665 li
157.735 122.665 li
cp
157.625 122.553 mo
160.235 122.553 li
160.235 125.165 li
157.625 125.165 li
157.625 122.553 li
157.625 122.553 li
cp
157.541 122.553 mo
160.152 122.553 li
160.152 125.165 li
157.541 125.165 li
157.541 122.553 li
157.541 122.553 li
cp
157.429 122.442 mo
160.041 122.442 li
160.041 125.053 li
157.429 125.053 li
157.429 122.442 li
157.429 122.442 li
cp
157.346 122.109 mo
159.958 122.109 li
159.958 124.72 li
157.346 124.72 li
157.346 122.109 li
157.346 122.109 li
cp
157.235 122.081 mo
159.846 122.081 li
159.846 124.692 li
157.235 124.692 li
157.235 122.081 li
157.235 122.081 li
cp
157.125 122.081 mo
159.735 122.081 li
159.735 124.692 li
157.125 124.692 li
157.125 122.081 li
157.125 122.081 li
cp
157.041 122.053 mo
159.652 122.053 li
159.652 124.665 li
157.041 124.665 li
157.041 122.053 li
157.041 122.053 li
cp
156.929 122.386 mo
159.541 122.386 li
159.541 124.998 li
156.929 124.998 li
156.929 122.386 li
156.929 122.386 li
cp
156.818 122.415 mo
159.429 122.415 li
159.429 125.025 li
156.818 125.025 li
156.818 122.415 li
156.818 122.415 li
cp
156.735 121.859 mo
159.346 121.859 li
159.346 124.47 li
156.735 124.47 li
156.735 121.859 li
156.735 121.859 li
cp
156.625 121.581 mo
159.235 121.581 li
159.235 124.192 li
156.625 124.192 li
156.625 121.581 li
156.625 121.581 li
cp
156.513 121.803 mo
159.125 121.803 li
159.125 124.415 li
156.513 124.415 li
156.513 121.803 li
156.513 121.803 li
cp
156.402 121.581 mo
159.013 121.581 li
159.013 124.192 li
156.402 124.192 li
156.402 121.581 li
156.402 121.581 li
cp
156.291 121.692 mo
158.902 121.692 li
158.902 124.303 li
156.291 124.303 li
156.291 121.692 li
156.291 121.692 li
cp
156.208 121.498 mo
158.818 121.498 li
158.818 124.109 li
156.208 124.109 li
156.208 121.498 li
156.208 121.498 li
cp
156.096 121.136 mo
158.708 121.136 li
158.708 123.748 li
156.096 123.748 li
156.096 121.136 li
156.096 121.136 li
cp
155.985 121.275 mo
158.596 121.275 li
158.596 123.886 li
155.985 123.886 li
155.985 121.275 li
155.985 121.275 li
cp
155.875 121.303 mo
158.485 121.303 li
158.485 123.915 li
155.875 123.915 li
155.875 121.303 li
155.875 121.303 li
cp
155.763 120.998 mo
158.375 120.998 li
158.375 123.609 li
155.763 123.609 li
155.763 120.998 li
155.763 120.998 li
cp
155.652 121.081 mo
158.263 121.081 li
158.263 123.692 li
155.652 123.692 li
155.652 121.081 li
155.652 121.081 li
cp
155.541 120.998 mo
158.152 120.998 li
158.152 123.609 li
155.541 123.609 li
155.541 120.998 li
155.541 120.998 li
cp
155.429 120.386 mo
158.041 120.386 li
158.041 122.998 li
155.429 122.998 li
155.429 120.386 li
155.429 120.386 li
cp
155.318 120.386 mo
157.929 120.386 li
157.929 122.998 li
155.318 122.998 li
155.318 120.386 li
155.318 120.386 li
cp
155.208 120.525 mo
157.818 120.525 li
157.818 123.136 li
155.208 123.136 li
155.208 120.525 li
155.208 120.525 li
cp
155.096 120.386 mo
157.708 120.386 li
157.708 122.998 li
155.096 122.998 li
155.096 120.386 li
155.096 120.386 li
cp
154.985 120.415 mo
157.596 120.415 li
157.596 123.025 li
154.985 123.025 li
154.985 120.415 li
154.985 120.415 li
cp
154.846 120.248 mo
157.458 120.248 li
157.458 122.859 li
154.846 122.859 li
154.846 120.248 li
154.846 120.248 li
cp
154.735 120.025 mo
157.346 120.025 li
157.346 122.636 li
154.735 122.636 li
154.735 120.025 li
154.735 120.025 li
cp
154.625 120.025 mo
157.235 120.025 li
157.235 122.636 li
154.625 122.636 li
154.625 120.025 li
154.625 120.025 li
cp
154.513 120.081 mo
157.125 120.081 li
157.125 122.692 li
154.513 122.692 li
154.513 120.081 li
154.513 120.081 li
cp
154.375 120.165 mo
156.985 120.165 li
156.985 122.775 li
154.375 122.775 li
154.375 120.165 li
154.375 120.165 li
cp
154.263 120.136 mo
156.875 120.136 li
156.875 122.748 li
154.263 122.748 li
154.263 120.136 li
154.263 120.136 li
cp
154.152 120.025 mo
156.763 120.025 li
156.763 122.636 li
154.152 122.636 li
154.152 120.025 li
154.152 120.025 li
cp
154.041 119.998 mo
156.652 119.998 li
156.652 122.609 li
154.041 122.609 li
154.041 119.998 li
154.041 119.998 li
cp
153.902 119.831 mo
156.513 119.831 li
156.513 122.442 li
153.902 122.442 li
153.902 119.831 li
153.902 119.831 li
cp
153.791 119.525 mo
156.402 119.525 li
156.402 122.136 li
153.791 122.136 li
153.791 119.525 li
153.791 119.525 li
cp
153.652 119.581 mo
156.263 119.581 li
156.263 122.192 li
153.652 122.192 li
153.652 119.581 li
153.652 119.581 li
cp
153.541 119.525 mo
156.152 119.525 li
156.152 122.136 li
153.541 122.136 li
153.541 119.525 li
153.541 119.525 li
cp
153.402 119.303 mo
156.013 119.303 li
156.013 121.915 li
153.402 121.915 li
153.402 119.303 li
153.402 119.303 li
cp
153.291 119.025 mo
155.902 119.025 li
155.902 121.636 li
153.291 121.636 li
153.291 119.025 li
153.291 119.025 li
cp
153.152 118.886 mo
155.763 118.886 li
155.763 121.498 li
153.152 121.498 li
153.152 118.886 li
153.152 118.886 li
cp
153.041 118.915 mo
155.652 118.915 li
155.652 121.525 li
153.041 121.525 li
153.041 118.915 li
153.041 118.915 li
cp
152.902 119.248 mo
155.513 119.248 li
155.513 121.859 li
152.902 121.859 li
152.902 119.248 li
152.902 119.248 li
cp
152.763 119.359 mo
155.375 119.359 li
155.375 121.97 li
152.763 121.97 li
152.763 119.359 li
152.763 119.359 li
cp
152.652 119.109 mo
155.263 119.109 li
155.263 121.72 li
152.652 121.72 li
152.652 119.109 li
152.652 119.109 li
cp
152.513 118.498 mo
155.125 118.498 li
155.125 121.109 li
152.513 121.109 li
152.513 118.498 li
152.513 118.498 li
cp
152.375 118.331 mo
154.985 118.331 li
154.985 120.942 li
152.375 120.942 li
152.375 118.331 li
152.375 118.331 li
cp
152.235 118.442 mo
154.846 118.442 li
154.846 121.053 li
152.235 121.053 li
152.235 118.442 li
152.235 118.442 li
cp
152.096 118.386 mo
154.708 118.386 li
154.708 120.998 li
152.096 120.998 li
152.096 118.386 li
152.096 118.386 li
cp
151.985 118.22 mo
154.596 118.22 li
154.596 120.831 li
151.985 120.831 li
151.985 118.22 li
151.985 118.22 li
cp
151.846 118.025 mo
154.458 118.025 li
154.458 120.636 li
151.846 120.636 li
151.846 118.025 li
151.846 118.025 li
cp
151.708 117.998 mo
154.318 117.998 li
154.318 120.609 li
151.708 120.609 li
151.708 117.998 li
151.708 117.998 li
cp
151.568 117.942 mo
154.179 117.942 li
154.179 120.553 li
151.568 120.553 li
151.568 117.942 li
151.568 117.942 li
cp
151.429 117.97 mo
154.041 117.97 li
154.041 120.581 li
151.429 120.581 li
151.429 117.97 li
151.429 117.97 li
cp
151.291 117.72 mo
153.902 117.72 li
153.902 120.331 li
151.291 120.331 li
151.291 117.72 li
151.291 117.72 li
cp
151.125 117.525 mo
153.735 117.525 li
153.735 120.136 li
151.125 120.136 li
151.125 117.525 li
151.125 117.525 li
cp
150.985 117.331 mo
153.596 117.331 li
153.596 119.942 li
150.985 119.942 li
150.985 117.331 li
150.985 117.331 li
cp
150.846 117.22 mo
153.458 117.22 li
153.458 119.831 li
150.846 119.831 li
150.846 117.22 li
150.846 117.22 li
cp
150.708 117.165 mo
153.318 117.165 li
153.318 119.775 li
150.708 119.775 li
150.708 117.165 li
150.708 117.165 li
cp
150.568 117.275 mo
153.179 117.275 li
153.179 119.886 li
150.568 119.886 li
150.568 117.275 li
150.568 117.275 li
cp
150.402 117.109 mo
153.013 117.109 li
153.013 119.72 li
150.402 119.72 li
150.402 117.109 li
150.402 117.109 li
cp
150.263 116.831 mo
152.875 116.831 li
152.875 119.442 li
150.263 119.442 li
150.263 116.831 li
150.263 116.831 li
cp
150.096 116.859 mo
152.708 116.859 li
152.708 119.47 li
150.096 119.47 li
150.096 116.859 li
150.096 116.859 li
cp
149.958 116.915 mo
152.568 116.915 li
152.568 119.525 li
149.958 119.525 li
149.958 116.915 li
149.958 116.915 li
cp
149.818 116.665 mo
152.429 116.665 li
152.429 119.275 li
149.818 119.275 li
149.818 116.665 li
149.818 116.665 li
cp
149.652 116.525 mo
152.263 116.525 li
152.263 119.136 li
149.652 119.136 li
149.652 116.525 li
149.652 116.525 li
cp
149.485 116.581 mo
152.096 116.581 li
152.096 119.192 li
149.485 119.192 li
149.485 116.581 li
149.485 116.581 li
cp
149.346 116.636 mo
151.958 116.636 li
151.958 119.248 li
149.346 119.248 li
149.346 116.636 li
149.346 116.636 li
cp
149.179 116.415 mo
151.791 116.415 li
151.791 119.025 li
149.179 119.025 li
149.179 116.415 li
149.179 116.415 li
cp
149.013 116.275 mo
151.625 116.275 li
151.625 118.886 li
149.013 118.886 li
149.013 116.275 li
149.013 116.275 li
cp
148.846 116.386 mo
151.458 116.386 li
151.458 118.998 li
148.846 118.998 li
148.846 116.386 li
148.846 116.386 li
cp
148.708 115.942 mo
151.318 115.942 li
151.318 118.553 li
148.708 118.553 li
148.708 115.942 li
148.708 115.942 li
cp
148.541 115.47 mo
151.152 115.47 li
151.152 118.081 li
148.541 118.081 li
148.541 115.47 li
148.541 115.47 li
cp
148.375 115.525 mo
150.985 115.525 li
150.985 118.136 li
148.375 118.136 li
148.375 115.525 li
148.375 115.525 li
cp
148.208 115.165 mo
150.818 115.165 li
150.818 117.775 li
148.208 117.775 li
148.208 115.165 li
148.208 115.165 li
cp
148.041 114.72 mo
150.652 114.72 li
150.652 117.331 li
148.041 117.331 li
148.041 114.72 li
148.041 114.72 li
cp
147.846 115.22 mo
150.458 115.22 li
150.458 117.831 li
147.846 117.831 li
147.846 115.22 li
147.846 115.22 li
cp
147.679 115.165 mo
150.291 115.165 li
150.291 117.775 li
147.679 117.775 li
147.679 115.165 li
147.679 115.165 li
cp
147.513 114.915 mo
150.125 114.915 li
150.125 117.525 li
147.513 117.525 li
147.513 114.915 li
147.513 114.915 li
cp
147.346 114.665 mo
149.958 114.665 li
149.958 117.275 li
147.346 117.275 li
147.346 114.665 li
147.346 114.665 li
cp
147.152 114.303 mo
149.763 114.303 li
149.763 116.915 li
147.152 116.915 li
147.152 114.303 li
147.152 114.303 li
cp
146.985 114.498 mo
149.596 114.498 li
149.596 117.109 li
146.985 117.109 li
146.985 114.498 li
146.985 114.498 li
cp
146.791 114.109 mo
149.402 114.109 li
149.402 116.72 li
146.791 116.72 li
146.791 114.109 li
146.791 114.109 li
cp
146.625 113.831 mo
149.235 113.831 li
149.235 116.442 li
146.625 116.442 li
146.625 113.831 li
146.625 113.831 li
cp
146.429 113.97 mo
149.041 113.97 li
149.041 116.581 li
146.429 116.581 li
146.429 113.97 li
146.429 113.97 li
cp
146.235 113.942 mo
148.846 113.942 li
148.846 116.553 li
146.235 116.553 li
146.235 113.942 li
146.235 113.942 li
cp
146.068 113.803 mo
148.679 113.803 li
148.679 116.415 li
146.068 116.415 li
146.068 113.803 li
146.068 113.803 li
cp
145.875 113.442 mo
148.485 113.442 li
148.485 116.053 li
145.875 116.053 li
145.875 113.442 li
145.875 113.442 li
cp
145.679 113.109 mo
148.291 113.109 li
148.291 115.72 li
145.679 115.72 li
145.679 113.109 li
145.679 113.109 li
cp
145.485 113.109 mo
148.096 113.109 li
148.096 115.72 li
145.485 115.72 li
145.485 113.109 li
145.485 113.109 li
cp
145.291 113.248 mo
147.902 113.248 li
147.902 115.859 li
145.291 115.859 li
145.291 113.248 li
145.291 113.248 li
cp
145.068 113.331 mo
147.679 113.331 li
147.679 115.942 li
145.068 115.942 li
145.068 113.331 li
145.068 113.331 li
cp
144.875 112.748 mo
147.485 112.748 li
147.485 115.359 li
144.875 115.359 li
144.875 112.748 li
144.875 112.748 li
cp
144.679 112.386 mo
147.291 112.386 li
147.291 114.998 li
144.679 114.998 li
144.679 112.386 li
144.679 112.386 li
cp
144.458 112.525 mo
147.068 112.525 li
147.068 115.136 li
144.458 115.136 li
144.458 112.525 li
144.458 112.525 li
cp
144.263 112.331 mo
146.875 112.331 li
146.875 114.942 li
144.263 114.942 li
144.263 112.331 li
144.263 112.331 li
cp
144.041 111.748 mo
146.652 111.748 li
146.652 114.359 li
144.041 114.359 li
144.041 111.748 li
144.041 111.748 li
cp
143.846 111.525 mo
146.458 111.525 li
146.458 114.136 li
143.846 114.136 li
143.846 111.525 li
143.846 111.525 li
cp
143.625 111.553 mo
146.235 111.553 li
146.235 114.165 li
143.625 114.165 li
143.625 111.553 li
143.625 111.553 li
cp
143.402 111.525 mo
146.013 111.525 li
146.013 114.136 li
143.402 114.136 li
143.402 111.525 li
143.402 111.525 li
cp
143.179 111.303 mo
145.791 111.303 li
145.791 113.915 li
143.179 113.915 li
143.179 111.303 li
143.179 111.303 li
cp
142.958 110.72 mo
145.568 110.72 li
145.568 113.331 li
142.958 113.331 li
142.958 110.72 li
142.958 110.72 li
cp
142.735 110.665 mo
145.346 110.665 li
145.346 113.275 li
142.735 113.275 li
142.735 110.665 li
142.735 110.665 li
cp
142.513 110.498 mo
145.125 110.498 li
145.125 113.109 li
142.513 113.109 li
142.513 110.498 li
142.513 110.498 li
cp
142.263 110.136 mo
144.875 110.136 li
144.875 112.748 li
142.263 112.748 li
142.263 110.136 li
142.263 110.136 li
cp
142.041 110.025 mo
144.652 110.025 li
144.652 112.636 li
142.041 112.636 li
142.041 110.025 li
142.041 110.025 li
cp
141.791 109.359 mo
144.402 109.359 li
144.402 111.97 li
141.791 111.97 li
141.791 109.359 li
141.791 109.359 li
cp
141.541 109.025 mo
144.152 109.025 li
144.152 111.636 li
141.541 111.636 li
141.541 109.025 li
141.541 109.025 li
cp
141.291 108.942 mo
143.902 108.942 li
143.902 111.553 li
141.291 111.553 li
141.291 108.942 li
141.291 108.942 li
cp
141.041 108.748 mo
143.652 108.748 li
143.652 111.359 li
141.041 111.359 li
141.041 108.748 li
141.041 108.748 li
cp
140.791 108.525 mo
143.402 108.525 li
143.402 111.136 li
140.791 111.136 li
140.791 108.525 li
140.791 108.525 li
cp
140.541 107.72 mo
143.152 107.72 li
143.152 110.331 li
140.541 110.331 li
140.541 107.72 li
140.541 107.72 li
cp
140.291 107.97 mo
142.902 107.97 li
142.902 110.581 li
140.291 110.581 li
140.291 107.97 li
140.291 107.97 li
cp
140.013 107.886 mo
142.625 107.886 li
142.625 110.498 li
140.013 110.498 li
140.013 107.886 li
140.013 107.886 li
cp
139.763 107.525 mo
142.375 107.525 li
142.375 110.136 li
139.763 110.136 li
139.763 107.525 li
139.763 107.525 li
cp
139.485 107.692 mo
142.096 107.692 li
142.096 110.303 li
139.485 110.303 li
139.485 107.692 li
139.485 107.692 li
cp
139.208 106.915 mo
141.818 106.915 li
141.818 109.525 li
139.208 109.525 li
139.208 106.915 li
139.208 106.915 li
cp
138.929 106.47 mo
141.541 106.47 li
141.541 109.081 li
138.929 109.081 li
138.929 106.47 li
138.929 106.47 li
cp
138.625 106.109 mo
141.235 106.109 li
141.235 108.72 li
138.625 108.72 li
138.625 106.109 li
138.625 106.109 li
cp
138.346 105.692 mo
140.958 105.692 li
140.958 108.303 li
138.346 108.303 li
138.346 105.692 li
138.346 105.692 li
cp
138.041 105.275 mo
140.652 105.275 li
140.652 107.886 li
138.041 107.886 li
138.041 105.275 li
138.041 105.275 li
cp
137.763 105.025 mo
140.375 105.025 li
140.375 107.636 li
137.763 107.636 li
137.763 105.025 li
137.763 105.025 li
cp
137.458 104.859 mo
140.068 104.859 li
140.068 107.47 li
137.458 107.47 li
137.458 104.859 li
137.458 104.859 li
cp
137.125 104.109 mo
139.735 104.109 li
139.735 106.72 li
137.125 106.72 li
137.125 104.109 li
137.125 104.109 li
cp
136.818 103.525 mo
139.429 103.525 li
139.429 106.136 li
136.818 106.136 li
136.818 103.525 li
136.818 103.525 li
cp
136.513 103.47 mo
139.125 103.47 li
139.125 106.081 li
136.513 106.081 li
136.513 103.47 li
136.513 103.47 li
cp
136.179 102.859 mo
138.791 102.859 li
138.791 105.47 li
136.179 105.47 li
136.179 102.859 li
136.179 102.859 li
cp
135.846 102.248 mo
138.458 102.248 li
138.458 104.859 li
135.846 104.859 li
135.846 102.248 li
135.846 102.248 li
cp
135.513 102.165 mo
138.125 102.165 li
138.125 104.775 li
135.513 104.775 li
135.513 102.165 li
135.513 102.165 li
cp
135.152 101.331 mo
137.763 101.331 li
137.763 103.942 li
135.152 103.942 li
135.152 101.331 li
135.152 101.331 li
cp
134.791 100.692 mo
137.402 100.692 li
137.402 103.303 li
134.791 103.303 li
134.791 100.692 li
134.791 100.692 li
cp
134.429 100.581 mo
137.041 100.581 li
137.041 103.192 li
134.429 103.192 li
134.429 100.581 li
134.429 100.581 li
cp
134.068 100.165 mo
136.679 100.165 li
136.679 102.775 li
134.068 102.775 li
134.068 100.165 li
134.068 100.165 li
cp
133.708 99.4702 mo
136.318 99.4702 li
136.318 102.081 li
133.708 102.081 li
133.708 99.4702 li
133.708 99.4702 li
cp
133.318 98.0249 mo
135.929 98.0249 li
135.929 100.636 li
133.318 100.636 li
133.318 98.0249 li
133.318 98.0249 li
cp
132.929 97.1362 mo
135.541 97.1362 li
135.541 99.7476 li
132.929 99.7476 li
132.929 97.1362 li
132.929 97.1362 li
cp
132.513 97.1919 mo
135.125 97.1919 li
135.125 99.8032 li
132.513 99.8032 li
132.513 97.1919 li
132.513 97.1919 li
cp
132.125 96.5806 mo
134.735 96.5806 li
134.735 99.1919 li
132.125 99.1919 li
132.125 96.5806 li
132.125 96.5806 li
cp
131.708 95.7202 mo
134.318 95.7202 li
134.318 98.3306 li
131.708 98.3306 li
131.708 95.7202 li
131.708 95.7202 li
cp
131.263 96.3032 mo
133.875 96.3032 li
133.875 98.9146 li
131.263 98.9146 li
131.263 96.3032 li
131.263 96.3032 li
cp
130.818 95.9146 mo
133.429 95.9146 li
133.429 98.5249 li
130.818 98.5249 li
130.818 95.9146 li
130.818 95.9146 li
cp
130.375 95.0532 mo
132.985 95.0532 li
132.985 97.6646 li
130.375 97.6646 li
130.375 95.0532 li
130.375 95.0532 li
cp
129.902 94.7749 mo
132.513 94.7749 li
132.513 97.3862 li
129.902 97.3862 li
129.902 94.7749 li
129.902 94.7749 li
cp
129.429 93.1362 mo
132.041 93.1362 li
132.041 95.7476 li
129.429 95.7476 li
129.429 93.1362 li
129.429 93.1362 li
cp
128.958 91.6089 mo
131.568 91.6089 li
131.568 94.2202 li
128.958 94.2202 li
128.958 91.6089 li
128.958 91.6089 li
cp
128.429 90.9419 mo
131.041 90.9419 li
131.041 93.5532 li
128.429 93.5532 li
128.429 90.9419 li
128.429 90.9419 li
cp
127.929 90.5249 mo
130.541 90.5249 li
130.541 93.1362 li
127.929 93.1362 li
127.929 90.5249 li
127.929 90.5249 li
cp
127.402 89.4419 mo
130.013 89.4419 li
130.013 92.0532 li
127.402 92.0532 li
127.402 89.4419 li
127.402 89.4419 li
cp
126.846 88.7202 mo
129.458 88.7202 li
129.458 91.3306 li
126.846 91.3306 li
126.846 88.7202 li
126.846 88.7202 li
cp
126.291 88.2749 mo
128.902 88.2749 li
128.902 90.8862 li
126.291 90.8862 li
126.291 88.2749 li
126.291 88.2749 li
cp
125.708 87.1646 mo
128.318 87.1646 li
128.318 89.7749 li
125.708 89.7749 li
125.708 87.1646 li
125.708 87.1646 li
cp
125.096 86.0806 mo
127.708 86.0806 li
127.708 88.6919 li
125.096 88.6919 li
125.096 86.0806 li
125.096 86.0806 li
cp
124.458 85.6646 mo
127.068 85.6646 li
127.068 88.2749 li
124.458 88.2749 li
124.458 85.6646 li
124.458 85.6646 li
cp
123.818 84.9419 mo
126.429 84.9419 li
126.429 87.5532 li
123.818 87.5532 li
123.818 84.9419 li
123.818 84.9419 li
cp
123.152 83.1919 mo
125.763 83.1919 li
125.763 85.8032 li
123.152 85.8032 li
123.152 83.1919 li
123.152 83.1919 li
cp
122.458 81.8867 mo
125.068 81.8867 li
125.068 84.4976 li
122.458 84.4976 li
122.458 81.8867 li
122.458 81.8867 li
cp
121.708 80.7197 mo
124.318 80.7197 li
124.318 83.3311 li
121.708 83.3311 li
121.708 80.7197 li
121.708 80.7197 li
cp
120.958 79.8032 mo
123.568 79.8032 li
123.568 82.4146 li
120.958 82.4146 li
120.958 79.8032 li
120.958 79.8032 li
cp
120.179 78.2476 mo
122.791 78.2476 li
122.791 80.8589 li
120.179 80.8589 li
120.179 78.2476 li
120.179 78.2476 li
cp
119.346 77.9146 mo
121.958 77.9146 li
121.958 80.5254 li
119.346 80.5254 li
119.346 77.9146 li
119.346 77.9146 li
cp
118.458 77.7476 mo
121.068 77.7476 li
121.068 80.3589 li
118.458 80.3589 li
118.458 77.7476 li
118.458 77.7476 li
cp
117.541 76.6089 mo
120.152 76.6089 li
120.152 79.2197 li
117.541 79.2197 li
117.541 76.6089 li
117.541 76.6089 li
cp
116.596 75.0532 mo
119.208 75.0532 li
119.208 77.6646 li
116.596 77.6646 li
116.596 75.0532 li
116.596 75.0532 li
cp
115.568 72.2197 mo
118.179 72.2197 li
118.179 74.8311 li
115.568 74.8311 li
115.568 72.2197 li
115.568 72.2197 li
cp
114.485 70.6919 mo
117.096 70.6919 li
117.096 73.3032 li
114.485 73.3032 li
114.485 70.6919 li
114.485 70.6919 li
cp
113.346 68.8589 mo
115.958 68.8589 li
115.958 71.4697 li
113.346 71.4697 li
113.346 68.8589 li
113.346 68.8589 li
cp
112.096 65.9146 mo
114.708 65.9146 li
114.708 68.5254 li
112.096 68.5254 li
112.096 65.9146 li
112.096 65.9146 li
cp
110.791 62.8311 mo
113.402 62.8311 li
113.402 65.4419 li
110.791 65.4419 li
110.791 62.8311 li
110.791 62.8311 li
cp
109.374 59.3032 mo
111.985 59.3032 li
111.985 61.9146 li
109.374 61.9146 li
109.374 59.3032 li
109.374 59.3032 li
cp
107.818 55.9146 mo
110.429 55.9146 li
110.429 58.5254 li
107.818 58.5254 li
107.818 55.9146 li
107.818 55.9146 li
cp
106.124 51.8589 mo
108.735 51.8589 li
108.735 54.4697 li
106.124 54.4697 li
106.124 51.8589 li
106.124 51.8589 li
cp
104.235 50.4697 mo
106.846 50.4697 li
106.846 53.0811 li
104.235 53.0811 li
104.235 50.4697 li
104.235 50.4697 li
cp
102.124 53.4697 mo
104.735 53.4697 li
104.735 56.0811 li
102.124 56.0811 li
102.124 53.4697 li
102.124 53.4697 li
cp
99.7632 53.8589 mo
102.374 53.8589 li
102.374 56.4697 li
99.7632 56.4697 li
99.7632 53.8589 li
99.7632 53.8589 li
cp
97.0132 53.6367 mo
99.624 53.6367 li
99.624 56.2476 li
97.0132 56.2476 li
97.0132 53.6367 li
97.0132 53.6367 li
cp
93.7632 56.1089 mo
96.374 56.1089 li
96.374 58.7197 li
93.7632 58.7197 li
93.7632 56.1089 li
93.7632 56.1089 li
cp
89.7632 63.7754 mo
92.374 63.7754 li
92.374 66.3867 li
89.7632 66.3867 li
89.7632 63.7754 li
89.7632 63.7754 li
cp
84.6519 66.3032 mo
87.2632 66.3032 li
87.2632 68.9146 li
84.6519 68.9146 li
84.6519 66.3032 li
84.6519 66.3032 li
cp
77.4297 74.8589 mo
80.041 74.8589 li
80.041 77.4697 li
77.4297 77.4697 li
77.4297 74.8589 li
77.4297 74.8589 li
cp
65.0684 80.8032 mo
67.6797 80.8032 li
67.6797 83.4146 li
65.0684 83.4146 li
65.0684 80.8032 li
65.0684 80.8032 li
cp
.883665 .769161 3.05176e-5 3.05176e-5 cmyk
@
170.096 132.942 mo
172.708 132.942 li
172.708 135.553 li
170.096 135.553 li
170.096 132.942 li
170.096 132.942 li
cp
170.041 132.859 mo
172.652 132.859 li
172.652 135.47 li
170.041 135.47 li
170.041 132.859 li
170.041 132.859 li
cp
169.985 132.915 mo
172.596 132.915 li
172.596 135.525 li
169.985 135.525 li
169.985 132.915 li
169.985 132.915 li
cp
169.958 132.915 mo
172.568 132.915 li
172.568 135.525 li
169.958 135.525 li
169.958 132.915 li
169.958 132.915 li
cp
169.902 132.803 mo
172.513 132.803 li
172.513 135.415 li
169.902 135.415 li
169.902 132.803 li
169.902 132.803 li
cp
169.846 132.665 mo
172.458 132.665 li
172.458 135.275 li
169.846 135.275 li
169.846 132.665 li
169.846 132.665 li
cp
169.791 132.775 mo
172.402 132.775 li
172.402 135.386 li
169.791 135.386 li
169.791 132.775 li
169.791 132.775 li
cp
169.735 132.803 mo
172.346 132.803 li
172.346 135.415 li
169.735 135.415 li
169.735 132.803 li
169.735 132.803 li
cp
169.708 132.525 mo
172.318 132.525 li
172.318 135.136 li
169.708 135.136 li
169.708 132.525 li
169.708 132.525 li
cp
169.652 132.415 mo
172.263 132.415 li
172.263 135.025 li
169.652 135.025 li
169.652 132.415 li
169.652 132.415 li
cp
169.596 132.581 mo
172.208 132.581 li
172.208 135.192 li
169.596 135.192 li
169.596 132.581 li
169.596 132.581 li
cp
169.541 132.636 mo
172.152 132.636 li
172.152 135.248 li
169.541 135.248 li
169.541 132.636 li
169.541 132.636 li
cp
169.485 132.498 mo
172.096 132.498 li
172.096 135.109 li
169.485 135.109 li
169.485 132.498 li
169.485 132.498 li
cp
169.429 132.72 mo
172.041 132.72 li
172.041 135.331 li
169.429 135.331 li
169.429 132.72 li
169.429 132.72 li
cp
169.402 132.72 mo
172.013 132.72 li
172.013 135.331 li
169.402 135.331 li
169.402 132.72 li
169.402 132.72 li
cp
169.346 132.47 mo
171.958 132.47 li
171.958 135.081 li
169.346 135.081 li
169.346 132.47 li
169.346 132.47 li
cp
169.291 132.442 mo
171.902 132.442 li
171.902 135.053 li
169.291 135.053 li
169.291 132.442 li
169.291 132.442 li
cp
169.235 132.22 mo
171.846 132.22 li
171.846 134.831 li
169.235 134.831 li
169.235 132.22 li
169.235 132.22 li
cp
169.179 132.248 mo
171.791 132.248 li
171.791 134.859 li
169.179 134.859 li
169.179 132.248 li
169.179 132.248 li
cp
169.125 132.248 mo
171.735 132.248 li
171.735 134.859 li
169.125 134.859 li
169.125 132.248 li
169.125 132.248 li
cp
169.068 132.192 mo
171.679 132.192 li
171.679 134.803 li
169.068 134.803 li
169.068 132.192 li
169.068 132.192 li
cp
169.041 132.165 mo
171.652 132.165 li
171.652 134.775 li
169.041 134.775 li
169.041 132.165 li
169.041 132.165 li
cp
168.985 131.998 mo
171.596 131.998 li
171.596 134.609 li
168.985 134.609 li
168.985 131.998 li
168.985 131.998 li
cp
168.929 131.998 mo
171.541 131.998 li
171.541 134.609 li
168.929 134.609 li
168.929 131.998 li
168.929 131.998 li
cp
168.875 131.886 mo
171.485 131.886 li
171.485 134.498 li
168.875 134.498 li
168.875 131.886 li
168.875 131.886 li
cp
168.818 131.831 mo
171.429 131.831 li
171.429 134.442 li
168.818 134.442 li
168.818 131.831 li
168.818 131.831 li
cp
168.763 132.025 mo
171.375 132.025 li
171.375 134.636 li
168.763 134.636 li
168.763 132.025 li
168.763 132.025 li
cp
168.708 131.803 mo
171.318 131.803 li
171.318 134.415 li
168.708 134.415 li
168.708 131.803 li
168.708 131.803 li
cp
168.652 131.803 mo
171.263 131.803 li
171.263 134.415 li
168.652 134.415 li
168.652 131.803 li
168.652 131.803 li
cp
168.596 131.998 mo
171.208 131.998 li
171.208 134.609 li
168.596 134.609 li
168.596 131.998 li
168.596 131.998 li
cp
168.541 131.831 mo
171.152 131.831 li
171.152 134.442 li
168.541 134.442 li
168.541 131.831 li
168.541 131.831 li
cp
168.485 131.636 mo
171.096 131.636 li
171.096 134.248 li
168.485 134.248 li
168.485 131.636 li
168.485 131.636 li
cp
168.429 131.553 mo
171.041 131.553 li
171.041 134.165 li
168.429 134.165 li
168.429 131.553 li
168.429 131.553 li
cp
168.402 131.498 mo
171.013 131.498 li
171.013 134.109 li
168.402 134.109 li
168.402 131.498 li
168.402 131.498 li
cp
168.346 131.359 mo
170.958 131.359 li
170.958 133.97 li
168.346 133.97 li
168.346 131.359 li
168.346 131.359 li
cp
168.291 131.415 mo
170.902 131.415 li
170.902 134.025 li
168.291 134.025 li
168.291 131.415 li
168.291 131.415 li
cp
168.235 131.498 mo
170.846 131.498 li
170.846 134.109 li
168.235 134.109 li
168.235 131.498 li
168.235 131.498 li
cp
168.179 131.303 mo
170.791 131.303 li
170.791 133.915 li
168.179 133.915 li
168.179 131.303 li
168.179 131.303 li
cp
168.125 131.248 mo
170.735 131.248 li
170.735 133.859 li
168.125 133.859 li
168.125 131.248 li
168.125 131.248 li
cp
168.068 131.109 mo
170.679 131.109 li
170.679 133.72 li
168.068 133.72 li
168.068 131.109 li
168.068 131.109 li
cp
168.013 131.081 mo
170.625 131.081 li
170.625 133.692 li
168.013 133.692 li
168.013 131.081 li
168.013 131.081 li
cp
167.958 131.303 mo
170.568 131.303 li
170.568 133.915 li
167.958 133.915 li
167.958 131.303 li
167.958 131.303 li
cp
167.902 131.22 mo
170.513 131.22 li
170.513 133.831 li
167.902 133.831 li
167.902 131.22 li
167.902 131.22 li
cp
167.846 131.248 mo
170.458 131.248 li
170.458 133.859 li
167.846 133.859 li
167.846 131.248 li
167.846 131.248 li
cp
167.791 131.192 mo
170.402 131.192 li
170.402 133.803 li
167.791 133.803 li
167.791 131.192 li
167.791 131.192 li
cp
167.735 131.025 mo
170.346 131.025 li
170.346 133.636 li
167.735 133.636 li
167.735 131.025 li
167.735 131.025 li
cp
167.679 130.97 mo
170.291 130.97 li
170.291 133.581 li
167.679 133.581 li
167.679 130.97 li
167.679 130.97 li
cp
167.625 130.859 mo
170.235 130.859 li
170.235 133.47 li
167.625 133.47 li
167.625 130.859 li
167.625 130.859 li
cp
167.568 130.915 mo
170.179 130.915 li
170.179 133.525 li
167.568 133.525 li
167.568 130.915 li
167.568 130.915 li
cp
167.513 130.831 mo
170.125 130.831 li
170.125 133.442 li
167.513 133.442 li
167.513 130.831 li
167.513 130.831 li
cp
167.429 130.636 mo
170.041 130.636 li
170.041 133.248 li
167.429 133.248 li
167.429 130.636 li
167.429 130.636 li
cp
167.375 130.636 mo
169.985 130.636 li
169.985 133.248 li
167.375 133.248 li
167.375 130.636 li
167.375 130.636 li
cp
167.318 130.609 mo
169.929 130.609 li
169.929 133.22 li
167.318 133.22 li
167.318 130.609 li
167.318 130.609 li
cp
167.263 130.442 mo
169.875 130.442 li
169.875 133.053 li
167.263 133.053 li
167.263 130.442 li
167.263 130.442 li
cp
167.208 130.22 mo
169.818 130.22 li
169.818 132.831 li
167.208 132.831 li
167.208 130.22 li
167.208 130.22 li
cp
167.152 130.303 mo
169.763 130.303 li
169.763 132.915 li
167.152 132.915 li
167.152 130.303 li
167.152 130.303 li
cp
167.096 130.415 mo
169.708 130.415 li
169.708 133.025 li
167.096 133.025 li
167.096 130.415 li
167.096 130.415 li
cp
167.041 130.275 mo
169.652 130.275 li
169.652 132.886 li
167.041 132.886 li
167.041 130.275 li
167.041 130.275 li
cp
166.985 130.165 mo
169.596 130.165 li
169.596 132.775 li
166.985 132.775 li
166.985 130.165 li
166.985 130.165 li
cp
166.929 130.053 mo
169.541 130.053 li
169.541 132.665 li
166.929 132.665 li
166.929 130.053 li
166.929 130.053 li
cp
166.875 129.97 mo
169.485 129.97 li
169.485 132.581 li
166.875 132.581 li
166.875 129.97 li
166.875 129.97 li
cp
166.791 129.775 mo
169.402 129.775 li
169.402 132.386 li
166.791 132.386 li
166.791 129.775 li
166.791 129.775 li
cp
166.735 129.915 mo
169.346 129.915 li
169.346 132.525 li
166.735 132.525 li
166.735 129.915 li
166.735 129.915 li
cp
166.679 130.192 mo
169.291 130.192 li
169.291 132.803 li
166.679 132.803 li
166.679 130.192 li
166.679 130.192 li
cp
166.625 129.998 mo
169.235 129.998 li
169.235 132.609 li
166.625 132.609 li
166.625 129.998 li
166.625 129.998 li
cp
166.568 129.803 mo
169.179 129.803 li
169.179 132.415 li
166.568 132.415 li
166.568 129.803 li
166.568 129.803 li
cp
166.513 129.692 mo
169.125 129.692 li
169.125 132.303 li
166.513 132.303 li
166.513 129.692 li
166.513 129.692 li
cp
166.458 129.859 mo
169.068 129.859 li
169.068 132.47 li
166.458 132.47 li
166.458 129.859 li
166.458 129.859 li
cp
166.375 129.886 mo
168.985 129.886 li
168.985 132.498 li
166.375 132.498 li
166.375 129.886 li
166.375 129.886 li
cp
166.318 129.748 mo
168.929 129.748 li
168.929 132.359 li
166.318 132.359 li
166.318 129.748 li
166.318 129.748 li
cp
166.263 129.581 mo
168.875 129.581 li
168.875 132.192 li
166.263 132.192 li
166.263 129.581 li
166.263 129.581 li
cp
166.208 129.415 mo
168.818 129.415 li
168.818 132.025 li
166.208 132.025 li
166.208 129.415 li
166.208 129.415 li
cp
166.152 129.553 mo
168.763 129.553 li
168.763 132.165 li
166.152 132.165 li
166.152 129.553 li
166.152 129.553 li
cp
166.068 129.636 mo
168.679 129.636 li
168.679 132.248 li
166.068 132.248 li
166.068 129.636 li
166.068 129.636 li
cp
166.013 129.442 mo
168.625 129.442 li
168.625 132.053 li
166.013 132.053 li
166.013 129.442 li
166.013 129.442 li
cp
165.958 129.22 mo
168.568 129.22 li
168.568 131.831 li
165.958 131.831 li
165.958 129.22 li
165.958 129.22 li
cp
165.902 128.998 mo
168.513 128.998 li
168.513 131.609 li
165.902 131.609 li
165.902 128.998 li
165.902 128.998 li
cp
165.818 129.053 mo
168.429 129.053 li
168.429 131.665 li
165.818 131.665 li
165.818 129.053 li
165.818 129.053 li
cp
165.763 129.275 mo
168.375 129.275 li
168.375 131.886 li
165.763 131.886 li
165.763 129.275 li
165.763 129.275 li
cp
165.708 129.331 mo
168.318 129.331 li
168.318 131.942 li
165.708 131.942 li
165.708 129.331 li
165.708 129.331 li
cp
165.652 129.22 mo
168.263 129.22 li
168.263 131.831 li
165.652 131.831 li
165.652 129.22 li
165.652 129.22 li
cp
165.568 128.97 mo
168.179 128.97 li
168.179 131.581 li
165.568 131.581 li
165.568 128.97 li
165.568 128.97 li
cp
165.513 128.831 mo
168.125 128.831 li
168.125 131.442 li
165.513 131.442 li
165.513 128.831 li
165.513 128.831 li
cp
165.458 128.748 mo
168.068 128.748 li
168.068 131.359 li
165.458 131.359 li
165.458 128.748 li
165.458 128.748 li
cp
165.375 128.831 mo
167.985 128.831 li
167.985 131.442 li
165.375 131.442 li
165.375 128.831 li
165.375 128.831 li
cp
165.318 128.692 mo
167.929 128.692 li
167.929 131.303 li
165.318 131.303 li
165.318 128.692 li
165.318 128.692 li
cp
165.263 128.442 mo
167.875 128.442 li
167.875 131.053 li
165.263 131.053 li
165.263 128.442 li
165.263 128.442 li
cp
165.179 128.498 mo
167.791 128.498 li
167.791 131.109 li
165.179 131.109 li
165.179 128.498 li
165.179 128.498 li
cp
165.125 128.553 mo
167.735 128.553 li
167.735 131.165 li
165.125 131.165 li
165.125 128.553 li
165.125 128.553 li
cp
165.068 128.775 mo
167.679 128.775 li
167.679 131.386 li
165.068 131.386 li
165.068 128.775 li
165.068 128.775 li
cp
164.985 128.748 mo
167.596 128.748 li
167.596 131.359 li
164.985 131.359 li
164.985 128.748 li
164.985 128.748 li
cp
164.929 128.275 mo
167.541 128.275 li
167.541 130.886 li
164.929 130.886 li
164.929 128.275 li
164.929 128.275 li
cp
164.875 128.192 mo
167.485 128.192 li
167.485 130.803 li
164.875 130.803 li
164.875 128.192 li
164.875 128.192 li
cp
164.791 128.331 mo
167.402 128.331 li
167.402 130.942 li
164.791 130.942 li
164.791 128.331 li
164.791 128.331 li
cp
164.735 128.442 mo
167.346 128.442 li
167.346 131.053 li
164.735 131.053 li
164.735 128.442 li
164.735 128.442 li
cp
164.679 128.359 mo
167.291 128.359 li
167.291 130.97 li
164.679 130.97 li
164.679 128.359 li
164.679 128.359 li
cp
164.596 128.248 mo
167.208 128.248 li
167.208 130.859 li
164.596 130.859 li
164.596 128.248 li
164.596 128.248 li
cp
164.541 128.22 mo
167.152 128.22 li
167.152 130.831 li
164.541 130.831 li
164.541 128.22 li
164.541 128.22 li
cp
164.458 128.248 mo
167.068 128.248 li
167.068 130.859 li
164.458 130.859 li
164.458 128.248 li
164.458 128.248 li
cp
164.402 128.359 mo
167.013 128.359 li
167.013 130.97 li
164.402 130.97 li
164.402 128.359 li
164.402 128.359 li
cp
164.318 128.165 mo
166.929 128.165 li
166.929 130.775 li
164.318 130.775 li
164.318 128.165 li
164.318 128.165 li
cp
164.263 127.859 mo
166.875 127.859 li
166.875 130.47 li
164.263 130.47 li
164.263 127.859 li
164.263 127.859 li
cp
164.179 127.748 mo
166.791 127.748 li
166.791 130.359 li
164.179 130.359 li
164.179 127.748 li
164.179 127.748 li
cp
164.125 127.692 mo
166.735 127.692 li
166.735 130.303 li
164.125 130.303 li
164.125 127.692 li
164.125 127.692 li
cp
164.068 127.803 mo
166.679 127.803 li
166.679 130.415 li
164.068 130.415 li
164.068 127.803 li
164.068 127.803 li
cp
163.985 127.692 mo
166.596 127.692 li
166.596 130.303 li
163.985 130.303 li
163.985 127.692 li
163.985 127.692 li
cp
163.929 127.525 mo
166.541 127.525 li
166.541 130.136 li
163.929 130.136 li
163.929 127.525 li
163.929 127.525 li
cp
163.846 127.525 mo
166.458 127.525 li
166.458 130.136 li
163.846 130.136 li
163.846 127.525 li
163.846 127.525 li
cp
163.763 127.248 mo
166.375 127.248 li
166.375 129.859 li
163.763 129.859 li
163.763 127.248 li
163.763 127.248 li
cp
163.708 127.22 mo
166.318 127.22 li
166.318 129.831 li
163.708 129.831 li
163.708 127.22 li
163.708 127.22 li
cp
163.625 127.415 mo
166.235 127.415 li
166.235 130.025 li
163.625 130.025 li
163.625 127.415 li
163.625 127.415 li
cp
163.568 127.415 mo
166.179 127.415 li
166.179 130.025 li
163.568 130.025 li
163.568 127.415 li
163.568 127.415 li
cp
163.485 127.415 mo
166.096 127.415 li
166.096 130.025 li
163.485 130.025 li
163.485 127.415 li
163.485 127.415 li
cp
163.429 127.081 mo
166.041 127.081 li
166.041 129.692 li
163.429 129.692 li
163.429 127.081 li
163.429 127.081 li
cp
163.346 126.97 mo
165.958 126.97 li
165.958 129.581 li
163.346 129.581 li
163.346 126.97 li
163.346 126.97 li
cp
163.291 127.081 mo
165.902 127.081 li
165.902 129.692 li
163.291 129.692 li
163.291 127.081 li
163.291 127.081 li
cp
163.208 126.942 mo
165.818 126.942 li
165.818 129.553 li
163.208 129.553 li
163.208 126.942 li
163.208 126.942 li
cp
163.125 126.831 mo
165.735 126.831 li
165.735 129.442 li
163.125 129.442 li
163.125 126.831 li
163.125 126.831 li
cp
163.068 126.72 mo
165.679 126.72 li
165.679 129.331 li
163.068 129.331 li
163.068 126.72 li
163.068 126.72 li
cp
162.985 126.665 mo
165.596 126.665 li
165.596 129.275 li
162.985 129.275 li
162.985 126.665 li
162.985 126.665 li
cp
162.902 126.775 mo
165.513 126.775 li
165.513 129.386 li
162.902 129.386 li
162.902 126.775 li
162.902 126.775 li
cp
162.846 126.97 mo
165.458 126.97 li
165.458 129.581 li
162.846 129.581 li
162.846 126.97 li
162.846 126.97 li
cp
162.763 126.859 mo
165.375 126.859 li
165.375 129.47 li
162.763 129.47 li
162.763 126.859 li
162.763 126.859 li
cp
162.679 126.498 mo
165.291 126.498 li
165.291 129.109 li
162.679 129.109 li
162.679 126.498 li
162.679 126.498 li
cp
162.625 126.498 mo
165.235 126.498 li
165.235 129.109 li
162.625 129.109 li
162.625 126.498 li
162.625 126.498 li
cp
162.541 126.498 mo
165.152 126.498 li
165.152 129.109 li
162.541 129.109 li
162.541 126.498 li
162.541 126.498 li
cp
162.458 126.331 mo
165.068 126.331 li
165.068 128.942 li
162.458 128.942 li
162.458 126.331 li
162.458 126.331 li
cp
162.402 126.525 mo
165.013 126.525 li
165.013 129.136 li
162.402 129.136 li
162.402 126.525 li
162.402 126.525 li
cp
162.318 126.359 mo
164.929 126.359 li
164.929 128.97 li
162.318 128.97 li
162.318 126.359 li
162.318 126.359 li
cp
162.235 126.081 mo
164.846 126.081 li
164.846 128.692 li
162.235 128.692 li
162.235 126.081 li
162.235 126.081 li
cp
162.152 126.109 mo
164.763 126.109 li
164.763 128.72 li
162.152 128.72 li
162.152 126.109 li
162.152 126.109 li
cp
162.096 126.109 mo
164.708 126.109 li
164.708 128.72 li
162.096 128.72 li
162.096 126.109 li
162.096 126.109 li
cp
162.013 126.192 mo
164.625 126.192 li
164.625 128.803 li
162.013 128.803 li
162.013 126.192 li
162.013 126.192 li
cp
161.929 126.109 mo
164.541 126.109 li
164.541 128.72 li
161.929 128.72 li
161.929 126.109 li
161.929 126.109 li
cp
161.846 125.97 mo
164.458 125.97 li
164.458 128.581 li
161.846 128.581 li
161.846 125.97 li
161.846 125.97 li
cp
161.763 125.915 mo
164.375 125.915 li
164.375 128.525 li
161.763 128.525 li
161.763 125.915 li
161.763 125.915 li
cp
161.708 125.803 mo
164.318 125.803 li
164.318 128.415 li
161.708 128.415 li
161.708 125.803 li
161.708 125.803 li
cp
161.625 125.748 mo
164.235 125.748 li
164.235 128.359 li
161.625 128.359 li
161.625 125.748 li
161.625 125.748 li
cp
161.541 125.665 mo
164.152 125.665 li
164.152 128.275 li
161.541 128.275 li
161.541 125.665 li
161.541 125.665 li
cp
161.458 125.331 mo
164.068 125.331 li
164.068 127.942 li
161.458 127.942 li
161.458 125.331 li
161.458 125.331 li
cp
161.375 125.47 mo
163.985 125.47 li
163.985 128.081 li
161.375 128.081 li
161.375 125.47 li
161.375 125.47 li
cp
161.291 125.581 mo
163.902 125.581 li
163.902 128.192 li
161.291 128.192 li
161.291 125.581 li
161.291 125.581 li
cp
161.208 125.415 mo
163.818 125.415 li
163.818 128.025 li
161.208 128.025 li
161.208 125.415 li
161.208 125.415 li
cp
161.125 125.275 mo
163.735 125.275 li
163.735 127.886 li
161.125 127.886 li
161.125 125.275 li
161.125 125.275 li
cp
161.041 125.053 mo
163.652 125.053 li
163.652 127.665 li
161.041 127.665 li
161.041 125.053 li
161.041 125.053 li
cp
160.958 124.998 mo
163.568 124.998 li
163.568 127.609 li
160.958 127.609 li
160.958 124.998 li
160.958 124.998 li
cp
160.875 125.081 mo
163.485 125.081 li
163.485 127.692 li
160.875 127.692 li
160.875 125.081 li
160.875 125.081 li
cp
160.818 125.192 mo
163.429 125.192 li
163.429 127.803 li
160.818 127.803 li
160.818 125.192 li
160.818 125.192 li
cp
160.735 125.025 mo
163.346 125.025 li
163.346 127.636 li
160.735 127.636 li
160.735 125.025 li
160.735 125.025 li
cp
160.652 124.942 mo
163.263 124.942 li
163.263 127.553 li
160.652 127.553 li
160.652 124.942 li
160.652 124.942 li
cp
160.541 124.97 mo
163.152 124.97 li
163.152 127.581 li
160.541 127.581 li
160.541 124.97 li
160.541 124.97 li
cp
160.458 124.998 mo
163.068 124.998 li
163.068 127.609 li
160.458 127.609 li
160.458 124.998 li
160.458 124.998 li
cp
160.375 124.803 mo
162.985 124.803 li
162.985 127.415 li
160.375 127.415 li
160.375 124.803 li
160.375 124.803 li
cp
160.291 124.415 mo
162.902 124.415 li
162.902 127.025 li
160.291 127.025 li
160.291 124.415 li
160.291 124.415 li
cp
160.208 124.442 mo
162.818 124.442 li
162.818 127.053 li
160.208 127.053 li
160.208 124.442 li
160.208 124.442 li
cp
160.125 124.665 mo
162.735 124.665 li
162.735 127.275 li
160.125 127.275 li
160.125 124.665 li
160.125 124.665 li
cp
160.041 124.636 mo
162.652 124.636 li
162.652 127.248 li
160.041 127.248 li
160.041 124.636 li
160.041 124.636 li
cp
159.958 124.692 mo
162.568 124.692 li
162.568 127.303 li
159.958 127.303 li
159.958 124.692 li
159.958 124.692 li
cp
159.875 124.553 mo
162.485 124.553 li
162.485 127.165 li
159.875 127.165 li
159.875 124.553 li
159.875 124.553 li
cp
159.791 124.386 mo
162.402 124.386 li
162.402 126.998 li
159.791 126.998 li
159.791 124.386 li
159.791 124.386 li
cp
159.679 124.386 mo
162.291 124.386 li
162.291 126.998 li
159.679 126.998 li
159.679 124.386 li
159.679 124.386 li
cp
159.596 124.081 mo
162.208 124.081 li
162.208 126.692 li
159.596 126.692 li
159.596 124.081 li
159.596 124.081 li
cp
@
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPH+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B81F2C027D90222AF37AF8158DABD8A6A3309F2136
FACBE1848A44C17EBCB6720936CA51DBF738C2EEE54BA4F168ED7CF54A35C3CA
C2EC5792742EF714EF05> |-
/parenright <1C60D8A8C9B81F2C3A8416F95B41DEC1B2BC8682121EE1FC7A7
6516A86A96EAF9A7B20C852F99192A17B1BC2E1C3BBEEF7820FA171548238E9D
502CFB76D8CAB7DA316A1> |-
/comma <1C60D8A8C9B854D0E112FCA8966643D972DDF4069EA1A683517CC489
AC8679957DA7C55CD598C98C32> |-
/slash <1C60D8A8C9B854D079F228A01DE49912BABB5E0DCC35A8718ABAD0B4
9BD5874C536DBB> |-
/R <1C60D8A8C9B6079F7627FE36DB81007EC91E9799402440B74F883E0E71F7
6F9B49D24FCA75B072C6EA389BCABE75262B6C5F8A70C6CE0801838B3187DCBE
B76B5A56F8F52F1F1F3E3403EF7802CE27BB130E1362790F9F11E90781F59694
A46F1107A77DF7B9D4B9C5CF3BF43FA3061CCC40E069C9A95B0C100D7A665D7D
FB9A58F221F4A7F862304DBC9AF6BADF1C566CC2137F432AD7B0604589D6A9> |-
/S <1C60D8A8C9B64EDFD79AA67B28B8030B7B2511726D47A2C647E6ADE4A75D
60FE51B70409FEA2C2A9D7923702F7072E14338647DCA5330DE50EDA2CCB0752
54DDA0450AE151E3AD2AF69F31ACB18B90B175E0A002C815586B968D823D305B
880C63E38B1F61D3E4825B28FACD70F6184988F8C8142F835C751F2AFA99C8FD
CB3C32A924504B161C26B5D49345699D3C6CC842F42B517C47936E8733FE1D65
069FA9ED0ADD81E34596> |-
/q <1C60D8A8C9B7EF3272B02106CF08D5008F2C7B5C8A9E114B257E751D0EE2
E0E889E013C54302409DAD4E6D23B15FB78D5F060BEB9C423829DC7C805B4072
3AE1214611FA3E3BE7E73C9A4AC39A13D58C83078721D53EED13089D735BBC4E
DDCEBC620368A1BF783774342A4B535057A642890CD57B3AEB75C87B92DEA681
35> |-
/t <1C60D8A8C9B854D0E39D4A6FD38FFEE65D2052948A24EB808F85141A7307
6E5305FE4B51354AB4CDEBC31E5AC6CD8CD9912464DD321E756CA23CBAFB773F
242158A04D01B1DC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPH+Helvetica /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 47 /slash put
dup 82 /R put
dup 83 /S put
dup 113 /q put
dup 116 /t put
pop
%ADOEndSubsetFont
/SYHDPH+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 2{/.notdef}rp 
/slash /zero /one /two /three /four /.notdef /six 
/.notdef /eight 25{/.notdef}rp /R /S 29{/.notdef}rp /q 2{/.notdef}rp 
/t 10{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPH+Helvetica nf
SYHDPH+Helvetica*1 [10 0 0 -10 0 0 ]msf
104.096 175.3 mo
(q R\(t\))
[5.56006 2.77979 7.21973 3.33008 2.78027 0 ]xsh
SYHDPH+Helvetica*1 [0 -10 -10 0 0 0 ]msf
11.8721 105.191 mo
(S\(q,t\)/R\(t\))
[-6.66992 -3.33008 -5.55957 -2.78027 -2.77979 -3.33008 -2.78027 -7.21973 -3.32959 -2.78027 0 ]ysh
SYHDPH+Helvetica*1 [0 -8 -8 0 0 0 ]msf
6.87207 61.3032 mo
(2)sh
SYHDPH+Helvetica*1 [3.33333 0 0 -3.33333 0 0 ]msf
34.0649 156.771 mo
( )sh
198.289 7.69043 mo
( )sh
147.096 59.5811 mo
147.096 9.16455 li
196.679 9.16455 li
196.679 59.5811 li
147.096 59.5811 li
cp
0 0 0 0 cmyk
ef
.166667 lw
147.096 59.5811 mo
147.096 9.16455 li
196.679 9.16455 li
196.679 59.5811 li
147.096 59.5811 li
@
196.679 59.5811 mo
196.679 9.16455 li
147.096 59.5811 mo
147.096 9.16455 li
147.096 9.16455 mo
196.679 9.16455 li
147.096 59.5811 mo
196.679 59.5811 li
147.096 59.5811 mo
147.096 9.16455 li
147.096 59.5811 mo
196.679 59.5811 li
196.679 59.5811 mo
196.679 9.16455 li
147.096 59.5811 mo
147.096 9.16455 li
147.096 9.16455 mo
196.679 9.16455 li
147.096 59.5811 mo
196.679 59.5811 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPH+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/equal <1C60D8A8C9B7F374CC52CC6AFA2AC69E2626E08155548B3F09D59299
6A164FA4C0B7A39FE024A3E562036F05B86028> |-
/c <1C60D8A8C9B7A73DE7D498F17521D6359F9ADD96B62202C43AB7E2B6A506
D4DE60506EB0B21A851A7E637BA285607D05D1170907CD76EA31977E70CEDA0D
ED90924EF61C48FC884B70C05F0A56FF474D664DA9646860BA> |-
/e <1C60D8A8C9B7EF326F03D0F4E599F9BA01540FB0E0E85D7F225CDC294805
3BFC3EBD8940FD214D65182E7E2A6BF280C1D3E71E32DCA4B45882394B8537B4
55EEE6231FF45D6BCFA8256009524D08C8BF5B282ED3F5CE087BE2CCF3F7D8A7
3D66E823FC9A9819C98A55> |-
/s <1C60D8A8C9B7A73DF2FC7D7CF8DDB6CD30877299DE999D72A56E2491407E
5E9DB603A87C07C7833274D37DB06BC1585B03D1793010176CAC94215F5F838E
E9E9FCB1BE630D2F0EB931A6A4E8BD85C1E9E977D2BF9622D6DF0584BAE6A5C1
944BB5B543054E11EC2B82F9913C122731ED179BC7F4BE008E0F45> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPH+Helvetica /Encoding get
dup 61 /equal put
dup 99 /c put
dup 101 /e put
dup 115 /s put
pop
%ADOEndSubsetFont
/SYHDPH+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 2{/.notdef}rp 
/slash /zero /one /two /three /four /.notdef /six 
/.notdef /eight 4{/.notdef}rp /equal 20{/.notdef}rp /R /S 15{/.notdef}rp 
/c /.notdef /e 11{/.notdef}rp /q /.notdef /s /t 
10{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPH+Helvetica nf
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
160.098 18.7476 mo
(t = 3 sec)
[2.22363 2.22461 4.67188 2.22363 4.44824 2.22363 4 4.44824 0 ]xsh
gsave
149.708 20.3032 mo
158.513 20.3032 li
158.513 11.4976 li
149.708 11.4976 li
149.708 20.3032 li
cp
clp
1 lw
155.773 15.8652 mo
155.773 16.7856 155.026 17.5322 154.106 17.5322 cv
153.186 17.5322 152.439 16.7856 152.439 15.8652 cv
152.439 14.9453 153.186 14.1987 154.106 14.1987 cv
155.026 14.1987 155.773 14.9453 155.773 15.8652 cv
@
grestore
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPH+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF322448D34FC69162D5B3FA33847725A6C54ED91995E
45D690B7D0E476479D9EDB4F61F0B8E7F37F7415ECCEF12BD0BB3A993663B38C
8EEAA49F314551016ECC1F8DE4119690672560B970B6156CCA876B5A96262978
DF14B4FCFDE401A9555> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPH+Helvetica /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/SYHDPH+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 2{/.notdef}rp 
/slash /zero /one /two /three /four /five /six 
/.notdef /eight 4{/.notdef}rp /equal 20{/.notdef}rp /R /S 15{/.notdef}rp 
/c /.notdef /e 11{/.notdef}rp /q /.notdef /s /t 
10{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPH+Helvetica nf
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
160.098 31.0522 mo
(t = 5 sec)
[2.22363 2.22461 4.67188 2.22363 4.44824 2.22363 4 4.44824 0 ]xsh
gsave
149.708 32.6089 mo
158.513 32.6089 li
158.513 23.8032 li
149.708 23.8032 li
149.708 32.6089 li
cp
clp
1 lw
155.263 27.0254 mo
152.929 29.3589 li
152.929 27.0254 mo
155.263 29.3589 li
3.05176e-5 .993988 1 3.05176e-5 cmyk
@
grestore
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
160.098 43.3833 mo
(t = 8 sec)
[2.22363 2.22461 4.67188 2.22363 4.44824 2.22363 4 4.44824 0 ]xsh
gsave
149.708 44.9419 mo
158.513 44.9419 li
158.513 36.1367 li
149.708 36.1367 li
149.708 44.9419 li
cp
clp
1 lw
0 lj
154.096 42.7197 mo
155.763 40.5254 li
154.096 38.3311 li
152.429 40.5254 li
154.096 42.7197 li
154.096 42.7197 li
cp
.627649 3.05176e-5 1 3.05176e-5 cmyk
@
grestore
SYHDPH+Helvetica*1 [8 0 0 -8 0 0 ]msf
160.098 55.6904 mo
(t = 10 sec)
[2.22363 2.22461 4.67188 2.22363 4.44824 4.44824 2.22363 4 4.44824 0 ]xsh
gsave
149.708 57.2476 mo
158.513 57.2476 li
158.513 48.4419 li
149.708 48.4419 li
149.708 57.2476 li
cp
clp
1 lw
0 lj
152.791 51.5254 mo
155.402 51.5254 li
155.402 54.1367 li
152.791 54.1367 li
152.791 51.5254 li
152.791 51.5254 li
cp
.883665 .769161 3.05176e-5 3.05176e-5 cmyk
@
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/SYHDPH+Helvetica*1 uf
/SYHDPH+Helvetica uf
/Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 15.0
%%AI8_CreatorVersion: 15.0.0
%%For: (APS Workgroup) ()
%%Title: (11.eps)
%%CreationDate: 11/2/2011 7:21 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B6PgcdjTN,cW^5O@q1^r"5/5FS8li*d'g26@)>%4hd:k5$D$Adpc3E@HM=MWcn25m;Q3Vmg>"4gB7k)?n6R%4P?[''kqu>Z
%XGL)"/]jhOIr0']HKW^E?RV47-[7$W'9WDH/]:PD<"`2&`\O&,5eY=E1]*IBe)ko-OX?:_YWj+'Ebjc$Xhi_2lQ*ZQXkcSIrpW-f
%V1,K:V63`9%]61@6gF\'9m`FsqVB,,2!Xh2Y!JK8Ie'>dlV"YEpq&Chj7sOITCTilC"DTo:M/L$Bq.Qhc/RpG$guQq"EatB%)13R
%qh%Xnes2]&@o@ON)nhm%2sD.Vj$K20&N12F*kGB9^,o:)'0W5m"WkscpYKFADG>Jq_,HGH*=kZtXmm3BJ4'>_ZcSSriP`,tJraKK
%*)DJu9&HCmCFWbo$e]VQ\X!ddoVq]4MP=P.a[&kAnS>+'/=T2)=\PaO6#&!B:>dM,JhfL;h`^3gJB1bm)H/1&a4#t'rue-,M$1k]
%:\s@(esFBXK,u/-1mTG$4<A[B53f&o7'5?mVaEjh.%dlbAS_2r9bDLWq_LK5DCm)#5uVpUqBLtKM?1f_8/b_CYAn3M@PY9Uc6NG4
%@Zk(k-\O?#Kj.=ud)9R.TY0heRtc*Z("RgPVQbnholSu9mgX<=KB\a!\CX`X3\@FEa9NbS/>N&+bPnDf73eF"V#fmE,/EcSdLsU>
%N\;f>b7@"*K2rLkN^jJ<k7I^X:^POoT[K:;&E"g[fT?)8/,blF3onXP;2!7p$9ke!pahcb;c/4_U'P[+&`/BhH!@?.lD.T5"iX@g
%pm"H;YuD'fV,F]>CG_N71>+4Ca_((SJM0hNRtY>@%6gIf\I?I"AZ/cb_jbZab1(1q[T6%tE:mBD$Iigd''V7;1?fC%8_ud6p0IlB
%K0N0@`W_u2%*$7U9A[LXi"O8KT\pKESY:[8L2k$Wr.75N-T"8R7@Jrs_'^9cI"B<l/q?Q58pUKV?tf$9ASO)I`b#O$Sm\#FP+W.G
%8Q@Nl1'#aNdQ7LPGFhMD.mj5$0c2-_6;qD=aiMRc3cXWmMSU._9G>p;atQ<[KO6Du63m!O3tID1'8jUCiKHq^+W#`8dK>$ABE<=K
%;%f?ZdRAb7-q9<=E'm)j#(Sd2\jdg+[b8$M,4$D9JH7MEK`U2uAE;f/N"J7I(nl'h,Jabe%%g?##)K98.VC8gTT?l2Pg7@<&IkKs
%gj)4AKIGIs@<5)G:\mS#:EU>3iQecd@H/TgLLLZUBq@.HhNNGro44O-asM1*&4DtciI?NFQ.8[qT^$@d.dN$:93DLQdb,O8-kTN^
%W/7X(A[WJZQ.^[O0m)F?$;+EE=dL":dP.ZCo,R`7IjqGZks%HVYEZf_+)Gia:\dZ_U$B`FH)1?as3bWP>PUqkAMW=j-6kn(d!s"Y
%H):Ebs%4U.>PUqkU$@mMH)1?as/K)i>PUqkEUl?:k@"kZPKY]Uc$kei0Ld3_:*aTi?DuD3R9CnBJ\T0_O=o,2Y8$e4X/.?92iZZA
%79hH6X2>>;:oIC(1i4F&MN]ORGuAnt:Z3miLJC1$CorjC79od%>H%6mKeJV([(-NNdliI-i,;j=;]#7%s2)j`0PWePBa4UT_nf:V
%3$=bfOrjg<R04FFNI6K_>_4eqi`IEs6-(<?nkJO7+Gp"BLd?:3!)hd*r3!n<k'M_8&-'`lde![6_e2l#18H()+Lq#fN-"AQ"7Qg*
%6OVMQ]nGNFolQJD-#:s>pF27'Q8.i=Rc`c=UX!\Eb/JD'>Z7MVclV+qbn3paS>NTZWK`<OR^@,=c/?l/SL2i*OYk&>#Z)nP0tV.g
%T-N:W75?@['Tj-.9TelC&?9e*7E4p$A-7m-l?;:2,#?Xeh@T$dftsH03R+S@'1q+k[SSfJe;Tb,MH,U\QkY-9#)E+'C^Hdl99t_F
%NOX7kH!iak/8H@QT`7C`ICQhfd]>4GW4J'^<s_A!AkAj3(TVL(,DH5iAogbiL.iNR8!^QC7m5I<Y"Hj!2]C2j6)pY<,rK6#GDpg)
%$BD3-7^S+3lXuZe1;8f?$$T]^Jc_Jc0rlT9Gg6lE<[MMj=-niAaRVV2cQg";Jc#%QKnL#J<&GqcU8X7lU.dhZJr13IW1cU.SO,D[
%)&e:m$1sI6OsF3N"GW5,?oDE"keAVC<FcK'Z"K"F%Tc??Z5%-<s(kR9)W9)GWH8k<TefL?4JOE\9d^*2["Q/D![qb;4Mg.]1nOtO
%AJ$2`]dL/U5;&h)s"+)Gjt_lSd*;`S;)fEIZIsc<"@Fd.!QV\[cobJOcq+?^_ZnWLM1aau[))t:)E(=i-Y.ij$8=/kBJJ9jTWa4k
%9c#67@0gFs,84-W3_</'l&,m!!]8!Y\]?$P`@@,]!O3NJ7>eUEX-#$u.L0KaJOnFJ,khG'>/C[OM[-aOU3)d8/F$D-/CHj!s-Rq.
%PbjNqVirgfBb7oh-cPjK\??/qTaHKF",(CHb#MVJhG=1_fZKBlTc4uBF\Fi!\H.i<2X,N"YK/3MKehk1O`;=.;aQpL3]%&+@6uj-
%XoK,0AeS`$rX+;ld06!f_#hh+:rO(3T$1?uh5sob9Ou(P)G!N/^C09o)3%h^1c!0&@n)Gi`G?-d"*-E-TRgB67A(lfnQLKE<UZuV
%F:,8[R4<n)/7kMEA=JID`\8jNPq1#@,J+9qSkD>U8e&GmaDR$<'re.4Cdkj1\dVRmAVu.1n6iSek/A$G57D*@H$0?\MkhLYhc\)i
%'20NE!DB/XU)ShjZ=$?M.Bn"1,9RU8H*k-p%1rkjFBSALcU3SI.ftnsZr4WDb6X%5(,J@I6@Wd074O60245RK$oC:0kY+<W)-F+h
%f>F\hMF\F,C"/&]QH]cV4>8,G/=u`l]KsV$:>&QZ5C"d\,_5SClHgceq.%.1!5+0jm5,U-'NtK77IhJq%uD[dd$Mb>`30d4"IRR^
%:qrt$K[Db`$)hm@/7R9:erE!R"fR;.is?EbNiVsbg[>^aKHcK!#'LF-=+Q7nK^j<I7&.e$<oM1nAMTCH<^pD8kqmK!,EGpe)hq]\
%n$iF%g]/`oGb)p<8Y^7)l;!MM#;ZZ\0WYOr0<>e3T'boV`ZE3I_?7YT0^L9)OI!&j;C+"']MYAs'^qP9o>i3\>XB^W(!<mEZppB5
%m5hI&O<gJQN"Lrai*as2#>#[^@1+RM'2"3\;_<VZ>:.Zb%Z:cr13"VG7:PK_(Ei'p/n$eT+uGDd%?a\E5*?YY]ZuVL(\"eg9T&#S
%)b!_7DbtS$RBD]fJ3MbQW%\Z[>pL^eF\2`N2KgFd;oo)B5U\,*N=&WQ(5be[A<m@UGrD"^7pn:_!XDfL1<H+k(mL""G<V^B*rSSj
%/7a^a%gaegOF^e'04\dN'VR!gQXGto!d7q5$j*G;gi*Vm/E(WNbNd\I_]U@;mfZ5bM%ZLC8uQPajjub375cP`Hh^=#%01UD/Cej!
%4N.9YjXAL/:%CpNnT.j&`2jTd`76P`MU`u7pJA&DpG#f88LT0QbK,&p6V!WC?*?!YM`e*rGjKji%"*iU4+5'.GUt&u-OE6jFBr@8
%NptnIP01.'6.TJo.M(4UZRU;fM>S-#]nU^%C<>c.^ug-p-d&O?O,>^j@TN)jaB.ZaR<bc0%jbuo<<M&W'rjb:?&&^H7C<8L^G4e\
%a`bL!grj7XMUcHL%;W1IYG+@/L9X4VcSMt"2YRe\9:9#(*dL&r*6<lNMumg,;Eh8uASdhN<Hnn#`\SKf8:O$s8@"k@=ih+bYrsI-
%+XaWsjg"D4e]C9&;;jCBC6EF1N.$l/A?ue^?T3H3"Oj,N!j>"C1dVX)Ug4O"#UHf!6(5T[VGal)L>$?Q*ECM5'n&f*QE2QWNnBgD
%X2%C0_i'alOu951<(-@.TFuc@)0i>'4"*&3d)F3?W$"S[/*8atRS:*q"Y/!T)3oh0VT_S7cq8T5<_5!;VT(f&:X'N<NE=\CFjL;Y
%/,`WmIY3E',.h?Sj'dH4:>[Ncn@K'B3ZEADHLUhYB&c+^iDc9<#4HtS/XqX4O'@*,i80GpBB.qh064'*mFF[_^\*BBhLI`U[`L>)
%hsZOO4Tmt*D8!\WA,6GDO*>p1cKtG10DuP+8`T'UE&MD>]((\RCHNTThe0VdDS%R8:#i/%2*R-JD8QJ**r\@k]mi^eOLQ_96!gs3
%kijoV%D&[`7pPo1J#9o.=,KeoXf_d=%&gFf%Oe;=PiCNXZnG-#]er!ANSel*dMRsgZ50'k=ri9V<$L1eNQ9J?o*>4b`S9G3QS`Bb
%`h's?<$oo5a#h2d+55keq^-ac#/(&;Seg;ks1M1.58[/U++Ha%dNC`nd2&Zi2u_Xu5dq;.d3Q\$rRh>(S5&"lrsU82KXBTT*1q\=
%,t\*dlHH,'r-PllB>ccYf'T.+a/sK[DQhqfPS"uIPT$JfhlTI_f#KqrADlRqX>NIii9Nn6s$gDCLQaSZ/&[@5*`,d(!jS\mbp'uB
%;'(,t"qWFgj(6quGSO;@=)hg$8l\m).bEE&V=k4OI8u\`\P./B&O4)3;)>,G_C;I'WiC#1qK+4=qk!JY]i"f*r,g?lR^cf/\g!EC
%<0aZJ>'K&hji;>!W'qVS,Dp@4-h.rQgg];XWG8mJka(!p$_sIC`B+JK&udLGeg7.JC.aZTogl&'.Fh@JkfIB]KT6'63$cIuXA;2`
%Kcr#lfB`/0m_K!WN#ATU,EQN+rljFaJ&pq)7`HPDf^m]@<eg=3ab,r'am<6SXdpS$nrT4Zb\4#/c4E=IEbd=Km#sI;l63;mO"2MI
%1sG'p#IfB](MdZcfH%Dsb<I3Q,tXcB+L"RnlR?.(-R8OAo@!!Od*)913#h5qhM.W:!k@sXjVZ5\C?r8*.<VN([/bWJI(Pd=VGaMG
%)[1)IWqBS+BoTboeaZH-pC7*_WF(eEL?!3K!V3TYpfm"o8#h=*-\r2_DHc(_PK'*jet=m,__:)ZO*ZVo2d6Pj9'aVU8'N7/0LCT5
%Q#IT]#`Aba=,oPRVB9TM5%<dj\TRIAf6Qr68Wss?^>$PSDt5J=W.#q?GM#!q-3pFNd`q;uo!*?u*;1+8O95'>1<JQ*WUm:o+r<-=
%J6r5%)_\[^i.79JkbH`aC>[s_%*56I,:_tdX;aIT^64&lfD'R*!CX]q#$k13F$0\J_s\0?d]Ql'ZpsO%9%HrfQ$/A,U=Dps)RX/&
%=n3&32lD0%&1JG\*";j'^q\H@J:YNJ%4H\RqNf\Vkk.C5HdnDCpY=IOI#tJi$bl0gNq2lSr&R+#51-_:XRY*"n_1ko\(:5FQfk1.
%D&5'$pu&UDYI-@L`:-4QM$N[cKd;I%B0G3E:X55s*P1MRDr*:/1PBBU`p?R[Ca#JhKE?\\C_He<Z+eSq$&hq-!o3.8s%<\M\OC`6
%H\<<fTQ>QIUr\/K`,juc@GoM^s2U_+`q3'O+OEliE+>nS]u8S+Qu2WOlMu67j$31PmIATGYUc-ShHgTfo8NnQXqX<?F51OU@1)C7
%&R;h**k2-Lc)_2.Wa+]had>UVU8<ONpc_$0r#.brIt372f7C'?jQ5j]Gd<<peAW+iA8U#7>Q'sp(g]m0$4bF/Uuc9.-JG*lf:r[m
%5fj=uqSUUFe9-Ek<]'BN(gst21GsD)K1%P;+\bc%BH.F[?$qo*Yrkp/CSWpW7Bb8099*&-PF;D7:'g9U6LJdTC]V]X3sZnIfpPR3
%_s`'UqtjA+btV@a-,CX[etI.WrGSbVe=h@rJ,\>/b*0=7r!V`crrPqZl1[7=n$$dlfeS"/[JEqqmVL2K-!Zq9NnTKXO/#SNq3R%t
%:T%^E,U_:UlU(`/L82#YUAp)O$="d@8dbs[!WK"KSUNO:+"d;l(`ljlV;]d9>j^Ja#oZ=^gQZ6,3Z@"*V14IuJXPW=E&R,T361pR
%+]P,JmU+A&De[qj,&(frS]NM?R>igVR5gp$<G>@%:WBm]VlKVogoo!!I:e;GQGsTFf[*i'j5F,*p1E2t8qo6km&gQ+%YD](.IQg*
%RV^3a?LTh@r@Er[RU^%U:"N>o,=h8(.Ib<]e1+qRKor1)?i=BOD@]t3mM\=I%2B"kX)&Qtl(`>IRoi=]dp.jpZ<?b43U@3P)"dp"
%d]Q`AXI#4/ACPPr3GshkkSlN`T2RUg0(glQkG/:0A90`p61=>Z6#Mr6pcG\&lWM^9K].J#r_AENOHmWf<<bm\..1a"7]d8kT1SKu
%f#NM:h3rm=/V`^(V"_2EdSGdg@e_"P\m7Itn(-Pm5D%!j37X@2om;YjV&>KbNd<F7FnuC:A?=.&EIY)MRh"&q>N#,ArJsVQ.5<'i
%"(B,ND@QS_9eMZ>WFSn#RZ;TO?Y_0m0.A0"N-SPl?.QI?Yr%4`]StL+?0e0ff:#=1;$e1_fXR(a__nfJ/58=hZ/\DT/QHQd?\;eM
%CH.fd]b<%COi]RWo;AqZ#aMUp@#Gk5Y_&n-FPId.7P,8OnNQA`&Lm^?@q<?8-(2$l@U!-*f:W4eVt&Zmg84GfFKO9a9j@!k^Gl+d
%irV\4m\i!fT=*OP[H;ERA!#kQ<OfFqR1G<4&u0qLSLNi&]@Cg/3g't).Ru*24RmHkljfF_RO>"XAG@\tj-#8k*#$e&56nI`\i&\G
%4qInVK!_pR;Wa'1F_\%=<.rUER4QR>Q_f.<[@Tc0SP#@[VUch!a!G;Vn>:Va7a"=:R2X;Q@=QU7!_[-!]8B6^s-Y>UU.&LPe?id]
%MrJ`IN`r!!W\Njl$3d<gPhg#&d$=U0ou7X[^U3:HgY5,*75G74d>Z/E>gNnt3(P_2)AK!R8Y2G'j1ICfUN()3#fU)r+uG_0Ap=u"
%!=0E8D+RPI(;,h"JC<,(Rl,miF?(>?Q^#p#-K2\D'%RS`/Q!@hIYF5#'C-VVA.%IQ)ahR+LP(=biCoWB&i`5`E>BfD9i]um.90_G
%S`)ij),^O.YaFC\MM3^8C7,Xr0qD)2X?">&'q-r>XB+D;Vcu<G6o'ra)`4Elj&%n9<dE1F+P)Hb9,:).6jrZoLVsN>%lm(JWl(Qp
%.E$Zj!K]5h4_!1=n8E#'!]RGkND@5I6?3&Cc2Uq!f[/SBWP[C#]$os!d5@GIV:qn"M"k4,opO,eT!@V<Udmfb5ePO#BThEB)2eVA
%rSJ6*cB(dQ[j]E0Qk.N;g,=&`1E:V8Y(74j(-`[3[I8CKi)OW#XIWP>\?L]%JQ#05(E-32b_f[U`2Nf-MWeL%op0#4Y#o]'T>Pg\
%$(u\M$+rhY%'%kHcPZfH$6j0t8^6^I%8OW`UGeR"YFp%4`Y'3R7"TuK*VPW;edO?cGsttFPuU]UHs;oO+X6)WfS72@28HMkeq+4D
%E8D:OFtcn*_HLl.(Hn_EF-\sIb@P&jA]bq:26=X4n=d.4i"iDq*9j8ZW/)3(^Es:Q8YZ9!e2gL?5),/3e,TWL&j9$oG\ONB;X4TB
%"Q=i,$gTWj[J2c+=s.:gYjj2AO-Z$:)Ql5L8K1_*eY8"eGE"CVblQ6.@0!(M3(CR/(2F9bFbpigm30./'@@Uq)p6W4dpa5F6(fF8
%U%*9Wg4.['A&POjeghLS(hekNo0>A5cBssHoYh)/\.l@T39M]BH"3SGao49nNN-3+DVU3\a6tbK&^Wiqd"1@RMbQH5OB]%CppX8t
%EN)gMo>cH#8>4=:@Yn;gBSuLmfmI=$VXNDLYmJ>Ug(eAsV)\QgY#&an**Mq2D(prlqqB^X/2Wd&jfsY3^a?<Mg:mDaCMOPupL)*H
%om%/h8FJ-q"koaddT*/(E6P=YT8-^M24\A<\q6+V3,2GFmhurD3HcN>k.%M(fKZ-ues^-&$<.9V@>j!;'#RRZBNJYPK`PGQ41")?
%(2Fl>[oqEUMEk:3%6De%"YSXM$tO.[Z##,Pfs9ng\!j?#b!RH-Fk:B+p%+oF?$d"H?_":h67S+X$9<[t&s#?EcCsr$j5F4GY;ZRK
%$6a[a;?V2<n?c3]8G&/9Su$RgbX%UiqeQMSZBHgHg>Eb3d0cmFF&H`%"[)J`cMKKa3cCV6UJaNOS*cD&364)aBobq02r.A'dAb@D
%P*r+gdBRH@9.,_PJ6\IdL[B<@U"[(jZ01Dq)+sO,C!q>MW'*@7oI%i]D<`(KC_N.7PI+o;eth,kI^cDg&sO\r`Wgl$_jql(C*_k6
%_8Ts8>pq2g$Z.kPSB[@-[Zq?C+C)AAqLD2P+^Y%#*<-PE(6`2PlK5F<5u9fCXcW]oKbh$.0CUSG%3S!_iMn+!3aPjeWHD)F:#E<:
%<N%&f(bZgVMq0p;(-8_K\GMp)pQ3C.=)P+^]<E#T^ff0)N@.at<obC1`mh*-6"u%"3%-o?MTp=`2&mlQ=rs:qYNr`OdRqh+'NXt`
%6#fWF%Ac&/5\Cb01@17`Vq(&Z@chA%2B5h>!A)lO"*9m_O9h$&Uo@*1'0-^TBKX>;Ye"RKo\C*h"8RrG[HY?Wb.&S!W7o?k>"2mJ
%LD$#5WoB5!"`Q$?&.<@<qi@$88QBdjrK&iWIG$/NAED&E6V56Cg[+k`opaD)9q!^qB@Qksrhn.BCET^tMq6e60hH5KME4BHDq`u3
%hSQ]19EV:G1L1>%%$fmCJ^K%^KMqou$hY_u3>=-hqtldl7084%>7U*J?dn!3FZ[mf_oImYraRFp2^,GIQ4r?rBC\"Z@U%&`:.pk]
%D#LE>EPC2-]Q&.Bnlm9MH_1*'"s-)pDrg]e%Y=/)40bYA,1OclE+-f1`HUbP(fo'h%\=sn_W2R,V"0elT>'`MV2Ud5h5A!UGG;:K
%@JWIS]#n6[nKO7=j1X$:hS9&+QX5a!MT*Z@(.M]32s'_eGb]M5=DXf(jk=90EEe5pG:'9b_)KtjD3eb3VkgA<>[5XBiHXd.>^i_<
%HAe]IQWLScC>tG:qIhW*$^6l8Hlk>`UT+:[Glq>)k)E^.YJ&=WPk.@.4tjUsdTp;cK?JUS#RhX*lkg2-F.1i%oKr63oXI`.Y?bM.
%+`XpFdqNB\ID(FPal'a7G82"\Led%!?%NKk1n:)7##'c9W:UW</q3\_esCt+*'^kQ&i&o)1CN[%]j&WE@e!$e0$N`igZW:`:I-Mu
%DGP/j:Vk1.(Je9I9HZ%3pe^)AI:?L'KhtKmTUH8tp$!r+0nl&Y'>MP!:gXg%n^GhV8cc#E>&L7`>>`3Jl6LGgRmCm:ZCAfd"Y-Sm
%(#YYUXbkpo*#V$_cX(+q5hgM^BEXU$EVUUgW2U4/`g>A-b8LmMEVIQ)/k]i3@pQ9tEgru?j)[Sdoo7pm!Ysie$eTrJPW1Qgo%!N?
%,9-^5i&lbGDoBo]e;pUUL,u8XDK<HS$Fo?pl_ZR[RBH9=<'F8t=1(ks`_Y4REtbL_QfM0@4cZ3[0`%bsNaA<E6;>MX0)W^cGJ(c^
%,T!$h5t,0.R:c:UEVj_i0cKJu^N[_f5YZ\1r?\F\$oN$Ka47KN$&4<d9g?&SC#A`qE,#N@X$&Vr9VA7@2STI:AL"--2[FA\X%-L"
%%?\;0kDF^;OM3N&3hC4WneC@p1n\&8q3/bb,DM)knC>R_RV')(45<[oaog/?*7T^"A4ngDdZ=(biP&k+'nO3=9n.;$cXaQW:b1=@
%kUC9UFoNgjp`,or)a_6jp59b;hECPL9l1kB(F!Jnoc_I`]EHiGTcQ+fPDB$C5R/%>@)1Cn_7L#:;]?MpB9X>S5co+ZLSGl"W(5k0
%<NWL3$QFZEE3Db:l_[L^?g?rU1T75,:&_AkK*kuli8_N9bOaE9P9JGRe$"0uW1S:UDTr=L@to?!oV6Y81E,]'kNMe"Rh6+'^?e>p
%VGP=&(LaKW.L&7Am1i^iI30:mc(%2R]nN@t'g^+CkSMS3-2g0([`+nWnHA<A=s5)febarJ0@8&UpP=/*jba$q1:QkfI/[sP#;;DL
%lL&n7^Dh(X;Q/&l(dfTWk]"4Ko+)J4V)s-5b82D`ajlt!TZ6-IdsdO@[62u*%<"2ViETpq36r[9FaPo!8t<P'W1kqH51DplNQ80p
%!2+B/Z&Xaj&<ei#HJlb=@9Z[?EUkneU/5oD0ccG/LXPK7g$b`f91ms:`mrZ30PC4tJ[ml&^TYlhHm#D0F(Y7a1#g?Aa]gS.>N,-"
%A"B.^.A_.j;AoIfomH=qdD$]LXP]J\9fMffO1Me='$(?Po2jE+R?,q*ht1b_fXgO=^-uFi_LoL/>2Z?-qR18;p2n!sDOA)]1q";a
%<tcHcDuQB1Y52/.\,Amu^[^VMrS.%^`PD-5FX>8m:\h*sBfDOK\C\+ac!r'/C\maIo/Z1oI>bmg:7J#5Bn<I'TlaoCpA:o!pMBO=
%%H)%aW??&l^k%U"]/?_I)72&Wbhd5_\+Un2(.d2[(6@45C%VQO^Wr=^/U@S-0PBql02Ja^)e&oq"h&OW_O"o!4FLFomHED5^=GY?
%ZaV#"?_5E^(hj0Xo(Ri:FnJ/`S195emjq_(L<<cQs%oS_lufY<<o.RE8Y'%^;`o`4&!>RIfc*)qh@To*IDk&Hbo<XPQf6s/Z+[57
%f&$e?T`A<[-,r?nl[jVq)3mY`$,<Ir1\N^p5LqWI5(o.ZeZ+KKB*Ng\Cu3IA15#YAmDo8dik=/k&Fm=(.O[Y]]e#f\*8V:acV1"/
%2E%^-r<Hi2M7\+5W$&+Df04K)StUn]e_X%R9VK<=g+e66<M36P_l!K(qgRcr"gttM[@ojVCj\e:1/q,+iOp>j[li5f?\(g;p#)Be
%\/M:Oah*-R<308j5YZ*G?Lb+#Snc%pga?%!#fDjZ3E4?UN1_q'*E7q-UZ')(+1$QFj>VdMKbUpGTH>f-.@6L&Q*Lf^r^J7[=MF6Q
%4",m""J9>a"5BQLNM#D!mAXs5j9MMFau;q+e;m&<3p.:KCZ$-CFKRCRmF>fYb%J.8$G*Vemqq,0b/`?ed(Q60#fN=%m^Y7`mYp3R
%"1X?(Cr?"(40b-S5?&1-CK1DBW3J&Xr4VABrJ2F(.0M2,!s@&AL/<rXpi]0'PfDX;H!i*#+]UG^O)q]_Xu5L<_A*&L<sFVOc0IZe
%Fo&+pIVo/gRY;T1LdjXtZYBon/M.I_W94YRS"'0TaRY(f)iJT^AbXaHT^1(Mb`=1I3$S.hgqI7Pd?tUZ(lW^uBi[:%6TfbCmM".,
%@"a!4d0MJT1kW^g7an<(_i&[73S]]d(h/`,)^HRY,Sj`ii61p9%^CoWJ5B8@Z=o4.Ps/tQ9jn[=-$p*8[\HU^9-GoFdPUSrJ,F;?
%I<3m_ETs&,o[;A.9)%!@;q*<g1VoED$O,_(cuW2K\Y@L4@PIL3;LR=BX)TP3>(a^E_M([MkAsWmZ:U*$eHkuDkTctYH1]o]]gb]N
%H?iusTAe_rem/`FRT-]UnQZh#f9aP/kXNL8\-5#[2sEm[XGfeBC"dPuc.EdXJN91&+u%V9VaE4P2McsH[Wnk<KY/AVjSg(Q6G:"5
%QqULj`4(-n"r.B0_$t%kEISD7]9mV\"H<j]`i\b@=u1"&#[4P76h:\i<HGAEX]HShBYLm'40tI(%6egO8)WDNXE%:ad0A<W"4]cp
%PVN831TU"rAlZ*bcP$R&+g=?J!]`E-qa<Ilb6"g=C#-"3HhI*NCmYB$RU3trUbg9&i&OX`Ku`0JC$F492Eb\X#`n*u1GR^bXJJK/
%73WW4@;</D!>r;0>R.Vm>R=Em>bG<QEbto+*=nFKfV20jr.4\3H$W54A1Qu.5+)e)1)Fo>R=&Rof$];T7\H0h_5='9iF3;_c#;C%
%R\6!\m:'JZ1%7XmDb[j[\EK=2+\>nMZW;,%%$O;1.mht5Ga1hKE]<_`)l^sH2*IP[DPqjDr5_iX<]Vc.#Z-R#3ebsZehu6hL!o@D
%f8cc.Ui5;T3R+b2DL%OcIsg\6C#Tu$S';.^CQ=daF(#4-X`$5M9baR*O.a1C]MmS=)iQ)_L;Fu_erBW-m7g9^5[@/"!QqW&2Z1?f
%:\7QJ@VE#T!1SoTaEpt?AC#R?JBdu-L%7c>UP`pd>SEML4AFNa<J2"][L]`PFTK>2r..E^:c5V1Qu`n(KsGVHM\)`3H+0GB)t$i0
%7[h0IH^\hUn'k*8_*2H7md(#;,P53$&.$uEigBf*d.3kCo/2be`pgMLT#I1!N3G)!X&"p??C(/2A"sp0W:"=*I#&92'S17Y01UrV
%#[\Jd*l42d`NI#nfe=9B7:5a=Y'#&a*s_Y]DQ')[gS,8LXueJ;=;`+hoS-V!G>&FUL;oJH"0HrhU,q$JEm`gdJg0/9F/lt7_<#`N
%`srM$"DK3kO?A"He*b]n(d\cgr*U-kZX,V`0AS6BD^9pW@qjQ4;[%($]4HphGeZPSZ*Or*R"C03#8!,?7aNW^TJ9#O`U(H804lG<
%0XO((jr&r_QF(3s+6pg]LZh[[Bt-Yk']IOQ+m,uVIYB>[!gMHAnPG@2QWZ8XZf&.MIY`28/9NR_`^ZL?*U5RMK-:iaR[%"i-qN"q
%(M![T%%=<Cj=5-?@W()$>X5doR>JH[6+WW5DI9,IXt6Jb2a?eUq:.bS0J<"A#t5]5^,bdP)>,E?fNN/JlIu^&p8?V_>e2[^CBdgC
%,82Y52c`s_B[,3[[,fT<I[5.si0cCW"*L2%gP3)XVW7)X4RAl;AX=TT"Z/uN'eP2adu^Vi&0oG10-mZ6*0'Bp<Q3'G6@4b:Pp$de
%Wh!]@:qIA7"I7HY;u?7O@/GM8#r21G6;q]L8g-^WA:c6Jc(#iYk&-Bdi#Hs1I"bjG2^OMm*X)g.KqDqegD/jg=qu7$mWN0dh8o$K
%e-?/Z/]?IebHlX\>QK%91T08N$ZZ9tO=Ta2@c\^A/^N7GPneO`EC1N0UduqbBaEJBG)t[<Q8%^%=m=US&#>?GJrrMia]PVh;MsV<
%lL8Tr=0?_]H1V%QZ6V@A>8]$e;a$1@)t2T;?.@T9f."b*]sqZJf6oo<_5b5hlc,@@D%V0r1T(VJ11`B;%G;*fVQJ5$P;]dq<!@/N
%?L9XmjP)Vhp#4YpV+k5-\@!WBgmY/b(h?a`5GDf<"f6]3WOCC(-d+#o[l4eU?^.HKfH5%%9)hAMUY^#!XXu"#A#H>EF'NNcK:-dl
%!AiK]TV2OcIsiiO3A.qGiJ+_f^M1'GD*ng,8*eDs`G?TFQJ!AC2oc`"b?4uQ4^L%rM2je:cpr@qG#(hGQ4hn[.Nc<^/Z(src%m#L
%hX0]^7W(R8!GZJ.Fft2#G**`3+"TFU(28dS@HPP:<12*d`Z2+*$TDmiYg2RE.FWJPZ)?oO&QpLbD84A<C)gDfdCF+o*&HrdV&e9+
%V\2V2?.0'E_pCA9])_,ci!c)uMi@/4p1.0s^!N!pmmicb=)n/:2:8m]GdJ)n$:7qMS_RWdk_KPVFSk&c%j8!B/GhNP87)o5eWaLs
%/a/BcZ;<20bpH.#Z*M45-'&:cM?f[WEg4e[2``pFnOB[RX57MeI"i'DW\0VKJQY].T62b.N+OC#I+GiUR*o#tc=`]k#:-O:F?]"q
%5-j(I+J$h>QOeXM9fh/o<-9gcB0LHXZ#i1q>Ws"L9%*NoTIRL"9]T;:S^0?`O+:A!3a^MpQVXN(/=t."O@>qej\s98p??sn!,.9a
%\#-p;PJli4n'.&YZpm3J5$8_Y/,$7-+_OAN28(?ME8YS%0,SL%jN^$g:shl8Ni-g@;cqEdU_ZGMG"<c[7KRZ1qV?>18Q)#L.:(]]
%>BHH'X4FAI]PL(dB<9`5nMqYacHp.,DO_q8m]'(F=V9"4CI=FgT6/2%bbXMZJ'S_]W@IEaZ6m7])V<JQI#4R3RY7'<1,k]VRV<UD
%FTpp0]BG"6i&'CT[V9s>J4g]U6kr"_M-n-JX@g)\E;LKO;0HYtk%_@S@cgd*eM>(=i'pA=.X;_c/E!fkD1EEen*t*"5IQE9cM1JA
%k#=-;"ne94a)03X<7=jqX3@8Alc0KV+RKVT#[]X5\5#fJf\.=u)S\$PSOE_4^![/L0'r51)i8(1@8rkX7Pt8=Ho,&IbY:jkCr(c@
%I<`,K[r%UaZ_=XDRHMYZ-fLGMfk-B@rnWVE1HD_5b8I^U6i4rOa'f;1]%6.\R$$hsV_Bp8bK2JQ8jSoS[?]gSihis;`&]Wm9l$&J
%mhTV@Zg=tgZV=\IhD*71Q9^ni?7_=Yn"SMYWeM/3mkIH`F!g%pR>U2#0YHQ4IcE&'c[]r$2=S"kRtrN+$I:h^]NVK0L:'4DMRdl&
%&&'tBl[oBNG];(DC;Z39=LUSZ_(<oP_4sl)gGWhc_-*LUB[3STA@t#Ig!0U7Yf2ELSnCaq-KlST#eQ%$7tF*B8>bRV-rI!J"jB<M
%bY@4t#Qg9j2:ap?kp/qYK)XPLAIHrN;JH6T4BKjr!L]is:%]J'_K+AEK=.m6I*//-;<?(=A<n]W&=g*]W]nX$&kr%A8d?uN2log!
%b+\3gi5SZ(d3j3>45JI=:mH"H-ab2VW`uX-2juqTSMChI\))KSXMfEP%a8$'5tK7:pd:[]hM@SZ_ZV,i0"/0\ok)K%E3R"J"uQsr
%$5miG&*MAej"X;7>i'c/a`);mZ4#e%-Ce7X4Q[OW#M'2J0!^,DYme<JJrjDUD#SItBa*`g/4eO7W]Lfg`V`_\_g9fR#8r]"_kgif
%A@!<1FSnd9JCre#!P8VH-\HI^2*\k55T6-&/]pL#RlVBQX0&p)nT,A:CDI>:;uGul!c:sl6;5O)!jfT%o[*/V/Ib"8XCQ`=?uu<p
%<Hr,jo6L=U'(iPQAff@Nk*#=:SXF-R`Ec>QSpAu]8i-()cLGk>R:dTM]9:B#*!8'jS@@Fd9KBYX'KXE8?SF:^+Ol9K>%M<;g@)"8
%Vd!kIT$$*PE&1]H1J]qgWj'=)B''tHCM&#=aJiB0i]h7).gs$Y:!')qel&E0d*(aKK@!6r>[[+K/h7jUm\pT+=Kir^-"9LK%NBGO
%`F@>S>#)sEXWX=]+?%)!o%otM6(X_E!QUZ(C)%Ph%'fO+K]YV&rBKG.Tj*HsobC"%lg]:H4WEsaeE2NtfAk].oGAQhSn>PTmm`=(
%Tl!2?^q!sGdOK`d,tB!9L)_ik$PaI:[$&)G9&/C6B%rFCH,jMeJXH[bc_#DtH^pS\PfN"Oa^AZ9j98\*egF?uWSLaIbo=F35hLpB
%e-;ft05QDuem9>l[5q$FD6:9aC^Ua$%LqdOMe2Xb-qP0m>"Ol.jK1#+,R^`U,Y8aiEd#g;U,SR^%cW1OIMAlqpa%[S_5P1r]No,4
%WY].t^fg37'di#S:SE3<d#ptG(3?h)Uc](*JV(XI;P%[[F0VOR3TGP`=-E,Jbn$jLb-SCO3Rm!TX<^9X'KgI"6X+,/I@,c.g73V1
%,c?o;2L:QcNt4(4FCp2J@!IFW%+"*@8@"XF6J7'*_P9nl^N8T@Z9!7J0m;@oW'ZrjXD<6V*_d17;3?R`Uh[,>-n?1<dYeqCV"6i(
%PX#,FpTIdSQ&Y45>0HaLcaCs0-9,$5nYmVuP#'t8mV@$5Q2BjV:i)p[&'C_NVd(jn&)l5rM\-U<2uD<(;u;e;,>=I&#,BRNHM1a<
%!1,^h2:Y*l9tT0JS0"_jegdUi8<4-qmWaM!$#m@SBm8CC.9([.\MdJoS"9eMOgiQ-^03e(8$a\Dg5I]rgf'RJ:Lq9;Zobdg>JBT(
%GHKYH_!27i5,K&T["-%UgYZVbI]8<dT@E5T/FDlA.bP=Uq:dCPDg6PA$?bZ*qWOA6Q#,k;4M*J+>!7/0Rpt#/&@Z#jmjYn2S"!Tg
%F=DV8NKSY6@C^5\3TeDT/"1]FEn"VDfHfSBApT[s&5c562/9<Qlg+:I/"<ktpte$i2E[Au1,ZOqX%=pa&.GTuYaF>4ojcgU\VMkr
%DV<"F=p0nb<SS<pYIA.`\":kTmE-2UEkU<2B"NhUj%)kej@g(IiR10]TZ,`)VU=,[B"LKLeh\>?Z2^]\i1^sa,BRn:K%$f'-[2XO
%m?[FAHEPgn>r''RaZ?f[_6&)+rN2"$-h]-%ZZ2,[B;?heb]^$YlncfLe'$)g8F/.<+r[YSV%WZiM-&1.cVfUeL5C=JApgWZrrj)5
%jq72?p6_JE[V0-B;,\M`LRGYFlnd$P=.RuVjQFqXSuYEK1Wo!PGH<?dfOn`Xn`\<-><]=<a@]6f.B?//1D4t4#3&W/p).H7bt"`c
%S_.S^Nt^*Td_n>U<0@tDp)2,K8%pfnAVkh)F(cJ,[<Q/Q;,_PA_"*>12An$G9'gVWZiq-?9TZ^J`4dOZjsI@Z8-STu1VHhOfOqSU
%HYD")$5<;q)N_j,=-qQPjD6Q0]O*:rcR>j?8B"jiZ-OhXD9fDlHt&^F<hIcgZXdO;&N]PbobAbG)<ltKNr5^eqohf116GWW/("s(
%%#dYMr7lL?k*5\4Af;\P."r%@?i??FHUEp*V765fM&\%[`Qq<?E/(B,f^H]"6Lj-)cXDSS;-RbP+W[f:#W5D!dOh4X3FE18VcW;#
%I9UUdUa3sQDRm?Vg8[qiYo,ID`WB-UpJfK1:M!bZW_@^;@%pSf6sk+JF!J>sbtPaORGIo+13mb$"@Eu<j&fW3H24'iZXNV./N#Kn
%Z-mC8MrjRkLq0aLLW9)g/Nk?\`pWi@V(_jiBS9Xanir+E@s\0I_gEp)bPr8g@s.gD$hr-6E#!#-M>8[Yq?@$<3?Er+$\''8@WC0[
%SB(0XG(U:'PU[_TfCi?93'*d32![,^@**0h+K*O4Jm-GEYfh5INsp$"*XDM$k/!$0K%'cd7`Ib>K!r@2$u5PLkRG9jV$W062&`mC
%oMd=sLJbb\m68;/+Oga\Q;%e!j%q8UP^RqJj%q8UR_p7glUYd7#Zm4G\\'9n[pjaM\XEX@2RLOH3#=PtZ1Lq)Xf1ntXaAT0VEJhA
%0&'HIY<'f!]pOku5gNJU]HOYjm(L`F+EGt=-]Cd5R@.OU;MRu)\PXlH(6V*?2")H>Ud0pEd)b\?0PXg\I'"_M##9>b04#JQKm1l&
%OTSA<,_ZrGBGu2d?#kLs"]Hgkej6g(DJ9u@Zsjn:lCstP*+M5P>4RDdg'V#B3esN3bD:8nZW8Lh$TO&s@>"5tD4O#P_K`i>]mh(t
%^8JftIg`DL?+bnZT!n"!Il=#^_YHglrUZ,hs(0fWh7\;5j(t$opJ83!).3?O^pjg@rR9G9*+u1Z]_B`^HS=erp\m0:^)^+UQI#8Q
%r)&4t/t;6d>-eol['>7,ftNM3m^%?)N@BDLV=0b+AB/2.T(]fUb$d[*R&I9T"#mTM"Ogl+TseRfOEl;X'!gQnb?991g`kr9qqc"#
%.tM3QHHZO:F6bOsYaGo81RO'Q5SB]+/sYHb.f\r.b[Oe_ae^c69X?I`.eu"5EiF'[8*TVWg:_BLjoS;DVisLus6a99<P%@qdmP[_
%H^ZXnQa,*'lWdnpk(d0=\Ps%b7fBlY'[5C5nnuW*_aDgR/;Mumg\/SMAXMb"bpkMd'rPfg86]6Rm@@,&m@ob<HfFZQ9\I*oFb*rU
%IGV)TTgEFJb*]JNhC\#Vo5nfL]N],'K#ouE)ZsV++lqK;FtY@QI(9qUJ7B!;)q)Pk,p0k2g`=+`;s7H!8b*:.+)>/u^UIMm)\KLa
%X)-)RRjK6H,_)tOatiQr1urD_las%JZDG7'/m!M31WdiKRcad5B<O=%a.[W)JR$8I&M^]P9:lH]bjkcVNM$no$;Nu/M+5CZ=4;$A
%?^X7Rn$cfq-M`2K+GQmu3HR9%c(oVshSc&C;JoSNF\.q95lRI\K8Q'+7IlYmKm9_e.9*Hn\C39cRbHCfS5`fpQ<Sc0i/7cg\h@V)
%[=5Q(YCl+;m_[.(1o['mW972?/08,e6`jCmC>-HX"P<q_,4[[=:Z*e2)g>7V/9=;B4=#8R<Kqh>jbaP:%-NAoWj6W=;;W\lii)51
%@AY3M"f?*E?^>n"LXDLqYK7op%OrNrMKOHHMqc3o7lg[n4rVO*/P7N'S+T?J^9Hg%g!,BK`kF2j2pJJHC'(m,N5.n!dl=`s<D3M(
%9W-5.Qf5n?#f;;U(cRoe5lF!;9;KV]7"V]h>FeWVc>huUKK=05j8cd&G/0hJC73k%h)Im:dhjdYCok3ZDI7S!DMAp8@'iFFEO\'\
%<INX1C&(f[i5V/'1_%t0^4YIZm4>`me^^1;k94KpgP"3=cA4539=o6Y4]`F^@b7BuOK=hA+R10<DU/8F(S^+A-.0+hg)s!&V^*mA
%\utJ64.Vk^X]@6-hOSXb<q\@e.#NS^[T.C;a(r_3C9,j[>IC;Ukd3&)rY[8#`>.A"TItmNMhD&mCj\"d/1`K3T=Kc2YKYXaO?t-7
%:%R^hc$bPR'&#J>pNS6/;k7V\Q/X$-S-"suHk_4]-c>kODV`ItCb)N$qQus*W\9m/Lf!s0ZTV[2H![6$XZtrhW/hk^f'QCi*)hN2
%%CEFu/CU'D77)Ha53:Cj2;Kmk,gpM8M4>)Tp40:KBsq(M\O5(JimFR0\L_?`fVh*)qijLH@\X1c*k-)\U=4KXO6ZM$"]>u(js*cD
%E7'ogq)L:W8(7^[\kPc':*;:`XY#^!W+C><q2!$F[uOB"9t)%ik_Fji&tS/0H42RB>biWKWJ>foWiFNc;\GY`,L1#O"k'1AE@l<9
%+c@KBji[uoqBXbO\ZF/rr35J0$Af/:RX_EsZ9l,bpOE"E6KXC-ji\!*b]^&$XO''tEM]!:HCWm]\]eW=)Y4&Q.qREdg)[eaA]*74
%4Y&SDl<kp9>1m8-ki,RBAM-*p%rN,[=rCRi\4@%X!Z)p'e#)uM6W55*gC"Oo9h7lqP&YO'd[*lPfUZd=m_V?WgC=sM?Lks#9C#GG
%BBWOs_F%rBALk=m`U($#c$m"CKnn631UM0REoGu):GsfNkZ[Jm6gGn`#K+-cnBc!O][k-443*>Els5\JC"Mc*4LA51M9*6Q_nPo"
%LXnO/Q.)&6n8Q_E[R6,Q_m>:T4LE[p/]+[H?$L#qP!s:N>a!O"$P/TJaEMshTu23aQbDn8qR/b.&GZqT*a0r_1(qsCk5)q^o@.0X
%m;O\D"1Z>p(EOIug2Z\#L[#_T7C-J`\F@jR0(-"]*a7HE.'$4V&9#\XKnn5&hKmB4_A=9Yd`?MEWACE]9=_PR3q\c;!\ThOnB_1P
%=N,uLf!cZ7-uG@[%pe$j\EJX%g/djhBX(MLK*r3l^!2k:]on9]&$<fuB";4D_F()_$[FI5)`T)Z9-^e"+c,-_JdW*kIFgqs#n($`
%3#<X<\a=?E;-e\1Tlhk,RsPKDY`.MK6`V>M<u2p\ieWHe$P/e8;/!a]QFQG2+ONQ!gS)cpZJ:.hC*K.^m;OeOAoQ_&[I?O7:b0'F
%cs$57i):=kE8dL5C9U(kT`'S"NcT3,]C8YIMLbhHPd.O@Knn6](p_H_$P+%LeL.gHlKi5C?[0XphKGjZd#5'I>ep9i*%W!FDJP/8
%G\A*cAS?WujMF9j\KSF&=sM;2Knn75]tLOHM_nLl=4VTS/TfsFNf!"<4'XO/;7Z2CROgS4b>/nfnBb?JoV`6#>3`sllQfc\-G@WW
%LND+tgid?TV`?qp9>9oBed/gT$P-N62To?MBRSX/2I4.l23W_TGN#6<P-2hhX`P:L\uLRh@,,/%\@7XW:9TVo8G"9=IE^ngZkhV]
%R>")^3o4517*.uWnMGh5`T4G94&T3aW$k/E"Z1R<CoH9HMk<Tj)5S_Wi2!-iGUuNP]P*cpn:i#[HsHUC.nrW%<gVE^]XK!C!X!AR
%o.Wdmj,\iH?N2I$Fqk?P^OuO6:Pil"T+j55Au1adZ.0T:\(?3bZTY@,*M<==X8:/oh*X4@96;r0[G0>BD!Xk;eJ#-_o<53BpYn/T
%o5Q4M,_)s!d[T^&(edmmf.YG\^N0:DgS'iB%";O25F^]M+Ec\W3Q_/H@\B=HI!aN'&'d?s*YQ@\.EApuc8OLj]"GQH`kp%*YOMO4
%*SqD,"g1le/9/),c2h!BD4Qa.YM$^9P.B8<CcnWLP@XQa.46EJL3M\*S!\Gb?"XIgTCMI4EO_"D^uGl6G+qQRh7c+"aVHsN,NtMB
%5pfjG3IBjH6cHpiJJ#UM3Y3,bk3:HA/Gd"K_j/:=&SV!:k/R)mjdpBENn:^m`;=AGht;.9\+P9JX*SE@;;q][if47'6df2??%S>O
%POh@OoXHp2$M5S!1.$V/Q5,=Zb"A]Q*+EnWQiM+[[99)$mVC6&^1+JI<'S,lSWpbPL%ocQTFd`;[qjZVY@dI)+?h$o%JK)cleBHh
%,NWd;L9?#.])h8_$1QoW1aH,Y4VtPf]OO&V"K(rW4IQrpDf/muea(roHp_C]p1'1V*$OVI?Lhum<@][c%7#<YbEVMXGV\DohtR2[
%3?t&i#O#e]KQE7fn(G`o%E4OC&c;cKCCaqIZQ*I4C[kS.36n1?)dKlcfppRoNW"8hir=73>s/Ur?Y$&dq*eD2JHM0u_B&GX<*e`K
%/]f[*l5-5d]DR7^]r79H+KaTJUjdJ%BHo44r(0<TmQJs_?c;HaO*niHi*_?0nVq3VKGQaJ+6)rD!RQD%e=(!m]iLZdieUh^#;^sO
%Llp9DO0Vb>$W6'94Gr)q3;air4QhBq8Xi3l?2/\<g(j4GLhm+!&G3qnFSbG!nK]52AUYRc`F/+/@i1/,b(uI&krJN>r^bR79E!((
%7\u(127L<)!(C)?\sIQN2eqtIXu)$OXK:5.:2)Y0[@8Z_YI:lHb9,t9TX<]iEGu$W6WPTuKUus4_1tB$fX^CS\[`Ch8k1Z/W'moJ
%5)RF>TnR/?L=T)rS?)fHQitO?f(sNRM!>p5"W&?QX`Q3S@/IJJSn:(]pm^KjISWf[mn"o?jiCH:?WTe$?*Ej5%Q!k_f-kCH(a.^>
%^@EoDc<!Y80@)P.E0Y))h@j_IgaD42[)MrC%7:&#d>QM&Zk@<ECusLYri=aJ2=[YT7>+OgDpPYn91B"U02lBA4a'=iT$rHSoFe++
%(a@k;NsB+a:"Ak"]83(&=Y*fX\q@fV*i8;>)u[q6k2`hPPJ9g+%r\ufSJ7c_)7DB';eBk6=D.'dF;Ut5P`?8H_>Y8]:Im?8<A&GT
%cT:`#1],9$B(Ha:/@T:'TM4_G.ng^_l1Q!s_QWW7]XQbQ+sar-@ZtQilR.T.-B:(+[TW5Y&]@i(#a#;cR0t7*n[Sn+0S8I&8,uBO
%,H>k1_;c@Jo,s2DL*qta5KCPNd>4:ESJjI/VCYr4[b-MU!!LpQn.BR-Wo@`JM!=::^\C?FF$r+'=28&C1p1o<](YjX>dAb`3'W@9
%3@S#ifGS_.a=/c@mPC7R.Wlr\[i8e/4:1%>L5@S"5eq>Y&gd&5UDsQ:-g2e'h'g$e'd_#^lK>1e&^>Z8=uh]j`[H-SRRX](2\"i,
%KKC*N+[hKt;ss1<>ZVKG69Fjbn*^.AHb7E`L#LA[gaF6oF`@JhNa]cMpi5Fbi!u4Q1$+muenb@EFWBl;?'VsQacm!7WWE,,<!3C+
%((XpZn;8";]t9qHJCZ0R[iqnq#PH$,lC4KB5\1l2IY:G,4aP`r?G<33W!bnBD]a+;681X_<X@6N]?974;;@[9nj;GC9VGl=hIngJ
%Y)mE14/g/;O;BCoLHVoPP=JHgdXJj\IQq:u(=&V"n9+3FAp&%P/1OUdWB.o@;$1rM.kPX^\UC0W0;dndN:FKaZ_?(YYQ\bMW9#gk
%m9BeX\,5NCJVpM\.J%5+@QE;'lo0T4YdM@hQ:FA`X*SeO/QMFbMhF,A@\!p4*rSE9*6\DO9ADhF(.Oj.+<""Hj-X%Q5JOUNJt,pO
%M/^Un=GkE35ZPdJYPEPoD?Wh&U+.CdZ;hnFUZ$Y;L#><J\SA(sLbA@>[kbhD^:,<!L@TQmeI^6Z'!lGbKSns4"d0aX;b-A=\'7't
%[3$AReZ9]k;lda=*Rsn0JVBc^0UtQn:]%IF</(')L<=<j^I#pK_kgi_41J.d3^rUk:r/s-7WRbg=.j:1@-3PU74`_:cRDEaV2[`m
%A2.(QgO$I69&]BFD$5/?Fodk"2Cfn[0a6A-W+^kC<=2P`%-LF6#(MN'DLZkZ;1MPS(^j.Y^qTpc;jncLV*i1\Du&9*TXK$R)G%dO
%+??;"IY2Q'^Foc@A!"'nJVlo6Xc(/fHRu@4OM&0>#J,c(D;F$Z_.)q`?E!;IC]e]Rik>1gPrfCjhE+q#3`3m<@"PTR=!b+rEgT,m
%X(]W)CO7nhQ&/5@)Q,UD#ci%4k[U%a:J+agp0crI:dpOcM-LAWKC^9o5?\m!aG[eW<4sT$8caN9*@iVT>,[ood'`pA<CE\VgI#'^
%BF`oI"ejA[d19>p6]1AC&`]4G-FPc$$B*!$OC%Lj,6Xd626q+#7CT-^97k7"*tZZZ,.Mbnb",Sn9TM@Lo73%=Y)oN#;m!lu4pb$d
%)FC8>W\4J)@sIBl#&=#bcQ.D(fAS!3'[l9ZBMhH!UQ1F/Zk%-s$W-GnAL=%9WO9jG>`*MfoqlhT;N-RE6EtTT;QJlrab+&5=:!J1
%oBEkr,P?A7^m&/dDp$aJVA#qhT5tp_H1HM:`$_;jC]VtOnMgBmh_7MA4eJtP&lpPP`"KU8.[Ne8rW/t-Puua)fp8r(YN!OFqiUkl
%S0(a8/UsjJhd-8t*g2n8PaN,=dH9qtXBRUnTOPkB"3qpX(NNNT=8E7,cDlk9O"^DFj2K1?GAgB[o_B-m=sYX]/tP%pK)b+hphKM7
%>@)*lKQS2oH2GriH*#N]]3iP#MYQ4H^sHCmED<GQP/QW$?tVXBnVN)WCaE[@SRRfB`hXO@h1$+lYA_EU5pJ'=F?q>2nb\bDlkK)O
%:l3/7DJCiR-bcgEaBs^F"NCZ9q<bjIpN+&"V1mbRF)ia4gE?FN:Ca7ta+>?C^b?XkR10u)AN4R*)3dmcKr8*#R=$SmDLVj?q[]Y.
%"?NbnfZD`SntQ%Zq\EO*<S_a9+l%^2Cg@n@-4$7?@u3\F)_o<iKRo"r5PbP=%Xq3uk^SBCJ-6jOr\:JD<*oSQOc9iq.bLHFD"W[d
%bZZ)IR&q.\/k=[HnPf<Afl'+Pd#7%#+[2Lo9!9VZ74l-6goG"7kM>^X_+%p]p:_=l`=h3H_4M7gFdVZ[]X="XHQC/S`BZGT#G2Os
%fq6<T=K]:N0?_\&eg*e\+-^=I-eU*PeS`/.N9-Fn+?]=IZ#@m5b_Y&KK4q..FZ0PjnMm.&F$FE6Xgss9`7ROC"--kTF=3<]+NI?c
%q"YIik?Ql_[]ZMb7m">8%7[h=+>CPSb30$<Egh>P`q>A76k8N;4!cgad*2ElJseN%?V==d.k-L3o2r46m.saQqe;<">V/i6(VJ/*
%s25kj%hu\8I\Pta]Q=\BVr&Hhpj<-'/_l2V!b^iRhIn6^lLg4@I,;rjkS,5Eco7YAiJeVl4o"5e,KI8&Df@h!GU)'H5<*2W<=WQ0
%aXB#j_k;t8KjT80rSVfcUUR\jn:3j9=5+W0Y5PgoKjeJ==*oc\2N"F$4%BQ8$")f]CiYP'Os]$5Itc1cmem?U)8tOe>LAIWMoc#i
%cul"^Xk2i>@IOq[7I\XlS;LD<O3M*Dmc5Yb0l*JS<Sk/R)o1Cd#_(sUKk,f9&&qep@[07ppnVaqb2r@U"NK\TXq@[+I\W;h76!0%
%/;j%!DJLcT<l'$q&u!/\lNk^LKF7#c*@T/i^\r(!m)!j;Xh=UKN#g9XN>gnJL7O+'N1/kcr5pYP%6aGUGe$Za#g=G5LC(A;i[/hK
%df#ChG]KF1SYQ6--.k(MaNort@gBH+,M7g4n:%_<FU7GFYQJ1Hc^Hf&F-?,aY+N73g2@a<"cW1RSQ<dXE<+39kd3Ct##6i7SGubB
%>T`D%USW5"XhLZ-5>8Oi"@g/\rjVWk<GZf"^gJ(d+#>U?jt_Z1=Vbs<dtl1Sq^Rp*"8A$,FC%:fmDk9S9'lIu>^kEJZs?7(^cK_n
%Wtic:<3gMVc5*39CpR8bM)t]sc#t_jfn,-@lo-G*/5&j/RfOH[ZDDf7o0ik$+ueh(_*s*Hc!hS"G`?YLR^#ADT^P%7HYOU7_)0Y4
%V$cErVc7t*ff6f4Zdm8nW$c6U7J3O"EE%`io7t:Sng[\NY?bM.T3NtW26>jg)r24k^f\*sO'iP5%M:^%@]6aKoR>=\TL`;>D!/eu
%K=;alFnYPdBj1nu6]RX>XfOOdjP\E:V-Q,[Z97d%4nn)3=+lX0]:D#Wk%3q6ltHiP,oqQF[APUTC$=LT2_;F/^XCib$rf?(:]&:h
%(:'k6a56#Gp(m9>XKiu1-+t4&7_@H6[?n'\*2H^fp04.!(-DMM)@G*9Ze(s/%F/SnSMds)aLtGSMY@@u4mtbb.A'OZ'r/Tb3JVYe
%n9OudfKlF)0CP7)jcB%tjA=S+$.Hi0,^@s+-SO!i,i%JEYm[^K/q4pg/7)Y25$Jt)Pf8BleR#oP>HUFH.c;&;k:\GEqfqCsM&a^_
%5+[))5lL-;]9,.@R!h*i3"54VB4'gKqQ8Gk;\((mn'8Z(;ts"lO/F$tg98dcSpCo-EU4KS?P.0-B:fP1K+7-o4=.[CNAU"q;-=.3
%";TA79`-;Q=a1;9%\mJF#rkFMQ*3X)m&SH([GR19KiRi]8Q<+,DKR^iWik>ohJ$@A2pe(1+;(V`[1%*WU*pI.A&)9p:@qYNh1S&e
%:/pA;A<(SoI'TX"fpZ]L'L1/.<qtBcSX0jK.+);Lh7EZa)orG?[*%MbhM^Ig0JTeEf0AWTh)O7Q*J?l=cH[rcJJIe.-\n_K?G*j'
%.gWuqb#pC.P'1L8qjc%<^<\gO6!eC%Y>3S'?(4]tq!<-)#g9[nLC,u6(1,][BsUl)L:]KrZS@qL4:botoS]:e+O#(AH%rdiVoN`t
%_`Do&:4(B0:kQ,ZmkA&oant,Hh1NAY4p#TYq'4d#:Xhs[e0N+rA0a:<OW_</a[iq^878/QmZACu?^VMD6U=]1@<9Kdb#hmmXrmbV
%o;03O84J2$^?A^XLOAN*_!hoheD_W$;]g]c:GBT5@Z1G<!6jkqXb)sB_1O[$H.[.(%/F.L9'Nr%4Hts.<fX*1qWAU2"&A>B-3cGL
%bg-igj,F>eZiShp+alt6"ks<`%XBpG!"<-Cg)pW!>-/5!AH=(G`ik/a)TZ,8&@$,'/5OGIn9IT`%g;=aMTMr@d=GQai^T`?UFQjL
%a#7hq\\L4=_jjRmr#^Tp#gsJkkE'9rFNQ![:Rc8I3t3dZC`m^AX>I^LBid(l7r1R%4/$OWh$F3rY)OqqC,[B>SJ.h/nY+9Ae."O<
%@lh21896tVpYE?+g@V<SDT4^*[`G],"/ESYT#ek9ogXcqOFmEXoIq&1<(6,LT-,^hqrF$:Ru*?OX1I*6\il>*EA=9R]2cTQ/B*,^
%Rm1@OBhkY8rgp?j&ks_^.'5\Ukm>>b5T7@'>_c%Ad[UfC&ZmY#J@(Ql80.4nXo1`g>d3+]a*Vf4DPN>]`iaJaD7#oo(M,k;7aQSp
%LM`,]dtnZTb^c?"W_M1S)'*'F\dV^AQqh`^[M0D@UrkS(aE3Wc8m.;f&3HTZi$l'K;2?")fgIWP5/Lg4\g.445jcGCfiST^,?'Pa
%CQsRX_TqL"ofbP2"DK.BBG>W?9o,\=TQY%3H7fK**9..UW%fS$BrDX9XrJTtADq3DE`s5:"<aP5"K0]N*05.*CcSWr;m!0Q<dX^4
%%E-Bi=N$42Mtbr#-<?MmY!m`48Y#I_&]"7W&Bks!A[=iT3GnVgqU9liPFbluqm?H^@LJ-qQe8+f9#_W/a@MRt7BA&4;Hfpg+`TK8
%(a7YNO:RTumQm&K=";Im7BrU_8>[2s#](YuhN;NgVg:'l)@mMR`eIj/F_]AY[:aWXckpMZ"'Whq-^fN((Xk9fL@MHuIuVhlATOVl
%<tXrL2t<)&U4?YIi=*s85'ngbWG"AX^<,?9@miM)h5XTT(aVa'@di`,Q_!b6>?7/Hm]uWS1&82o+N=jS"\V%kk*?RHAdgOQW#7S!
%Us-NcUiI``ZaPX8=hn[Igu>+hI-;I7liOnB&d2pEFpdb^aF)dZVq=8n#?!O%eCs!oq,U(3RKh2,nD'L'2-L0Rmj_:GhBU6\2FES0
%^9\pMeK59ON8ML6).tWr8KmSP^+E;&UH"cuYoiu_(5f>GjA<JWH(c_E>gXcV&-n?D?GdT.ltm^H`3%Xt-CDHeYufqNf9aMn0\oSe
%KEO+:1X<b&G?N!^Y@pdXp%j_mK&3WO`(,E,_e7gHcng)f<d^@+,"^BARTu/:McA:NiD?ZLK-6S'>3[B35'lF+4T]6@h(V%AN?0#F
%k#hOU=ei*cPd3dKq,V<9Rq'4uCmlHrg=$sAKpVbbM-.op'd%Am6uckYr7*hlG0E`65Bj"[X`'1>H8[0fF4WV238SqDrH<CcEaQEh
%BR1:4&-JLf#BTllIs(Ac4od-j:I.u&T9P<1e^fr?]08D)8l]AMk5;M4lO#:#FYN/rl:gd9&bZTfW%#VXT="1$oDh6Qd]%-+n=9fe
%Nn-[u.W6/,fgh]PEk?FBI59-L%%.t!k`%9#&XNqdAM47c*/EVjJN5/a(P4H:Kh<$lNaG+%`pZotiD//&3FQpMI6DP`(.!O:J$au,
%;PQY"#/J)Ge"?WZSoT@A!gTsUCHFlE+b-Y(S_0A=_%Yg/V1mJkF1dN@7IVI);i!%mW1(\Ro_@T`!$=-WIi]>pp9J$;9CZ\Hj>.#K
%;4M;N6DF&m_T:"WL5!m2M!aQYiu`1G8Ft]_E,Y[ANpuT^Sr16%T+t[$Z%71(g0;Q*$_]%Uj:66p,X0&0lNYZ'YgF'l14BsEn[Xf<
%?Ffi;,!Z891G7aNY=$gP1Q*'oH[V/Q&3dbrnH.[BH1-'i\?7mRFoL/M_8FP@B&3^2^J%C`$QC'+#PoG\48XIF`huT"eM$l7bKWJt
%a_:8@Bs""``ag\)SXtm$-dUc3gfco[NQ7e,`KZYt4oh9'fb'n"R@ekWS0;$`PY,bY%3B'*ZC-$@GZK9l*:A/,:uf.s,foG_/,A\R
%AYn1,I*ro)4nMo:mEkt^pDgE-E$?=&jrA@\<P,C+HA!>qaGq#-kRVPp;>ViI+:SYBW]7$@qAl/nGtCG\?j6nm&*T%4!.n6))>PPc
%L#aLX+UOO\lJs3H+Xt2@p1<;16n`qZD\O*OVEtn<NQ=]9]-2d6LVD#r>B#$.\Q;8mD-%81fLb!Lb;Wn01NLp[bI=s>eFZ<9G_mga
%6f&G0.S5b`4ShG.7+A\J??j/ocbXlGa,%?5<Irg/W:BTpGOX-G,%m&`Z2C)^h3\IGe9?+%K56,sW';Ou_\.U$3+VNq/-EAIoi>E5
%Q]902?cnm4'toUNNPuLHX3o\#a?`caa*O4eANJ5n'Sdr<EPJ6Wd@`[t\ueqMe&[1`E_g+q[d.%6A*8n7eD#L@bGnckmk-B"eCufm
%/@sb0R*oeRdaJ'7:aqoE8PAY"%mHl8N[6EnXm^DVO//u64;(/rE$nI$2?GI'&s*)LWkfi8EId^q,f=Y@=5?$8%Z,>&p''=1X1/Af
%8[sN!So+hYX&"J(aG>X7a993Z9h&t:>Sf]hg7%;SIDsR0[O:I^MdUEd@m%_mikoXFLi6-FQRq"R!G+0e;M`KB55@V.TQ4cu4u/Ff
%g'NGno)$//N^h<)2e,)oc*985[NbkY'Z)JFCs[@JJ09$^dWVu9#3;I*phRod,7YU76MTOO'3U-Gp0*8>#Y[c>%V8M`_n0`1m%[jp
%f5K[Gk(m&*c7X&6gh>.OK\'Yg5\3#(5sO'>fuDhV<a66&GcO<h*cJSS)!MjiZ5bVdZm6ocSQ=,X[UPiCfR4sggELi\gV1,X4eP$'
%k_k?24a@mK3EIdMV0Y$]+*o1#'=Vl)%MA(5j*]q,G7`Vh>k3^<Uk:GW.00Ui>'c\U*)p-oUF3P0G&DuNO=r8)NShh)ZA>DC!2WP6
%SAJAtP<9q4rbgXl5WfpuF8rJ^7t,hS+dhuT.ECD.$@F'=3]%OmNZWa9Q]+tLTS#bPHL=&cEhRPK$As;o;-i:X=0Yf)?]fJ`<NNMY
%Z+/98LK,k_6b$8MfY^g."(A3]@eXlXqj<mcAG>'Kr''V7GL"q1j1sj\b[t"ic^`BQ1LMc]aE-BHW*o^5DN)sGBctnj@#[XSH/RQ%
%[l\9t`^3BFNRm`I:#(&Cg30Z1;4_ACe7]U_6r!VrM/1[$ltnD^L_02An'M]XHYhe?EO)M2QNLgZKW^'29g2&?*efe$_>']N<;K\k
%/60RZn28r3^Q$t7X!O'.'I8u0&Pb&S,51N?Mg!VK,%Ur>gT"*GDB'8$f(l?J`@KsuLl%bm@b04]L?QEe>,^Ld45@[EToSr-\CpNj
%ORE"i_24">pMCsOfg44h@ZeWpJ=9pDItBGn%cL-K7c#e0A>UN"]-jeZemt2A*?(.YZmI:qTj(sEQ)$aK*%Uc(kp-uZH,$#\jA]#c
%G%bAoAXX,_BXiV,4,"C_!Qt8OoMo"3L`3[I0:,F=;+1)2,SlC.k9\,l@U.VP97h8%I'&+h_TIL<$8*m^c!^]/GF7\?f!X$gK#JeK
%:+*t.Y,Ym4&^Z!mYOJ+\r\Ln,*8R83P;9Af.N!uj+R%<0:CF#!A:d/)llkX+k58Fk=\@lA6)>J9Q@&XsM1O:cG7"!>>LB%,Pi>Pi
%]>&R_F;OWT?f*chZb6nAoCc>G4WaFop4]#>:3d?e\g[G)m,HYA`HZ3,3=[]U3@5p>7`OJ@p^/Un#`PbQGX9NX&He1@;k.Sqq*6gs
%ScN74!$:bhBh,QI2T3u9$M&W6m1Rl,g4=/m$SiiOal[-;!,BI=Otr]m=V0.j8]uW.&6"$+(9b=oT[XM'llC6Rnhg]^QKFX_@ceR4
%.Yo8#arqO-n$eG/ZO;_j*0hC=*KaQC#1jp3>tW?e>^l$.`7*l-SlJTZ-'_]X!6o4$n:"S017jlO<qX0)ZLH9Zm3<)e$A`KY:QWMZ
%X$HHYMHB<[*j!]PHkU$<UnaLI<8d]C"2^udpQH4VmVA"+dTq\n<90N-/o^lM`j^Z1)F&K<q`EH>V$qD_--Jib&Z.YJdG"2HhM9?Z
%G,%'<i7>3b\NDkAIj):%V(o6[iumFF%[83TQ^!N'e"!gZ_ua>4OcCE;7NVNiok-a(?IY!f#X=1qK&dNRP`F,!rY9KnZO.:3AD`h!
%ZN3WgA)8B;*<Wna-\Mtf&Fggk/;Du:Z5>^j)Gqu^S:uXSpZ4:(?UXg>jJoUX"Thui]ibH=6<V=>.q<loiU%Gp7?DAH2]g53.K"I5
%LWh&&(TFoVZP/(!mM78<!DX(B-dE'M)<t-U@`X6'V&k$UKn<;am_+$K""#>rLIqq-&&&[bU4Fdp7]]-SW)U%2CO_%"j<'88!S.FY
%2:mu3p!1JR4.tZ2GL92-N%'/8a'V/2eDUGAmoD(m.>ZaeToXMUNop$fjtt^\->4>um.A$*9ONqJOBb0g9,.3qHRi^m\dE1BZN<Yn
%?5O)5AO(-<-OUMh?r`5/;d"o[eP4"+D<*t"Y=d:H>SC!i8C(6$?>'Wb*I6]Zr(Gk'@^sL%n+1`YDUaT-htM&A;2J@aPM?`]JcN:Y
%)VV!8H*eCqC#QJrFG2@VVKMu-j7-TE@k;KT#n#Y,*^12bD_nH*/<^3=.ElU[>>QeB05%M"2?8%XAog'CCdSV^Li$B`Yi#[PD?;7N
%oit%RJ1>f'.\VOj0Rf^9So'&tPsN:@kmia8f]lfTPB$@*c"Sm)*@I`G?Mj=^*OVZ[If!f6H[F^HiFr6:fSbZ8rPa-#m)l8s*(>\!
%BGaBb$Sds<7[SJCnXT`##;=jn\@@IPUV;urXIl+hS_$1]]OH(E-3:/<B'Kl`W)[fZR$Ei"d+g0(o*A>5S;"aIU>hQNR3i&dFeY8.
%&13,8%5&3Mj"Z'%+!OrC@p6n[+5`IPKWhi)npR/u_O(4rX"?="mLh9dVfGQ7C^K=nMNBKM:i6SN%#$:Z\M5`O0dqsoHEMk8fJ=;U
%-#?^hL8;L?NV$-oa/C2<(D16Rp<d`:U]M`h&4<6+:?u1`:^#nbPmUG/%k>O=Zp&A.m?1?Q>$78;2aPsDDI'Y4j^:C(l.`.;Cset1
%<.h./)H_6n.GK.;JSBoWP`ZYY&70:f?)BQ/56*VlTQWP8XL74@ipE'mb)2WY,<GT>J-8is+I4l;(rZQVOVX\*DMkgZd_9UYUUuLs
%kj!=i=>b<MYneku(i^A(@%36.lO@Hs[\81D>Ao=3BOQb:;I!'.=EY@gQ<9A>$O7$%M@36$M<#Lhr)39F>0d]SaG5hd>Tn?eN!2tS
%ef,X9q5n$DO)cJB20XldQSBQq')3*$[aa1jZ60NNPE2Njl`J&J#:B3J,\Wah#dZgT+V+l\Bme/;&n*,+2\?Y=d,oO:J$WL\J]@Um
%JH7,(LO/W62(H`g4dYq7H.6dEj6%R5NiBnn<Z'jEj:cnfX?Jc4Qh.G[0kEcTN2cI/_5CJ=8q8X]?4`J=$8A@*Mor<a>_%qgc&U<u
%/>k3'Aj4/cl7,a8!QJ)bOlL7Y,/BR<0/a$o"[,hjo[5ih,/e]6:7%kbJ:U\qYf?^F;/P1bLL%V-$e6E)-Hf!0_QI#-SRLB=5\LA&
%M-*J&7Md&rWR7mDNiuI@4,)#nMoL#po8Rj+RpP!c_&%c4U\5CnpO@r4[1dncW'^<i(\Z4N=]XS_%f`oM%#ll_@;maeIj^+5m+Rl`
%AJq8$&t*3EG?MrLU<u,jOCE$b0!Zg@/]FAoQX.rEN`WW#1^4#-6JUpT_k*8j0&m)dEre;4L)Ds);kURYgNLBR#/Z>^.eAEZRu3)U
%&InVE_#5OJH4Ie_co<Mu<Ztr@U#tcY6rgEfXT5+d+(+2l$G\5KN;"=Z_)VKu`-]5AO<d`e><[Oh8M>-DabE^dGV<2PK,6J%Pp510
%kPc;bN"_<C<^FTcJ)<5/:PE&D01@Uno-n*N@(Fq'1[eASoPABrPmq$6(1Mn"1>,Bt$aF,QROoUjKB$a_V#%\H2Crujd1@8AJ/?Ii
%W]r*I]1:KkeC>j]!gpl_^C!i?#FL+*"Q-=*+^7([j_QQ5YXuBUPFTm/&iT"B\TB%k0)G9eA<a,$-R[lG5);R+flsh`j?*0/*ard6
%PkbPf)=Jfk50NAHH)nf+cE:Jb)iRP68mq*Ep99T2e!*QacO4\E70[b;/n4k2`W;+Rr]_95ZS`W83HZ?f<7sYiP%'A<(p\Lk</NCC
%@BbX$=t.H^K^nuJ\S<S58;(Dk2JOZf(YE%rMLd"toHHu>"U*(?2g<Q(q`=4q>@(Kj0h]GiYnU[n_@T=D:l;6-d*dA+5m,sRW4c56
%KP@m8qQ+V+MHO[:Z/te38KbFB&FuD4J_-;+[r+f\0]-(/O5@$'pOqhWr<Z?,^jh$te#3W\64;XcZCYW@l!;Z[X7Jne>'agks4)]M
%9mDl1b%e4TC&5t``St[.*juK2+`TE@$5A66)_js!;E;Ek-,g^X0J*6921`WATeOD;d%2d@`O%!R.0_k%Kj]#N^]tt>a=eO0>!4lL
%TbPC4(mPIdU9\h'1(`ME1oWiZ#gme355db?YZk`_Ya$)aIj".`)$ltVp]K-Gf5GTj^!d[DA6VD<gmh*]LdTuHk,g[gd(\UmpREAn
%kGZ[".#(JB*!]_W8s[JR">MY3VR)mZ+aV_0!4+-k[3hWkaN2Q<hL%h[cC.]a:Nn@%#A-#5OkbU#SQ7$j43_[NRjC!R37J/Ud*D3O
%Q:Yu28tf+2P@i#HAS_V3b+U^7Efu-^M!Y_\$-(Mj_6GZMr$h!((#nD$HQM;E8.N=pZR1N=AOWjW1!i:&g`[c";@>/$)4#D@')/8J
%6RZ^"g57bG!L'BpL6G,u)eF>o%6/r7n0UTs$QR2VCbY3h/X;`*LVp/!&NN$Aa&m/or.C%Q.1u>F((T[2_;nN8?Dgf/`2t&_b]b*H
%LQ"a")Q6+5GZ=>I9^iq$A5V/]BB`]I@^\dT-D\po]g??hiR!SpolK(`8rn(c,`dk2cQt\F\koHb$AFmX2Y1Eb-ko/CjiW@9-V:X^
%*/)0G7.k<5HneV)pM(#9PL#+6a^]E@_s0TtW:"B[9Np.QNCRLD9`"%1I(fG_2@bF$8oT)DN5cTs"b1QPn"d50_*S-*<UO8k$phH!
%n>t)r&A15W;2[2c$Sb(-,/Be\O&+s>;$JOWa5FlKd2i:CB74D'Q%Z(8NOJ`ABY0O!gYjjC`M;fcjG@)/gR5:5nGbu43Jt6Y`Vk%b
%h5Z*%;OiZRb92)m[)baD]E_VE$q/>S$:<j'*u3b,o4%7_P#uWf/HF6nirF=b#[%@#U%1p<OjG%VYSVM'>DuKJ%(=ro<f/UE@:\uI
%mtTVCeAp_L?H=,gZZM@\K9//p<l?1*G<dHL6LOKk@WoBm^4*mBj=VWChB#ii'lV6GR9'p]QU:,EVpOsrHOGVa@:q<7`%2RB(BFV\
%U+Ep.<$?HV!r9d&`KBmlQ$@oi6ghll)-+72&h8msPW%ST`CG??&lKsL`i%)&8g[Q5oI&t,0]\7@]pXDQo2gsWdTL'j!Qqgpf9P*Z
%3$]<Fq78?VdccIO+(M,d0QlG0FGs5kcLEo@*n;.HbiT:g:sRaAeWN*[LO_J]H8okYn5Y*\BCg7Wn>5R'V$o-Q#%*BY5<K`JW8J,$
%^A"Qr+#BH9UJWr@LCbB5K;B3f(f#::N"`='*eF++q[Pr1l]@+GaK<BNY!tiVMCR85%(]LXFh2dUc`R9m9C\SE`jPuA&g#;9A.N@%
%9(RMX's\[1^Q:PZ(G'/QT9;]m)Vh>qN5ApE[!1%OAeerClnokTbFE=$Wa!'"'(/n]_I#Ft`3EZX0u&(8Q%;_&]f_jqPmI5<k?c(J
%b4!k@T9<;k+B[)DYRslE&e7Z7\Wn?f#TD@U)k0#gk>pRec^u=_m?UIu@OqpBSs:?,D!Fr."T9i%7e%o>T<r[KdXjY/)J\C%Xp"J_
%-'.c\U]o)gZh5bug!7mF'T"5U-+?&a<*)/MH++E\i(9'$bN:-a^rQ]^F/(V1@':"]$/BPP*_&>lhsc^V9OGW<s.?t`mC&c\P"!-l
%QMuM)!Mscd1F$oA+j_bT@R^d#&As'n(_0Am<o<oIIf%<E0K8TZI3^Ysp%mLU]l#E^agYnbN'9\-:[IH*Vp7"9?)dhalq\/);Z2]D
%2_^*]>(;%WS=C76jdYAAJ/L%JrDjdiNK`tfS&s""YGc^MHdD?=[J]1EiS*G^oEV#&Fl>XNV#58k;dZ0/210E2Mg+nN9&Xf:NRk3N
%:L/!bF90TqPh]REi6+V=\_D0frg]-591Ad#-$M@Jpa9;dBEBp/T(K>oO&p@'MNa'V`S<ZKUa:6HduX0[`cLq66C0kCFWj6gkHnE1
%p0ZYQ[XX#XGBp(a#o<ile0T=ZT(K>oO&g:f?Rid,/X]>d?1L'`hV1_r/)Lm!c'eV0a8C8X\$uCook4<TD-P'4(Z$RSkI#9fNU>'[
%<qW/OS%$i_Trnl,&)LX%h>N]4qRu>Nk?#R^Z2*gigYo!<Y.]t<-=tZ`keHuU\*sf!mZ-7;NK84mqXMJ9\bb86^HhN!@:#2:5MkMe
%`t.d-RJ&!CoP.ItV7hq;\bbj6]QBpohWZ[Una;Q($<usOgS&u^7_&*<h>C1@'S5Pqr,Ct2qMsqj:Mmm0d!@.1c*K05*b`6'O*QHa
%bQFr5dV3(E^3?Wmq>,dkD)&NKk6+Ztb_ra=+R3/*m(F$_ft.&qpW`09/lZ'![IfB\Drs+h.F45b.2?mu-)N`]2q#<%bGW7da)0/6
%F"t?Rn'&-;QI>pg/Nr<8dX+d]Jig''-iIp]J*t;D`ZI33n,2j^T$<Jq8BsL^q<b)`+8&NO'TkVFO7W\f&unnQn%I_A>Bb;b]Zuuo
%nWEP2maB-<2@&K(c0oK_^NSUWIK=;c\G29F3L(7.-a12R!.3^.]lWI@q/k7V[[9R3kL>dnh7r&5-C]M6]p3f'e7i"QrcW:f$)]<L
%]3)$Hk%=IKqm(A3l"f%.nGt+BO@76`R_/7HE:(M4YO#CW[t!'hRhOtfj[?R/+:A`FiQ]E`..)GORu`VVmIAi8s&A)Wq4hG\r!q_a
%q@8_8GWbTLB.>BcZ$FceNt2Narc#UYm^gQ*5JAqXrI"'4PumCe]$90&\'%G95<h8m%bS8:287IE"n<8]8:#qOFZp)&lI0]J?>V'r
%l1+>oJ)=#.O"YG&9.2ttr\d[K[nj0!c2LGj]l.iD`7=<`:"emV.=1JeIUaM0QujAGcK0$0XZ,r*T\JA=*aZF$q0(G#C'uHY0ABtX
%oa>`b[+aq[pVho[KZEYGr_m\.^S'<KA5gkPR+6AXpBu;nVN^jV^/-`DS[ib'>'X9Fs-;,Xp3)f.(%e*$53CF%hQ3jR0'2Z8-A9hG
%m>!2.q]!9i?AF$ZKM_$)9.-nr_l9iWp$t`3ao^ieTBG]UIrk$U.Gs6re&P7%Clb"aIccGf_rRWF"5XO:4hFe5V"EqFn^b7KIL5ee
%*@/3nJ,F0<8%:2@^a=*.H2-gug<#u-*/8agh5/e.;Z>h)fNfE4k2/;cmdd#ShI^P;DFJMgfrsL3pLJ/I%@;PBnMRt^qSr2dfbo&<
%hl'9c5K1%+LYk\GFe-k<>11=W,iq2VnZO78X$Y_"q"Tj-g+.ppRh/3d[s.[ML+b/a^9.0%Fp\gJZ+#13IcAdpmIWp;kAS1R]A)Qh
%rE&_WI6DL'.DU"GZ[7.Z#hP"g?Utk,_]uT,G:*\YoX"I%A/48*r8!m;G*1NDZO01fk"i+23VE\"XF3Q<0ZX0g&(WX=0U:2ak`4(=
%It,$?f)C*$d-_uWm\M\!;M+G78YfjWp;,I\9d8tMCIc+MiMi#3V9%Yp4AljR4dB>]'48kRgT1jO5(AZ)pu8D7DEZ?mah'ggqjY(e
%qWn*>.rV%OBt^lr?,,/_?lhQ1Em3C.nglsCq;CbcZ2]Z)gV*GuZ([di"n)Q20?<QK^d%YLDD\#X8HnPb__9'Y2iI]DA,6$/b3NkF
%q>?SJ:"`WTrq+'Hot>G:nSOVJ)_Pi#HR?2E_[VstoR%S3jl(qe$/Qb8]<'U_Gl2RqHq?Ce^*N45&S[lPmrppH0%mP@nm]gMKc<3?
%I-o2Vh34Vn/l*.&q;VOD#?99&s3e`M++=*dQNO\:4QFSq,Ae4H%fT&'[4=...=c[J`OcYi=jio8kJ#M"D_9$'0:-&DjJsYXXki^*
%]uo.QZDeltI<=k&WBS"=HFgYXO/HnYlPIG!.I\mGG9?5g*ODqW4]1`eJ,Z)?LtBN*Qi=QYTQ3!)p>XV0:_I\bcHOn<DqleU9Po0!
%f/Ju@DamIqe*qncdA];EL>L_ZT(gMfq4g($IfK1P\mTgNW$7[CP<XBGB(HH&8#X(Mk&8O]XI!Gj<V^;*k01hk5u.:&fj_>'*..*L
%ggZ9LG@1:/RpVe8MtuMeU[B4HJ,A3<)bdG!.#%:%o1-jfFh5oej0V><O-2Nu,Tiq4]_kVUnA"PU`W"f7F1:nGR.R\<YO;?@>l+Bq
%$P1<#jXT("Q]J/>8N'4fL!7$&?6JA)T!9`nCb<^$^Q,F*#[Z^J3M:;>IsoH1&Dd938,)5.hWhk'iUH<H12#q$:W?k4fZAW'[2c.b
%l\51:^LXP*s"U@,:4l9@G5Ff0r)l^cr+E;_[m,*7fm*asEa7P??S:N:-L\6Vl=\r)-VqHms7#SnrBl)%hTH`%+'q14J'b1&rPS<!
%rZR9GBD:l.DZ=mle%b_Ahg"rr1!JFJDnLNgh<,l.j8(e7_q'TeIa'tHNSEVJXnHq)COj80lb?o_DbE)us4+e!;42EDI.p;`g%aj!
%5-<%Qojue#::tg,*VJmhMTEVU,umXQgZ:\%qN0[Pc*oJ1]a&aGmE<e!rfcY\cG02S%k2l#_-(TUe&u+Q;l_&8nDjC!?9>cj\n;13
%reiM`]rg.hY3ssWSUUc2&(a];Rh***_X>ml47TFGo4MF&/7uu&]C2B->5I=/J\D(PGi?Mn0?RN`FoUbLN93WC2;N=bb0=#:<;^E2
%H6cj,bgZRV_:r&l=+@k=i4n]0HEW]1f1pbi3W<ghG"`7_U>YXTY:"aBGI`0:q#&1eSRjp<cgSURj^4PSpn--3]7X9DI.>A2ht%p6
%(WBI9bnhIm\=tD#jWA^(DVigX5LLqRE^co:WQjrmH]lpO0CaO\0*#;g0AaJ:NBQs@o9i-oBt+gL\_'QYHog9%Y($0e9,'>4!7;;f
%0=<BXqoT/9?,-6ro*:W=qr$pm^%U!ef0?PIo&`a@'K@j`<2RH;A_jd6h:nIk+.hA+LZdQ?.9@Re/bq?[:<NmucfM6EhHb1@17-eX
%'<U.ePDa!&@eaBdFLE9>fTe%&l`\pho%]K[X3LOP>BVDNDI7L6\G\d=6k@%fXo%jNs%7J"(Tu6D-sL.A.=ORX[gak"LIf?g]QLq-
%^Nq,ai>Xkf3M6938pBrH(Okd1Ogf])1]-o0NT=;V]U>,7C)_?!4TEDS0;lCj\$l=)5J2:'M]XR"Z^m=fDk2784f:ETG3?gB@MSk>
%s(q"N?Ij@KRJPn;q=j=Wps$!\s8(Q\hu.YEZe\qJp>#I:\,-*L:LF-LrRYu%q;@bBoD@(1&+1Ngo@*0K?Trr<ded*`h-.h!h]2Rl
%of'q;,3(e,F#saS$H>hcOEF^-^oRK;Du=SG0CQUNjjej&T3Q2NX.0MU?TiDsr*Rq+GiHrd+"j'Cp"%sl`7]WhpWrItp>(Q]pKrCL
%`7[(6^3\dDpZ>9\&7:jhEu1Z$o'UUEpVOHoY5^V6'Y:Koe<u:9R_SX_=-q53o%)])Iq/HEic=Y-8%\(Ohi/^aqt9E%];p.ZJ+CGK
%="h75OA#,6SLLc3J`_'OFS`?0pCj%&s8;lV'5'PBGAV-p7j"?_H1&l='>qS]s*<_E\P(nPNVH0@d^SEnSiHJn]73%bk$YYF[t69h
%7rd_pNId>Er*t*3WJprM/0Aa?4LHmdS+:"]^f)0SfLl.Y*dE2iYjGo_Dql4N3DOeibMQALfY#BQEYe>;n(]sJ9WsShIi:uBS_Lb-
%L!\pCmrdkHpH@+!4!,9PgUd2p=2saZ$bK>L(>LrTXr3bDd_CC3Ie*38cI%)^n'jS)r,]IK2I%lF=)!%('HEDf\uC)Gr)*=!a#poT
%45CK+b?nNMkPW=QQThqOdmn[`%@9:BIIC:KB"=<2#9SFcM^NJ,IGkG,X4sp%^I3MB=7>6$V<*_Cq6)HDs6s:m0*^mjQMTNY1M;BL
%$$G3-r\'6!=5T$`h;I5giQa'$OZa5hF0*GD[k56CYG+$AHmu,YX%iP`Ph!-jq_m/N^q6AJ(1+UorMKBaGL'PXs5es$=:+YKit>I"
%67PAOs-)^\b*=6<'jU6lo(Pr+VcKZTGNj5FYP`[1r*QVg^OI1XAjmNM3Rcg%Rm16Xa,@]\ONtiRYC.DP8E6]Fb"/fL[;.qb"e8gI
%GB%s!b5H23rT<.@J,/qi\o3)[ZQ&@]r:4K=s*XCk8!i-2gZ;?urqaq+kC9+A?G>"X5'Z2Wm@Q#fq!l7_s*j4pFQ+ee^O<&SEouTV
%Q=k'51fat3NR-BVBri#%k+B2XdT@r!GOg\$'g#I"jD@:p=S^(`SY]p&d<'i\S\Qm`]/OX!i4\#hZu.s&s)F`mi13M`5O%gYQ.^fO
%%2\BSfSSK]r^Ipsm-0>(DsZK.98D?T0E-(df3_n`q6\I?j:[=XkMA=RGJKOU#+f'a$*mYkD#2>3(GEOBeT;eD[&;sTq4])akc]J`
%UN]cnb)TOI12m/FlEb8OT')V/?5\KGpb0NKq=XZ0DuXoKSk?^I<3;h33hH1pZ:.NQc]MLXjm]qtW'!pL-r,2\rp;B#hd6-Kc<IIK
%b.3T^h>cKb+e('_q>WSUqF@Hugt'`<le=Yr]A1^0&#W1:p?@Y'(uDXEit1@^J(R;@I"*)jqgEeUo6BQ:gM`t-bk%eoT2YoW^[HbL
%qtS+UkHA_PT>.i-jsQe`Y0'O'q:,lAV&74\\&TGa76[o>MRLkBpO#16hnGTW+oT;ah[*M.Hmeirr*l5dH8pYkWML\C]Puj<l\B^k
%rK(4TKDHa04+GT`YJ'kO:Y#iMP:ou2_`@DmSsoNW_rCRP!M/`Fn$WAeT26m\j#6o1ktCAuLJ3HS?@M']bjW`QhI%_dr+u-*pNN\P
%ni!d4)33Zb@Oc6lX7bStr<"Crd5oS*B4F_$:r0F7^>qN0n_4SPSu*+?m)-k>YqhJ2IcfUK8B^V`7.RfgSu+G*-Qj;9:IjJhgc[tK
%/@]Z+N]SndJ&8/g"nu?lZ@]`e4ctcqIRC:0LG*Zf"RS6GkP;)IeT%sJp%Qp2\_/7oiQRFDGgNhM*jaH9koBkUUr,-#:I2Q]>S!g)
%Spj)A]^V5/KMR*a(U)lUr$YLEBuDb+EqWIkFoH++8@GU[lA=m_O*hA-Hf8"tFo:t2NLQ8/a7P_ITDfc.jlC;armrU??2qW_SMpEm
%eO"ZB7;kD?q@@5m_g("IF4+njoh9_^^.DlCO#>b&a0`2G`j`4D.$(iT2e07d-+5oXRE3Vh?9eJblaEC!2pYduSr1V6l$!*"RJ*Rp
%s5n+c%=c`\?SA#>WShCdI<Xj@F\&FKa<+3[LGe(lDpOr!?mBne5H#ULnOrn,;laV#HHa25o=:c&qZl:jh*&D0o-+(Z:$c9!njFEn
%G/_N$jQ=SY[qp?@cLK$Kjc$r$^YtbEO`14epZusT>0^B#kJn3/YlNc2^EOHdqoQ3`i=-VaR%:tVVUo6%V[S]l</ZlVE,6<PX^=]F
%DYc0HW8ITeZEp0/5L1,mFl#XelT[V[m4<)139C0WrLM'?2pV2J\:*Lis)?9`_nDHEPW-n>Y4/q"0tmInD1bPkdC2ktm*<_V9[R'W
%rBGZKRAtULQ^shW;04*0Yq>],/`5hFUmfk@6JhCX\##2_pYE0s%DFO2%'S[WS)o>,Bp,<,na:\`(LOe>HLBT1^NfKJ<a'<j^KgP,
%NZ=qg5CsrScG_Vc5&bpK=)YTreO,O#ql_Jhq5X&jW!cD"ngJo8Cj51#gTU%sQn7-$HN3sPhd*kkofFVjnj0Hnm,Q'Wg^?$^5)>6q
%e^nEYQ]KFsOQu,C=41FF&`5#0dAHiBc]WMJ;/\asO)hYKcfr1Gs!nigf3UJ-[Qj5P6dG3EO8du,/ou3F1IZM7T3iT+1&cGWpj]gM
%_[D:kr:'[+T]5UZ>d!J@[L8TfCt#q@*J@3!J*%qDiMBIkVgeTG95h^DnV5A9rmsuC,/QukI[^u4T>`$Yo^;B*55aKaeMGCJldr>R
%q4W-aNP.H0[n.Z<,#oWVVFp-kJ#+$ib9_4BPilF6DYnMS2=F3bG'Ef2X1qUqe,(GDRXCl[jj#H)g?[qIJ+r50VinN0G?]D9@f-&b
%SJh)DRg\e$qkh4#&,0E1HeZI6>1^3RS_#d>r([1OIGVoDd@Xjb]QiOC$0?U/gK-UErpffVY1K.Fa(X5Z9`d`7K!Vr[daI/>hjor=
%n+0tGfljJ<2QXP?D3bV4K/_ZTEXXh<nB/5,9R0B`jHhLtQ?%uLMFbl<IX^[^YC/<KK4!E,pV6P&IP)JK21C#MRr?(=l1UJDrQVdu
%p;bAVFkcqms..d%rNI7``c:lc9^(lIN]hSA9-<Uu*P\.S>b@Y'o]tsI^H;5h]:XTLo%3n*rc6"BIe39(>??m#I(W""^.H([r8cG+
%mdj/#qkm@QOnj9;l0$*Yl],=Es7>c1*II4'qN&,7s-3Q\+oQ&75<f)8o[i!/s8%2^rp+gd*Im\UVk8+P^HU3js7j9;cOIdr)uHm)
%*l`(V%/kSOd"-1BG=,VrDr*obVVU%07m[(;O%8Hh^ji.L]Vd*jOh0uXj5$l1[f89.s0#qgs'0'j5PEmsqpq&s[H5KM*i8?(eF'Au
%dE_Ld82cG*XrHF!aMQ+UPJnR'_:+?;e#5?W5,H.q>!,NFr9'E%hq\(mlYlbu!^\kqrr(`(rq4$_%*-\l+(+m/p[>ion[gH(qsLA#
%O^LsLcVrt.Sjm'/HYtlno$m2j5C2*t%ZgA.k#l8khQ)C3R6!]k]-T((T*_S[\BDc+LL%Bt^CXKX8Xsul[uQG%_+M5]NXb<@I]@l@
%n;%:.E>QOL0*iWlN;9DbbXXj,(t[S'GG,Tq=:7q'DVEPjn;,Xk@5l3"kokV;qEGUAWYs[n)eO?he2'2tkoWXkH/,N-=R(n[=SMA!
%G5]dH+gE8HE*7A%eF#C"O-kI`YT(I7bUJ*54C]CUES:3m_5!U,*;,9PaCg1/gJ&,g@?'JIDs`<$gM_B$ibi"f<]@iaq&]o-blf->
%s7lu8=YtX!(;B0V]6.ooK\6:B#XdD)r>^(#&.\"Y%*]RO^j68RfPOQtQ6g]BF2F0MY=@BQ,8q6H,P8/MefTt*Or\ec'4TV=;f$qL
%n>KuY]4h[J#77InkRWB>C6$X?L,hHrl#V5WG$Wu8M86]TVf@4LF'pR^GInF@*CjK^*01_m7gbTn1s\[.BEF6^9?U0A=ru%`jbV0+
%H,sU1CmNo68euYNF/C1R0HKh>58&CEBg)G7VKI7je+sYmP<X"j.M(f/_Z*Zqm>r=$(&=Z3q;:+'%Su7\52NUee!#"X^\.WUe)^O,
%i?l4Dbe(Bfotgb'V!I.t]u=WhDYhCq)P64scb`i[c\_8.><$MYAWHGp1$f4u:&f-N$MpZA$6JY=O(fX6kIgWjKlDIs`2VXrc$<gO
%PHLCqoDkK)\p7!(n>W#P/Fj2K3H+n@$X:WQ=uTFsmd\oR^EJff5@#VpZ(CW1-K0H7S,]%rBc6ilE_b@+`Gmh1o<s2GD:QkZ;KA60
%_ep;ME/8Km%c+W<8SpD)8D$XB2[MK(Q8>JgZMh6GgWlr5-Ei:4SsY!uE85U%P^Z/'j)0]^nP9:NJ&m@AN/aa8QK&"/U@W7@[O5ls
%[Ihp_$.OS"]4KfI4&3D!l!aknjRiuB\6C>AUh4FN(K3+8(3dY7<i:cS*g_@H0^RpUjiS1a'R+O'd6A15rZU#b0l&d,2>"\1MS!Gg
%LCKl"o*j=S2ne5U-DV_]Df82(DbitSg7_.a@Rt7S2!fsn$XTplN?QMP'bNP_s,c0ES(?(qWEOL#L?aU\%SB[I0T*.*<7Q"Gmd"bM
%oCdtO9%sh+E7cMr2GtJj*kMIOOp5u2cnn+16fq[qj!(aB2tcFrTdBhc?N(t]=;p?ZNSA9pPk[Kd#Gn,-(WG$KWbNE'q&BfMb4IZp
%^q!.$K]!I6Y"Q/'_ec)W88?9%>D"BU)(DR0Jg]\&&mTY0Qkh&L`GQL(i1F](6"t(JR)IX%WbOO4pJ_i(I_+o$A^Cn@IN87WgM*-N
%RF*pJVDO\3Ln2MHgl.%P87JQjUJli\m9s[U_0YI!<0KpL\hoRtRN_KNegQ@m'l%Kn).f9AgFrFXTi?R#p?OpBH?Hn^GJf.dY4E<I
%:c_6Z<5`S_9,/%$&Hi)g>rPO-EMmR;P:fg1"EI>-MM=ueNMieB,IfDE/p(g>htDJ9Duq8-V.JD3VVL2D44gc4cBq*JC4k941(UoA
%-FPdVS\sMf#oU.e$(S4M8_&cj92D(c_5UiWA)g;6*_58)SH_I8pelCcLh/2X.[)+mJs=/qqt[b!opbMh;]Z)bBZUlMR#l41"%lQ]
%n3m0ci)3<TVeYO`+]M5?P(1Q-;2gL4Wg9E"T<(hs[Fo'8$_4?b7dJo1?B?N*V@]L&">.Gt;/EH;SM^a>nAKr7df?Q*$'utg<@(R[
%$3#d9j<%RC,f[i&<Qie"0=u*mCLQRREFeSLYg.\\gJZd<i``^S`L-Zp,I$8pA8>m#8LYf\*d(:k(pIj`cLZ%T),nXS(u;M,ahP.d
%8W8We9arm']_+gcM`NG1JqGZGA_TD[U(3*/L>c[a6('%<`0/c[m;'ftP:@bBMd0Ys3C-Z?X^422FGlXuUDOqG<@p^[?b>.*j=YF1
%]0J0Z2e7_ig1=bVA;.SJKa:ip4)fu-SB<f,Vb2cOf`dh</QLI@YFZ$\TJRAm1GLcD<:+Z^m^DY&3/r*4U"J)"D4tZMATN7,S^rmT
%11.7>9l.(/gGB4mZJ#JBYdL<AJiTt=:9rU(/rHpuVJ;0c0b6/]`j-3f.km:f+T38nCL]&BII7Nf59LeqFn/o]'i*j3@fQX-[)"9N
%Ph2\ZPU^.O??$JYE_sa]m@kHPDOOa``dBR[0hN&7/YQShf;U/c/,J'ak.cfn<W5GqMW8(gS)oLO!]g`<cbY,8FDj2-Uh#so9;nEb
%jIhG>G6*M&MlE[fAR)]Y&G,,[H2ft-YRV\].IH[<[S=@tX6Q!gZG4e;IM.n!]t*'bdm9Wh#X&<,1Vq\u85h;kQJbW3A]R/O@;1hA
%fOh-uQl4js2_R/Nk`Q6WMBfM0V3@)XOF=6*>o<o8%a)//fgrBMG=NY#72(5P/fDL-GD[J29j;CkYJg_bE_m[sBa-;-\l?'GNVSMC
%g$B"sBS)GM_V#-?[$<]*E0"m&O#Go1M\o0f+u6b69lT(Ximbe:SM\*gTP$tcLp??EWF]beQP,_=%-Y@p%R%7;!],(f?">b[QN5lR
%;&N8kJAapq<2>BW*f(:.3#9h7R\m1h^`*de!o@T,`N8=$W1dk*dr@RRV59^H"FJA=c$*IFi`T[so7=TEl"h9WbS6`t!e[!,"G<R!
%1e!nNHsh%PSaE-gRncs8_ZLZdLH$#-1V;q-*o&kjS:%B-lZGoKGO!<:%N'cufGo\"MeuCt&!\V3m"mW1$eT6T'ieIj_[u_Z%65hh
%7!CeHNY,7XF#<;6+?5]A6C'a8^ps`KT,5s*Cr=Y5;X7p=jS/fgN']6A,aRFA;47XGGrB;^"=_JjB6n$m`U[iM`u/no`i-8e5hC%T
%g*\<.CR<h`Xf9F,3ioQ*Z_6[:;cf&(jF5`t6iN)%0/d?lEnfd8PW5I$b'L'q(6F]N7".4ngr"X^?u./#\lM2K*]KiVP_Hk0XR"'D
%-7fqU2Z7gP<`4t)KlPkO;DZlqJ"u&qA,qkJ?8a<4it+<]>t&]AAQiM?9hUlG./XOgBFfebUF9hi);AO,30Z<A<o?g@pAF6^W](0#
%q^_C@<](FB`i>n<B<.K$Lu=-@<<\>XGtun%@SN5tGTr4ON(dq&`RoF8C,m4,9jj>\lk_RZ_g5N*_.'<JZ8g;H&N9#aPbs`imKeq-
%H.%rj,(gbj%L^7EFF%CN38MIrm8DO[MQt]2eSl2`1(/D3/&Jl,@3ke_1(A$(6;fVj8UmMqF68&u^!0`\+k"hYE8Zi&$e(=-ATX<K
%=@Zu!W'(d!-C^0QQEa.EUT$**iX66$b5%?Ap#N@EL?--9H=E:BL=fJKo1rh]n<,7F/%p@^WG>O=:0]n1E1eQsEe*IF-$i9?CV3WS
%*6"KE'_ARM39MkH!Ll7-B-9:^l'\$c4:%ouSA^/aVk_j3@%kX,5b.)hC<Fi.*b`V\BkV4I`7T13C)Ir]bnHYFV.>a8gX6AQlF=B3
%98Y7?##e0PFYkM"kS=9>2KpX(8ehpAoGi[sT:<lW%I/d9+[e1]@Ve/,[2b2'N+Kc3%A'K8-ENNT7Pd1VpI*\Fb28S3ALB6qJA$h$
%#gDE:3c$85U/SB6QdS$4V<@(]6nu-<WZ#In4>'PMSidjF'o9YOHGU<,,pQ\d2b^Z7X@'H(.:)Bg[Y[#!8dc4n$sa$U[Z.J,-"./2
%F+AcpRR8efR9Ed+`d!'62GD>J3O$"Hl.<o<)e-p/jXIMY-Z,iee@K*U8h:.IK%ECu@WonF#i@^<91a38#;45T\TUi/9rG"WTpV0O
%pup;:@F<ZcD!Nt2HC`4;(#5OTb2Gc$F!IN9aQSpH_+Ess.s$k(2*Yl"bF&g6OL:K[)Ig^1h=]T'(89ji*#M>s0)Z\].[7kXmc<RD
%E5j=sYr&XOV2E@8Cn(U*P-f;1VNTSQ:RmgPEt+l])c'Hc7rc"XjZ^,Y2PP"RMfnA_p8GOorP2-D/q\e+SlDQ&D9rKX>M,`[f=lkA
%gWm0$qAVPB6pPGIJ3ln'#:01A@nC#p?nc5'[=0+>fiY>f#Np!K2C]E1CuhO0dZBq;:k?SeTVg,LM+-TYS;pV47M56FZDKd>@U=Wp
%6dR/,E5:&2g4A&6m_l9rh'Rk"U!Sbf#k\`7D@7[+D;To9;*,F42S'?VD)*h'gD'%[1Y071@7-I^LDAI.'p*m)j079l2%LsZ)@32\
%`e7g-*PeOE#bD=a"Q@-Lg+_Y49`Bl6%a"dF@4(+S'ifT#`>o^ea2"+YIbj/01hQ0ppt:aXbso-a\09CcPLoqXMlMTc'CeG?]cHBU
%)p'fh2oGecB5/:&`5kpFE>3V!W\sMPML,l/Q_[N7BA9rU^1%d=pL7`]mP):hmJtAb</Hi&Z/TX1oA%1'EN_A@pRDPZ12]iFYs-.!
%dcT=h:9@m/#MiVDXo*#DYKVqLdTQR08r2D&i!c\GcZmu*(@RY%1Ba4VcVTQo9NB81P]K_N2/FPu!i7%?iO%5/F%XgB72,&AbVi.K
%,*8+#8n%8a"BJ0o'2%#qN4l]Z>$pjkp)*ZG1pM6k":_2jRYrm/f[dP*/F,4Q%P)M,]tg?Y)_r\F33SG-&WfHWVhq6)asRg%$,I9l
%8ec7#bg@;TEB1Qj`;TI!6OkdN-P*f.;cV"<grD&9=UV9O*&q_OPk\7n),&/aPSK@@IRCoa\-EZ$L2@Ec.O#79AK83(YU3@c._D[O
%#R&r10T*.*<7Q"'pC]7;g;[g"^e$aDdFWh@@DFXX8s%U8be4Y4PurfdY>c+%'eL-0+N,X-$c7F?ihC+[)FcG>SuPtS`]YNmZF+Nf
%2hAjR9UYqQ;MWbEAMV;hfLRS[a`D"l,;g='d1knG4UkCZn3ia""l,'D)-[DH/P'^AM$rnsY$i#Sj/K'?..5c99p7C?*dVWRU?M\<
%P@I1"Uiri'rl4<JbF]so&!RtVGSn""i+sbF'J1c3iLYb<_&*WUOL:K[)Ih]1$<MQ:@gds&S9h500lrqq-XmuT++%d+EHrk]QWL7Z
%'*79+$T,n+R^2Ni4V5[8-DaFbLp?2DeM8uD,@]atnhPt0=PU>KC//\GZ>?2(cl&hW)N"t0oLkH:ne5l/'Q>OkY>_i3Y;&`MM*Sis
%%AOaZ:K8u:EM',V=<2.2"Zt2-mBXRR[&?2CmCK.[]u5*LjFIa-?jo=sZ82f.Jd2kZ9Qirqr;j2b4GneLQV&/k7Wn<%Vn"WH$Q`@,
%i-MCsY@6%DfclD6"bD2DM=a>T)m'Z$<CH=ERi_fmg-23F7,V-B*#0Pr_^NOE;cV"<gr"_-Ok3=S>ijIV&U._CGIe2G/5RJI%ekWc
%WO=fdWe`X<gOla1WJ^[3TBP'J22l")&QH.X`P%X[gY1oZ$o;]]2:gQ&A(aJ$7*!_RNVXSM&,%H+!XqtA0`[79kC>:=),*1<Jn+MY
%;%YX#%n3S9eC(QVZ5,4`Q/<8+gC[i0kIr51HAbVobjY3?`\nD:F@uoPjnFF2;GMO9i\((?(#Y_n#MNZSCbkZ?`5EI0<F;'-@0Lh_
%,u!H:FlhJ8Ro(30LUalbZ!\VSV_&5]Sd=0Q#<UA5.[59%mYQMH6X7MW`l:qWb>I'<53F.@L,#nffm]>6-@+_:%nnkI\Whp&QDqe&
%(K#/h2Y^-^!$W_QrW$)m,ENH?-ttYtC:Q*^bkof]DM"Er!OK`T3f>>pREfJtTC*7`V5(:n70HDnPI?"r-9bqsJ?!!c!^8?KBEB,B
%0fGW'>)pUNZfHk*)G%"^pMPSRD7DAsOlR1B:"eZp+k9=;Z#iZKMF/,@hX0,/6l3D_Jt"N-oAK?1=XPN6*$_Cs3Jr0?.]+$l*DZbN
%"kt$>.?_P2`M8r2#92Y\<=+WjLJ![Pp,r6]?uI*T:5e++g=$H2D]EU.,9&+Iq2+i$U]SJPFg_Xn`=.\/9.kqnM@hV]gG?dVfBC%=
%+Kf/BWedb%<\Z9K!bPiUcL/p_YpUH1:n!9TJ7@)SWG4F3G>!uBS2Mh4`HDU3Zuh4oS<f6k`&?97!_U[W4&SLXFge9#eKIi'akf]e
%H_M\AN\,fkep+0/3Jr/';@k#W[Uu9EXAl*p#8APYRramn[pm/D2cuCpLl"g8f0gV^<[NESV9,*'3)l*:BOQ&01'EQpPu,]Y/6*-8
%&^L9%\%(JQYh=><_7@t<Ft><C")A>RJJ(mASts;T`?!]fXZC3B(?.;[oEVns4GAGGQV&/kU0<."C!CWl':`n_Y-rpp>HE`7hq>-r
%);]n^-:EZcMTFf.1r7]XU8dE>/QSrn=.d?a8W8Y,Wg4m>%itB<PTRlW(,fYt=s[fRcLkaiSFeaBj7JdV?C+$93X@9c?3=DK1="2?
%.hd)G"sW6<22G^VZ`.]-M/Z%EjMV]Y[_U#1Hje/rUj=FFgQ&R22&a0idj6msV^#20n3m0ci)8>5VeSX<L7YoT>!i`T0f@fem;Wj7
%;E^WVV<;4gS)?I=h=elkI#HNUmn!1_YuLddUal/s$^p+*&6nKdVk+Wp"eW3NrQ%^L^T4'*U89*#-(<?J`i9+gr>LT<1onO:Gmsf3
%ipfZX7OX4qKZq_$+h5UjJ?$TT%R+lpH(p%]Ql9nCp,Eub?;$WfLVO466^f-/6'(/2XL=opkC>+lW$sXZMD\C#B'4b*O@B7M/`pL2
%M2N>c29a!$US;LaUUZXQ5rU6a+E0^s@'Ehk/m>Vi[50hSTE:04MChA>:mI-aKbXm=((m4>`I\;AihFMG)J3Gn]W'WF..1?Z%#PG"
%E;%Wp4uq?14V%qGLW"JZ0dscgdUc7&d?7R-HuZ4$liX:>h@fA0'4#!nke0CQQLkO(2)?uLK%;D!38,kND)"I1hipecCG*1u^=q!l
%Yr#n4nf>,JESYDq03\3Sj]"*Qq9gJ6.dpq15ciS+`[Yme)YZN*R[Gg[UOJ6B'Tphd)+K[;4-lb#jWn?'S15\GbBtmZl'HK,<R"'K
%l%u`%?YUFs#.LJ9W]cC%NjI!l"?]cfq.\QIA(#u-BmGumeE6s84*6l(=RBL.:;A$q$*62MBc]U+"oIs\QP335-oT0A.&uu#ML,gb
%VNo43cEM!Z>=kQ5<_bW=4F?6@%L5YH;lE3tSluDYDJ(bAZJC=_B'i]fqV'NI*f='PWMO#LZ6eea\[sKrmIEo=-TQ_+"b]Uub0"]F
%6U2MaWJRI^RR9PD-"M,F'aL%dLfE(#(-U($Jl0E6jqpBabL*g)'V4C7<d5kkK:=5/8/52n.kA[cd2FjH>ZVKL.O!2b,Qo\,/602t
%m[g@]l)nG/A)jPgjXBOC>EJ>Og]7V%*O_De:n^oj:de/rOCB5.*E#<O.\\>1KH2^G'1.D!ihVC))FcG>SuPtSia0d/doL8h3jE'_
%iaC?TOA55O_MWarR$F6R<W$WfP&UAk8>Leh9IFK+H^Erg0Zc4c.nka.V2C"f=<bJT[nSgnYD>^TX9H95/Nj^^L#*C(%T81,(,;R6
%,'s!9"%V*=HFX1SeSjl4H:+3<(rb-PWbOO4pP:q>(WouBXMCN'LHIk[aahuu\0[u\N4?hsYms?!W?QpAg9N-"4#Z:8Pj:JYU>@Zb
%)FcG>SuPtSif56HPcati!XJ='/aJko&U%a&A(Tsfk:9QbQ?>[%cKpZZN\D#,&_mE,&t4oZ0jX%D*XDnufg?<\gJ(Vi:s<pP#=VdO
%iSI\:@kG;a^U&!dlo2UH=U)K@Bd15n+Tn\D#`Q%pM\[5)RaJu"I+G5EM]+u<[[F-6Ag3a<=jdZDD1roefPcDpN,^GmD4U;X[[B5_
%.:U7T;F:QtZX%"Y*XA;RMRFOL$1:sk)h_o76HIkS/IaH)/Hr'.i2ff]_CDr%o0rscBeV'2QW6*!qs#HXUKU]u*($]*TJI1Q.[moi
%-Uqa6Z=+GWj/K'?B\Z,F?8>.[p=^7cF*)#^#2<NHB:BC>auUEEfW0>c<SZYKSI,c\/F!2Mp'c!5A=uCPKFf*1JO*;Z;;=g(>.PYg
%[93S.;Gf=(e]DpV2A]X.G/M`>ZQ)U6J7<\)PF;acWm)0to8]7`MQZTeW7if1MdgK`<OE7S*0H&NQkbAkfV=6U]qKoWVu/<0]Z>ud
%d.*YGGqg':K49Ie;5f?XSqnHi%-XBNELVE7eH:AQ3hnqOA(s^Vb>?DU(;XSVM=oRM8>q3eL8[=O.tSB^\rm[.>^#"5#_u9<jmIo&
%5JS"NTnFgZ8]+,!Z/g7U@MA+pR)K6^YhB9I!V^8aJ8sG(S=!U(Pq!uk40]%XF`pa4`R@\#DP0bk;1:.97dXVQ;p3OT:N$3<!aC5A
%.NM@^Pphp?f`;gs7(hdB`2qTbWWorW=b3]j_,`j`LK>s<m>44r*Ldtd->d0feT)@J=>@Lq;$hDX=H;+7@=1O#RlY2W#.(HnRBeN^
%W/=.7Ct-:hF"?#mqKt+`l.X9L*S!RiS",UD<4*^b*SF7j[Ns5J`;,Q6[^D:LoG\gWT73tr=KqEM<=s4^9*26H8?/a48PaG>955<_
%fQaE23Jr0gD>I^E*I8,q0[b8=-;p;Se$'SqE3l>72`;YW!/Lb6`_6a@4Nb);>'B]GB[N#fW@@=6r#:#lZ;G:uR9?mR[)<_$>$%iq
%%&UIC=\`OT%I7IrG:Yp$&Q$cUUD"$S]l^9+3LlXEi<7u!8V\'SGEh!c'gB`&jpD?g?7W\N...?lGKs_$R)b2EKVV(Va*tKWPDrf'
%,0R-:[Ss2X`Q:2SZ4ZHJcAM15BoC@PQH;%aM]bJY<7Q"Gmcj\ie(AUE=E2Y%,Sg&i/[aB?>ublO`\?!!1X^:Kkd\MuF512re_F"q
%6SU?jWg9EiQX]Q$c3(01]L^_GceD&RkOSo=`+#^1GH-2CF.V=(RHWcq2R7YSZ\oqq7T@oY'R(7hl0b0PWP++I9uR]>S9"7\q]5/)
%fnK`_=DH3QMJ0tE](m_tY3TdT/&=$NO"nL0R8[uiUd-L@.<1pG/7O(,@&]\f%o(%Gae<F(q9IKO$p+g8S-*_6,*E"u&jsT`9BM3(
%H]dfcbcOrIBJS`m,"@/f)HJ%THW7fcJ73"Pa=JqL,tqpH/hZ!7RZU4I=KG;r.`uR-`$*9DL&!pTNCPs:P..Wn_lV.7fIWd3W`kG&
%I46LJ?>qaO#VK^rc.]U7K2((+AZC`%VCo1<ZMj#e&Qt[((1ka"cPmV;UCDs[h7Zd$@'LEb(>7>:eT)AuCr0b-Jr'P\MadAQ7qr5%
%CbubZ_^T'@K,ElgSLPha9,'csZ\\%1MG,2r0I_OO7)>rWK%M7d)ld)%igpeh/U)`*HV8*'0til72a)tV-2ZY#&b4XH99M:&$sJfU
%_j[0DgI7$s6lbriUU\pFp0e+W3X7ob[ZJ@:Hhm"P%qF8r.5]b-:.8[!_qR*.2gOW//%1*E-3Z=CFdU]@&6nE/I%Qs3k;im;'o*O6
%Yg`.bV&!p8A\56Y/U^[=bZBU[V0'Uh+gS+Ybs:Hn:M,se<f=t<cX%o5_r;sXX66.AQC/S2$b*2&_X-]9HN..$f$!1I@CAn$pXb2B
%[WI=a[\5>]mr=8p)si=$Bpl?!pI!H*$n,AgR2;Pc4*OQNcn`%F\OMcjS_4-KppGnc:1SbPJqu>uS_.$s!'+%I<d/Wfb_L!pF_Pc;
%3gc$0n(d/E+5N"q)XgY5*5rrL\%BI0OG.&"8<o)&@5a>)h;FXm9!Qc;nlbK8+RTHK5eD1mHdf.[gCoEo41bc-X8E:&C,q/52f7qo
%"RRu:Yh2]7fg[jR:-Q5EN99H%9b7-pm(trp[qe3t[(VfSLrO(?>LdO/H09@X`C5!.fW&f#BPJEB3O`hN*2$fu;OVGEYF2Rmbo=:'
%j3=.No@E%6hWn.I`]d_8DEDKRgGW0cm)44UcKMg]-O_mq#S[[o2VH,Qlp#KG?rtC`Q<JS.Es!3R*sSif*#O)V^;[th#"-D6bJ.7+
%WM(X_H3g/p/g3Q#B'56W1*):D8s;o(bSG]$fOR:5RDT29E=%b!Tbh5oAd]GtQK_fUET[rYX6Z#p[ONC&<@pQm8,/mOc2]j4=)l)N
%?-G;&ds3kKgeDJ#<8<-2;GUt\?:kaQb-KFW?m\WIH;tJq8i%N!UK0/Ro?`apSr1'Da1S7UQt]k_LNW$Pk;&ij3KT[i5VZ>"g6aC$
%m?fgQUp`Y>*^_[.(I/X/f2LUDro,D"n1!1:0%\S>kk%^Cm8^'AaPpH#Juef<W*7HDj:bVXHEps+VT,+*4c\Nn1]R8I%61^Xa>9Ha
%L,kmGDF;_U\8tH$(iDl(<=[,H2".u*cIl3R\dR%%JUfhoW/.GCVJ;0e\EC`+Q9.BQcS><S4*Pjf?Y\<*&?DO"`7"o]g.T[-c`%eW
%3K>h_lkn?u`#(u?>ci!rW6O1\m>oZG/U.$</T5P!UQ0CT)j=Mc+L>;/Zb."DPb;a@NeI_@>2He]X&_,!-<o.\0Cd<]V%V'%Z+p[N
%M6nuS)h`^O^Q1!>bUoDqF1LW`<C1:6,pqjR*G-9'roFep7>]PK'3!pceK.6@hOBr$\J')?iJKV_E(+O0YhC+A3$+)AOIA6o(350[
%`uRsW\MMP?m_/NHE,Rao43[=gKfgD-eMh2P0N+jr=j7[!>p7O'XpE!Yo.`q(7o[Pcb@<j2c(^Rf.We_Q,?W$^L7+DIDlWLjME?"X
%RQEfUa._J%j(t^*@t/XVED/C\6p,Z7HK<AE'tH-)jgd1M8+&Ksah?gbmQ.l%r>''b!"5>g_6724CiM*A)\tMe.(7b_29D'6q*t+*
%d:n?kIrPc#o;e.N0_\c\1GLcD<:+Z>pQQfF7L"hh_^63AgB0tQ`lVCHY0gB+lOJi)Akl+c8r\qcfe3IEZX6bV7DO4P/QY6m71D!q
%[b8$p`5J!h53n75iiYu]jl@mK`M(a`VUFL)]0AoK(S,,V(D`QQ.Qq*[QD%W0<E--N'^LU68rl@.-$gSD7EZ`.1"O2&G'&7XT.T]d
%#eT[D3]gR$e[T%q,KRfX`K$op6$o/@gsHoYES/Z?,pmk11$>VY]iXZA8*ARE*PLTKg]pIo\>sTNm8@0P*N:+8iNKcgEPlND$a7r0
%Q4W",4!O*AS3X[MWtH*-p7%Z;m`2;8'P$/teK.5#LYl!N#O&\L9QNiVR^KW_\AREKgk!u1l+iEC[q]odH3;sg%WRJPghVr0cCNf9
%/](!SFY?L2Z&!D(7)iHp-q$I5m!K^W]Z,sd7U-_"@LSWCMp<I\4_nK]7I;h'5t>&)dh3>O>h,$G7U?5WjaNo47)$A706EN!GHV=;
%X'fCN7p^hs,f%)?:uL]W,t4$2s%a/IY6e1?.)r-RW]c)GN_nKkHkV+,q'NeGRh;6INf`HE'HAu-?48$2UC6&Q_*--(-PgW2ZildU
%F$4bSaZ8Tkk,jFK$@nESCY=Pealh8K]3oMfK+-=R^MA&#crgF(X*R3pT8VD'^SVJ#3p`)<a'.kS7r2f$'JARs@(2RT<[*Hp>IBiL
%NG]\?5\2#&o*gQ1+)#^M>nJP+h6suUjPjWT'm@M>FN7?`Vs]B#@NJeR%?$X*:bLmfR/#g%JU+9Aj9ocT[B!`?<*.j`K#@&6G$uY<
%jrY>#!OirG6boK*,K+13Io*K0-A\8$ke`,o6nu-<WZ#J=(b[kGDfAg0UKM\kplqN;d$qod<EgJ)F,`k0^tY9R9$$(nWuY:t78c"<
%GZmn5<F`.c;9UbHWg9F??Mq'*25^Lq4Ygr*`j?GDVSg8aZK=!7.NM8<e=<](9L^>'J;gYnFHn).h4mmqXV?uaM6gqleM)jaH'hFY
%EYN^3T8d_-,8fh2K=)t<-c:KIWkAg299:<LMR4d05Xt-Q![hht:c3#M_\6[lTa`X-=N&j:WbOPOHbNmL4_1/:"=*YjEl*[hgQ<Cr
%@Y`5QIR+3c^)A.h"@es7!pTGUdqhN/+#pkGHVar5N(p4MQD%g&i,Ii%)[&X>3?$<9<eetZ-"#MjSK^[J()W$KWucn?R%4=(c>^;e
%AJ6]b@aK0C]s9rKTbs7m/M/b5L1_9-CrLs]Xb9BE`(P3""GKitc;:SuB/7'^PT^I9#TR+iLcMpW0,\#$Na\42-.laCBpjf4:,_hN
%@t?q8,"\):I2Kna8c@#jGtYEfcK(Y#)Mia(Ys<XDYuKD7MY0C35%?I/@R12'<4*^b*LX4<3m@ZYA]"'G5pM*4CbTKT\C6CC&B-\'
%njR,(J;cP64GYWTQ%Qt/2(8@#dk%GUGaaa,#Hm3&gnP?r7FDH2/JK1l!?j3=,=.GK*B4c!m"gZS-td0S,A@3,Ktj9qZ4InG34VQu
%)b.*rcL%@+jXBOFfCO'TTUYQBFkrRCgK2^HpkNb4UB&]dGp)dM#O(<_nr5QjQ'6<2SdAPUZ11fDEYN^=g3dOe^nC(H-[BtT72U-0
%o:6W<0q(4l]npbt#OPk\g\K,%JbGfEWNqjfk_\_u'l"T)U<[VSC,q/5,-+T8j94I:d!;ZC&V'lui5/n$hk5=:Tf5c0@_IJLWJX6r
%4ZS)U+nRCfRP2J@JWoNDWEg3JgJ(Vi:s@mh7X("/[$O19+J(Qj#Ea*UH#X?"*VXNQWJF)eLNtNhh%"La:#hlf'YW(C*Yc2@=B*WI
%MHYJg4X4X7OFpuX+qDHQ+PmZe6`c?nkG+r"bnTI%=9les$4mqh+?%Y=KUU$B#^Fq]JdoOgU`^9f/LX40:85luNq^BnQ@&WTJ,U6P
%b,qiYlr5!I2(T/ZZ;@XS3F4Q83lZG*9]1_B?.(Rhk*I,Kl@PDW7Bre$*3*1s@Lca&lC3P1K74<>G=Wf3`5,cm@j&1;8?q"kD5ncm
%p!#jTp.?g6)Ul_8X![rLG;P7f;)&3PC,m4,d1W8&3@=q3V[SF!lNgrKkCa*-+<Lg0h4VRE)VjqCq21AA0gIh+l#lL.Q?0od;2e5I
%Wg9?G,G=D41kOM>GjC@$'i.W?V=C'uRi8$[DGpX8Deb65@kSabGbtFk-i.\>%AVRSLd+kH*5t(up8<I]fRTJK0Vntp6?medc<&sb
%9/4)Z^o;@1Hkh7\c?cK/jbY\#/mfnS$P+sMSuPtSif<N6q]:GV]/dMe!\L[\9r)i@njr.!;J`Si3)pQ1T;<*4?^-X%qri^)ke9`a
%L/EnhVlH&X\AM/S\m6H*hLltqj);`hJIno"K<?&E_7XE<%2NNJ.O%/[$j9&+F/Wil"Tgi,e.i'CN+/RA-rAH7'_db:%^)*j(bL3*
%/#?'8LH>mSFM:+QYe2mE3/"\E!i&b("j<[9:+M\l_dY5ULdK[)C2&K\0-#00$7^T/J"?TfpV?^kcKes=J;;cb0a;A9incjFcs@UO
%O7%$!bb*Y&/r&a)&u,L=d*aZ_@i?l'ed1",&Ai+Am*-<(eu[_rCik[d2OJJN<J-5K)/Y!7Rr[WpR4pJ>fFP:B7WemQ7N!aG;p/"]
%Bror-)I\8A"kX-0^*'3"ZaW"Q3b9HiQq]>LQ_H3EGA)XufQKQ89>2IB7ub/KUZRrj-l]"]BkSC=ajT+-/MY9]&J)1dH0O#A>U<T"
%mi>UT'jG'TbN%:.nn<2_=W:IrfO@e.ck9Q9eD3d+"PW1HdZtt@Y>jWIOEBsEdW%ma_=@VZE]68=S$iI2YSK#+W6C)j<2b=[<'CCn
%PB%^@eT)@JjM6DSbR*"(+2V\,;f=",Zp71N/9C[&'H8TM5KMX\&tEN.:]Xf9$ddsH7=d#];.TtDA)jPgjlj3-LoJH;,<0Y!O=2*N
%.$jGEkQCR"gMdg>i%,'DS3KKi51_D];2uFh6N5W9mXQ.D:/rl50kWmC@9%o39q"pI&MK,QWN^-A'9ltBi[9AU1'90:X#c=C4VeYQ
%?5h?5$EK2iP,*mo7SqWU'R(f<"rCGgf\=_BR@T-O7^Jb6(Kuc(,$6In(EXcPM^f>J$jC5mN"k83d014SeWE+U9r=5BR2F8S2>OB^
%@_G4kE.,45)^rR*/>l7HW<gm\,8:K@Skt=GK3hGAN,b5`6Ab:($%#e()_.pP'Ud[B:r>n9BoOh*:TR%tNpi_,Fu[TO/Ta\]o0"oA
%iEKth8!'i^$%HC"G5A-m$"WTseP[gS5H3QB@Zq34W+q]V0Zs(\4Zm0H.D%8oL@F#nrWZl&T+D<0ACrF4$:Ndh'B]4<(''Y0NR@EM
%<HLp;(R?h%d:DNVL`,+'U()!jM.qKK%<6o,0)5OfWQ>01LdV=RTGh3-><'DJ-EmM_Bn[X:QBXXN<X8u2)J11P*/T#.TYOn"JJ;Ne
%O('N4RheDi?n)dO]u$m:g^=/e.V(tPK[r!W6:U^FmXQ//DOOa`@ZCl=i9E<.p=f7SA>5[5R4G<#E#&i"Ju*[;Q\SgSY-=Kb@'J&a
%B8W?Y_q?35kEo6H$*dV^/?!;DME>Z/"VM+7k5A)9B`NA)%-#QrSFHec>Z;GKW[X#@A?E]FGK'n5"RHR$&gh`,`+GEG:t9S#GK,NM
%V%IcQ)T">ddLa"Z>8g72LdVUW;+X_<M-F._1l5ET:LDl)=R54[1ff8FTij)ok\5j006/;N1J%jqZ=mVQF_5U^V+R:;8aI_#h1DF4
%'bT]$<C1Y$JoWH\"cJ"/$dLG7UF=-:;c1_6]LuM+Y;Wh@FkYHi;jUM]>&'E&D4Z1J,1.T#SW"%$^"_!A%Wq`539Q<V0(A`UH\)&s
%C%B(,XJ.#L#cdOIM?[a4CC,\W<iIlS[$[Dl!jQEYTM>MW+MD"';,JWonl,`j<pA[[A[n+?0/4uo`H>EA'4Y2sr:5NVhC`$V,$@)Y
%iN3iDH,?%%&<!j9TIS)4j-M,U=Pgk=<<8_VckD&G4J@L,bV=^LQD:t="S6CI+ID(=VHC!bBPL8&ZH]nZ@<]7^9mb-gC78s@N2%k4
%kXi!;['"%a#hLs$0s9i2UN'XONq&r<!]tNFNO88b,]CTiV+TU'JQO`ZN2iV22ni6_+CjN..V$WUP4V0:/R()k@Z*o9W+n>M3taln
%Mh4#%nS>k)TX,IoNJ5X]_J*%I/6Xs4G7esb'FH4d0XN<>&EfWa4elukX;WODZ11fDEYN_dB%l2LC53I$DKDW<[lKfjDOZ8%k-d9R
%E.4:O&]\aK"[Ll*fGe^t;hmVSO`^k./OsfIBbnW-@-<P:17c6e1hUf`O[ZNgL03W!B3K7?gh"E`i!rc\,$R4X^$eu2UY+S-ZOtu.
%NfJGm1Y(e3TNgkqb4SMuI_F4SJJ_a^enG3kin+(+J/d+PN"]Falj^_dfcaVhMun%5f,VaMaY<I<COu1Wl@?(\-5-Qf'7>(kLdaII
%lpkN[Ab%lNC4Nhg>75OE(fpDeKYf3H`E?g'LI#`R[M#TDNfL_?c'Th#eldZU(=="K]lCD9_5)Q$/ND=lUl%UkQm!:]=$pZ9(hAI"
%P<"g/Za^gF7DZ:(TckY@(+=5<BD<?T\2ji#fqN#4GaBhEJ='h[@5LL$!bmt35g7I+5LWLF`HA0d>("QhGp8:*!c*bB'Oi(,+U]1(
%I4$&h`$NfA,,s3HH4:"'`DVL$MJs_G'bho:D8fBgUCJHUQ\l\^,)\D"oe+WZYg]dI&/h!@r06EMOH.9Sp:F'[,9XZmoFN",SRM1%
%1,uU4Tp4bD>`Dr"A)jPgjXBPq1@C\b:9ZMV)W*tYUgR`f.o-VZa@:qF!O:$EUoB5BmqctK@On'Mr^.nL(@'gon\s%j'f!`7W`kG&
%IC6^pkDF7!Lcj)ER$K4kg!O=bNgWTS)_GDg<=Vk\%`.!OBI4HTTuptj]b/4h*E'i.GcGL=ME>X^cCN2aVIRWWN_FHVcD%;Efute"
%NA*2caq/oojY+hKD'N,7*P/R-qr6;A\E^:B[`\H"Wg9EiUHkf"!<rYTZK:VB".@>AiI`#)=$s"_Nl4Cd=%SZ#p-_!l!t;RM+IH-R
%V%A5YI4<UKW&P2p,\3?IL162>lH[qA)jnJf.n1OA="=cQNTBA>a<qiY&=ZK9/ldYY'.p?6LFUP*WUL55iNkR42<9\l"(Ge/<@p^\
%8!'k8?GMHq;NmOgRMP<GlUBTMGd-2AL1R!h`>Zjh-!oY=pP*Zpl7Q6Tq]tp)UUW*nW*=cVD@NHd?gQch.cYiI^$EiQ:fo(uAFFc-
%U.MUYh#X#[?=^"c9"`<s^=a6PnHRpGdWUGKMAnlZb>5dOW8XGf4R8F\%6)TNeskj8mVuQoik3j4B@a:)BAWr%>^(gF35QCbnMLtZ
%Q*nCCHa.*B%LYAJb:Z7Y7CBMa-o;[V;d(MOX"(*>BX"3>Q?HGMV6Vf'H<3mHg*;`F(+HUIX:!Y0GIIO$*sBh@ea$fU>jT.e@3s1h
%`gOecZo?:OU8-?DF&\#D=g<A7N'J2nAC24M-aTa1oZ!<L3WqdMCfDftq.['IU&&9#J3&$Xn\k71Lnp%c$Z8OPJitS`P71S7A!:_3
%Mf[?^`VHm^C=P&Ib%g#m7N9m<Z'qARdlpccNe(o%c8YqOBVP-RQJCILFD/lqb[0g29p:N<<Tm+3=]&3UX3_<P2iC;e<2$Xu^(FhT
%$rj0?)1m/#ABqG4MdW!Jp2^j8_:9`qWlq+g8$NB/W)QJH=]LeGa^g*:4"K!AJu_>RTt7=**E'hoaAhPH'R-!eFB&T!X-O-]_?X43
%;m(u][NmcQA;.$T-ECAd#;UhKA1N'>p4ch;<?4uU4JSWcO/'4OnD`Ha:+pRK`Cm(aN@ps)&?5oB,W6f(.TJml/*[GDST6hd.l0*+
%hG=K#<JM8C2P-rB3/W%h0.s:62h?lL*AW=;[YUdh2g]VH`9clo;FP,u$o^XZ'te$ZitD8'%0:Yf8S0\8SuVKD3pmb8olIitIa4-+
%k<*JT3D]O4?@7Th9%C#9Woj5l(MTFG?),YiPs;i?Y:<,5o1f.,O/'4O9"i2lHUT(7W4KP@m4n%)WFC0da[45.Cb&LRgp^>jY4f[G
%RAomW("oPRgFI(W`RoF8g>aUL[*<m)$X@e^KB]JD*AlsECsNmS/3amS3u-!qiH;HPZJt7^LS`"3SK6\8FnS69A%PI]*]pVbe(g->
%R,_F-Ud=;a_l!*cf0..>;2j+a1!N]Rp,rDiFXOE8Nc%9YCeK(:fiLI]!A<.C$]f=*g"sM[LrKC7:0(it/mi?*ZF]qWZg%WDU<EEN
%\>[(*c3E_nV^>8m/N+o%]Yq:T`#!i?7$tYI2KiOh(Yac,Ad3QifZb1708Y'+&Ye`R&6h4c^1i@fd.f*a(-Q;O9Sb8Y2(^Db/P5H#
%/MP5rZZA%*B+%q(CeO'MZNX73AK?<+V<)9)/,EXXomg64fN,@!>Anm2<nP9G+`b9*;J0SMBVs(@<.HD-*<K8Q%-GPlYA?u[".\>l
%Muakc0t*LM>%U76Qd&7&;r@^a0qE/N&cUi@L2o@iTi,\b6ekWI=e4;-]+D;;lBt)=8'.2$\t*XS`RoF8g>aUL[(.&d&;\XjjKjh>
%9+YNS1`:)%KhAW'%.QaiE\u#UD4"mj,>bTmMp>E+H\2>(2N2*]4B:cg'R(IpSi[C$EF3HYCI?Q[HGsdngs$BHG;I/fmUh9=41"/3
%?MB1oY<#(2pY9PEi_C_`f0]\p>Cg93VP2fB=@G%8H3c*%MTmopOgUWhM!KAC"&\'bW*TJu5$%=\YD9>j'_@9@W]cC%c9O+*KE;tW
%(5O$XQMar=H9AeZiF:2EMCfT,?F5JBSu`pjU6)YnHWJ=IjPQth=69eA0T*.*<40bDge46R)0^UKgrYf@:7?XeOlrXpJg(AX3tX^F
%%ck,EU[Q3.Q+_(j<<6pr:.?5tR\SoW^uf7bQ3U'f<AFW7.13@]d8\rQl6R2[.o;-o<3er3V8lLsLf/u8WXi46`TBuj9f=SMbeuJj
%GGl[$)#;bLbY3.YA]KpO^emk<#'dQWa#i*=<e5ip[n!mp!B&JKXZ20;N,:)n&NH8$T)P*RGU**-EqMFL;GA^p)p#!IaPuK+(2&ph
%>g"&;>^.J,Zr;BJm(GgU/FKTNO-pj6hI\d:^_o"?l/]=i.s5I\:fTNEZW9q`[[?#jWe;q+*,UgdNpOlfo%$]O-<miU3>rh`Z!QR:
%;74HlEM$We.u$N47c5efr.Au"i/W'XlsaY/`QMm1C+JiF=iFf7()K>B'NU!-[]87c_6M94_'JH]B*Y\J_1"A%/Ose6(V6)U#O'05
%9PrQRduA^RNqMF=/u&5_#?$UE5WA*^mH(ja2uL1l6TFLI]GpU6UN%AdQ.r\Y@J40kBWltob#dJ2^%0'[11,r1YZK+KM%G(R:)HoB
%c7$pr6G,U!f1+C6$4X;\@:V:7`0ZcL?P"W)QBasljir91=ss&r5h`=e(@5o0<$c'p0*kff35+\QX/\S1S,`-!<A+VW_^IFQ+FcD$
%>)qT;9AFRnkdabgS^CV^LY_7+(Lu6A2hSg'DDjSe6^?\<pP*Zpl7NucN0AV5d;^fS/;nR@$//V?UV3OE,?9-9BWiR;`4-UVG#H0k
%AM&:<4H[UnUl26['V2[q$M^'\$;BNDZ=+Fd<0IEN[,i_(W*rh6?Ap#@:Qk)F@p0LO1>!t@(Sf5m@`\s+Ke9W/Cd8c&(L'o>K"Ta9
%iXmNMe/Osu>oh@%gf]np]NE?SggRY;.V&&mIbousWDA_o5.NF,g?^.%m$e)VjUmc_Xn#keO^X5CWDCtV=-^%i@2'[A<u"_^*6"IT
%LgTTNh0R\'g3P,@^YWDLEkS[=F3H+'TX1Bc^,gb_f"7rMD8!",fr]IA#hQ[.&R4]]8&sEoG\4bqc3W(q,$NFLZJ?m>_6`rT'$276
%K2Wt%E=),7NX;"QQiAI*D*;K2mTZfefHA3;>$>7lCRK\a7(6S!Qp\4sE\@&Se's=JIp5T*3fug@"^RG?=gfFU8(S@X%.;fBh$#sa
%r\hK6',*\7P6'%Yck9Pdn:"uu2o3]Zr1rcBRrD9KEd*_9^'Q/EI1niEl'p&cK.>/I51*0k8n*m#_YIFm'4\TsniRr6T9CO*cX%%E
%Ik')5aWm^%_F7'b*p>)/"l<aeib(<>lj3E\KDGXYK00aEC,n?Ck(^)[=5[Vg;L8l;L6O`'=mV?pEFlMH=>IR+Xrr;-b$._'mOEtq
%hGEC8flN^dT"(d?<t1qW+AW-?>)qT;2oLb=6('lA25%2j9gA(8:#*8-2j#h,L`^h%/0&l4EoYI%nDhe(iOI>MiOIJZNI/H`61Ys)
%.r`q_25!+PSMZbpNqRHZMBu0rXs6pQR9biBi8PBu&_rM]maW9#EN<L^A)jPgjXBQYoa]0Hl:cd&AW(6j@U2IQ?:OfWL`mPh/_6\R
%"oHjV<=,(!M'g'X>es0iBW8br'3CH5WaQTOj/K'?kd]gMDCt8iTE=MmST/UB7rT9h;;>SCRTQe4NDPlOpBaZI/g3eR[(PJJS)o#6
%VA_oY2P-pPNoEg#7!W^&PD(ar0eHOF)9JY:h_M*"jiHD29FA#NF&DLTQ1JJL8_Tk/D*+e'am[(=7hH,L8rBL3TpR(8:br@?R881R
%it9Lt5k3(]4m)?5bia^@1jS6R.-=IOSB2j_?8E::g@(Un5f^MT9Gto/F'+P=lcf0l<)#h(L!0^X3UK[!Va^$A[o4Nm75<p^6cXQU
%Y/Co<qeg%%MJOt>7OZugb80gQctFL]P?;HT99XBm5hm_P"hJdb$_j"#@bm7]7t\sb+;Rq."][-EECZR\q[f^A8J\Otp0D7L]<?dS
%,sNkqJXWE,#!!7h/Pq#l'i.c8..aR4LlODU,D%ktYFqiU-f4!N-qA++V!+@//f8RQBF3[#54Kt^cCBtfR:\K59FhM9j8n$6"j?br
%'o,)6FUqp]@rkA;V'5!r>+C;,W*pA;:j^UZ17B:Gk`74%08U1\TS^W8jmQ>Y.'Z2q*iN6*@d4I878kTHQlgpCL67;?s,p;ME+1b;
%&obttd?7Et#@_ekfA^XE9.)ZX:74AEii$USbJbNa;\m#6E%Y8?dP;JG3%U7D^*RG7.>gD:93#gK`/qsId68!b1&H?[<"YNtHn/#b
%3E>gKWch3/YkV6.UKETc#$!6FEC[.[j:Xob8+UMJQm,rqLaEd)8hc4H/"pirPd^g,;Sku_X=On*qiM1'e/M!s"a(*hfQaE23BHTI
%@@:B;LnK0t-<WC#0qF=$@Ph`<h/%>uQ/HLV'p2&o,D!2,4A`Ff->:cN'd\fjm^PM5a9@3rQD8G\Q<0KE1JVmGB09imiJ\;5\JUkn
%cB(6/3m.eg.Y.dZaVboY;Ni[#VjGZO%W]RAV?b&6dTo]"EYN`o?Wun$h0S77EkTq%n`u`(4P)[-/[sU$VYTm[:Q=\2[rJt8n\fae
%CO.Pi:)=>=>)nWTq-S/5$'(H4GclJA<A&k"m]2i_MKS&u;,nu&N=MpQQ^d'L@sFGpH:&0V:kq:eap!EtQD:r7WAHU;S`$I6!])O!
%j\;Wq3Wkr@6^3.^N7]N\*QV1tkfg4FZb"c5#$B`7mWll=%pBh^Mb<g\9eA^eVuPkH"*Db&T%PQk86S9nR*1LM]Ih0oDOP35:X,9U
%n0[b<0>P6g%bGkYY8KC`$Z%XH`efZ^@?BV6H;B5:rKZCCOksu@N1.RJo[.#Sp9@rmJ6:*dIDEdGE0loWZG=jul=l'20>0!Y(RX7K
%q)Ls\o7a#7^2U4p?[?:D0E!ZsV8Z0C^&u0[l3#XKa1!6>^.96o1E3!Vg$j7Bb_B2(cYQ_.;8,&r?D@oB+F[qsb+[M4VZ"c-N<e#j
%)sqZ%Ru':tfel.;I"@>]0e]20?Lr9AJS.0rUlk=jUk.$kR6iDu*GW<2%tJTS$*M7-DoG@sc+.p0]0L7?f9:A+*h[-<Yf!Gp3=QeQ
%c"[$GDGJ[X<)H8hB(W+2C,G6J+6caF3dWdE82j1J28PD>c4o1he,#-NVl$'tj`n\B)RV?bNQJ6hgUrqRc#T4T3@E-6HAT.u_eYZ#
%`X?a2Rfl7[*9.6!10?.U3ernjMPt&/0"-hD.V=Y-Gt,Aqqh^\CmNbHfjD[T#Jd!;US;LL!im#-&k7,f.Y'E('^L:I("35erkQ@5/
%4m&.g6RLqr$qKH&?\!FX*NnpmHd,FCl!c(Zk!8p99T]_kU8_Z?;\W(h1\tC9*tVj99V>$EZ/uR"Y+XWJ1+]Fm+;X'M5ul+UEF0if
%bH:t<Mn7TRo/BS/(98FHW6;>aN@<B4h'&dB1?l*F#FTbs9buMn%D(0/bH>Rs`>g,$C,m4,;>uqtlpplALpTXlF9Qm9>TJ#Edim;c
%k@CtbI88AGHOto$K5RufGWrW!>(a?N/lrX+N1d34..2112<Q"$3T!SDkDB!p:M5W-Sj"Ob4:sg@jbVW\LFP7Gn\fb![nC4Q*bJ:"
%Ecg*]]i:MU@'ni_'N5-2JnQXZ1<AX3=DuJq</iQE:rQR`QS5_Q.oab#TWg?hB8PmbLlF$F=]DdK`>rZud3V'bg/l=hI8F;XQ3=T+
%+;n)?BS(9$aRE%AO\n\HJWjXt#MnBJG*BV5,\U/45\sC8'<55ria+^6LDB$`:OCmW&_u=iGjb/Ep\?6*F3C-+ZG\mI`I2L3f3[T'
%8&sG59GK]%N&i<LGbXE<\Rm=;E;g`n#'2>j(,?n.(-MqFl#pC2B/Kd<6U_M_*<NKC%OY5`*6"KJVII[NUV_(_MI:E89uW>%g%5\9
%_o[ie]:j;GR.;C"Pc7_jX(SZ(]qLg6FLUrjXEQ^t:t9S#pY,:&X?\`-iV0lC&'q2GoC/G%Am`$3WhJrZNI0c_3`U(ClTUZ)o=X#$
%3FDZUq]$W#F$B87"+nqgm6iZ\D_=RHC88o&)e@-N&qd``e2#*8jgts):8jF/V`!=6&C^l2[=MLKYu)!E;:>"Jh[.b=.7(l@h7XXo
%%10eJ5O.SE,mL1B,1DDM-Cn%d"4N"Kk3:/l8bbaQ!N)rTKuD(1-'U6F7!(nHJp\<NU0NtkCt\;Ci#;j_VU1)*8fX-uY!mW*!S3p6
%'Z27DnlR),kJQ_m3"H0]Yn4/E;bP$NOYq>e`=)mE<?RM.$O$l7A#MEmVPYbRh^k%Y6!h+e(^?<R[Gh9hJ"f1OC:I9a0RAT'V/2'U
%QC/RGeZ#JL_.`@jd?.[!>7;=qL5/#Kqdug,%EaJVoIq[Bb#CLh>8^Pi,t*J/7Q9uFE+cTmW`kGBc;^_98H;5&*LXdtLnZ>jKJ!qW
%#"rc1eY%l"HkH\$OU1BXee"i/:<k4)eKOQVaG<#Oc-^Mi+&s+L#Y&Y<E-Hq?.'X;c)H(4E-tZh(Q)[-!3%pL%SEq.a:uNd>MF827
%l9`UkC0?@Po#%0$j_3Es/(jKpS=ionQu]0iVI/WX&DU/R[AdBq5jG2kg/ZZ@=a_fe\p?_:h/u7#RoE5m<@p^\QeTX\S7'j0d=Br:
%:7?W1VsD2o*DWKde`E@5D4SBhpN9fsikE^pd*=hT6Qe;/(PSlTUZ5Z5eO=nU7UXT+Jc?h]d@&LI"Z6$l)C;7/2V=#)T\om5W,L,j
%FB&OXS6%m8UF/h52N8VE0fGW'>)qU&lsOp\Dh>fgeYAKUU$Xs!jh74K`q25'RmC,EJ4,au*gA!_EJj0,>!cFp'q+e;h2TDu2CWnZ
%<@p_]h-BB*HN>.2:1eOE+'rqG5FgNf?p!fKbWU/2kMje1H,a,+p`+K1%<4>1>ML`hi_GhE^*pgjn;ToJ2sq[F^2%e46,"`em,5#J
%QtPi8;*!f?2%N]N3LS:>K]ope1.6)Jf=cc_c-^O/bO*:iTH!WK1.Oj`NB>oaMV0qIV(+INSDtZ\F)L"J<GpUB)fFHcV(k!6gW$qh
%..2,dK>nq)I60BJ@Z#\>'MZR&R*uBLcb[F-g;N'?1[Z$KF)KMS]YT>Q>'.Ho\D-4.UkhajlRo2@NoEg#>J;LOqiYj(Nu9R&H(+@1
%#OdS>lSQ[oKnE*"6(YV,dNI]m%]PsP\=6?^(ZgpB]$(Jc8PXKWe1u-iUNa3Y.kiAZM&mb?F=5e@%'IGp'JG>1_((Fs"qsOLofWF`
%C)64SbB>iM<8B?F)F05jVkTKLGaFA(FRM4E/D*i<*QJnrNM*uL`10DV"A8_"/RBPsml:t>.aimC)XfAR9<*3+N9UTQ9h]:h91)C#
%blRPPI)`G0q$hM7[\H^Kgh%nZc0aM/];]XR\t@[<W0c`ch6fD(UY%^]2m(I.SCH\QgRPE+3NA#3^(2_J+A=O.2hY$t&Q?&j\N>ZP
%9E(A$!n"tkJhkI;AYR=6),A!M7i-<9XL]E=PB,DSe?Ta'HJlA;5VUiE!;gNm`X%n8kS"HoAc]S8MV/fXV(0P`fA2$$?bK0/Nco8I
%<-b]c(JLiqL=db!*3*2&Nr&qi>TjE*p/0L&Bo!@:(cB#78^Mf(<&B0=2cUHH/gM&&ZKP/^^Pk$`*Xq&2WA#1`-F_lQ'R+i\DRKYs
%Ci:]l.$f=r_cLmM*U^Au]A.Kehs%+]^?^fRc$/i7S+#aMR,ij?`n(V>o*)XU0a*.,>#&Ws=mX%tL0304"*NagOnB4T[Xgg_N,]tf
%\>Z-77Tih1X^KAKK`NpK#c_'g`dLnS6%o=BK,+k#)&`HO,HS`^qTXZX#7tST]%Ot4KaIo%aD=%uSrrOb2%rq+0PN:-bV=^LQD:tA
%Z%p4(F?:M2Ei1-V^XL#!E]Y9c%;r)E6PO.g=&B=&b3a<;%DUAs6Qe9GiJ2iANk=Dh/+*R_ghWe4,HSGnGBDW&olf,Y0)+.h0dh2$
%6oFCTDh*2j+g1@,Hc8k;l)\[6cO*3^]u0;_lQ%$T^#%]t\b46u"P5^;&q7M-jEfup<3CH%=7tmMf,c's(dV0Fd;_*Xh62#,,e2\k
%b$=BT@_^b37<%R`!=>oQ"sj+m-cku+ql*ihS-aYXF#%^JP7cDnbu*9dQCjU-5f^QMRTi\;XAbE!MtW%&TZIV\F*Ab;o-UWM=1nY&
%Fb`qTaM$^am^PVgcZt%YcAS[HH-p_TT&(sg'"Io[<)3\9cZob9cL\n-k<++/cZs[>k<'W%cIX$VGDeWJ/PZdDbhbN_Rn/gR3&tW:
%DfP@I.`A%_&l@[$^;WZO[$XS;4]T.dC".Q:]u=^6"_NS8$9pdUb>I%4HVe,N_*N&loQb?ms3\i_GD-(Aj\dX5Ug[)Z!CIPN%#Bd=
%+IaHqBpBQcc3+jd9UZA$Rh^I(Wg9F?^0(#Y"X+$942Z'dA4EE9W47`m6:NU?/`T'oX9;(5[3/?>"'34"WNa*hI@r?W8_jBO=g\[b
%dP;JG"s.@g/sq&[4?^J,0I!K<f+i2"a3L&'U'uZhL_QGJ*FVDcXBGkL2!]F+'3g%=8]q*#ZXOG691-qn`STu0GJW(iDC=i$9P\6\
%h6\eW%W5;PR.,Q&>JUFm<9SX;Z;,bq\XiCL.lTGW.o)gr/:,Z5%u:\mE@*CVs+dE>]`\)R&;c_C+1*MK"Fff)Qkb?8\%@%1^q&7u
%hSJRXI9%4QdEmse7n+BoGQJjA);=&<7*L]Ag`e\WLafiBAMCu^/)q3k2)Gie#$-/Fd@L$OIo`4n_cq2(gb$[A5U+%\6@eu]?uKI?
%HG7(N-.5<O'lZQ7@F/:S"sXgVN/C+ZQ:DIDTgJV0MC?aW4[<gaTE2&rNoH'kJSK')e(ehQn"fL("G_?J$'+id2o1&E':d#S2SjP7
%(_^/@lT)f9<A:J$_e+0_bH\IrJc[M,#QC+W&4)^P:4X0-AgnKIN%hION8Y!F>,$TXXLDTF4!Q/TLf^6\eeJ4AbmH$f<QiaV034nj
%>ic4,5sH_oP]TT.WQGb6AU>/JTYu:UoE\!,Pog.(au+;8[L:V!UT=<[eKGK6j/K'?..3$En0/aT_6OKU\b(<\.RlA+k?TjS_[qY?
%4rAARR;iJg-B!aDYc`kT<4ORB>\`+DS))g&ZI#=j!q\=f*+(46i+Hh]%CgL=CL!!Ci/l6Ch89>L8@0"aJJ\&_qI#qt&`tQXkXa`\
%1sV$1B5;*Jg`X&(WWB+<Ag5G!K"Oa.K7X`3#e+dd6[>"l_"R=O&M=p]>r'^`]h<rr#tG_W_ekociEG+"X>Ku4`sA\KNfH1'#bHAD
%*Ht7aEed<BE*qO^O?:;_Nk=9ZN]TOH?]`tbGM_BLgj.pIgl7H+<uf2M'b0`8#nH)-cYetKj3AfS`>u[!0@(R0$\LQW(-ZuhRNRNF
%FPGNd_RaYL3:8[B+QaM,<Qid0?XR]NXGL=<a.,h#Y;D*5b*qPl;J``:L#-*W.`gPjRRU?f_;YMHl"@[BHUD@=ZT84uMlY5RW`kGB
%NbH>gU'_CKGqckPg`-"0,F4EKGFQDRKLuH>;FD4!(_q:(;$jF4,?uqe)S2XMZWe=[j3DTT<4*\dpF:E.=FkA8\!)*c&GnHus0#MN
%$)*Nu<Phck(@u1=0T/lkk.KP*i9#F!1mTJ;ZHlD''g/1`:9^(YN]uoBW+0)Db#!j\8?pQ/-,$;`'P!i1542F&N4NCm6_-$L)sWq%
%&6nkn;d,3AHURAA*U:Fd*pVtZc44uU8`pTV*!Cf-BN6"KJ\[p'I8g@UO*'0_kCKcT475Ach&\Z)=d-])]j`:n(-'^"%LhY<M'4ml
%`F(H=HHQ>PnIuim9%*$3&&ToDdD;ae9BhebY+t#'#*\_1hK1HP'-OY9FAe>[[)@,WQrc^\L@qtkibPI*Q"&!"=Dt4kRcL,.BLKs3
%YK])Ci)d>;aPm_2=Qp0=(Ylp&/(L)j"!FnR&-Z5U<fX6b:+E[UA4)]<lf*a=>OtG.(=<abQVeOEQ[ona[Wa*TnD_&&s);]I=r]ta
%.qXh3@SmiKCB<KsZe.sjAjiiZmof;_h4B<U't7fVWV7sp]WfJ5QgGYJi4*RK>&<E5A$H;p4''U%]GX"TDATP64JkP(B4R*_Tt+H&
%1dbf\5RE^7MQkIp)YXS&W$fHWRahR`],#O@\Qs%]8jc:"))b=q$c1[[D%d2L1kgC,k:0RN!U*MHJlkV5r()aNW.JS[R"]*!]VC),
%PZ_'j<5Gm(`XB^#78]_Xjlj3E`)'Eb8?g\YdIcf\b;m!\6"G/0@\X[9oVuL+1:SOH;3`c8*RscY(oerQ=,+5p2buicF-b^&VUc`H
%qe@tuIXMlOlW[&"Ko;g4i<TUs'oi>)\&*^G/"G]B>iE>%cP=a^n11"L!jP`o-rAH7FPJI"UsE*RlquiQBJ/?B'm0.2pB:qZ"Xl94
%\>\T09SSu1%1@a$G/>56I%XqL:eBQL=;4_dfW#Jq<4*.RS,jm@-R.3d^u6-jT$XP>eo`2!egWL\e>S_]`FtI<'9*>Y0osNd%CdcB
%lOo8]'.pf]"0kkR,cGH<3priUUE4Q.)Kc\SW0=&"F[QDgW1u+:UCNq<osW)``>:N!HC]^.FhMq77_LCfBc.u.>^O+nc95KDCjWf!
%f^84)c97cK\]9oGhrDhLHb<Z+@=,Xn0]D_M:'HG6mSMGS'R'bH4El=9Hd+CZ]+n'#^;*;bGD)%tGK-4:G=J%>SaXWRmWEGuHefjJ
%nW%t@;;;mcR`-:TDpsGJII=0RMd_XkeSHr_d]'S]+XF'+?0l9Kg_kRHMA]a^?niEM[]!eRd7k^=XY-c`@^Xf-*I!FYkjmZ38/"]"
%1<$B2=Yt8HE0?+dYt:')%O`Pr\i_r$d_m)S]X38pJ[9YiQNn=L#fKb4R\6\B..3&2pi-Q&`a+e]`gngi5OJqI5]!_;;X]LT/^gG7
%T+l!;))Yd#@,oNK9_`VjdbqVkd_p./3JomC&P<qCMRFYRZ\U&N6*k5SAMbji_TWXf/Z]RsZpcF=8^S;S$gHab?)X>3>fp`"*R\BO
%)/Xr)QD<JXOVM.G,M4G9a2s:p@4it%94WuS5\RHR$5H9m_rqH\Uf\&oIG#PUQ;B^r\-li*Q3G3-79Q:^jl^kAP7*Ek<a]RNHi#r"
%]NTc6`g@T@@K^"HZ@\TAeKI2(<rk"S]Z1af"D.6dp.G<;)LdLE.Q)gDQC/RGXMdFO_`FhP=u<7X6CMa^<M_OA!tUO9@S!'4SJ6H\
%U!fb3'*DGuU03/&;-0UBU4J*Hb1I?61rLA@m+Y,O(tL,9bJf?\^nO&PliOYeH%f.Ze#DcK!52#A9J#U?=A,ib5T2n;J1=&/&hD.a
%TVUNlWer9c>/UD&b:[52QFE57ih`!4cZ7\^2H^HF=sb&5)RY/3J"!KqKJ1\#D_YU(&+F/nX-Zpo?tmXOXdM2h(00q3).9A7f/(sr
%@/P,DYKdH6(m:B8$pOInXn\)SBYI7DZZXZB@5Ot8B&9^DY[hgdjsT#am-.gK*Pp%dk#OFN4bd/cgM=;:O+GqoAP&FBq1/+?"E3!E
%EcQ^HeCV5ZMotNiblNX&H_jdq8&sFPC4=A-\hUD/\-g5TUM`p9N]Q05DU]PRo:sSBS4;>kUqop3k5i*E;o(?JNI/oIg_jDh`tcBb
%?!$l-LXC]nWK/Q_"8nR@=IM=X(khKn<a4lH/*)EuC!fW$_6n#5nDJ%sY?HsHqh"%#OsC/lFWHko"gWr]ng"tmOk=2U8lS6TGF=Uc
%2,?qT8Pg<nS\]-alM@93XfB8gRTbGR5'Df:Oh!`t]]PWqhhn3ac`n\?*:Y;pS8ft'S?XItk6jY9H/09E??_0?4#H=Z'Q_9\XBJD%
%V\rE"3uasJ7jH16+C0A'':CD16m\&V:TW-:'S3P^3P@ObM!e+?N:5g]f4([mBfWVug8AOe0ZTK3C2=\`1U^6,(,\^E/WbiAbFQ^t
%C=t3L!*]pnfimJPfm6h^/`UK(D8A?h=L7Z&$+;/TiRj0;Cr[dQNX]4+"pJhD_)Aa,A]qlWZ1YKB(?J6'.PV*MBZ$jT7#C$"Ti<>8
%KfgV==XdClbHh1p=,Ar:Y)Dt6]MXCrb=*5n</J0NITd=^dnS@66SVZla>!oJju#qg0cK1#i8L(K6mUn%/NMsP/s//ti/i6?(LUQn
%LMOJ2?8F.V:Z"2+>^-,Cj8JNJ3]<f&:3UL5QgR7c`ASes[lg&iLA`MONn\!hO(6'%j!-kil[Kt&m\=:<rH.D:GE4nr*^=r8prD-]
%s4Wo^5;hQ9m=0<8pA_Qa3$heG\h(nNIfauWfQ4a62rYHgm.!["XhBASjKY>8U%i+Eg)n(5rM0ArePs<Inh2mZ>Gq59j,cHDN*f9C
%47`?WJUt2bYAbj?%?5<^:f:LaH?j@tMrp8I$d/aO$DW'C0QAa>%CP]<)5DI*6E8QcFXb4u$9j1IVO62:_1[Yl@;9J/7hEnJ66+#i
%SA+>JD?SE9Fi#h1R(*s0L-=KQA3@OT%UGF`l3%Q[7`OC^=;pmdn\kI:]/T#c,r_tohZoPKE*`[g^pVZdFuS*rP6<1^&-GKL#P"9<
%O=%8R5L%ie-eIn'cgGDq>)Q\Z);!8i"5G]Ji1.3U=P[Mm=B/n<Xt&K*)#*3DG7.KRbJta.`+U;,hu1;s7ubh\HXDs-*iR9%*]n(e
%$SD,UmCM2^f?K4CHS'#Md/*D2m=Yj!p]Kn#lFd[U\VSST,e`)PJ%t&URuA,eOHP*j]dg8<q\cPrY@0T;=o@A4I+!;]+,,?l9H7O`
%SsS-AAa`UIo=CuF4JZ^@?mQ!VK=7/EmoQW9Hh?.OEu@S(4Z\$+"uJ(ifTU7?[8srlO3tXbNa$i.^gN8Rq4G%+9nKk$mO$n?]0kam
%Cb@Y;9EO^?fNWS5]<5I3/tZH_\'_b\o,i.@5:Qo,R5h9LRd'54[E1;(DN66;^=;-p13hf(!%TW>QtbH\_7C*QEfPEGQ`Kar5Ah-Y
%*:nFG7l%<2RDGKm1r8Y"m9VD_&Z\'(4bc:!,4Hg;Um['LnV=\O1gN?&<q;PbM;iaZhBlbe#ctCH@&CUGkP\jOe=\GedZ"X9WWn&*
%0j8f5?[FUgnM[uF-GJc<>_]Rk41=7unb>sAd*0F:]lIBu5(;fUYNp5bqf9EU[i`k/D%cb*V=ukpH>DDU*4^O*WI;0/S:f74C(jZP
%kC:ot@oaBR\o-6fNhuKVQ2<<H%ZnS#lKf$Z.r]dmLH-;l(XL+7f^0e[J)EiY5Vj(oi]T8CX#+1klI*csX-V[1$iUCuiD7mW27A6*
%Hs8fnCq(*"I*mfG.XSK2(CWLoEk>]qGhjY9S=TFP3RH!gZ$8Lilc[ggQuH,Ql5I0Q>7l?'8!VN5B?ED[[Hr:]of@:pDG#2nn^R>N
%T/pqu1""`3?Q3q<E*7V.Xm9`.XfPrjQ61g5c)b?5^3fFZF/;^Jf$u.e&iGh:$4!&'&rf#u>l.1N1<M\M^&@@fQUnrHQn:FVc/U8=
%(ia?dSrW8YiV)Hfm[0hCC@"aEA_<K]0\E&+NcA6LZs!C_6uQqdoS`HOos`nd<-)1!*:beFE-Q#X_jd&S+Ck&rqq^sTg$Ejf^:g8<
%+9OhX#F]@`N,n`,\,=,[eTDfeANbKCXsCK#WP_?nljm!$)qP9E]t2$aY;=5>r7q'Akg>.50A`&Z"RL-0]6OqQT$/\^W#TJ_O0`T'
%kQS')Dn=]+]Y!1:#e-^bnXIsR)\`20@s&%JX-?.Xbn")-:RnYP3r=R%/a7_Ad:q0F3sXk/MOL0jIhHL75cO:lVFY`km\NmX%nk@:
%pi2dpgmTZ`YJ5L@1$T]Eq5]nqE*oUbC`.\$%Q#t]5fOY+b-u7HG\cXjs%00&JMm.`q^60A2t!::=HYkbO(HaNCM$07aOQt,cFR0s
%(3@kW$PLHt9(-UjoOu!bkM_\%S"\"CHcU\8H>d;f?bAlp?](D/^G80cA+<mj\h4MR:W2,,PIR$!q^/0mS@3TI`'JbJa,.^'R5sd/
%`j'LMI,":uBJ2NO[eN][d*0_=pkXL=Z3s_ap/#[]KKUS3UgTfdhlsM-NWm[r[HD4uJ(_!`6Hg3WijEj7h[\7OGkEdP`8S!C=fG+j
%cSh#:R5N4/gB<n`*4e<A0#VR7-@Y"L4Lf^[SEI2<l*=RU@#jDkO.St&#*^$%4]_J>3W$FULO2H]g>B]"Qn?P#X6g,Jj5Bc2b`46D
%%(\S\INq#1;#8-g[^]3do&M#J?*:@GV^LA-gD3X:CZ.RlR'g61H4cK:5"9?e2Zh<SqCn*8btK+%qQ[ge9N0O%C].-u*^tNW%Q%*O
%*p(h'[1!6LD&l:4RpH:,'#ni^mqkbjB]#%V!f^*+MNkYMJL`HYGS%(..Ep>eQ#@"i#k'gVNI<-Z/IO\MC-(j#e_mE,A"Q?9nB.r)
%"bpS-&_L!'f7:)g3r=Q:@%>MS.n\KL-aZPr<Z=.#:$K?NM10H([GeW1!8.akLO1=f[YH`YDaKLCPTK5HbUoQk]2.rCd;Sr]*,&qU
%oXgOo[7Cq.losa$g#<'7@^PVIY*OTB,k`e$V<X?l>31gfJS('YopQFUnG[uX3Q?g-Q.9+\*g6I[duQC.oP"9u#o@D->YX"9cuSM&
%*7*3V:I=FX..uTR[e^+WmLR%$\AO[!C!NU]ks*H5f$&aK12It<`MO\d`P4C,'gCCn:_%:'_#YDua7/6<5o@XEcE=hfHm\R1JY'g7
%Ls).DIc$sgT'7&&Hd8d+7R3nB"#KV%\MtA2WH!8ZV$B,F)Z,^t-Dtc,?MsMCD:fT3CE9=kIM^LtGW2rf2`tDb,"6F/^73m6n!PoX
%UH`SMQ(e(Z4rsoWkM3YJ<HrO_Kp2>IdeT>U!b6P"r2:TKB&ZotCMb[UZ7pHo95RuPIJ7.o5("83LqP4WH/="B2*=WuTC#t;*m\`=
%#sI!=H9D!e](i(AfhQ<GO%Hk^$Rs_@dLkqTPh8;OkO!uYP`ilaXJF/@+LS$4V=\"8/\QKCb6f].&u1-cYts]OP=miNVePHO('D"W
%Rs?B\ZTgu"a,\1%oDq!b@rl\K8;n<*`6Gp-1]R/d!Q,[.G5P2t)FlGklq4TM?jopL)ljg\i$XA"]R^p)PfCfjNSCO->GkJ1o@?CZ
%IeVOFTrQ_)ckuXc<L%OT$"3,s@feolUt$\5,s8SMm*A_g.XF^m/nS3q"qs4`)@aX_V-8c=8WE"Z2k9c0+=Ae[CgeYCI7-^En^c?5
%ET4B$/JimF&@7(YpoUM'9T"07mhT_RggXlR57.XbR5i3;W*dZGW9ZYDCR;[l\kTe4%)Y73g\1'/"*cUqGgdm7s5NWHf.3+rUTq4e
%g$tM)_%7qBfdG3,*../!ha!\'GJeJmIqL"5\Fm\u_"uR2:!sgE'n8=m$\t(.p?KSj6%pk%Pr;VsP>JJ)D6fOf2C<aWJ%=#%"8V""
%]+PqU1Y0E=UdbGjLpUPQ%iU`Gpsl\T:D5r5C5,1[20bSYT8K%F=79>\]^eMiN$7\S:jW:%`";C0`fiqSUDE15.@WV*8Jf&"7(V:o
%[+-rWFa.fShsSml5606HU>'d2"0dq@GccgEEBVi"W'8[n*"[UiT@oZ)E^4bi;mqU!=.aDR[^EpFaY6p,2&Kqtk,5S&Z`Hhq&of3e
%$P26^O+EK)[CY=q_g-S#9CmTUa3(krSmM/&jEr,'n+^e?QBe2i,@kc<=Xh7WR5c>,f"^T5I5;]u?RUgP^+frh:$BuZd\HcGSo5#p
%l=THpd7AnoOuiJmZrdfI6P*)7.?f\\))L1uU%S[_L_slHk@e@YrbfTcW"NTdrhpfMVSnl$3ZYTlib^F\kBNTrPol7nc'32<pU6gP
%7Ma`Ymq-mNTp>R+_3Gih4G_gJDFfAoq1kME6d?Z9$+2^rL5bq>7X`9cS#RYOYYNqP`0D/k4G_0j3OY4]LnFJurhpfM-J9!5Q*URd
%Dr!Rt=f9W5\.YQj#B@/n;4/<'So7`k3=Ph_o\RS+cXFJ91KCHF,eNBt.^MNN+U.a:>$Zb1e+Ij-?!F5O(ue/H(*:C/M]fZt*BG%M
%PoZnUW%2sDGUm7CI38/D8F@tKI9;&SZr-pi'XkQ0D*C(&=;#D0+)>KgQc,>2B%F!+ikqkT)L&RY>FeI+@TjLiZn%<5_cO/;c2-6D
%ih^8r(/hB_U`1:-U`AZ._m<#c#J`ssljqP3iBUMO2E&aCE$2=%B]27iab&e)mGP4%R.cUfRg.?q=@-!ariOlMaIoupW(_u\XSmmm
%N:buH7$%&H#f$aaf9uO+4Mb[MDaKLC@ce[H^G($1DW;e6I`>Wms#/8/)`.HPZPi`Ko(:I28Nk2^j2["oS*<LV^[CSg&;.>u;Qk0@
%:]"Tc.CD#e;57tZg\UicWdaO:a5fql8XoP:q)95pRLVtm?&p7F7u&Hi@t0[0mNTh5nSeE3,5*gLV&PcE-;QgoR5sctbuQ8eQ9H#\
%,(In?%Vl5_CLEl+gK8dc@s1f>I`>VQI[iC1R@.QQf,B(r%dfm?.t\plj,-'`*qTiEG?6kK54&"%a,/iLcA15iMB)T;H1"9'I`ac#
%XJF/@+SD3J:YCoB5"lfA5&X!nT87L=A:GNbXbqU;%1bh_]5E-$<`3R[O<3nkUsV72R0_3`]nLWbS`o&1:%]%OcUC1Em[p<L3Q-#e
%,!OY!'<uI)nGASVD<mniGfnHaS*6u6R=9F_@>cZlV`?0=c^E?_]UH\b+"]U3Z"L=4^;+qOH;?:)f_SDSDeA-6Y_&:L8$+hs`:^X$
%mCuBf%D<YQZ*+nd?PlZ1Be0,3SPQ@J\b^rmYqn`]h>#!/\PHQdqW)ZYXJCihWMIeqEZ(lfXh#"lUfUgA%d=_s`L?GAjPsA>d":HV
%8,T7VNP5*Ls2\2[i@o,,lTq#!"`PdMU,s%39'P(bRq3^h$bJ@mM:?43KtWsk7>.Gqds>5GnCoe%M$l%BBMX83=+keqDSa?,WI'RO
%LL/B#md.dMR>&B+_\0S/kWk%^aa]e+]q[+<9^8->Lq1"6Q(Z)E*Bu"YR[H/YU\aP0R\%2s0tZ0-&Fgq&E!O5DfnRqMrQQ?,p^Gp:
%$WF>UcQCKT0<o,P*Vnui@WOJfASQO(^lSI4CXc&#AU.1$>Fna;\)0UH4*raHIcl(K:*i]mp(mTsrch3+'`'T]O*r!,]Js;rhT`,c
%dApH)Ps3A7qUp;>eCcj5CZ]B<RUas$28`4c7KY6rZ;V`!>7n<oh7Iq&QbSZSD8_XQf6Y34X69V4BLBM&57.XbBh?%m2rON]9'JE[
%rCH)=b!:KgM.VcYmZ(eomTc05iU7jc5Q)s-UOaY)-TqN2c=+eTaW1U;UgTfdeIV-\jir8Na?Cger^M4BEQ"7,UdqBNO0Qm_GB[!>
%[l2\.ku#(H(S?tJ=?h@.9(n+KSj(3+fLX>VpEQr*pea$'b`UOKgQ:cB,\460b<DI&+Y9EsIul8uN-:U["\L)IK!:D!qh'"\M:H2*
%GQRlEMB:miIdGMr@*S%Xma.Bc9UB\:<GS5Tji!E$/Neh*3gcN"IlCcLeZKui&/J0Jc_LpN2!kt*Vn>fuX4erP9\q//LCNh84aW\c
%Q'E^Up?.V](+X&g%s=>P%aXO2WdR%aR-=(i_lbkb4Ef+Hhl!S3^hrd6XD7,dlQD]u/=a.Kh"MWri&@M,2YIsu>i*=A5*iSeNI#4(
%q4#a+NBQ@iePh$qWiZ.:r45KB:AhoVVqfb)g\_%KQOgXaNGSSZ\m[s2M:'1m=POQB4dESnr?D0lVT!<C.2VoVc$-J**)bL<cb%MY
%P_^hE>'LU^$o+c\,Got_/Lod5ogW<mJo@orFG@&#YuTKZh4Q$r`%0)_&75[>Y+nUu0=&ujZhB/A]nMCuIM-C6?jdk0D7-q0-H-jD
%Iep8RXi"!Mh&1''oZQUa1l9@k+6P7oqOG)8N5@%sEjKdr+Y&,Ve&8>*2Z'sDg=TdIe-?u[&(22@LrAmsLB.0/-(Y,fl,qCNdM9q`
%%A%DK?$-1kgo<@:?*qt6AY5<0?aep(fs-.C73?;t5L?p=pi&>YXNRqin*?)'h7O/7aR/OgjZkV+bjA^H:,NN,!F+R42h8ptY@)4C
%mpNTr5XnD)&jJ0[r(ZA_9;am.@$e@_*qLPtden[5W=8d)*,$\phMiT,0r]HmRl-tUJKKrsCTE<,;:r'+*1O-GnLPZ0'7."t:W$K+
%Q1ldee#l1<M=f6ti_#.F*lNd2kpcWA>A.6n2<8[B?T;H>?,Ok!o"O1RYZ%I[.^F-PW%6_%Ij_<AKtRd/DKi4ciTpo$44H@1BK].p
%CkWm%IFrg(CXf#Jo0tV$r*4lSp^hh.c(?H/jBW`>Vah[`cK*+Z6H0lmSW#@V'[WV7Gc#Mf;^e!QbiX,Q>T[2-c)X"\\DQ-AN8Un3
%bb0%5ghklKaZAb&*RhS^g8N+S>Ks>>gt12+]<TAHH2OQ3hF<Jdo38U:_Cco&DMr.%4RaBJ[X.;8NLG+M'tq_FGdh7kc=*ln8m3rE
%'59n26::(nR!$!e"L+%i%+%CGflqCSmG#NB+&W9T:YrDgb=!g4,@*Z$`RF/>7fqR(VmARX:.1)?R>ifGU'G!1$Rs_@dd!=fr5eW4
%mP(5?qT,#-OFhm-h)rZk9>Gh_s'=dFrh*Un@^PVIhUlD0;V5]S5G9F,`+\*q][8?OGN3Z&;j,srK9h?6BVr`(NQWKHJ`H7]2OB!e
%M9<&7EZ+@ek]P%-k:uRNd#V(kes\$Bo<iFWF(cC#?[U%e"$a:D*tg_=$P27AXNRBtZTLhLm-a^GD=?YO*`%e=8eeVdA\c^1*Xi*<
%2g;;@&2!7g-q^S`C!ZCT.L=B>7s;+$8H!Yu2*ru2NDi50ga92BB]27i\[CDTjf8ES+gRY3=@g7lPAY8Sj>?DXBWT)HA,`DH)f8V8
%In\0gNYHDk1LljM"JJ8L4ulmRQaome%up5G0d!^!B4N/]O4jU(l,C!JAl%HW#eN6Z1Cj%jUP/T;bBGg,KOa7Nl1#0>IbN:g*=]qC
%eD$!#)Bja*?!Cfld4jTGm1$-O^@3r+m[AIf6hAmIHJqBU5Vm1b]l:3X:?-+'A51+rIT-e6Z_lbu9@#/aq,:i[YjSP#CZZ9JE8tL6
%=F@D<XTIP,:>]tW[0e5:)7b\%fPF.P#BN`VaP'0Bk_Rr<I]f5SeB[)qm<$C-W=(rK[qb&WY`_'EK66;?i:-O(hq.Vun2PD6hDt?E
%na8lLaqE`AcsDd,mLSeJ70q]aE?a6W8Ktp/K+%2`4+@q?SYI7siB+qJ6tSEfYf94/C8shcLO(BmP+ss2S)#[-8PYc8[lV.X2Y,h6
%q->f5-CgRT%N?9:E(A[cl2rq"f\_;``S$3fNnO?NO32H=&*!LOBIfK=n$J?Y'"uafP5(]<S;=$<[QZiHl"!SNXH#J-Pp(F!j:mL8
%^%mQ/m.LOb;a=bC/C/j`7uAp?2a;:G`"0B'56$($;ZG[j660jlB&4`B!eH%>lndnB@9GQ[/Z;kF6[-C6$MKn[i+OZNX\`Z0c.36N
%=@4Q;;L4!qE:S!,El5_TjA$s!W#Q&_3Llr\J"Htur2f,qmsW&k8q1fmT3if"F\$q*Hn(aPd?a%8_+C9ljK-Cp/*SdD_Uba3YBeL@
%3PbXC`;\6s30DqPXA,;Y2]PibDlL#7lu2d8A+#B2T!-6/gS79OJL0_u2N/*j!H0>4=?&6uhiti`m)-AB%4X85(<j2.XIYlu,]4Ut
%M-*(Nj>CpP-@UZdhh3%f`34,:TKkJZEn3Cg1?EFC,;gmdo/kFe2_T0ga)>;Q1d:kWH]!,[G68L9g.&qjjg,Ktk,M!RFTs!U>l!$)
%rB]-s4S$R'Z;"+\G^eMcrZH%t(G6_W'_m!+5%t9h65"VQ:Z@+:S\(D8W2CrNQhbP5]sZ7NgWLFV'^"h-5A/csR-hqTb(4/:%`mSt
%W/S(_1GV'STJAM%M2Yc4,I%&:U.;*_IuHWGq$;*6#2P;G-*0e\T=KFN8Z9=RM&K0<HKaIFDR\@U07#AOJ;"^(1[0Y3cRTg4h9RIV
%F#n7L>`$kFK6Z^rc;)]t\XGbM3.B>3p,48o`B?>-FqHt,G5Ae@nI&e*:$K?NR@`fXX6]J#?T=nDaq_]Y$MKleiuM[`p4X/@S:&/6
%;dEFBVBoT6C!;38LYWJ`\)`i=r2:T=j"g$C1[ae[CgUSpT95ZD,h1\d7#eX;AC/>%dn*>[DAh$<9^_29>Hh]oOYmCKY/G#46+h=c
%S$7%B0:9hlFl]ci3r=P/""3!_f_o!92LWFG=@g7lPMX:FS^\[KIJ#&EV_)lG8rONtip0js5PWVM6q;:lp?lS0g3iWQE$[s]%q<II
%/&)JJ=.@-6577XrUsAr^AUO,`(@N+fj\"R+Xda7Uis2SgBB$e'V;:UfC@V-lr$M&LUW!Th2a;)m81d(gP2H+X[`;f&FnQ()'eHoY
%8h934f@j3^K")GgKa0?M0_sjIpJ_'.rpgZ2&u1-c0uC+sq)3T5E#@,TS+Q0&:;t,LkKgfD]Ctla_kF"&mFft.*da?Lfdb8C,`Y?@
%AZSV$mENipG]L=W4*Ap$Kc\M49(sFY'bu:H1u+&<4=.Di.D$?[J+K:cg)F_qj1!;%,I>b6)]p`f-?JCTOFhm-h+h;k(*9I.='lYf
%4G8>/Plo:T*-cL*Jk:X1kc?Gn/!rr`Y$0#M0,T+u3-N&IX\JQa!u=e=c_MKK+X5b@$]=['BLE24M:'1m(]iG:X08'+Ccu*Pm_:26
%il)rl5%e-00\a29#9'^?4)2QrQiZ5@]U^$^Xq#pUYdJ"a^r]"'5Vk2$T&'^D`iti(83Sj%hj!!PBZXnAgDO#LC'1e4[&)+\M7-rP
%V3TL%Z)bY&AA\e7cP2r\eTqe]=!R*Cc=j\j9AZIj%iet'FnQ'>`0#l%$4VXK\HnfGat5eiPZ/hsL/<=IZH_:.&jN:=$d/*t[lei`
%?J)Sc.rZ]?(L2M4]mp,QP'J^f#N=#7I[iA5W_YVHYqM%V&H)>ib8*<&j_q%$Mbp3^n@(%foIc?@g$?Z9Y95aN@+"Wr"Fp;(B8!pG
%Ipo>(86AD!.b-HQkns?<=U;A'9]>NN;aXA0eh`#h02R6fVP@@LE**:Y.K'>H$AVV<:8O$2k<n,Hd75Y0CM>23c*Z]0ljFG&SlOS5
%CS;NIa2UnAm1%"WZ1is?-S@a9*RqVX%InLs(TiDbN#.u(j,=$;e7hQJY49PRMAiUbUu^6IT,KT<_S02Vm:E\'"^iX!p'9j!K]^dc
%^Ll,%j,\9Iek@X;IE/7g"UmHjCSu@"6"abDK>_H^6+gV'l0I)TeuOONnFcahF3=E?2NI"e1GYPogu=sqj@GadZ1S]<CEJ%Rij&AN
%<:,LnU[^k95VkpC*c59KrkPQ1IA1TT5*`@6JpetOIC8>sG^aL842Rm+r(ZD&`XtC_\AH]`@PqqN\#T/L[T>H0)PW6MNl8B0%$=<4
%ptagbCglj(jZkUlgqpWh@1OM\`o/SAaai9M19?m>A696`_pIbXP>Q;V=U&:kOH'@k!@s3Q"E)8Er2b"0)Zp[#fes!X*ehL8=0kLh
%[-\UM)Gkb_8$qZaVe2dLjR.e^gQAR3Q0F_diqDUTf-\78p)sO8.?f=Abp:3iCaS2Hb_%MnDP<q<@\%QuIo>tFl,oeBUSEgGBo7p/
%VJN9V-u7d-bQ&`9Kmdgip9:ZST=P6/UObRElS6,'4LNMbk>V7'eYe/I5+WZ950%60;2QU/dH]sep@?OgUrW6=V)R&'E.L#ulVm$'
%D2O&UbSfelM7tmW9)BT)D)?R-DR1,PB=c>&$`QbqFKk-e;n4'p.#H3r^`N'2H_GKUrp.0"><$i_IjHYA?rtcR"lTE"!<C;lhjn51
%!06X$^6?&+577M)T6A!<1gWZqipi2nSq,Ek'H[)q@B!AXMYj//jbeu\1@4[gO8IYTrN8f\k8VQ`TRaTI!U/eM]2F[d;u8^*/6&S_
%]VIKihGuSbH[Zp>CKTFhH<m1U<S<)sKR6kU'nPeF;JrG5SV$S<GWjF-0W@_:Js)CGi2#./]PG-o2!^bF<^tmoGfd^@qf`QW?a=&3
%eh?j4=DqJP:AL9?Ep)XFX!*lEXsi8#K"(Z)lAennn%A;iS#$L/35-i+pJ.eI479NUKQ*idADf&Sq/bA!`S135J,cPpc`#r#b5KW6
%O(#^cr41]L,P3<I")n"$(#F,rUrmtp]pB0VUC-q>7*,N%=0lKj;G*P<8\s#?[BJ/5qt0"BWfi\LFM/kE]X=fjIS]7!ON78tn23TC
%'u#9meJ.NF\q59o(-oE+ZGokc.2Pb&%"+JE]<e[TqCpL^.RPu&F[]o!KR6.TG.0ND25@N*5J^YndbF$S[g&<d;GOEr]Q%_XKKJKX
%QIA$ra=475:U&H4A2`P__R.5!>MZ5nWk@B2U$/<=SCH_1?(+\qS"G88+`!>=]^B)\o2?I/Z$Un%lrJh)]M,&)FbRi1VNfZoBAi*=
%[?ptt0%[r#>A<lul[*tZdbXTCnYULZ`0AR$qZM8*f,OtZWa)g5\3AFV8l!NGL$u6jC$(Ya1'`toYOS'V9'fQJ"FY3R't1]kU'i7\
%Puk<07c]dKC6F1PnZI()^M:4CQ>]b(.ubP5%P41F(gXN];``XL%"!uc*04&E*P6PRb$&?FSFX8`]MXj*HU_._,V'%*j#tGUPWkPL
%+2I1tecf5Hb,^7!\odPkcR?KOcbS.Wfiom5DjskKjiA77D\%E#ni6Onr7:b(Y+TN:!kmq@Drto(N*Gf(lb:"k.ZMoJU0Zg>l^VjF
%$-KK=^#*ZYMG7QD4c2(_6b4(u/>IZpa).,_b"W'a!FJ4FW(L=U>kn^3)YY`g+g5+_hPq&cap@fWF:+K3@4g;8^VtQ)AT@!hEp%DQ
%$-roZ)5[OaNAhmC>uhlueM]atAtcT-go"I99hm-=cGU-=NH[6_;WVsOhCJab&oLh%YLg'\1W"iH3!2nQOL31/Nbda_U0BodE8Sb0
%;V#SP\B6YM^t3h[gK@f.]O+/ijEaeh[*oaBWgE@i/oa@io(M>W1XX*;=loLZea)S)VnA-jQBeXk8][FKS,<\BNF!ZIG<HMYYBJI;
%orMuF$-P*snur]TV)A&Tp)5T1gUC08I9Fg\Xe!UFA;-Z/>VC2gZ@pG+qZJ^k_mZWOF"XNL/o\SM877PKH>R"b=5/3s$!68A;Xe6\
%Hn!=O:X\\8H#7BHa`t;ph3413An8MENgL+o(?k^-If<remtIs#U_jYdI+35`#p7->EmlC^@^#<ZVH?OlXNaa9/.)]onT.8\*D.d"
%p-d-#h_Xp\m%21']?SKUfR\-8@pSPE)hXAkj[tbFYORW_0G_/4CU_\DF;7&!O5h)FN,G=4#a!09ZI<i\o6S!mi2>q;>Z!6G&oAs?
%,@"!KJI2)i06p@-Ka0Kddq3ei[K0q)L0V^JP@JndFOj\,RG:Y*>7*/>ej6?![ZR\]]V!NeKPnWJrrb*f<q<mrZ0]HAG+jY6FtH_)
%q7n8/9,F(`J?RA0@j3R#MT1"eGcfCrN1BJ;RWp+h),nD+k5eK-jS)La]ufTph9C/Mr`2e(Y4DEihBXCPR_4(N^1<$9\Oj$,<ZD!j
%D%]R9%HDCkah5#W0G?RSeVb2W[Bj&g+Sk.T.G'hXUOB22'/&'%:-k(^qS5ep-/[i11;G/?(R\9@%l2"U=lC'BNBY'nkd&[?Q>tI@
%eKt\OkYBj^EG@0Tj2I]0As,l"GFVS`Q-/@e>Tl5-pT^-K;PM*NL:p%e&&32=A@gH[lSV/!7AT:;DT,oOS<.prVP)&?(??_6iplJh
%94N[[:!-uWRM#*WYS8qa[j>B`<3;,6FKQtL%>%8/,\8j6S^HDb[KLo9*ZiPr:"`b?TTg/oF9g]A[HG`SA>)RKP<@LZUjLdS[*ito
%oE#Fp=n*tm9G.U;AqC8sI*kc6,H[\(::F0H$D&o6XeK><HVNe48oK(=A5\V@<q0))<I-b.9tn$>^gepNe&pZA_MoUHnH_%Nj>*34
%-J^#_*3LiJ)jl4uAjX&UCfIks.H,k7j!jaA*Bbm0aW\H/0'9d@gkm$'-(@V0Z^?:PXaPeh?n96;MT4=\;-07:-)8,-(cl;2.]7r5
%nh\YRO4oJho_U&]GACl#UPEVDHi:<#oHZeFT3s#!MSsXDoMU&uH<EYHG$h_ZIh?Z0Ub2EL+e&<;I#[)*`W"rLpsRBC=_&9gk)'ku
%[`t>08;?7j_+_/"2f1ZV=\s/L[0&^>FYR?gJg-/9&1r>8RWp?@-AdiDh[?%=e:Pq[-:/'^mj<^$nh]cHg3q;#=o>5uVi<U(Cm4?c
%\hoSpU*F95XX[UDGZ[d]m?Bg.!+@=^AF*XC/YVe`5J^%)eLXUr*ECSPM`]njk*$]:2((eMT7J?Go]G):cf3jK]N#[;]"-G-LpqQ;
%H:C6.p_iiFrJZ'kkkgP^_B/*YkUb0VW;;iWHBXt/-Jcn<>WQ"b*=P#m6?nAdI!Eo@N0'N[.;7^<AUYHc<b_EWa#??<fI21V8P6M7
%<(K7fhnAS?Wk\>lg@%M=8%ZN!qqgf$a=0&rVC2'UUQ#'%XH`..]\e](:&nj<J:oDT.H)U'RXca"HC8i=Xn7J]k93b4KO*/nk-I7J
%gc-/rB$tn(>0j4)Fti[U:nLBU`hP]2)PpuG#EW@@GSKS0R&Sfed8M85ViuqYlb-k?)D=PG29dY^G,kDda`F@YUb`S-PK]_RO>m'6
%TZK-^>,2Y>='3&2VQJl(PaooSM1up[KY7(<"\lX2iFV\r@Qh:IjoUsR>P;cS7TPn_82(^9K#+D(<7m[://%6ZiSQ'HPQa+8?mZlt
%YM&4fm7\a@P:B^JAqY6/#OjUjGP&,(gFc;ufI`2!ZH3K(Aon4=/OCdCWU&oCc(#_c&1J.81_f@O#n&gC"&6L2U"48S_nPV.'^6+8
%=Mqj`A4;_*@O;uSFj]=M"iYg\C0rl+kZ48%A$&?P=7,]/B$sOrRDQX4]XE'R`Db/jH9TbOJfi@_B!U#](;[HKBo@\gVMa6dA0mHa
%4CTYN>302h&U']BXNE]IG*-7cO(;e,SXX#jBd0b?5l$\smktR.`/IbjD3Hk&j=QHBB]>]g.NZ_ZXW!mj?`@h'E#'N\'7X1O;c`n(
%>G3F^luZ^O=4FdAA.,_s$2,:;[<h@VY,)C)M_(!`gp!)F0B\]90%*/pB_#XFin^`+m*:ekr*_5S.4$Usb:o.J"])O,qClg@Th[Q>
%q_2n*RJ)!G9_+Q&$\P;@d:Y`N">]L7X*q@IOY%!+'$LKR;QpkEa/h73`,&1c@UHcO:J0<.0hAO8fb1L5.Dq-:_*N1[F.9$;C9pFQ
%c:ttT1[1ha.alYE9adM(kna5.PdC!0B$rW=o]l0ue,q#8WA$ebenIG]:EuS!\@!i<?=HI:A,tM=M`"&7@)MPi2^qk'!a1lV?\4\V
%YB]FV,1QcactOGXm&[N*Z(;8DrM5\fONBpK;N.s>D0dh`kZO9"B?R;Vn4P3Wf5Z7KYG"gl\qs.o\+oBNHKY[PPGM&m%qe"&67?F)
%;p`J;'bKqqA+clf:YDKCjiP2pl<d)ZKO(kf)//S<658BtU\.-=$c:$aY3`&WaX[!%B$sPdQ:4jo7hfA`-oLXqhG"krk@Ht/B_&e0
%MS)*,<8S!t/Dkp"qe9g9'?m7>,B<^b2JPETf*S@/F(7-4_Cd4o1@Sl;bW?"$UDjH&]n^E2Oac0>9p)aQJ6%8iF=8F#4u\KMEp95Z
%MqUqu;C(UlFjIjiQo9A<(:MgRo&*\YI9=:<DLV*\A9,@9/@JYq2uB`f_#]<(I_uAf0T^E`Kp6!m)7<bH#e[?,?+R;/O,DTE.nq:"
%]nu;MbTrfe\J#amZgKbp)S&R&qG_Ykd#jJ;jtl?]PR>Ck4,;P&(tfB%i@,_$e]U%MPb"5B">f;@@*A5>e)/$Jd?m1&`L?."'0[!$
%-L4;+ReR<qGGVAu.a:nmO]l%)@<]Jo0I-3:56FWoQW/Z;iKqMT:>O%;<LaCL5F0Z=VVWP.EkNYZdnbE/gI]@BZ;\3mX4JSPA6k3a
%-C>*/3HD7XmM2TpGnisckh:Hh_KhsDbkNR<9+>Q!7,+M"]I4@tN6G<,_L>24(;Q8=:p!;m/M5a(N=JUnZAWEK"'Lt$H\/rLKPI>Z
%.K7U?Vl@WSdTd!^IRk_#0p?F_n7`3^Kcpm7=_Bu&mIb>DPgGot$oIc2di,9oG>@;G\<5IW__"_PkUh5fRWtG//BbZ0ke6Ve#Ik^Q
%CJ;*gba\J41Wc!c\@,XW\QA%+mcajd[Mid^V!L31T3rud;a<skA"q@]Fo!r%D2g>';Hf9V@'?9X4ptI,A&1Rnl?0t?JJZ]fd/o^p
%pBbGp;.B$&Y@HOf^,k5\E([=/W-G-)4?o*=-68@F;4e'%jf0[0_K.Wg^.9T84#Jg'-J`HMimh+0V:PD2,a,mO(V1)uo4pR`f4;\k
%W>%Edf*f2&WiH84SIt9&-m[_D/N?OQDLOmQ*8q%R3S@7_"WloQdPF3:(POO8[@onW2F_pdp(G@4,N8RS!IU:EpUZBt"a?dMq9tPs
%S5p"W7$2HOgrhqrNs_RY?f#U]CmL2[%ZjbV.S;/#Xd3?Ah6^sa&csR@#uMKf-+/G)6Ra0s4@hc%mq$HHgC&*0"rh)n"K6JH+d%d6
%i<Yk,UmPegF04I,f6lW$H2=0]KKH;O#+BomH-8N=[L"0R0?DX%5&E;Sa<V.c?mZ^ZZOcahWhFY$b3n:ao6.DLG=&iK"t#^/p\Jn+
%g0U1MhT%c?I;O2O!nfKFp(MdIMh`:2R-L4=N$;h7H\.FQ$)&?!a?YrMU7/`<\'X7+.7M*+=_.^O)53S/cG8&=Lhp#cGPE/l,*K0+
%9.)467mbm!c9N%]54']'Xh*sP#K]NiVcDd04scFl\J])O]p^hDCNsQ5EBlgeNiHG^SC+#]Hif^@'T8g>m(6U&R!S2i@7M-/KM5"J
%9b.q'POCBZUnmi@LPH`0'cs2TEH_d8>t%R)+d7h)LFdgQ)-J'n-7'=?$u/[,fgF*$f?im'$i%QZ<UZ\g9G\!3A3s)r4/(_)9S/])
%eP!VJFme\`+-J&uC^e+fKr(ja8o=t]Qq:p>6Krjl4pXnSam@Te\D*8]auQO3I-E+-?,*(H]Cr/CNnKR1l)&?J5d+l6X&9Tr.Z)&G
%,pg=Iid-k&<]YUGB_#<Vd3mZqdETdn@r*F>N<9kD.ucm69Y-Qojmoi_5D^$^3]bI=MU@8k<L1(LR:MPH@V)?p9"]2s\d(!4fN&JY
%,a;U4$oIK*`@+a>TuC7k$DZ44AfCi:&6;q;'(BJ5f_-k#\Nu;0BSG%b_L6eUR>R#l8]L[0dElB?'Qus!@tYK3=aU3D5"[2;eb%<l
%@#eNhTin@;]9b3I#Rd2q$oIcd<KHb-^:1Z<X^`,.h(c$8<]3%&'q+A"1Wc+fJtt2XS_oDj>,>`b`'o>p*!qNS_$Of7G;&ij23!Mq
%O8%]i$'0AVoFZt6/4lIc-Jn&%U>hN1Om-nP&nH%FE[quu86>G'*g"RQ>,5&>h2A,qQo0d8e<#"`p.35`[g8C,(*\F'93L[WeG&Sh
%5o(u8]2&^oXChaOD"S4E(jA#g>`guAMn4)$1Qt]P##c*il!?5hQ!$$A8R;?*rh:rD5!"g":7<Ms8OdE?l1T!f5E3ZP:S+*eD`j-'
%Bq5A_af$EH4,L&!XmlT$O(nDLg^k`qr*V4p9KHq(BbB1?bpD4ej%_lTJ#Tt!LkP*D*s"4gW9B#'58[Gd.j6=kQg_(p$0CgM:X#V]
%20j)FfWhA(bhlmXTHr3@7rt;1-5i*'jLm/5TAKiUK5'.bH]V'!n,:12e%36@HT]6q4?7QKW6._`,s%a\ja@I/RT=:),q.lZFi(pg
%9igYGEoebeZ'R&rXpWfVh#-K=?KF=o>.B8ZV]!"/:d1c"5a1Y:e$uZ+0Wt*!@:qtZMhotD%qM`ZF:g=FDLQ-?h8&8r(CuF7`8/:!
%3Z7AdR9URMY%Xb,/YB>4P'\"7+%FE[AVWDN9g3=G0b)c_#4]2]$0>Fd[7[1oI3=bqh&0nc;3RFNhWFCg*u!Ts%J`u/r$-"I1XO+9
%:qVTs*HGlEUDO`lg?*tU+oVe:GcsR`"`cc!VOSY]N%Ws.Ld\gC+6N[8ge`=%@J]2dq&Y[.-=cm_A9&YH_-ZC`n9V%X&!P)B:EYke
%U#7&(FM&YE6EeLB=EqTrk3)`HZKf.NJ8igsL5\t&Qo"5C/d!T!ZcI1Y9'Wc&#M1RHR*@!S9$,of"FEiqK7(P?29m4+^Gm%W4%K\>
%'8?oPq'bpDMiGR6_:Tb:S5+'c&c4s_3F7eu-6<=V3VK!r2W"(6Z;JX`ji/P(13H.g9fu'<9$(_1$ceEX0Oq8$2_'q[690mjJL97>
%5%7Ts@j]T)FY`c]q=7?5jGn<i?.o:Hgu6s=ZEEtB*XQtZC^u<7,((MsrVZjT_/Ah>@]ef'\0)j646XhtQmmo7$f.<Q\QlIc>,?JM
%2j$,c!LnBC*d%WA\Pk?$?DHf(W-<Wn^6MaK[G\Pg4a4Ij/^&<WEteqWJ:.d=e8*GuDB$$\=.MNHr3dtMfsAZD^m@)6>18QjTF:G#
%dDf3iY@(iBTsse7B];m=;0sCQ;KcebG"S=&*d[k>jCb.-8&6tJI?](JV`&-Q[.dGS4V1B%T7A70V&$I&r9;2G[0*ZgM4WS'-'?QD
%r!YFX-qhRq7B/Fj2/NssFtDd7"9Y>Vq&*l:G;%@@F[]0"]<YL^hl,8*qbd2O&2q'++p2,`f+b'l`ITW_IK\W:J$_!K%#"#<1bsS.
%*[M9'#&j1$3]NrQ8r>oC0_co0El'.*9g";?ZCq0<U^B8)Vpm+,q4*DJab@)>pekHk9C?XEZRW3EE4Y>qa[&Q$@?[2Z1[q6D<'.Y1
%UG0#Zb"\M/Ao:O:fhOD[:[FpLe3inhrm[ml/R%fbTd52.;S<3TnPDdpqZb<cOM^2?'jC6u1;YB)BP!jY?bN<S2YKpABC=D6@BYmH
%"so+jNG$*AbbW9/Jh45Za4rt[gXZUp,SE!q&"eD"+2tLlUb1^b/8Ss68:<"%8Ka7lpF0e8;'8]8hI8P3k\[Ku*9VrX&h0s):G@um
%@XfRBP?HXnbua.+P"7T+Ipt#NAH8QEXtB(b`:)A!$A&YQ&:08,JM204)Sb<"XlM*AkKsBrn+c)JAs?""hF-_,IU2!CA62K7J#-F3
%'FpcSGJqUcZH;X'LqV<?dfP+\/#!W\pj_QqTe:\fZmJ#R?L$$G'c3\lnF!L0aH'UXcK%G($&%0pB:t1W6E3sQ@XfbBeU:U9%i#D(
%:[q6MV*<_c.ILlD@W>bn>CcHLe?+7]6pbh_1XP3X9"L6tmjKXrD8uBFh+)A4P"=9e&5:#9\lWN4Q,<b307A)+nC;gT0KmccF#i<%
%X_b>pM]ZB=U]O9oq!(IrR/SB&eipoDYa7kHZEB*$RK!i(?7'%4X/uW<`leE.A9'W0p8uks4l9)gJKE_cFWE&-%s1O+G6R3,?K9QH
%/*bA'YJt,Aag>=F&5u2:ne96D%jsl3HY$AT<>J.d<US=7:m#d!mO.^+VfD-HAC\%GOcu9I2UCn`b.6Q)fLpY4-C9=iK^brJ"1LQ:
%,e/V\YfW`7)//$SfXIjLl@rOK-P,n[)+&IX"TkC,p_dc)c.Y**ViDD+RK5C3S3kP""j\M["'tnNdtT(n=-Yk[P\;jn$9V;9R2(OB
%9o`CGlt&B@2N3]_9R$)Z>-17Pm:9C<0d1=Q\QaZRi7k-92HL9plL:D8FgC8IK]Ns_Z6l2o,a\lZAmXnU7@@NYZGYr'Wlt'Qp,A'j
%3DZ#M0%hV&FuEf&ksbfQg>0h8"N!Za#LLCn.+&kbZC^MVK*'1G/pI9YbWnQ_Dt5^2jJ++`<j]`<dBG#AHj"(6"D?%-5J^V$d/QJu
%],)@r8>8>\W]T!aRRP):b`DB!9tjbp7L,g;Gec,/5:\\Ycm?pbXiX?mPO<#(p#V+V2LQl9Q6NM]g2%.-Nu*:T-Fm9uD3jRtZdVW4
%Jp+`>k[Neqaobe1Dl",k-!P)17Yu:,9S,qcRt=N7*&SmTEi^k/9JEL'j1G)qAAkc$Vf._M3F`OE[.kMPi_Q0HFBK!RLHD7RSFU$Y
%3m@rD`Qpdcmh5]89]:;pFoptII@6;b=erDO5J^[DS6GD++/nX^_6!Nb+RJFT0Q%s-"i;T.W+Vc[?YpFS[^Yk-`q62ugS('3Z:Wdq
%As0j54dWQcbF1hc:8^sfI0Z:)2*'3R?nQ_<be\[_+&m1L"df)7b_NtYc6sVBE[I/FY<E?hidM4!j-AP!bGu^KfcoD8jTB2e9k=f`
%]=M'ud.Bh/ajMm*A==eU2Yl\g"'rXe"$0>/'^p?"?PulKi(_'r,[(8C\+ghSieQsGDsr7anp:ctn*\mIa<#:!`([J?2qW;b,hl;i
%jibcCKU:NFOcVHrg+1!EE*oANjCu"rO'[%8APgW:plta\9mlPX!(Wb=9hY5r#rUaq*-"U(GbQq/9Y)[scHY5%^Cb/M*>L!+ZjV:<
%k[c#Uo#4T5])5cHG&FbVFpq63.S_A%(\,WMR5ajHAs.qtY_^)4\,J:b%,bZERG9*!Gb0#:"U$%AqH?&S?)$r5807-Wb,\SJB06gp
%@e:;[`=I[UE@Q19N9&Z/Km<Z@&kk#Y8lcNr0U$A]1\Ed1H+mp"C,p:\1J7'1Lmdn/1"32t(>l$7\kQMdFY_B>YPiuVm]A.S,^QL?
%LSQcFK0Q<qY*+o`QRO"2PAKO$.o1?g-DS[O-7"g+:\KKGR8EIsP6<]+[`6S?4eU1\E>Cj:gKL%D:=>c%9-;ln96e0*)m0%Z9q@ef
%9J6Q93PV#6-@TWe>QD'J0NfHPKC#*0+BQ]N-6LebQj`Ve7s3RR6r6<=&93BU+=3OX/q>;+Zt=c.fI_@rU`e/-L3?&'q<\8ti_=8J
%M2hJlBp0(J89sLK%J<C#\&n%@d,j.@EKb'Q6\ZS]=$^^tI8\C1"Z#nH0u6PfYB01X2HVOO2U@A"Z>@*Y7QOlM&g<HS)C*joll-Vu
%KiXV@Yq:V5)51:uP(>7"gGiS4nJaZiKLXp?48$`I5#!Ib>uI9HCRFXSe(>p'YT\LIJA5Qk8,_A.2+bmM'@I">_*_9^m]P3mU6k^a
%3]WUu^=cS&A"_Qn-jRiTNbLFp2_l396kIZ"D-<'e;S"r!-GB2M_r8,7psVSZXr`k=3:VQDO7ErN3QIS>0&NOtha=X&);cd-f7<4X
%ggZ=.+s$-^M3,h"\g!u#G!"a=%NR<#iNH]eToDi'.K,H<-J0<PN<dmT0AJI^:aBY8>RQ.DKQ*,/.KNhh:HO<Kr`+(#br$EG9Wl.V
%mRSa-ggm(7hehq`FAJAsS"=VV@7NXB97C>&G]`I&]3%-n-;7TD-<rT51$%m<691a2JL:Edq1i7WSLKai$jSO?I0m_[9$)+C$"hVj
%[ULiCR5!SD<LIc&D["7qKT_+%'?m<-'NF$Laeon+3ME01R2>+"_)#VBc&?O&N3gu@lC`8q:)r8hXI`ci.!\-@_+_FCd94'TUpc-?
%1b.;iAkG'TIpt&/mU3TKC#<>RM\lt#on[fo/8H?LjCELe]nZJ,B!a>,]u+BDHc,!"\tHch8%Qjr(a,/,AtE7?[-oi=>VnD%Gi5J8
%mYW<DEh-&3RX?ocZ[<T`D&-7qQ1+OdKQ*5!5a+FVBU-Nb%\(R_F$oXur'SdQ7PZuaSR='qFE42cZdZP98&nb0%0dC;,a9j:P[Gio
%4O,E*0E9h1aX>H2ll$BST%QX?j]gsXFSTc9(!jE3E$\nd2XK[B8:Z!U,a7\m'?gTKb!%)_.j8aVg!>iB1nQ@K#+BeCUfHu'IUZTH
%8"6"sP)u>`L*I>R+nQ1bn]cf@q\k5oc$aKG6Vrb+4N3Eo<f%t5d,Y^I>/cOaO>N\U[P8"Z",f9R+Hp_.'$MYG)\@F=A;p/7@MZ=_
%aj"I^T7J?H<r'mlm?!Qp9O]?=`+q,@,,OAPiX+bqcXHa>%'f-@)_\I]f^/r!=[FIUY7o+_S&S4,]mFDWbB-P)k\F[;,a?bn5;A@>
%$HjCC0'Os($uGP_BZr!i77,+#gCh`,mq8$Q7gTj]F0HRA@ST&-k%Xh5?GhdV55Q.aAkDi6:\%bUP9M076gkoVnjaK4*d^"S1$.\*
%'"0e-nl_)O(?R%iB$uIOb,&seIHoL1'cY6dLfMEY#\7sa>CsEDdDLZ5gd-k#rO0:k;.gKI,,+)LdKsO69j<NDk6Lrj(fCpjR2;>-
%)53SncTi:rpM^^/mXWEVj0E1H$=6uVS;:]reigiCEqQu(H^se!K?]Y00'Q^i].bfL6FdRM"&6MoX1inT_:Fr>r`<Eto-+gmY9-#r
%J+p75WI9\KUCB.n8%pPZKaF/p?'8SBfJHWHakIb5AiaAYbcFJm+TP1Ajd*OfFSS-#R>,M$RHY*t1Mma+-A6Cs6jB+X_or+AJi+h!
%AA5W.P=:%R9Km;b0Gj'ki"1mOhOe'f);G*DS(N!Z$0@2_$oIe)D1Kddd%Aa&o71*-];\@-BDDRMq.9nW[+k"Qd3Rk7K64\PHTF0K
%ai>D.AqE`iB?@d[VmOQEF=Q%C7O4M##LLD]D?5Vg3*:'8!Qf$F;D9m>6Fij7"'rXo!B%6>Ff:a):I]7BFIsA3X@u+WM7M\bR_W3.
%^Mg!SBKZZui!tCdN3LN%oE8N2+WHR.h!ZHre_Xg>/%t?gm7=+&*\j"/ROZ[*a*6!q_it^u'51l>3tf]V*Z8YN/T!8XGqVJD%VEW?
%h3$#Y#j8Z-TZJ:dPJYWYXUN=9[m,r_f@\GKg6&OWr=+k34`&5+p(cJ#Dps@1r1IReONpTL=d1PT9Y0J(OhJuYXZqJ%#PSZb5/O[_
%KQ8/(#.jRf*f;>m3qiTLk</43_7*3t5UN+d-("usFd;89GC0_8q^k?`9T_8G73n+U0J_"ohmR/48#g(4O?ne-pap+0+0BsCR:'5b
%<q.I)Kt?>a&*Dh.f8J9?&kY$m%!;#L"^qT0*FBq''(oWV?IQ"^IM5>&kE94"I4QMAGg@D2L$FW[i@@j\mR9RMFaBK(k*!@@!O;fu
%:-KK^K3f7)Ns*3(-*Q/r0U$D"bpqrY0=dhq>`"t.(g&o:(("&6&L=$-^Un`U9UpS6<Q0nPEgF4S[1$7b>:44``([Hg+1rQ`P2&df
%\837->#RP*,k;U@?MT^k0"o6'[Qet/%dj?g0TJR#PAHh&:Wrs6DKRilDS'hFLq[71J;U`jN?8JYBmC/\MsmMJ<NOs6S[m3e@1tmn
%0Vn4`i@;s="FQ3ZCTJW,QoF>+%]#<5,OUEd813F<+IDC`7pd3,;S7tlm/#G'Nfd.F3rr(RC6jWHkDi4bB.;k`biTq00p9YV2$rE.
%h<Mdul<Gbt9:K`]PRrVJPl-Ol_+]/pX0^6]@\M/H:\Gk'CeNa7j<p<f2oDC#N2K;0ffdHgb8g94K0Ud@%47GKY&8==2WE^"\Z(:9
%q\4rs2C=[$dj;h8qE7[knX`MBqF[Yc4$Qfc]_G_?A;b\-&UTKVo9M&EqYI8cb<LG]Y-6FNF8o.!%WC@2:N-d>+LLP65R4A>.*R28
%oiM1dl`\&"qQ'YooiL=CTDlfr^NokN+3(^:bEq,!s7`rCof2XubM+=j03dc>0?a5gQ,!5%HerbJm4G\]SuaPS,W`/j$0*E0_OQ4p
%*O0h7Q/abVmmcUEn#%/WQhUALn3b$4Dh%3XFS6E=fG!b#J2SmAD=r"_>af5K*W)3XSlm:VL'_dKDS^L%lZO"<.)unTn*^TaJfb>+
%%BTGO8[,+cZ=i+g!.B![2r'\4q#g*t[X`SqE6'5M$7^B(^.,H<@G%_=1WTA-mK^7?KNeb3.(Jd\EO)M#`1DL_dHl+^SZ[/s]si2H
%b65;<H3X'W<;$`JNFiuVft2t8!Uf@RS`#9TgKhe1perd$/J4N*'C[lJ/OS)A%q$3q"8nP%,-o"UK)>3<!ITl=mD5e2_;RORAI&:=
%do.-2$7^B(h@FQQ3_.5:cs'8'63)I.i3e,DPDecVW9ah85<s;?_KVU5*+.,SoV#*H-Gc.&_Aoi4Gb[?/E*7qiE]06LAXnM[p7^,j
%'iUJuOPD:0/_>n\9ta4;ndUM*:B9lo!nkc6Sq>+VJ1l8O>GnNL^VADIli96sE.a_gHO;6L!ku[$>qYPGGNP*Uh&f[8L*t%]IDMF=
%ar7P:GbZeMgZn1YmmFH.+T[$ci$&Neg_m!5&\EbOl'RCd?)5FZBu`CO.rt1gbUKLG&UTMO]NtE:SG]m?)/1^2+,V*06=<PSj\EVC
%kg)?dG!/$0S'1;!JUJpn7mG(bK$'X7YL016'ha`^B,<Z3r0Y9*jqlZK:tZNOA\EEU;itjXf#:<NOdh=9b4e)1:I/F85^NLDQQOLT
%a2cO:I4-AMCQ^OYadcbBdA=a@Q$rF$\*S*R(>+COp\n7anM')>'^cBWN=OeBn]u>:n^Z.5YRe]RD@M^g"dM.M?_^-3I$.4QeTUrn
%IOM^t3ZL)"!_oa.1XUEN<MVn!C*02Or(q@o3EKigTSYO8Y;)9m)[h;gFghjHcY=J))l%C,Vr5LaJ1hkagBar0:W9EDY79u2!p*Mm
%fi(`#'@7f9R[%YWf5]j`fS<q!E?oT4.X(s.`dlok6hI%.^G;$pY<'\p5NL'Cj\7uR5+Lc#[hHITMBVY?"u4dY,]a;"GJmft4E%-7
%PoDhdgHu)<0nE#pK/nLI2.@p/*4&2MI9l6o=b%S-a?)9$SRK[2J?L\l2MjA\mcW6*!;J:"/.Fo5$rc9k2"@K)-6.teg]dlI6SXnS
%,&`2bDZ[XHQ*g-8fk',HHA<,s$5d;K5oG]=RIDqd<Z\k(G$=s^%g<bu5iTuoUoXmr)N&Y*>@!<X/nGn:ME:AQcm$1K=Ar%`'?il%
%L4>=>VV&R;!'_g79f$0rB:(A#fPB]t85(U+?sRgLGTkpX7nc+X,]a<U42FV#)-tf_.H\4CXDd+F,2]\Y2$J[o_-X"RVnF>#Kp;+=
%"L&EUjB)\U;c("<nF]Uc3&@BlEL18<dQJk"L@sf!!bgSKjh#K(j`Z+(Z&]3TNE\09?rn<;`*PfrHoQ-2YuE*9RlLcF3&-d686I0L
%U.oD5D!I808@^A`82b/'RY&BrZ.I?tgHAba\hV0!RK38Q5WL8'mL3%VLmdbWH]m*#)t3hl-;_?aZDZVEc'A@`",p>uO]4cSeUN^'
%"#+=5aI?V\Rt.]98%2F3Ctq!&Fu0ii`rsOb[c#FbAWE,a[jbEji")I0<Q5NAY&n&I6"NhWH[t)3/b0cJnaM!ih,/dZit1nu<;$HB
%%>>jSoHNJ1bJ?JUZN(f4MoM;rb+*u/hYMq=i8,WjFYs]83EAq48t7mF-gleYn?M9$n\<L3S$6EbGR9!#ZpR\&RTUm/ZC1(EK[\bR
%fkMj8fG\pi_2>k20:ph?Rt)i5<i'#F2rg^&AEVrII['-1))h(5i+ne$Ml\W%dc@,c#;8qV:AiI\K$DLGpp,1XRMI,YHqV%0nJ8ZW
%cEMWc,<b57YaIEN9mH?q8jhq/Ud_FpGOQ4KZg&nV'5V8U5SLoEi_\n+$NF$WAcft3Pe7m2]Er8g:S1"Al$fo8akMB&a`1B;VkA!!
%lnrD&366)3jdETR0nZ<G%'X61rPk@Zb+4&0r]]^i.BO,-[=&F5*tu_r\%nM!_O=jZ)A<<EXtH5IGU%ek),0H,lVi!1d);":+X\cS
%]ELTdHl<T\&!b5+JhdWWp)9-.*%O*R,,!Z'?RN&P#GeL8=At=*$"fo+MckD%g=9+LlXp3\K/-t35r'gTM/N;\*-&Rrl'+FI(dHXq
%Dh\R:#/8+TJVh;L86oXr&X!-XMc.WdK#4(0-Jh5P?ui4"/MX/NXTFHZaN9o[_OH+[Vr^7cgMJ6sI43+1guQ^6iQXV$hYa'dR8(*4
%1JTqq%uf[6adZ_Z1_p+>RFuVGeMf^M?lt9r,SkY]9R.;uKGV$n-G)KZ))8*[:$*-(mYI;#D)+tto]cpTfI_^GnK$:]:tZN/*anbu
%4#\;=U<HJrY:^+s3\'(50P-93#raMkpYf,aD!C"^Q[n-I0X@RK0LtJ@QLd:8G]$'3eOo/h9-l=g;M!%@.,5D]c'FP/[e^mfT>_B&
%M0Ud&d$@jJ26_#O(.qmV<:(/20jK7ikVcRB:m`J>U;r\nl*^I7XQeC=:@DlO))f6S!+078@WgVWZ=+X0oQ=u@XI_/ETQ2EQM2.om
%U7uP4.F_gWZ@PR?'NFc/Zj3g1Xj[/k6/<uFC4RsOqi!JOPW&V;pc,s6<np\UrRChg&t-ZRIf;t%'GTtk]e[cJdYGT<L>/tE)J"dr
%!nM)H"8FXpXldg&gQSZ56=F=P_<fqp2DI_GKNj3I-A\\XiT/XH?sRZU#'1,Hg^.ZR7ute_kk4Ef72IP+MqWS$NW:MD`(W#!=CpMQ
%<Ap(:"@;2p2G4RRM)T9"gg[Aj*YmG*NciqD!cNff]F"?O-=eOBMGl'E0o)r8^9%D%/I+dHS2\?M2aFQlh<=FXYhWO@g9.G?_kN>[
%'5PN[ZmFC+7Vduq)r[5q?++dhS:\m(0b]ST&YBkEB+OAqnWA?3?1&C2Esb[t$#&>WV,5b_*<g,W@@aA^n7L=kRt)j`rcmL/`J+!R
%mS>hS"L.X"eT#kaJkaH$HO[<hqI8i\Na)Y#Ife1Ih;Z'bVRupb_:>r^T!NnMIEL_,!8hh\,s-G\:@&:#%q$IW_OOTumt"96pB%Sn
%BpH0],T/SH-fAcD_\R-=e4s4?-P>I5481bFg1B3\Sq-M7Alof_$`KVfMP$"2eticYQr?hl,PJDHb>$/HiU/]YP^SpZEN)D6q@$?c
%Lm_pL'@%U_166LkO#gM!_^GMWJJ35/ReZ.h&KOI?K'\_RYE$;C(eu;*YUA)ARt)j@neV\^^su&4S_QVRkk_f`Y_T?:Ba-&.`([Pg
%Q8rMro-1R,SiOgVd`ItekHliGnF]m:iBX$<f-aj3?rFFlbUFsq&MrBH2XKM%7m4Ctd=MD[<S$6V0P+"pf.`l`jJJ;h/6haF!,B(R
%lm\n"$"siG]j(Dec&0+,/D<S[&D%cC.4Es`1Z@aD@X!=n4MSHX"QePK\2-g,SVW^'@D5K3oaPKiV(a)ZhJ`PY";98g1XXHZ(=q)S
%Tps%WPlTpK%<,t43A&NPm.FJeZ++[P?q1(u@)qn+:kJmMD^,9i[UQkHKH8Xg9>,Era%;AJ<61V=_OQ0(^::WTDg"M0`%HbN!Qr5S
%ZDXA"B:qE'E)SjSfaY=s`D\%,k`S#p'1e\<Lm_ouA=0sQds1/Z&`i$a?qqj;o-.e@0u-oC\()6-3R8+-%R-(:"oI?q"OP)2\>897
%CgN:9ZWJ6QI2Y[e:;O*YfFrV2YL&[_fiH*#/B\As/q<qGL8g@OZ.H57Z\*)B7s.f$O+Bl3+1rJg^3'LGE&u&+p>-('-mZENA5,AC
%-]FFL2Ts2OcHYsI?&G!OPMJnfVkEC;7a-OH8^QZqD($jaUtg4R7"arM@\O%)9qKuN1XY^3:_I@jnCh"0gG-6TQ-:[*g_jeb&UIis
%CF]fk==^[rWelpjR2.Mcc9N'3DE4S>nO_7jc%3tOPi0e?nj_h#3@HGj^(p>Rl<XRV3tTN(K#/N_'0[$^;M4m!#X)-Uh$dhn)_`Y$
%Z:<&+,Nth@/*J22[Y!B'd\\asTQ2EQM76#_C7oLZS`o"P"E)[$C[<LKlj7>9!'_$qGnkf@XTIQX@:2j'@sXdqAtkcQ_7'("G;sg"
%RjQ3NCiX0U1+/`OmnMdBPJ4TNJp;fRSUA&cSRKY\Z.E)4b\A6Z_cHCCIFsE0es4OJ;c("<d)<,AOe<"N2n=E+9J4'_Dh\R:J4spM
%Jj:":I73Dd(sbm;2oCk=!DU'cT:V,!.Xb:B.2&[[:KAG'L^A!M9^qJf5TaT*#B::qj'>gKc*1\UJ,l$Wf.+e=)eV-?<.L8(.(D',
%R3Q=\&bPCYHRJ'IHiM5m)K1ATD]Z^Gm$9A(noMe8$PSb?S%tS'arI\<__7c,A)#UqI4/-mkWP;3E1ae9!1N]5,W4h1S'H'HL*4h+
%J2r2SaTHiu-G$](5I@cm^:ALJ`+5X/bUFsq&MrA\Je4hs#XK<*3@5hkO?!K03rr&<e-fXNDEG`I,W?%P:$lIe6"NhWH[m-B0^s8c
%h_]S<9k1irOTIEOHiQlc;`Q2:\kB-A%@e]OpcpDnGJmgOB..>b\",-4=(HjP%0P9^:tZNOV>fH!4Qs40*_%?;@%#kdE+bOn8*jg4
%TaQJH^,$OVrsc&c#m#)S$?sE^q!*Hg%"#>EXN7=NN8LCn2oCk=!DU'oJb%fu#J]ihL<]0hm!0d5^%MO`_4+'-,p+t`i!))4fs8ZO
%_K/5kK^\=0EcF+tR'BB+MQA%1:;LdnU&^X,G=lT1%`Sa\;?5gUFDtl[1.TQA_^X,[B-\fWDrCPf%?D4>q<\8t&("Str('%#_XiJ3
%f#aC?eeHoh#CU&.g4N3K5S)uYQiI<"W],F]!sM4u,PE&A-";8'l3ELRR(W`!$lADm-7/aPoa.4W$"$t7PqaBC6j"%AjD4se;c("<
%d)7a2n;f]?K+SI?fJ/so+E)u`DZZBsC3#2*[aX:9,*U9e<IArPcEM/+rh#PaBC+rqhWVNFM'HJM[k*qG:q.`^_KSe$nC8K+4a_Lp
%k*Om%M%XcVo`1G*G=]6ie*+<g:B8K%A\jm%ar2uNIB.?&B>Ql4luIjn_.@fSDse%7dni.]'7RM8XDEkn.+T_Qb7r3kr]gc<g_"mm
%Kc6)7?O*hn6qGDg3@'B"aI7^t*&/8sHJM!FI"7ZaRu].6n'26$J2MQKVfdt/\Ou=nDCWB4\uDWk4AuR4*\e<<]k/;s4.pVF2*mgf
%+a8YiErqeTl8CE5S\rAO*8mROa[m$tAPPK(&+0(CpKL,rm(4*bj<+q8;c&i+k+Z-#7'r#;L`Xo1b$[r[=nDePd0R5n.<c*BcmD$R
%%Mmh;<i69!`(YEJ"I\o,'i(SE3(rPi,PCj$$"shLqr?j/[a$To%,*_W)FMBa-(o3Ilnt)D"9hn.45=;HM[h=JZk#o^";L!S\`hM4
%@Ku(?U\tmUFq!k4hemFnMjX&^TF!7uLK:9.oVS>G*+)g4"*5SMar2uN/]">V7Sn>K\1t;]<1PtcMRpM4a93%"W\@WGS(0SRec=:^
%mNC];0]`b*$/Qd.q9P6L_qcaHS"+X(HO<O7$"sj"9F#WYVaUHMU];3&]R`3LPs#08!LW;jZ>q_ca(q4_?l2W-AltJ4,_.5sZI8@!
%qaftp%r?\h@nsl9h#h?M]*H+C+]""fMqANWhSZGdfBOqui5D1:-JfD><I,_(<2Jo_A-0NDE97:l=<mMX*m47K64/cZ2jj%le`lij
%pm/f/_5hQ$fYeaa'97a(S!d21%W3a9CSr^+?4\?tPW(iSfZbI4WgpGtYaCHaKl@)4Dh]]ZJ4qYe^FkBJ0<pG4=bRYTS;<=>)*"lK
%TKRgNF]&Z_@4Zr/1QK-p/^hC7-m\tL42G13a1*N`[4i@];3Zb]QG,qcM2e0I-eN4!YIH&Pgl[t:HWWRX@G6@q;&m4oML&b>7Sqbo
%d!EO*f8>[[/W,CG'glBJJ@\.(W.p[j_OY']]W!"emV*2o4kA%a9$<g(4Wcf&9Jl<cKqn*^^V[f/-<AG!3bo'0F+TfnbV7VToFnD@
%"Zl@CZS>Zo'/@>##VlEf_c^EHbpeF0S25'4V!2@8S2CJ(3PerW!c?H.=W!9rdZ%[0c\8)=?Ns8NK*4%$QrP\rZln\U_DI!)<fR3!
%L+.$FRW(qLeq@4gF(A8u__+77cXZB3E(\M(TS^.*qSMO]Mljf'bN'T6QD7/TfCfIWF+Tfn"G',?n#J%VP%o%(/SC>V@WQ[Qi0:04
%5SMICQe/$:OUXQQ21sb+kU/?*$4:j+R:qW^iPN=jfX?ZbE"9*p9cNj1HpYuE?maSP5ZZ!5R1!E10aCq7l0Hge#u,]eLq.2?aB>Ed
%AX\C.@NB8ZFf8H>p*ZZ;$"fpDCEOGBeVs>KCZu2,^.Om!l4I"`$oIKeVWiH%l$K/hB;Xp+VWe,/%3KH0YF0K6&%FDG'Pisn#*qE(
%R[]5&MtZK=.m'mgc/`!e/Q%I7'5Yf'-(kQ7"A7.S6:5Ei=""lMfU5ZW9%5,ZM(]q='iDR!"T&bs/W#AObUKLG)//#<FXujK>P:\d
%2CuIfU^,Hb']oNSd4i,4/m2T8=_,g^eu#t5/:.RNG6XL\=C&KO"f@jYKOLuWb%.qD"-kqM?+d3_$RQZ:\klPVYdYmLCj"kSS<?kY
%B]9O5#I'rW\ba<t%=m0.abT20!g5R[9Jdr$(+o5i<LWD$.$p0\4U'.\l3s=K!$YjQl$fMeY`B*+dmPtR'I7mSRIJ\C:1Q]KP'.@4
%=YR3Za!?I*IF3t?0P@&:pV<!YX.S\*e-EfW7hhfb,Bcg?."JM[+YFgTlJ"[%o^/>`-mAuc$rc9k2"@/M;<cF?Pn#)R8T"b71s:>W
%-JC7-oIUDMK[*#[JnZXr7Nc1'']hP6(N)#JkO%/ITHPl)%e/C5E97:$eqf`-:LrLAfHnMEK2k8HF\<?+?EZLWar2uJNB,5eVBX4(
%"i`:-&!5!aW8%\mi\@EPFChZ&%NIY5G"c(mZKV[og^33(I8[+jf+/T\Y_OKrr!E-0rrc%Y;QQ)W,J4#l=dH=ji;<QUZj17c'sUAX
%AMhQHj8c#O41I(?R1mrcGE7]eaAdnhQqEWi<b**fEsd)]Lel6KgOqglO1d=1aSOfp%o&C9*Us+YCW&oRBCP.c<Co!`XTBmmK7c8'
%c7-a(`,=Na-9#ZW=/lMLG,95!)Qtgr&JO"$\R82dSRQ=r&3e(_1n/;]iqLD>>669u!h+ApQ^B;%a@"@*3Hd)F$/Q*V;jnk[-Cj=s
%_KSKkWpnhMYuZ_@1&2Ke:I01)9mfY^g6kXA1JTb\VdS*ZcP&+nQA!V/h\ZjpnH$og](pB9JFhM#clYMODD&]WZSHh1\52@Y_4>"_
%$@SP6$26i@$=>roYJLa="V'l.RtX']([c?1V3g<>n;]Zm%-A7O8:Q4<rp\V!+7/Eb\Np(s*md*qikrsk-_N.`bX>s__&!XZ`g)N`
%klL4X@Y$ZGPs#08!O1k9WS=qmd5(mGmrujD@EP*j-N<YJT]2AV(%DK'U5V1OB(5nDnXBDtks"2gOTG$9G;(C@T5;:V]1"LhJtRP`
%[>[+A@e'O+GVcF8`;b?mYg3B!BdA#dS_N^[5O`9Png:"9LIkW:hm%aALqXh<:GE<;:BL5=eIk,oJE"s!>tP'Pc,#GIh!$_K42[:C
%!F<>a@;q`Ihj=\b-6g93r3QM5'JX0ZQjKrj1/0C6gOjD7l3;-p5oIlQe>C',@O<#h(YZD?qFNd1fJ[lL0rL[b-_Q</NmB<Tc<R"]
%Bntd?"gY"u0Ls>UH_Nmb*4][0FT^gY2"hWRh`ZM`!3dpmp79lKNZGoLN/]p:k(+&9M>'+s[p&_5EKe!T#kAH20IMsf7a+<]-/lu7
%<)="d:>OJZd2<O4;bfE)-6?3Aq)Q%f=gS%A2Ds=1Rpg/+m01ji_l.MrAku=\"BfB&g_m!5$0^C92&B,9.-MjI&,i(t=4SN,CQjm1
%@^kh6]<]MY6Tl62FXT3.isGl&TJf6n:Wu7S2BQR'G%`7TZ5n6cUCGcg']t4>kgeRP=dknmaY_19eRh,Plm^TL*7kk2#Jce+;]Y_6
%;]XTJpf>D*@EP*j0&@AW<G!3"F-Ytojb=H/bR()H&MqhU3h9_n4TBDYTlJ'&pSm!e$$],MLB*cfXEpCR#8IsEje-Ka`XIc@!\/Bq
%\p3Qei9_%%6MLTe<ErmRF(Z]ukP#L[4i$JG?dBW1Y+q0E5,dF/&fJ<(8]2+`3'8;sHs!fn?A3k[CY6[\e`gWLDh\R:J6]<+H8b#.
%:[W/Lirc>\ilIKcn<fC'!As>fW,cl<W1@08!*1]ti6F#f:-]V608e3f#I?(f*l,35<S;2_8*j'qo70N=B>&Pij.K<@=N<^u?H&:T
%o.hMebRlYi8:$-$\QXlr%;=<C@njd2gRadjp33<D5Ido4Gmgik?Q+-C*Rgepi%9CF3Z$rn&#Obp:_?g#dO'lp8&U'>5UP--Es`Wk
%3a&Cp:hU<r<h%tY'A``"@%V[;L`Oi67fA?IaaJ_#"ck[1pB42QN#3)2i,\tEY6'rhKufj;b+=._!;<G(TOC&`=#:$F'Y_0+MqBb\
%(nR*$B;TO"^3Qjd-Hi)4Y0f^[Q[lpm0b]Nd)m^1efcEV5%;Lkb"F)_=T+W(DFQ#F^kWq)/j)fnR<k:r^cELeN.g=;<HO^o"Z,Ukr
%U**id;Ih_4&_f12p4-DP-adX=)`#Ypb`9en:1R*cj\A&SNssnhh-N5@F\&t\=H`SiL@*If$_W@N/0@[Wi,aoa:@J7b;c^>0QUFN8
%,NcjkbD;iq_asl`>E87.F7Nq1ng:"97tM8#A&Bo+>X+#/A@Gt?&l=r?AtkFDK+$.qi5RMY9Kn1WEs`7u`*Bgc,BJs+q/%`c!:/.(
%DY>9_cO%f#Fpn&jp>>Wt,<hXQ?(=."$B6BW1Mi[])?Fs=rg$QK*EtL'PheV#+I;@CW9ah(&$QhHcV6O1E&QE0_hq,2kKP^>%?Ltk
%Q\=sD2mXIqThq.df%%AV!V\$iqS5c]F63_p)jBRmm@/Z\3XkEbgS^Q.!+!7Nja(r9`PeFs#$CM_MY0JiPVlns)N-]tf7mu?hp\8S
%jasOW703g;`(]fX2g!H<ZNBKa;bH.fk_TR?_Om2'pZRA=J^2o?C':b7,AHKn\4p-D5^NJAlFEd77fSuC!2Ul%\2.rj-JoJXiHS5p
%E-ColPf7jJcsHlnL+.$BRd_b3n$5;a^XJJ+!k-RE83l-oQjH9k*dbG'ZMNcZJ44U[=`4FVS':75F4!Nm_MRPKldH;`N.oj(Rpk'9
%V[oF,n,A@&ip"[fE=r:WVm/)P'\oQG(dNQNHVkXScD^in"`0al;"kG+fVW9L!L_jZa[9F^3i3)3,_srbp70tS$+T5Op;C4C^EAU'
%FA<48\*9D^;\I`B9EH\j!o=I'A1A*4G>8Pnd6"8V_CWr@2C:]3)DN&qYGhll1ILhP@&d@;:-mu:5SFZ,.\i$7+iB=seKn^6bUFsq
%&MrB`8\*$l3A24mG>9[Ucse".0kHB4$hq-3ZEj8TW3WZ&XJ4q\Esce`<[WDE*l`;cV<*XBr%>=6q=!Sh&i!rm5SrlB.UA+gTj</Z
%U![b$b8[^sl^sON7lD1*3..gIg;q4.LbbAsE77eC'6E-@DZaqCF;LPcR1if&=Yt@ZCt%b4"#@[u!9m+H81i8#41<GV=RV+MXOG0_
%!+!6-J4trmbV(``!H8dg)!i\RVhB<qm/aFaEamD+RrVub%9o`5FEj,T9R$[#K)HuqZK2g$n6)Iomtq7<,sO'sNH?rSW0<W<)@qA!
%l;@/ULfg3!:B4\5^SPW!js^O83D:o&YN?i<YZ^"XQjN5m?f]'Uj++*.`10`;dCh=KY\N1kM4&%Q<E.R)0iZaZY>hW"mu7I?FZk9S
%!;<"Jr&@j)Hs3)l,nYJpIpfa)0A>ah'dikbHPe,BQ"K2eEtbcQ.A[$UGY?uCI6Y976Q[<+U+,';S3V3hT0=tGm29.i;^_.)1tmsA
%EuocaVkA&XTS[$R>q6`[\]m_F!,#FbqBLU`!sHsl^pD`#*q6jQAH2^HO]h%`)-/VsoRL2N^EaI[V`@Lmj!1cs';NPD,%>];.0\(O
%,Fa[RV,(um,5MM@QNht#"bf$I0&0cR@@(JfFCCLTVI*.]Dh\R:J4qZ`\4]"$:.aUq2G5de'V&\u0c-u3AhMm+)iQ\k79i:Ec7n'k
%MjOf`-J_q:@t>``.j^j"RQ.p'7KQUbj?546mI,kee750cKj5#%AMRIOH6\$Q!Khp+!,fdgZlBIe-o`XYoj/3mcEK@-bTE2[a,@Mf
%F"HgVOCA=#n16eK1JG9J'$u;Y;TYK>[i"1tI'k**9^h$(5%6r^RKqo*h<\NZlW?+o$f;lOH,U`>c:=s2.r52[36X<FgcH9h%qF4I
%i%j]4^sXU'DE9):5<q<%h2\;6FSk4o9tT&;IDi"#Im>@5XE@t6pK3O'm@rjW\I>K+0_G`SVQJ2F\p2EZ:XX[?BG0cTH4jd)/n,@U
%&*t&aWI3ctO+k2ZmMu:k4$bppIDj9mZOWW9a'8CDIOs8B_a-)1]TSK6)(*QFp_nA?X^D(tla#>X&bdsOBVP<GQHQND@b[.\?2+<7
%^mp#!rHDUuoj>K5lFX77qTiMuFaj/N?[V[=pHO0,MdN[R?[qr;J,JkU^A_mCo(.A2_meP&Qg]D'rKmQ-rqXg2^A[_K^]4"W?9nP]
%oABQBr=Ao2TR?S2`VYS^If/4b++O4NouHP#E5DSJl`Vr/jicQZrp-bJs".+8?Vf2AY:")bf+YRj=e_38s)F^`J,f8>VLS3,\,KC^
%+PsR(i7%26!1jE?VJbQTEmWK(Z8UUuJ%LC6L/7:\Xsa#5?gaDUO/'DObjqt75ee>K?*7O`jU\b*&!b>a>5dj-pT*Z>rq+=MrRSpc
%^OJbp#S6F>-f^Ebp_Q*?rssG>1=Q8tWE9+2;t%JN=`9"C9Yl4Gk.p8'i1dp."2/3403c3N4B1eQ[Tn:Z)gVJDqJu5O?)k(]X8i'@
%(]BV4>7*qS\#iF'Jm;2k0#u9!B73#$lT*ZZf:O'Vh*m\U2e,hpIoa#KGba0L@+boho9?_u:N_^N5KpAC`D0"LK/j+WrT>hqjj,]n
%s"KDU)"jLQmm$9$^61kVm/>-#=2Q@b=@QJ3]<BdJ:g3LOLpk=7Z^<?B;*!"I`,Y&@15t(2,lH`]1_b8+OQ44fCA)t*$1jcR'^MAQ
%'K-@iGm>iIqu/Saf+8Y&1rl.HfJ+E8?9YNdEJLM@..;*B:c\<r4+'A/D12]'llj`6LKrDe+ZPd4O8a<mn*kEYN5D0<AH26kB)2I?
%A9tHJ-[cNG]?f%q`[),A1*Y$23]\j6j9f=HI42P0'?H\qb+4&kGW*)e!@+l6IDcW`o(<jP;c),qiH\5YTD\*&J+:F;^\[!ZIf/7#
%hgP+65@"BaPJ@(\kc/4iMec"8\2sVe^\m1HIeUJSnYb8ls5Q$Sm9a*cnWU`dbPD]Sp@jOEq/="Gk2XW\J+;jrbHLs<pYZ#?j-O,%
%s$+6prThX6IJ_oN1ub;&T<6jp"o+>W2h1bChgtWO#;5K%rLE_f^]/YU?*BuUs"*Oj^]3iEn,HqZs7Z;]FMqPbndYNVfDFJ)]C14K
%=5Wr)[m0fP?bV)`r24K4nEjT_nBE%>^A[$VYQ"%fk5Y8Nb;\=,GBL^1J,fN4b9)3.p@["hDnisame_LHOGaDR5P`F9qiCdVl`^:(^Uotk~>
%AI9_PrivateDataEnd
