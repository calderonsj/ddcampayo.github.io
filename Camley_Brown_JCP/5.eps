%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 5.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: APS Workgroup
%%CreationDate: 11/2/2011
%%BoundingBox: 0 0 203 161
%%HiResBoundingBox: 0 0 202.9014 160.8536
%%CropBox: 0 0 202.9014 160.8536
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 104 8%%BeginData: 7423 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0FFFA8A8A8FD7CFFA87D27A8FD76FFA8A8FFA8A8A8847D527EFD
%76FF5352A87D7D7DFFFFA8FFFFFFA8FD74FF7DAF7DFF7DFD05FFA8A8FD73
%FFA87DFF7D52A8FD05FFA8A8FD76FFA8FD07FFA8FD7FFFA8A8FD7EFFA8FD
%7FFFA8A8FD7EFFA8FD7FFFA8A8FD45FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FD24FFA8FD43FFFD1BA8FD21FFA8A8FD42FFA8FD18FFA8
%A8FD21FFA8FD43FFA8FD06FFA8A8FD06FFA8A8FFFFA8A8FD05FFA8FD21FF
%A8A8FD21FFA8C3A7AEFD1DFFA8FFFF7DA8A8FF27A8FD05FFA8527DFFA827
%7DFFFF537DA8A8FD21FFA8FD1FFFA8A883FD047DA8FD1CFFA8FFA8FFA8A8
%FF7DA8FF7D7DA8FF7DFF7DFF7D7D7DFFFF7D7DFFA8FD21FFA8A8FD1DFF59
%7D76A1767C527C7CA8FD1BFFA8FFFF7DA8A8FF52A8A87D52A8FF7E597D84
%7D7D7DA8FF5252A8A8FD21FFA8FD1DFFA07E7D7D7CFD067DA8FD1AFFA8FD
%06FFAFA8FD06FFFD06A8FFFFA8A8FFA8FD21FFA8A8FD19FFA8CBA1A87C7D
%76A7A8FFA17D7CC97CFD19FFA8A8FD18FFA8A8FD21FFA8FD19FFAE84A8A1
%A8C9FD06FFA1A77D7D7DFD19FFA8FD19FFA8FD21FFA8A8FD17FFCAA77E84
%7DA0A8FD07FFA17DA17DA8FD18FFA8FD18FFA8A8FD21FFA8FD17FFCACAA7
%A859A9A8A8FD08FF777D7CFD19FFA8FFFFCAC9FFFF7DA8FD06FF7EA8FFFF
%7D7DFFFFFFA8FFA8FD21FFA8A8FD16FFCAA7CAA6FF7DA8FD09FFA77CC9A6
%FD18FFA8A8CAA1C9A8FF27A8FFA8A8FFFFA827A9FF7D7D7DA8FF527DA8A8
%FD21FFA8FD18FFC9A0A9FD0DFFA77D7DA8FD17FFA8FFCACFCACAFF7DFFFF
%527D7EFFFF7DA8FF7DFF7DAFFF7D7DFFA8FD21FFA8A8FD17FF7DFF7DFD0D
%FF7DA1A07DFD17FFA8FFFFA1C9FFFF59A8A8A87DA8FFFF7DFF7DA8527DFF
%FF527DA8A8FD21FFA8FD14FFA87EFFFFA8A8A8FD0EFF7D7D7CCFFD16FFA8
%FD19FFA8FD21FFA8A8FD12FFA8A8A87DFFA9A8A8FD0EFFA87C7E76CBFD14
%FFA8A8FD18FFA8A8FD21FFA8FD13FFA8847DA8FD12FFAFA776A1A1FD15FF
%A8FD19FFA8FD1EFF527D52A8A8FD11FFA7A77DA87EFD13FFA87759A1CAFD
%14FFA8FFFFCFFFFFFFA8FD0BFFA8FD05FFA8A8FD1BFFA87DA87D537D7DFD
%11FFCAC9A0A87DA9FD14FF7DA176A8FD14FFA8FFFFAEA7FFFF527DFD05FF
%A852A8FFA87D7DFFFFA8A8FFA8FD16FF7D7DFF7D52A8A8FFA8A87DA8A8FD
%10FFC9CAA77CFD16FFA7767C52CAFD13FFA8A8AEA8AEA7FF52A8A8A87DA8
%FFFF52A8FFA8A852A8FF287DA8A8FD16FFA87DFF7DAF7DFD05FFA8A9FD11
%FFC9C9FD17FFA87D7D7DA0FD13FFA8FFCFAEA8FFFF7DA8FF52537EFFFF7D
%A8FFA87DA8FFA97D52FFA8FD0EFFA87DA8A8FD04FFA87DA87D7D7DFD05FF
%A8A8FD11FFCAFD19FF7D7D527DA1FD12FFA8FFFFA8AEFFFF7DA8FFA8A8FF
%FFFF7DFF847D527DFFFF7D7DA8A8FD0EFF7D527D7DFD05FF7DFF7D7DA8FD
%05FFA8FD2DFF7D7D7C7DCFFD11FFA8FD19FFA8FD0EFFA8A87DA8FD0FFFA8
%A8FD0DFF7DA8A8FD1CFFA8527D52A8FD10FFA8A8FD18FFA8A8FD10FFAF7D
%7D7DA8FD0CFFA8FD0DFFA8FFFFA8FD1DFFA8587D53AFFD10FFA8FD19FFA8
%FD10FF52527D537DFD0CFFA8A8FD0CFFA87DA8A8FD1DFFA87D537676FD10
%FFA8FD06FF7DFD07FFA8FFFFFFA8A9FD04FFA8A8FD10FFA87DA8A8FD0DFF
%A8FD0FFFA8FD1FFFFD047684FD0FFFA8FFA9A97EFFFF527DFD05FFA852A8
%FFFF7D52FFFF7D7DFFA8FD10FF7DA8A8A87DFD0CFFA8A8FD08FFAEA8FD25
%FF767652767DFD0EFFA8A8A9A8A9A8FF52FFA87D52A8FFFF52A8FF7D2752
%FFFF527DA8A8FD10FFA8537D52FD0DFFA8FD07FFCAC9AEAECFFD24FFA876
%7D527DA8FD0DFFA8FFFFA97EFFFF7DA8FF7D7DA8FFFF7DFD04A852FFFF7D
%52FFA8FD10FF527D52A8FD0DFFA8A8FD06FFC9A7A77DA8FD24FFA8A85252
%527DCAFD0CFFA8FD06FFA8A8FD06FFA8FFA8FFFFAFFFFFFD04A8FD0FFFA8
%A8FF7EFD0EFFA8FD07FFC3FF7CA9A8FD26FFCA5277527DAEFD0BFFA8FD19
%FFA8FD10FF527D527DA8FD0CFFA8A8FFFFA87EA8FFCFA0A87EA8A8FD26FF
%A75258527CCFFD0AFFA87DA87DA884A87DA884A87DA884A87DA884A87DA8
%84A87DA87DA8FD11FFA8FFA8FD0DFFA8FFFFFFA8FFA8FD05FFA9FD28FF83
%527D52A7FD35FFA8FD10FFA8A8FFFFA87DA8FD2FFF7D525352A1FD34FFA8
%7DA8A8FD0DFFA8FD35FFA97D527D58ADFD35FF7DA8FD0DFFA8A8FD35FFA8
%532E5352A8FD33FFA8FD0FFFA8FD37FF5359525353A9FD31FF7D7D537D7D
%FD0CFFA8A8FD36FFA853532F5353A9FD30FFA87DFF7DA8FD0CFFA8FD39FF
%7C59535353FD30FF7D525353A8FD0CFFA8A8FD39FF58592E5353AFFD31FF
%A8A8FD0CFFA8FD3BFF52FD0453FD2FFF7D527D59FD0CFFA8A8FD3AFFA852
%2F2E5352A8FD2DFF52FF52A8FD0CFFA8FD3CFFAE52532F5352FD2CFFA87D
%7D7DA8FD0CFFA8A8FD3CFFA752582E5283FD2BFFA87D7D7DA8FD0CFFA8FD
%3EFFA82F532F597DA9FD2AFFA87DA8FD0DFFA8A8FD3EFF8428532F53757D
%FD28FF84A87D7DFD0AFF7D7D7DA8FD40FF7E2F532F764BA8FD26FFA8527D
%7D7DA8FD06FFA87DFF527D52A8A8FD3FFFA87D28532953287DFD26FFA87D
%A852FFFF7E7DFF7D7DA8A8FFA87D7DA8FD41FFA87E2F532953527DA8FD26
%FFA8FFFFFF7D7DA87DA87DFD05FFA8A8FD41FFCB53292F292F527652FD2A
%FF7DFF7DA87DFD05FFA8FD43FFA9A8532F2930527651A9FD27FFA87EFF7D
%52FD06FFA8A8FD44FFA8522F292F285251A7FD31FFA8FD47FF532F295329
%53767DA8FD2FFFA8A8FD46FFCF5953292F292F4C767DFD2EFFA8FD49FFA8
%542953295452767CFD2DFFA8A8FD49FFA87E2F29292F29527CFD2CFFA8FD
%4CFFA92954295329597CA8FD2AFFA8A8FD4CFFA95353292F292F52A7A8FD
%28FFA8FD4FFFA85A29532953537DA8FD27FFA8A8FD4FFFA87E2929292F28
%7DA8FD26FFA8FD52FFA8535429542953A8FD25FFA8A8FD53FF532F292F29
%537DFD24FFA8FD55FF7E54295329537DFD23FFA8A8FD55FFA87E292F292F
%53FD22FFA8FD58FF7E29542F2F53FD21FFA8A8FD58FFA8292F292F29A8FD
%1FFFA8FD5AFFCF532F292F29A8FD1EFFA8A8FD5AFFA85229292F297EFD1D
%FFA8FD5DFF7D532954297EFD1CFFA8A8FD5DFF7D2F2953297EFD1BFFA8FD
%5FFFA2532954297EFD1AFFA8A8FD5FFFA153292F29A8FD19FFA8FD61FFA8
%54292F7EFD19FFA8A8FD61FFA87E7EA9FD16FFA9FFFFA8FD7AFFA8FF52A8
%27A8A8FD74FFA8FFA8A8A87DFFA87D527DFD74FF527DFF7D52A8FFFFA8FF
%FFA8A8FD09FFAFFD05FFA8FFFFFFA8FFFFFFA8FFAFFD05FFA9FFA8FD09FF
%A8FD0DFFAFFD05FFA8FFFFFFA8FD0BFFA9FD09FFAFFD05FFA8FFAFFFA8FF
%FFFFA8FD0CFF7DA87DFF53FD05FFA884A8FFFD06A884FD0BA884FD07A87D
%A884A87DFD0BA87DFD05A87EA8A8A87EFD05A87DA8A8A87EA8A8A87DFD09
%A87EFD05A87DA8A8A884A8A8A87DFD09A87EA8FD0BFFA87DA87D52A8FD08
%FF7DFD21FFA9FD23FFA8FD21FFA8A8FD09FFA8FFA8A8FD08FF7D7D7DFD20
%FFA852FD21FFA852A8FD20FF7D52FD14FFA8A852A8FD1CFFA8FFA8A8A87D
%FD1CFFA8FFFFA8A8A852FD1DFFA8FFA8FF7D52FD10FFA852FF7D7D7DA8FD
%1CFF537DFF7D52A8A9FD1CFF7D7DA97D7DA8A8FD1CFF527DA87D7DA8A8FD
%11FF7D7D7DA87DFD1DFFA852A87DAF52FD1DFF7D7D7DFF7DA8FD1DFFA87D
%7DA87DA8FD12FF7DA87D7D7DFD1DFFA87DFF7D7DA8FD1DFFA87DA87D7DA8
%FD1DFFA87DA87D7DFD13FFA8FFA87DFD1FFFA8FFA884FD1EFFA8A8FFA8A8
%FD1FFFA8FF7DA8FD47FFA87D7DA8FFA8A8A8FD74FFA852A8FFA852A852A8
%52527DA8FD73FF7DA853FFA87D59A87DA87DA87DFD73FF7D527DFFA852A8
%527D7D7DA87DFD74FF7D52FFA8A8FFA8A87EA87DA8FD75FFA8FD06FFA8FF
%84FD32FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2011-11-02T07:11:22+05:30</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FWLJ+Y2gvZaxd+j&#xA;eImi3UVjNFNbvDNLPcLEYUhhl4SfvGnRV5hanf7NGxVDzeYfM2vafqMOgafFbPDHPZXRu7swX1pf&#xA;iIlUEUUF1btQPG6uJ6EN96q/8sNP80WPlySHzJ64vTcu8KXMxnkWEqgALG4vm+2GNDO/XsPhVVl2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsT1Dy&#xA;Cl4dfk+vGKfWL+y1O1lEQJtZ9Pit1hNC37z47QMfs7Hj74qmfljy/Jo8N89zcrd6hql299fzpGYY&#xA;zK0aRARxF5SiLHCigF2PcnFVfzMAfLerAioNncVH/PJsVR8EEEESwwRrFCgokaAKoHgANhiq/FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlvmX/&#xA;AJRzVf8AmDuP+TTYqmWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2Kpb5l/5RzVf+YO4/5NNiqZYq7FXYq7FXYq7FXYq7FUJqOrWGnRGS6lCkCo&#xA;jUF5GFafCi1ZvegyE8gjzbMWIzlwjmqWl9a3iM9tIJEU8Sw6eII8QRuCNiMYTEuTUDavk0uxV2Ku&#xA;xV2KuxVK/M6JJoV0jqHRwqsrCoILqCCDiqCv7PyjZSmF9HhmlVPVkS3slmKRkkBmCIepU0HU0NAa&#xA;HFUBrF55K0zUvL9idGhuf8RTtBaXFvZiaNQsLTB3aONwFNB9FX+yrEKp9/hry5/1arP/AKR4v+ac&#xA;VY55h1byNoV69rc6GkwtoEvNSuILW3aKztpJDGk05co3EsjbRqzUUmlBXFVDzT5j/Lvy3q9rpN5p&#xA;NvNf3SLKIYYbMMsbuY0bjM8LSFmVgqRB3NDRcVTTXJ/y90KW3i1SztIJLrkYlWz9WiIVV5H9KN/T&#xA;jUyKGkeiioqcVTLQba2tbjV4LaJIIUvF4RRqEUVtICaKtB1OKptirsVdirsVdirsVdiqW+Zf+Uc1&#xA;X/mDuP8Ak02KplirsVdirsVdirsVQ93qOn2QU3lzFbByQhmdYwxHWnIiuGMSTQW2A+ctY1XUhp/1&#xA;OGQ6XcmSazMDvzuuMbKnIRfEFLEMADWhBNDXjjePISI+mx6fM3+PgWebGIEb3VX7+79H3d7GbDyR&#xA;r2qLHLBpq+lDcXMoOotxkkBl+xI3DlyCqo+yN+W43GIJlKXCZC639wqQ5j+223NEA1Ibn+af4elf&#xA;b8COqH0XRdb0PWbeONI4763uJpLmWYsY44oIlYkgiOMI4bkOL+HSvxWS1QiTuevp6d980HDKXS5E&#xA;Aj3cq8ze3vB8y9j8vazFrGlRXycAzFkmSNuarJGxVgDQGm1RUA0ptk4yBFjq44NpjhS7FXYq7FXY&#xA;qlvmT/ji3H+w/wCTi4q3f6PJcXLXNvez2M0kQgmaERtyRSzJ/epJxZC7UI8d67UVQWqeVhcXPl2e&#xA;yuBa/wCHrj1Yo3jMyyQtbSWrxfbjZW9OU8XqaHqG6Yqll1+V+h3HmgeY3lpeLcR3QT6jpDfHEVIH&#xA;rvZNd/s/a9bmOzDbFV3mnyA2uX17LFqAs7TWLOLTtct/R9Rp7eGSR09KTmnpSUmdORV9j0qAcVQf&#xA;mP8ALbUNcnup5tXijm1Oxk0nVX+pBy9ibiSaJYOUv7mWNZinqHmCfi4g0oqi/PPkCbzNJp7wal+j&#xA;3sFkRJjD606eoUPq286yQyxTL6exLMhr8SNtiqfaV/vfrP8AzGJ/1B2+KplirsVdirsVdirsVdiq&#xA;W+Zf+Uc1X/mDuP8Ak02KplirsVdirsVdiqyeQxQyShGkKKWEabs1BXitabnATQtlEWQOTBb6HXdW&#xA;uFl0+6hl1NYPrNvOoPp24mRuMLMGUrX9luJLb8loMxsMySQfVxUbG3D5fjn1Z6rBwy2BG9b+XP8A&#xA;HmjvJnl6TTrn1BDcRQrCVcXfDaZ2Un0EDzlB8J9Q8zyJG5C7ZJjHiMh/Ys80pRET/b7/AHDb8Fl+&#xA;FqYt+YHlU65osv1SGJtSjKSIXUVlSIsfSLUrT4yQPHwrXISgL4u7u58j/a2wlY4SdvuurPxGx8kh&#xA;8gS21nrt0ZltbH9KM31O0tpAwogVhG6lY2+D4xH8IB+OmxXKseo4qG5BB3+J26/gFOSJJvbkDQ6c&#xA;hv5nr9u70fMhpdirsVdirsVS3zJ/xxbj/Yf8nFxVvUtVltplht7drqRV9a5VTQpBWnIbHk5IPFe9&#xA;D4ZVkyUaAv8AU5GHAJC5HhHIeZ/V3npslmvebZ9P1jyvZWVi2oW3mG5khe6ieICKNLZ5w45vHy2X&#xA;ltX4FanxcVawEEWGmUTEkHmEZL5z8nxaoNJl13T49VMiwDT2uoFuPVcgLH6RfnyYkUFK4WKjq/mi&#xA;XTvM2h6L+jpZYtakli/SXqRLDE0NtNccOHIys5EH8gWhryqOOKoDzX58k0O9uoINO+vR6XYDVtYk&#xA;M3pNFZtI6coU4SetJ+4kbiSgov2qkDFUV5k896RoN3plpPFPdT6qHa2S1EbH04ygZ6SPGXp6q/BH&#xA;yc9QpocVTHSv979Z/wCYxP8AqDt8VTLFXYq7FXYq7FXYq7FUt8y/8o5qv/MHcf8AJpsVTLFXYq7F&#xA;XYqpXdzHa2k11ICY4I2lcKKtxQFjQeO2KpPo3mR73UFspvqhlkge4UWlyLgxiNkRklAVd/3oowqD&#xA;v0oCZGBHMKhtG8u3NndWZNrBA1mXa51GNy0t4XjKHmOIYc2pI/Jj8SinL7QgIgcmUpylVnlsybCx&#xA;dirsVeRec9IutD8wNfoLUW9zdrqNtdT/ABSRmJ4nkiVVQuS0tKUPQ/sgucqkeEgA8Ppl/Vvfz+Pw&#xA;26tglcarex7z3D9g5k+T0ny15isPMGlpf2ZIFeE8TBlaOUKGZDyC1pyG9N8nAkxBPX4oyYzCVHmm&#xA;mSYOxV2KuxVLfMn/ABxbj/Yf8nFxVV1LR7TUDGZi6lKq/pnj6kTU5xSbGqNQVGVzxCXP8eTfh1Es&#xA;d1/Ye8eYUNX8v2up3mlXjzS29xo9z9btXhKblongkjcSJICjxysppRv5SDvljQpy+VNLl1Qam0+o&#xA;C5Eizemup6glvyQggfVlnEHHbdOHE9xiqvqOhWeoalpOoTNIs+jzyXFqEICs0tvJbMJAQSRwmJFC&#xA;N6fLFUl1X8utN1R2e81C+driJ7TUSHhH1u0ed51tZ/3X93GZGVPT4txNCxqcVV/OHkPS/NUcEV/d&#xA;XUEESvHJb27xiOWOQqSrpKkoVvg+GSPjIu/FhXFUy0r/AHv1n/mMT/qDt8VTLFXYq7FXYq7FWLJ+&#xA;Y2gvZaxd+jeImi3UVjNFNbvDNLPcLEYUhhl4SfvGnRV5hanf7NGxVU0vzLq+tXLrYadHb2dtK1pq&#xA;v1u59O/tblRyZBbxQ3VvJ8DxurC4oQ33qsFbQPzJtHL6ldXlzp8EGo/WLma6jZGgL6oQJoY5FV5J&#xA;VmsWjKxUQIy/BTiyr1/FXYq7FXYqx3zRf38TGG3m+rCOH10He6Yv6bQI1GKkBh9n4izLx6HMTUzk&#xA;Nhtt8/L8eTl4sIlAmuIk1/VHO/v57CjfQoTyZ5Yk094b5vTRFt2t4Y/QaKcxsY2BkYySUo0bUWn7&#xA;VdumZcMolE7EWb3/ALHBiK5cujLcWbsVdirsVY15/wDL0Os6BKvovJdQ8TC8NfUVTIjS8VBHP4Ur&#xA;xINSBsTTIz+k7XsyjklA8UeYYV5A12XStWMEiPLo+o3AsYdQdnK+tboyhgfSRaScRs1GA7kKTlUZ&#xA;7kk7AAeW9ed/xdzaSCBCO/M2fPp9nT3c3rWXtDsVdirsVS3zJ/xxbj/Yf8nFxVfqF9cRS+nAEBij&#xA;NxMZTxBjU0KqSRQ/5R2Xv1ynJkIND3sJSI5JL5l8w65Z+YPKNnpsML2es3k0N/8AWHeKQRJaSTjg&#xA;BHJ8QEZbem6hdgxZbQbFswmMvmvS4tUGmNBqBuTIsPqLpmoPb8nIAP1lYDBx33fnxHc4VQmu+YNZ&#xA;0/zZ5b0uG2t20vWJp4Lm6eRzcK8VpPcBUiChAKwr8Zc9xx/axVLfP3mzzHoVzEumJZyCSNTZ2Uyy&#xA;TXeoXJchrW3SKRDFxQBjMyuo5CopU4qifPHnp/K9xp0f1D6zDel/Wu5ZTbwRCNkHEymOSMSP6lUE&#xA;jIh4n4x3VTrSv979Z/5jE/6g7fFUyxV2KuxV5xqk/wCY2mahc39xfJFpD6nAkpuZbOGCHTxeRP6s&#xA;DMFf/eNZIpklPIueUeKs30jzF5f1lWfR9TtNSRPttaTxzhfmY2amKpHqHkFLw6/J9eMU+sX9lqdr&#xA;KIgTaz6fFbrCaFv3nx2gY/Z2PH3xVM/LHl+TR4b57m5W71DVLt76/nSMwxmVo0iAjiLylEWOFFAL&#xA;se5OKq/mdQ3lrVlYAqbO4BB6Eek2Ko+CCCCJYYI1ihQUSNAFUDwAGwxVfirsVQF7q/1e5NtDZz3s&#xA;yxiaVLcR/AjEqpJleIHkUagWp2xVERNZX9vbXSqs0TBbi1kZdxyX4XXkKqeLfPfAQDzZRkRdHmr4&#xA;WLsVdirsVdirsVeI+e/Lg0LWTJBHN9WkjmktpAqGNI1WGNQ3phSxWSVlbnuVK7u1RleSNj9BO3X4&#xA;dyYyA5kxHPbnf45dLr3vRPy48zxa55dgDSNJe2cccV2z1JY0ID8iBy5cTX3yUb/V7kGUiTxCpfrZ&#xA;VkldirsVS3zJ/wAcW4/2H/JxcVRlxZ21z6frxh/SYOla7EfLqPbIygJc0GIPND6lomm6lNYz3cTN&#xA;Pps4urKVJJImjlCshNY2QlWR2VlNVYGhBGSShZfJnk+XVBq0uhafJqokWcag1rA1x6qEFZPVKc+S&#xA;kChrXFUbeaTp95eWN5cxepc6bK89lJyYenJJE8DGgIDVjlYUavXxxVJrj8vPLE96t6VvYrtY3hE9&#xA;vqWoW7mOSd7hkJhuI6j1ZWO/TYDYABVF+YPJ3lzzBJDJq1oZ3gR4lKyzQ8opSpkhk9J4/VicovKN&#xA;6qabjFVfSv8Ae/Wf+YxP+oO3xVMsVdirsVYJ+auiSalBpc0Zv4GsbgT/AF7TrOC/ki4SRuVMEgeb&#xA;94EK8olPcOGRirKoPyRaaZL5g+vIuqa3ecVVNY1DTotMjtI1SUUijMFi7mUyFWKxtWi1PwCir0fF&#xA;XYqlvmX/AJRzVf8AmDuP+TTYqmWKuxVB2+rWVzMI4H9RHFYrhaGKQgVKo4PxEDf/AGjSuOWJNBBN&#xA;S4TsQsvtHhu5vXE89rMyejLJbvwMkVSQjGh6FjxZaMtTxIqcsSjLeCG3gjt4UEcMKrHEg6Kqiigf&#xA;IYqvxV2KuxV2KuxV2KpJ5y8tr5h0OSxDJHcqyzWs0ih1SWM1FQexFVPz79MBZwkAd+TwjRdT1Hyj&#xA;5lN5NbxvJYyypdW/OnIkPFwV1Qg8SGoR9Oy7DHkJ2NjlGun8O+8vxu3ZMcACIiwLlxHnw77Hz8vL&#xA;087PobRtXstY02DUbJi1vOCVrsykEqysBX4lYEHJkU4yMwK7FUt8yf8AHFuP9h/ycXFUHr+t3Vjd&#xA;+kl1aWkYtnmRrpCxkkU0CJSWH+OX4sYkORO/T+xBKV+ZNT8wrr/kaOyu47SDUbyZdTgeJpPVRbCW&#xA;fhUSR8aem1K1o3FtwpVqZCilu6/NDQ7fzQPLjxVvGuI7UP8AXtIX45SoB9B71bv9r7Po8z2U7YFR&#xA;HmPVNes/OXlS1t7qJNI1O5uLe9tfRrM7R2NzOp9cuQqco1+FYwaj7VPhxVIfzP8AzA1fRHs4NHiu&#xA;EhWe0e+1NLK4u4WjkvY7d7WOSOOWJZSpflyNeiqC7CiqO/MTz1qvly4076klt9UkimutRmuFeVoo&#xA;IWiFTDG6TJHSU8phHJwIAKfFirJ9K/3v1n/mMT/qDt8VTLFXYq7FWBfmTpUd9rGivqHl278y6JDb&#xA;3wnsrT0m9O7d7b6vMyzTW4+GNZwrAkiuKtfk9pEGmaCsEnlu50PWBb2i6ze3Swcr66WNvVlEkUsz&#xA;vSTk1ZAv2vnRVn2KuxVLfMv/ACjmq/8AMHcf8mmxVE6lfJY2jXLI0lGREiSnJ5JXEcaCpA+J2A3N&#xA;MVS2aa/1O2v9MlgFpfRJE5QSepDLFIxIUSBVYLJ6Txt8IYdR2yGWJlEgN2nyCEwT+PP4c2PXmna4&#xA;klxPDDeW1vJHNcadp9sUb0bphxBkILKOX2uI+EVPfJaPEBvKgOK6PRhqIiwAeKuvn+O/7qqeYWDs&#xA;VdirsVdirsVdirsVdirB/wAx/wAvbPXNNmvNPtoo9aiDSB1jUNcfAVMbmm7U+yTgN2CD9p7x+pIo&#xA;7fj8f2+TzLyT5x1HynrEltcSu1lJMUvrGZeMisDIDIoqODrxHKo3G3YEVysRuMenQ/1RXL39ebHx&#xA;OgA/HP8AHx6l7/ZXtre2sd1aSrNbyisci9DvQ/cdjk4TEhY5JpWySoDXbee40m4it4zLMQpSMFQW&#xA;KsGoCxVe3c4qs/St/wD9Wa8/4Oz/AOyjFUPeSLe+h9c8uzXP1aVbi29YWMnpzR/YkTlOeLr2YbjF&#xA;UR+lb/8A6s15/wAHZ/8AZRiqlNdSTTQTTaBcSzWrGS2kf6kzROyNGzRkz1UlHZSR2JGKqIW3Fn9S&#xA;HlmT6n6vr/VuNh6Xq+r6/qcPX48/W/ecqV5fF1xVbqUFnqjQNqflZ75rV/VtTcpYTGKTb44+czcW&#xA;26jFUdo8dz6moXE8D231q5EscUhRnCrbxRVPptIv2oz3xVMcVdirsVS3WbLWrgRSaTqYsJouVY5o&#xA;FubeXlSnqpWKX4abcJV6mtdqKu0aXzG3rR61b2kbR8fQuLOWR1lBry5RyIhiIp05P88VTLFXYqlv&#xA;mX/lHNV/5g7j/k02Ko27tbe7tpLa4TnDKOLrUj6QRQgjqCNxiqjYaVZWJla3VzJNT1ZZZJJpGCii&#xA;gvKztRamgrQVPjiqLxV2KuxV2KuxV2KuxV2KuxV2KuxV5X+c3ksXFpJ5jtiqmBY0voahOac+IdWp&#xA;9r4wDXsMsxcI8pd/6/k1yj1DGPy2/MZPLs507VElj0qeSitX1EhcgCo35cdtwMhHTyM7jKJFbiuE&#xA;8+fKvtYjKaFmx+Px83u1pd213bR3NrKs1vKOUcqGqkYyiQaLcq4FdirsVdirsVdirsVdirsVdirs&#xA;VYh+Y+k6zqFlZDTNJh1sx3CC4sLq9ktLcxPIgkeREBWbjHyoH2WvLi5AUqpR5H0e10/zPPbSaFB5&#xA;auIIo3t7PS5L2W2mDiUSm4l9C2s2/YKJQupUmu9MVejYq7FUt8y/8o5qv/MHcf8AJpsVTLFXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FVk8EFxDJBPGssEqlJYnAZGVhQqynYgjFXh35pfljDo5l1vSF9HT&#xA;ndXkt05FYZGNKBRsI2PTwJp0IpYNRMSHF6oEUe8ed/f82qcO5Z+V35p2uiMNF1xuFjcyc7e8rUQu&#xA;+xVwR9gkdQdj8yRlZMBmLiCa2RjlQq3usM0U0STQuskUih45EIZWVhUMpGxBGYRFNy7ArsVdirsV&#xA;dirsVdirsVdirsVYZ+bGoQW/lOe2lnltTctE3rpJLap6cFxFJNEbyOi27yxBlRnYKT12rirFPyyf&#xA;yzeebbi+sXvKBI00+xGrXGrxwOsc31iW4kt7i7tFWRWjCLLIzchUUqKKvXsVdiqW+Zf+Uc1X/mDu&#xA;P+TTYqmWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVbNDFNE8MyLJDIpSSNwGVlYUKsDsQRirwH8&#xA;zPyzm0S5m1bTwy6NI49T005+iH6hhWtK9Cdt+uW4c8r4DHiFbeqt+g5ONIGPqHf+Px+AM/J38wbL&#xA;SXudF1fUki0tmL2MlwvpiKSvxj1KlFR/tb9Gqa/FtLLgmCDw7EXzuvuLOOfiNS5vcYZ4Z4lmgkWW&#xA;JxVJEIZWHiCNjlDcvxV2KuxV2KuxV2KuxV2KuxVh35ga/wCYdGksZtNt7qe19K7eWOztWu3mu0VB&#xA;Z2r8VcxRzMz8pKChUDkK4qo/l1fawb3VdJvtROrLp0dp6916UMaRX83qm9tI/QSNCsJRGFasvOhJ&#xA;piqcwee/KFxY6lf22qQz2WkSiC/uYiZI0lKqwRWUESMfUUUSvxfD9rbFWrLzaupzRppOnXd1aOWj&#xA;m1LjDDFbTKSGiuLe4mt7xXSgLL6PQjFWANrP5gyOllq8936ZtdW/SI/Rbw2UkcUt/HAROsc3B3RL&#xA;dkVpUAQbtK0i0KvXsCuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqV1awXdrNa3Cepbzo0UqGo5&#xA;I44sNt9wcINK+aPzB/LvVPKt29zSaTRXmb6vdBkehNWjR6FWrx2JKjetK99rgzeICKjxcvh17/x8&#xA;3FyY+HcLvyy/M698saj9UmBuNJvHU3NoXoYXr8U1uKcasD8UdQGptRuuNn7POKJMbMPuH37OTPV+&#xA;JvLaXU9/n7+/v5vonQ/MWh67a/WtIvor2EUDmJgWQn9mRPtI3+SwBzCSmOKuxV2KuxV2KuxV2Kux&#xA;V2KuxVg+qeRdUu28yzRTwJNqWqadqumBy5QNpsVpRLgBejyWhHw8vhIPXbFU58oaHqGmJqt1qJiF&#xA;9rN++oXEFuzSQwkwxQLGkjpEz0S3Ulii7k7YqjfM4B8tasDWhs7gbGh/um7jFUfBCkMSxIWKoKAu&#xA;7SN9LOWY/ScVX4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhNX0jTtX06bTtRh9eyn4iWIsy1&#xA;4sHG6FWFGUHY5KEzE2OaCLeD/mZ+Sl1pbTav5cRp9LRDNcWrHnLFxO/AU5OtDXxG9c2mk7Q/hyfP&#xA;9f62meECNh5xovmPU9IvlvbK6ns76McVuIHKllrXhMjcklQE14suWarszjPFjPCeo6H9vmyx6ioi&#xA;MhcRy7x8e7y+VWb9EeRPzh0bX3t9O1Jo7HWJmMcAVma3uGUV/dOypxdtz6bb+BbNKRKJqQMZdx/Y&#xA;5Bh6RIGwfs8j+K7i9CxYOxV2KuxV2KuxV2KuxV2KuxV2Kpb5l/5RzVf+YO4/5NNiqZYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXnHnz8lNA8wr9a0sR6RqYJZ3jT9zLUdHRacTWnxL71&#xA;BzN02uli25xapYgeT591nR9W8sa3cafexcZ7d2Q8g3pyAdGWvGqkEEHNxkxY9ViqXI/MMMeWeKVx&#xA;NH8fAvSfyw/ONtMEekawzyaYocwu1ZJYqtyCq7NV0FT8JFQPs9AuaTU6DJhF/XDv/i+I7vMfJt8e&#xA;Jraj9n7Pt+D3jTtRsdSsob6xmW4tJ15RSp0I6H3BB2IO4OxzFZojFXYq7FXYq7FXYq7FXYq7FUt8&#xA;y/8AKOar/wAwdx/yabFUyxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVL9b8v6Nr&#xA;lm9pqlpHdQurIC6gsvIUJRvtIfcZOGSUTYKDEHm8C/MH8jtV0YyahoAfUdOZz/oqqWuIU4lqmn21&#xA;FKVG/TNzpe0gfTk2Pf0/H2OPLGQxvyL+ZOu+U7wGJzPYsQLizc/CwApt4MB36/Rth1XZon6sdRlz&#xA;8j+O/wCwphmIFHfu8n0r5R85aH5q00Xuly1K/DPbvQSxN1oy/qI2/HNLkxyhLhlzbxIHknmQS7FX&#xA;Yq7FXYq7FXYq7FUt8y/8o5qv/MHcf8mmxVMsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVec/mD+TGieZXn1HT2/R2tPV2kArDM9NvVT9kk9XX5kNmdptdLHsd4tc8dvBmHm/yH&#xA;5g4n1dM1KHcfyyRhqVH7MkbFPkc28o4tTD8WD+Pg0C4F9A/lv+bOk+bIY7O6KWevgHnabhJeIJLQ&#xA;kk12FSpNR7jfNNqtHLEb5x73IhMFn2YbN2KuxV2KuxV2KuxVLfMv/KOar/zB3H/JpsVTLFXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkPnPyXo3m3SjYaipVkPK2ukA9WJ/F&#xA;SQdjT4h3+45Ziyyxm4lBAPN8z+bfIvmnyTqUc1wrJEsvKx1KBvhLIaqQymqMOtDQ50Gn1UM0aP1d&#xA;zjzgY8nrn5VfnNHrJi0TzFIseqn4ba+biiXB3IVgAqo9OnZvn112s0Bh6ofT9zZjyXsXrWaxtdir&#xA;sVdirsVdiqW+Zf8AlHNV/wCYO4/5NNiqZYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYqhNW0nTtX0+bT9RgW4tLheMkTd/cEbgjsRhBINjmr5m/Mf8rdV8o3wubQSXWjzO&#xA;fqtyoJeM9QkvEbN4Hv8Ahm/0Wt8QcMvqH2uPkhR2e4flFr2s635LgutXYyXccrweqylXdI6BWfxb&#xA;fc981euxRhkqPJtgSRuzTMNm7FXYqkMHnvyhcWOpX9tqkM9lpEogv7mImSNJSqsEVlBEjH1FFEr8&#xA;Xw/a2xVqy82rqc0aaTp13dWjlo5tS4wwxW0ykhori3uJre8V0oCy+j0IxVgN9rn5q/V9PtNQsZZd&#xA;NkGtR65qKW8USuqfXktB6TOZIIlSGFw1DzDAcydnVeu4q7FXYq7FXYq7FXYq7FWi6hgpIDN9kE7m&#xA;nWmKt4q7FXYq7FXYq7FXYq7FWgysWAIJU0YA9DQGh+g4q3irsVdirsVdirsVdirsVaVldQ6EMrAF&#xA;WBqCD0IOKt4q7FWD6p5F1S7bzLNFPAk2papp2q6YHLlA2mxWlEuAF6PJaEfDy+Eg9dsVTnyhoeoa&#xA;Ymq3WomIX2s376hcQW7NJDCTDFAsaSOkTPRLdSWKLuTtiqdXlrBeWk9pcKWguI2imUMyko6lWAZS&#xA;GGx6g1xVhOtanZaR5istFS3vZ4JPqv1u6bU74SR/Xrhra39KMs/rfvEPqVdeC/FvirKf8P2H+/bz&#xA;/pOvP+quKtHy5pxkWQyXnNQVVvr15sGIJH97/kjFW/8AD9h/v28/6Trz/qrirUflzTo41jSS8VEA&#xA;VV+vXmwAoB/e4q0PLWmCNow93wYsWH1683Lklv8AdvcnFXf4a0z938d3+6NY/wDTrzY8Sv8Av3wO&#xA;KtHyxpZ5Ve7+N1kb/TrzdkpxP9724jFVv+FdI9RZa3fqKWZW+u3lQXFGI/e98VS3QzZapqGt2bQ3&#xA;9q2jXgsiZNQuWMoa3iuFlASZgqss44itadaH4Qqm/wDh+w/37ef9J15/1VxVanlzTU5cZLwciWb/&#xA;AE683J7/AN7irb+XNOkUK8l4QCGA+vXnVSGB/vfEYq1J5c02RCjyXjKeo+vXnz/37irbeXNOZkZp&#xA;LwmM8kP1682NCtf73wJxVo+WtMLOxe7JkUI5+vXm6itB/e/5RxVa3lbSWUqzXZBT0iPr159g/s/3&#xA;2KobU9H0/TNM1HUIEupZoopLlov0jcQiV4otg0skyolQgXkxoB1xVD+VoYda0ODUrmG8spZmlHoj&#xA;UL51KxytGkkbyGB2jlVRIhaNaqRtiqaSeXNOkjaN5LxkcFWX69ebgihH97irf+H7D/ft5/0nXn/V&#xA;XFVv+HNN9T1PUvOdOPL69edK1p/e4q2fLmnGRZDJec1BVW+vXmwYgkf3v+SMVcPLmnCRpBJec2AV&#xA;m+vXm4Ukgf3v+UcVWr5Y0pRGA12BES0Y+vXmxIIr/e+DHFXDyxpY40e7+B2kX/TrzZnryP8Ae9+R&#xA;xVKfN/mdvJ2l2P1PTlu7OMCORWnaNooIuCArSOd3Pxj4n4oOryLtVVleKuxV2KuxV5X5k8uaqmte&#xA;cZbO2vbizvo9BluF5zzNcW8V7cPqFvbNIzU/cMR6UewDUCjliqeeQfLenAXl/LpCW9tBqU8vlZLm&#xA;1EM9pZyQxI6wxyostsskyytwoux6DpirOMVdirsVdirsVdiqH1Cwt9QspbO4MqwzDi5gmlt5KVr8&#xA;MsLRyL/sWGKvIYNCvE8neSYdd0e7vdNtdEnguNNS2lmlh1Jo4BavLAql1ZVWVVYqPTY1JXqCr03y&#xA;hp13Y+XNOXUUX9NPaWv6YnAUvNdx28cUjyOB8bfBTkewGBU5xV2KuxV2KuxV2KsQ/MfR5tQttDmt&#xA;47maey1rS5jHA83D0hfQtK8sMbBJFRF5VkU8NyKYqxey8u3Vx5wEd3pUsl/Jq2pvreoXFuzWtzoc&#xA;8Uy2ts8zL6U60eBViBPAq1V8VXp2m6Xpul2cdjplpDY2UVfStbaNIYl5MWbiiBVFWJJ264qicVdi&#xA;rsVdirsVdirzzzd5f1uTzhe32iLci9u/K+q21tdGWYwRXrSWotlTmzQwM3Hl8IXlQsa0xVD+R/Km&#xA;jXep3czeXhb6FDb6e1raalZGMrqkQl+tXEMVwoZW4tErSgfGwqGPUqvS8VdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirAPO3nvXtH1xrPT1s0trQaW1yt4sjTXA1S/a0ItikkYX0VjLMSG6jpTdV&#xA;Defpr+Xz1p2nx2+r39q2j31wbDR79rB/WS4t0SZ2+s2YYIHK0qx+L7JxVi0vmzzjeeXNLurPWhHd&#xA;2el+XpprpkdluZdX1EQSuYw8HLgLcKS3ZnUBS3IKvTfJV9dTHXrGeWSddK1ae1t5pSWcxPHFdKpY&#xA;1LCP6z6YJ3ouKskxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KsJ/Mv/APo6f/AIk9H9I/W7P9Fen9X/SHL69B/vP63x+nz4+tw/Yr3xVlb/oj9Lxc/q/6&#xA;Y+ryehXh9Z+rc09Xh+36fP0+VNq8a9sVYjd/8qy+s2vL6j+hv0VJ6nH6r+iPqH1iP0vW5fuqevX0&#xA;eO1eeKp55P8A0X+j7v6j63qfXrv6/wDWeHr/AFr1m9Xn6fweHDjtw40xVPcVdirsVdirsVdirsVd&#xA;irsVdirsVdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>49.606689</stDim:w>
            <stDim:h>70.157511</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>003.001</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>hv______.PFB; hv______.PFM</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -160.854 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 160.854 li
202.901 160.854 li
202.901 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.39 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
31.2212 140.82 mo
31.2212 6.55811 li
196.961 6.55811 li
196.961 140.82 li
31.2212 140.82 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
@
31.2212 140.82 mo
31.2212 139.155 li
31.2212 140.82 mo
31.2212 139.977 li
31.2212 140.82 mo
31.2212 6.55811 li
31.2212 140.82 mo
196.961 140.82 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
def
/UniqueID 44701 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 718 737 523 538 688 703] def
/OtherBlues [270 281 -220 -207] def
/FamilyBlues [-19 0 718 737 523 538 688 703] def
/FamilyOtherBlues [270 281 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/zero <1C60D8A8C9B7EF326C968E306016D52B972317960D8F5FD9CF1940741
2ACDAB79CA610AF5680AA7B72207450A6242E2E0D68A5786F14263E889E5C8F2
E3B1F3B57C131555AFBBA2F2574AAA6D70E3BCBA1C3BCCEEE066DF7> |-
/one <1C60D8A8C9B7EF322B88E7B3B83FEFDBAEDBDBF34DA8137760E7130B21
E4AD345C85AC723F334BEB61938BD65CFC89B4FB9FF8> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SYHDPF+Helvetica /Helvetica findfont ct_VMDictPut
/SYHDPF+Helvetica*1 
[48{/.notdef}rp /zero /one 206{/.notdef}rp]
SYHDPF+Helvetica nf
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
25.311 151.48 mo
(10)
[4.44629 0 ]xsh
SYHDPF+Helvetica*1 [5.3314 0 0 -5.3314 0 0 ]msf
34.1978 146.528 mo
(0)sh
86.4678 140.82 mo
86.4678 139.155 li
86.4678 140.82 mo
86.4678 139.977 li
83.9351 140.82 mo
83.9351 139.977 li
81.0918 140.82 mo
81.0918 139.977 li
77.8931 140.82 mo
77.8931 139.977 li
74.2051 140.82 mo
74.2051 139.977 li
69.8286 140.82 mo
69.8286 139.977 li
64.4751 140.82 mo
64.4751 139.977 li
57.5669 140.82 mo
57.5669 139.977 li
47.8374 140.82 mo
47.8374 139.977 li
@
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
80.5571 151.48 mo
(10)
[4.44629 0 ]xsh
SYHDPF+Helvetica*1 [5.3314 0 0 -5.3314 0 0 ]msf
89.4429 146.528 mo
(1)sh
141.714 140.82 mo
141.714 139.155 li
141.714 140.82 mo
141.714 139.977 li
139.182 140.82 mo
139.182 139.977 li
136.338 140.82 mo
136.338 139.977 li
133.14 140.82 mo
133.14 139.977 li
129.451 140.82 mo
129.451 139.977 li
125.075 140.82 mo
125.075 139.977 li
119.722 140.82 mo
119.722 139.977 li
112.813 140.82 mo
112.813 139.977 li
103.083 140.82 mo
103.083 139.977 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPF+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF326B521ECF54C8B5A1823FE69FA06387976EF15912CA
2CDA2533C9465BA7A26890CB14E00D5302DA30754A8D882285488F566A848DB1
47F35FB324475F64975761151E92421F0A87A071DBDCE313F43B7ED0EE45382A
201B4EE4186F1FFE753A5DFF15AB1D98FE235181891E842EE4EC730EB3A21CE3
8A847AF33F417CDE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPF+Helvetica /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/SYHDPF+Helvetica*1 
[48{/.notdef}rp /zero /one /two 205{/.notdef}rp]
SYHDPF+Helvetica nf
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
135.805 151.48 mo
(10)
[4.44629 0 ]xsh
SYHDPF+Helvetica*1 [5.3314 0 0 -5.3314 0 0 ]msf
144.69 146.528 mo
(2)sh
196.961 140.82 mo
196.961 139.155 li
196.961 140.82 mo
196.961 139.977 li
194.43 140.82 mo
194.43 139.977 li
191.585 140.82 mo
191.585 139.977 li
188.386 140.82 mo
188.386 139.977 li
184.699 140.82 mo
184.699 139.977 li
180.322 140.82 mo
180.322 139.977 li
174.97 140.82 mo
174.97 139.977 li
168.061 140.82 mo
168.061 139.977 li
158.33 140.82 mo
158.33 139.977 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPF+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32628E1261785C20D980324E75073C191110FF1DF4
F419F448F462DDCBF01F49514B54CF7F0EB797563420F11FA9B2A870CA2FAFCA
7BF082E8CA0E2FF35D921F9F1AC34584712B0A0077B0C704E6D603F8AD41559F
54EB34B872207887B41FB66A1203507BC16DAB327994FA639B9001AE05899646
700CF8E1B6168C5B7CF545795406B8E1F23BB3C2F5D73EC7968D39A5B597FC2B
C81D1DC416629EB76E1C99970D381D679CD5A57691EAF8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPF+Helvetica /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/SYHDPF+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three 204{/.notdef}rp]
SYHDPF+Helvetica nf
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
191.049 151.48 mo
(10)
[4.44629 0 ]xsh
SYHDPF+Helvetica*1 [5.3314 0 0 -5.3314 0 0 ]msf
199.938 146.528 mo
(3)sh
31.2212 140.82 mo
32.8647 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPF+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B7F374CC52CC6AFA414A834D96E3500AE21BFB98508788
FC7E> |-
/four <1C60D8A8C9B7EF322BF511E331CA00D363470942D767E1013D8E7F4F5
9F447A73A07F5975B5A79C571CD13B4D3557C550D5B9A82EC34D373E687DACA8
586AE16B88F81251D9B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPF+Helvetica /Encoding get
dup 32 /minus put
dup 52 /four put
pop
%ADOEndSubsetFont
/SYHDPF+Helvetica*1 
[32{/.notdef}rp /minus 15{/.notdef}rp /zero /one /two /three /four 
203{/.notdef}rp]
SYHDPF+Helvetica nf
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
12.5151 143.795 mo
(10)
[4.44629 0 ]xsh
SYHDPF+Helvetica*1 [5.3314 0 0 -5.3314 0 0 ]msf
21.4019 138.843 mo
( 14)
[3.11377 2.96387 0 ]xsh
31.2212 96.0586 mo
32.8647 96.0586 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
@
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
12.5151 99.0322 mo
(10)
[4.44629 0 ]xsh
SYHDPF+Helvetica*1 [5.3314 0 0 -5.3314 0 0 ]msf
21.4019 94.0811 mo
( )sh
24.5151 94.0811 mo
(12)
[2.96436 0 ]xsh
31.2212 51.2974 mo
32.8647 51.2974 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
@
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
12.5151 54.271 mo
(10)
[4.44629 0 ]xsh
SYHDPF+Helvetica*1 [5.3314 0 0 -5.3314 0 0 ]msf
21.4019 49.3218 mo
( )sh
24.5151 49.3218 mo
(10)
[2.96436 0 ]xsh
31.2212 6.55811 mo
32.8647 6.55811 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPF+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF3215BE57159D4F4BFA3C872F39ADA92BFE9288487A
97C6EFD98F578BBC2816F32D04509AD26EEA95F04BA1945FA81AF290563239CF
0739378BE51FE126D55A1BC75807D245336424C9214BC46BA6D4CEC05163B30F
75014D6052F2FC7397D286353B5ED17ABCA76ED3D83B8303060D3490C1FF5CCC
7BE6E338C40F50110AC16AF7E8E791FB357412BEC619138DE3107B599DC60AB8
D303142F26A30837419BF59F47881153A58F64FE59AE91D9C7C833E81BE56AAE
FBE2F7B6282D006375F76B8AD9A83CFA32DAD6A43E42C103A582803691A9856C
CFF6D9043F2C28AC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPF+Helvetica /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/SYHDPF+Helvetica*1 
[32{/.notdef}rp /minus 15{/.notdef}rp /zero /one /two /three /four 
3{/.notdef}rp /eight 199{/.notdef}rp]
SYHDPF+Helvetica nf
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
12.5151 9.53174 mo
(10)
[4.44629 0 ]xsh
SYHDPF+Helvetica*1 [5.3314 0 0 -5.3314 0 0 ]msf
21.4019 4.57959 mo
( )sh
24.5151 4.57959 mo
(8)sh
166.893 109.528 mo
166.893 110.632 165.998 111.528 164.894 111.528 cv
163.791 111.528 162.895 110.632 162.895 109.528 cv
162.895 108.425 163.791 107.528 164.894 107.528 cv
165.998 107.528 166.893 108.425 166.893 109.528 cv
166.766 109.305 mo
166.766 110.407 165.869 111.304 164.767 111.304 cv
163.663 111.304 162.767 110.407 162.767 109.305 cv
162.767 108.2 163.663 107.305 164.767 107.305 cv
165.869 107.305 166.766 108.2 166.766 109.305 cv
166.637 109.177 mo
166.637 110.279 165.741 111.176 164.639 111.176 cv
163.534 111.176 162.64 110.279 162.64 109.177 cv
162.64 108.072 163.534 107.177 164.639 107.177 cv
165.741 107.177 166.637 108.072 166.637 109.177 cv
166.541 109.399 mo
166.541 110.504 165.646 111.399 164.543 111.399 cv
163.438 111.399 162.543 110.504 162.543 109.399 cv
162.543 108.296 163.438 107.401 164.543 107.401 cv
165.646 107.401 166.541 108.296 166.541 109.399 cv
166.382 109.112 mo
166.382 110.216 165.486 111.111 164.383 111.111 cv
163.278 111.111 162.383 110.216 162.383 109.112 cv
162.383 108.009 163.278 107.112 164.383 107.112 cv
165.486 107.112 166.382 108.009 166.382 109.112 cv
166.254 108.984 mo
166.254 110.088 165.357 110.984 164.254 110.984 cv
163.15 110.984 162.256 110.088 162.256 108.984 cv
162.256 107.881 163.15 106.984 164.254 106.984 cv
165.357 106.984 166.254 107.881 166.254 108.984 cv
166.126 108.536 mo
166.126 109.64 165.23 110.536 164.126 110.536 cv
163.023 110.536 162.127 109.64 162.127 108.536 cv
162.127 107.433 163.023 106.537 164.126 106.537 cv
165.23 106.537 166.126 107.433 166.126 108.536 cv
165.998 108.313 mo
165.998 109.416 165.103 110.313 163.998 110.313 cv
162.895 110.313 161.999 109.416 161.999 108.313 cv
161.999 107.209 162.895 106.313 163.998 106.313 cv
165.103 106.313 165.998 107.209 165.998 108.313 cv
165.869 108.313 mo
165.869 109.416 164.974 110.313 163.87 110.313 cv
162.767 110.313 161.872 109.416 161.872 108.313 cv
161.872 107.209 162.767 106.313 163.87 106.313 cv
164.974 106.313 165.869 107.209 165.869 108.313 cv
165.741 108.409 mo
165.741 109.512 164.847 110.407 163.742 110.407 cv
162.64 110.407 161.744 109.512 161.744 108.409 cv
161.744 107.305 162.64 106.41 163.742 106.41 cv
164.847 106.41 165.741 107.305 165.741 108.409 cv
165.614 108.729 mo
165.614 109.832 164.718 110.728 163.614 110.728 cv
162.511 110.728 161.615 109.832 161.615 108.729 cv
161.615 107.625 162.511 106.729 163.614 106.729 cv
164.718 106.729 165.614 107.625 165.614 108.729 cv
165.486 108.6 mo
165.486 109.705 164.59 110.6 163.487 110.6 cv
162.383 110.6 161.487 109.705 161.487 108.6 cv
161.487 107.497 162.383 106.602 163.487 106.602 cv
164.59 106.602 165.486 107.497 165.486 108.6 cv
165.357 108.313 mo
165.357 109.416 164.463 110.313 163.359 110.313 cv
162.256 110.313 161.359 109.416 161.359 108.313 cv
161.359 107.209 162.256 106.313 163.359 106.313 cv
164.463 106.313 165.357 107.209 165.357 108.313 cv
165.198 107.896 mo
165.198 109.001 164.302 109.896 163.199 109.896 cv
162.095 109.896 161.2 109.001 161.2 107.896 cv
161.2 106.794 162.095 105.897 163.199 105.897 cv
164.302 105.897 165.198 106.794 165.198 107.896 cv
165.07 107.929 mo
165.07 109.032 164.175 109.928 163.07 109.928 cv
161.967 109.928 161.071 109.032 161.071 107.929 cv
161.071 106.825 161.967 105.93 163.07 105.93 cv
164.175 105.93 165.07 106.825 165.07 107.929 cv
164.942 108.376 mo
164.942 109.48 164.046 110.376 162.943 110.376 cv
161.839 110.376 160.943 109.48 160.943 108.376 cv
160.943 107.273 161.839 106.377 162.943 106.377 cv
164.046 106.377 164.942 107.273 164.942 108.376 cv
164.782 108.025 mo
164.782 109.128 163.887 110.024 162.783 110.024 cv
161.68 110.024 160.783 109.128 160.783 108.025 cv
160.783 106.921 161.68 106.025 162.783 106.025 cv
163.887 106.025 164.782 106.921 164.782 108.025 cv
164.654 107.705 mo
164.654 108.809 163.758 109.705 162.655 109.705 cv
161.551 109.705 160.656 108.809 160.656 107.705 cv
160.656 106.602 161.551 105.705 162.655 105.705 cv
163.758 105.705 164.654 106.602 164.654 107.705 cv
164.525 107.801 mo
164.525 108.904 163.631 109.8 162.527 109.8 cv
161.424 109.8 160.527 108.904 160.527 107.801 cv
160.527 106.696 161.424 105.802 162.527 105.802 cv
163.631 105.802 164.525 106.696 164.525 107.801 cv
164.366 107.737 mo
164.366 108.84 163.471 109.736 162.367 109.736 cv
161.265 109.736 160.368 108.84 160.368 107.737 cv
160.368 106.633 161.265 105.738 162.367 105.738 cv
163.471 105.738 164.366 106.633 164.366 107.737 cv
164.238 107.417 mo
164.238 108.521 163.343 109.416 162.238 109.416 cv
161.136 109.416 160.24 108.521 160.24 107.417 cv
160.24 106.313 161.136 105.418 162.238 105.418 cv
163.343 105.418 164.238 106.313 164.238 107.417 cv
164.11 107.737 mo
164.11 108.84 163.215 109.736 162.111 109.736 cv
161.007 109.736 160.111 108.84 160.111 107.737 cv
160.111 106.633 161.007 105.738 162.111 105.738 cv
163.215 105.738 164.11 106.633 164.11 107.737 cv
163.95 107.865 mo
163.95 108.968 163.055 109.864 161.951 109.864 cv
160.848 109.864 159.952 108.968 159.952 107.865 cv
159.952 106.762 160.848 105.865 161.951 105.865 cv
163.055 105.865 163.95 106.762 163.95 107.865 cv
163.822 107.385 mo
163.822 108.488 162.926 109.385 161.823 109.385 cv
160.72 109.385 159.824 108.488 159.824 107.385 cv
159.824 106.282 160.72 105.386 161.823 105.386 cv
162.926 105.386 163.822 106.282 163.822 107.385 cv
163.694 107.353 mo
163.694 108.456 162.799 109.353 161.695 109.353 cv
160.592 109.353 159.696 108.456 159.696 107.353 cv
159.696 106.249 160.592 105.354 161.695 105.354 cv
162.799 105.354 163.694 106.249 163.694 107.353 cv
163.534 107.129 mo
163.534 108.232 162.64 109.128 161.535 109.128 cv
160.433 109.128 159.536 108.232 159.536 107.129 cv
159.536 106.025 160.433 105.13 161.535 105.13 cv
162.64 105.13 163.534 106.025 163.534 107.129 cv
163.407 106.841 mo
163.407 107.944 162.511 108.84 161.407 108.84 cv
160.304 108.84 159.408 107.944 159.408 106.841 cv
159.408 105.738 160.304 104.842 161.407 104.842 cv
162.511 104.842 163.407 105.738 163.407 106.841 cv
163.247 106.553 mo
163.247 107.656 162.352 108.553 161.247 108.553 cv
160.144 108.553 159.248 107.656 159.248 106.553 cv
159.248 105.45 160.144 104.554 161.247 104.554 cv
162.352 104.554 163.247 105.45 163.247 106.553 cv
163.087 106.426 mo
163.087 107.528 162.191 108.425 161.088 108.425 cv
159.983 108.425 159.088 107.528 159.088 106.426 cv
159.088 105.321 159.983 104.427 161.088 104.427 cv
162.191 104.427 163.087 105.321 163.087 106.426 cv
162.959 106.873 mo
162.959 107.977 162.063 108.873 160.96 108.873 cv
159.855 108.873 158.96 107.977 158.96 106.873 cv
158.96 105.77 159.855 104.873 160.96 104.873 cv
162.063 104.873 162.959 105.77 162.959 106.873 cv
162.799 106.426 mo
162.799 107.528 161.903 108.425 160.8 108.425 cv
159.696 108.425 158.801 107.528 158.801 106.426 cv
158.801 105.321 159.696 104.427 160.8 104.427 cv
161.903 104.427 162.799 105.321 162.799 106.426 cv
162.64 105.817 mo
162.64 106.921 161.744 107.816 160.639 107.816 cv
159.536 107.816 158.64 106.921 158.64 105.817 cv
158.64 104.713 159.536 103.819 160.639 103.819 cv
161.744 103.819 162.64 104.713 162.64 105.817 cv
162.511 106.138 mo
162.511 107.241 161.615 108.136 160.512 108.136 cv
159.408 108.136 158.513 107.241 158.513 106.138 cv
158.513 105.034 159.408 104.139 160.512 104.139 cv
161.615 104.139 162.511 105.034 162.511 106.138 cv
162.352 105.945 mo
162.352 107.049 161.455 107.944 160.352 107.944 cv
159.248 107.944 158.353 107.049 158.353 105.945 cv
158.353 104.842 159.248 103.946 160.352 103.946 cv
161.455 103.946 162.352 104.842 162.352 105.945 cv
162.191 105.913 mo
162.191 107.018 161.295 107.912 160.192 107.912 cv
159.088 107.912 158.192 107.018 158.192 105.913 cv
158.192 104.811 159.088 103.914 160.192 103.914 cv
161.295 103.914 162.191 104.811 162.191 105.913 cv
162.031 106.169 mo
162.031 107.273 161.136 108.169 160.031 108.169 cv
158.929 108.169 158.032 107.273 158.032 106.169 cv
158.032 105.065 158.929 104.169 160.031 104.169 cv
161.136 104.169 162.031 105.065 162.031 106.169 cv
161.872 105.817 mo
161.872 106.921 160.976 107.816 159.871 107.816 cv
158.769 107.816 157.872 106.921 157.872 105.817 cv
157.872 104.713 158.769 103.819 159.871 103.819 cv
160.976 103.819 161.872 104.713 161.872 105.817 cv
161.744 105.849 mo
161.744 106.953 160.848 107.849 159.744 107.849 cv
158.64 107.849 157.744 106.953 157.744 105.849 cv
157.744 104.746 158.64 103.851 159.744 103.851 cv
160.848 103.851 161.744 104.746 161.744 105.849 cv
161.583 105.626 mo
161.583 106.729 160.688 107.625 159.585 107.625 cv
158.48 107.625 157.584 106.729 157.584 105.626 cv
157.584 104.521 158.48 103.626 159.585 103.626 cv
160.688 103.626 161.583 104.521 161.583 105.626 cv
161.424 105.401 mo
161.424 106.505 160.527 107.401 159.424 107.401 cv
158.321 107.401 157.425 106.505 157.425 105.401 cv
157.425 104.299 158.321 103.402 159.424 103.402 cv
160.527 103.402 161.424 104.299 161.424 105.401 cv
161.265 105.529 mo
161.265 106.633 160.368 107.528 159.264 107.528 cv
158.16 107.528 157.265 106.633 157.265 105.529 cv
157.265 104.427 158.16 103.53 159.264 103.53 cv
160.368 103.53 161.265 104.427 161.265 105.529 cv
161.104 105.338 mo
161.104 106.441 160.208 107.337 159.104 107.337 cv
158.001 107.337 157.104 106.441 157.104 105.338 cv
157.104 104.233 158.001 103.339 159.104 103.339 cv
160.208 103.339 161.104 104.233 161.104 105.338 cv
160.943 105.082 mo
160.943 106.186 160.048 107.081 158.944 107.081 cv
157.841 107.081 156.945 106.186 156.945 105.082 cv
156.945 103.979 157.841 103.082 158.944 103.082 cv
160.048 103.082 160.943 103.979 160.943 105.082 cv
160.783 104.73 mo
160.783 105.833 159.889 106.729 158.784 106.729 cv
157.681 106.729 156.785 105.833 156.785 104.73 cv
156.785 103.626 157.681 102.729 158.784 102.729 cv
159.889 102.729 160.783 103.626 160.783 104.73 cv
160.623 104.507 mo
160.623 105.609 159.728 106.505 158.625 106.505 cv
157.521 106.505 156.625 105.609 156.625 104.507 cv
156.625 103.402 157.521 102.507 158.625 102.507 cv
159.728 102.507 160.623 103.402 160.623 104.507 cv
160.433 104.313 mo
160.433 105.418 159.536 106.313 158.433 106.313 cv
157.329 106.313 156.433 105.418 156.433 104.313 cv
156.433 103.21 157.329 102.315 158.433 102.315 cv
159.536 102.315 160.433 103.21 160.433 104.313 cv
160.272 103.93 mo
160.272 105.034 159.376 105.93 158.272 105.93 cv
157.17 105.93 156.273 105.034 156.273 103.93 cv
156.273 102.827 157.17 101.931 158.272 101.931 cv
159.376 101.931 160.272 102.827 160.272 103.93 cv
160.144 104.026 mo
160.144 105.13 159.248 106.025 158.146 106.025 cv
157.04 106.025 156.145 105.13 156.145 104.026 cv
156.145 102.923 157.04 102.027 158.146 102.027 cv
159.248 102.027 160.144 102.923 160.144 104.026 cv
159.952 104.378 mo
159.952 105.481 159.057 106.377 157.953 106.377 cv
156.849 106.377 155.953 105.481 155.953 104.378 cv
155.953 103.274 156.849 102.379 157.953 102.379 cv
159.057 102.379 159.952 103.274 159.952 104.378 cv
159.761 104.409 mo
159.761 105.514 158.864 106.41 157.761 106.41 cv
156.657 106.41 155.761 105.514 155.761 104.409 cv
155.761 103.307 156.657 102.41 157.761 102.41 cv
158.864 102.41 159.761 103.307 159.761 104.409 cv
159.633 104.154 mo
159.633 105.258 158.736 106.152 157.633 106.152 cv
156.529 106.152 155.634 105.258 155.634 104.154 cv
155.634 103.051 156.529 102.155 157.633 102.155 cv
158.736 102.155 159.633 103.051 159.633 104.154 cv
159.44 103.643 mo
159.44 104.746 158.544 105.642 157.44 105.642 cv
156.338 105.642 155.441 104.746 155.441 103.643 cv
155.441 102.539 156.338 101.643 157.44 101.643 cv
158.544 101.643 159.44 102.539 159.44 103.643 cv
159.248 103.834 mo
159.248 104.938 158.353 105.833 157.249 105.833 cv
156.145 105.833 155.25 104.938 155.25 103.834 cv
155.25 102.729 156.145 101.836 157.249 101.836 cv
158.353 101.836 159.248 102.729 159.248 103.834 cv
159.12 104.154 mo
159.12 105.258 158.225 106.152 157.121 106.152 cv
156.018 106.152 155.121 105.258 155.121 104.154 cv
155.121 103.051 156.018 102.155 157.121 102.155 cv
158.225 102.155 159.12 103.051 159.12 104.154 cv
158.929 103.802 mo
158.929 104.906 158.032 105.802 156.93 105.802 cv
155.825 105.802 154.93 104.906 154.93 103.802 cv
154.93 102.699 155.825 101.803 156.93 101.803 cv
158.032 101.803 158.929 102.699 158.929 103.802 cv
158.769 103.578 mo
158.769 104.683 157.872 105.578 156.77 105.578 cv
155.666 105.578 154.77 104.683 154.77 103.578 cv
154.77 102.475 155.666 101.578 156.77 101.578 cv
157.872 101.578 158.769 102.475 158.769 103.578 cv
158.576 103.738 mo
158.576 104.842 157.681 105.738 156.577 105.738 cv
155.474 105.738 154.578 104.842 154.578 103.738 cv
154.578 102.635 155.474 101.739 156.577 101.739 cv
157.681 101.739 158.576 102.635 158.576 103.738 cv
158.385 103.418 mo
158.385 104.521 157.489 105.418 156.385 105.418 cv
155.281 105.418 154.386 104.521 154.386 103.418 cv
154.386 102.315 155.281 101.419 156.385 101.419 cv
157.489 101.419 158.385 102.315 158.385 103.418 cv
158.225 103.227 mo
158.225 104.33 157.329 105.226 156.226 105.226 cv
155.121 105.226 154.227 104.33 154.227 103.227 cv
154.227 102.122 155.121 101.228 156.226 101.228 cv
157.329 101.228 158.225 102.122 158.225 103.227 cv
158.032 103.003 mo
158.032 104.105 157.137 105.001 156.034 105.001 cv
154.93 105.001 154.034 104.105 154.034 103.003 cv
154.034 101.898 154.93 101.004 156.034 101.004 cv
157.137 101.004 158.032 101.898 158.032 103.003 cv
157.841 102.747 mo
157.841 103.851 156.945 104.746 155.841 104.746 cv
154.737 104.746 153.842 103.851 153.842 102.747 cv
153.842 101.643 154.737 100.746 155.841 100.746 cv
156.945 100.746 157.841 101.643 157.841 102.747 cv
157.649 102.426 mo
157.649 103.53 156.753 104.427 155.649 104.427 cv
154.546 104.427 153.65 103.53 153.65 102.426 cv
153.65 101.323 154.546 100.428 155.649 100.428 cv
156.753 100.428 157.649 101.323 157.649 102.426 cv
157.489 102.684 mo
157.489 103.786 156.593 104.683 155.49 104.683 cv
154.386 104.683 153.49 103.786 153.49 102.684 cv
153.49 101.578 154.386 100.683 155.49 100.683 cv
156.593 100.683 157.489 101.578 157.489 102.684 cv
157.298 102.874 mo
157.298 103.979 156.401 104.873 155.297 104.873 cv
154.194 104.873 153.298 103.979 153.298 102.874 cv
153.298 101.771 154.194 100.876 155.297 100.876 cv
156.401 100.876 157.298 101.771 157.298 102.874 cv
157.104 102.426 mo
157.104 103.53 156.21 104.427 155.105 104.427 cv
154.002 104.427 153.106 103.53 153.106 102.426 cv
153.106 101.323 154.002 100.428 155.105 100.428 cv
156.21 100.428 157.104 101.323 157.104 102.426 cv
156.913 102.043 mo
156.913 103.146 156.018 104.042 154.913 104.042 cv
153.811 104.042 152.915 103.146 152.915 102.043 cv
152.915 100.939 153.811 100.044 154.913 100.044 cv
156.018 100.044 156.913 100.939 156.913 102.043 cv
156.721 101.691 mo
156.721 102.795 155.825 103.689 154.723 103.689 cv
153.617 103.689 152.724 102.795 152.724 101.691 cv
152.724 100.587 153.617 99.6914 154.723 99.6914 cv
155.825 99.6914 156.721 100.587 156.721 101.691 cv
156.529 101.627 mo
156.529 102.729 155.634 103.626 154.53 103.626 cv
153.427 103.626 152.53 102.729 152.53 101.627 cv
152.53 100.523 153.427 99.6279 154.53 99.6279 cv
155.634 99.6279 156.529 100.523 156.529 101.627 cv
156.338 101.595 mo
156.338 102.699 155.441 103.595 154.338 103.595 cv
153.234 103.595 152.339 102.699 152.339 101.595 cv
152.339 100.491 153.234 99.5957 154.338 99.5957 cv
155.441 99.5957 156.338 100.491 156.338 101.595 cv
156.145 101.691 mo
156.145 102.795 155.25 103.689 154.146 103.689 cv
153.043 103.689 152.146 102.795 152.146 101.691 cv
152.146 100.587 153.043 99.6914 154.146 99.6914 cv
155.25 99.6914 156.145 100.587 156.145 101.691 cv
155.953 101.755 mo
155.953 102.858 155.058 103.754 153.954 103.754 cv
152.851 103.754 151.955 102.858 151.955 101.755 cv
151.955 100.651 152.851 99.7559 153.954 99.7559 cv
155.058 99.7559 155.953 100.651 155.953 101.755 cv
155.761 101.339 mo
155.761 102.443 154.866 103.339 153.762 103.339 cv
152.658 103.339 151.764 102.443 151.764 101.339 cv
151.764 100.235 152.658 99.3398 153.762 99.3398 cv
154.866 99.3398 155.761 100.235 155.761 101.339 cv
155.569 101.818 mo
155.569 102.923 154.674 103.819 153.571 103.819 cv
152.467 103.819 151.57 102.923 151.57 101.818 cv
151.57 100.716 152.467 99.8193 153.571 99.8193 cv
154.674 99.8193 155.569 100.716 155.569 101.818 cv
155.346 101.723 mo
155.346 102.827 154.449 103.722 153.347 103.722 cv
152.243 103.722 151.348 102.827 151.348 101.723 cv
151.348 100.619 152.243 99.7236 153.347 99.7236 cv
154.449 99.7236 155.346 100.619 155.346 101.723 cv
155.121 101.18 mo
155.121 102.282 154.227 103.178 153.122 103.178 cv
152.019 103.178 151.124 102.282 151.124 101.18 cv
151.124 100.075 152.019 99.1797 153.122 99.1797 cv
154.227 99.1797 155.121 100.075 155.121 101.18 cv
154.93 101.02 mo
154.93 102.122 154.034 103.019 152.93 103.019 cv
151.827 103.019 150.932 102.122 150.932 101.02 cv
150.932 99.915 151.827 99.0205 152.93 99.0205 cv
154.034 99.0205 154.93 99.915 154.93 101.02 cv
154.737 100.348 mo
154.737 101.451 153.842 102.347 152.739 102.347 cv
151.635 102.347 150.74 101.451 150.74 100.348 cv
150.74 99.2441 151.635 98.3486 152.739 98.3486 cv
153.842 98.3486 154.737 99.2441 154.737 100.348 cv
154.514 100.442 mo
154.514 101.547 153.617 102.443 152.515 102.443 cv
151.411 102.443 150.516 101.547 150.516 100.442 cv
150.516 99.3398 151.411 98.4443 152.515 98.4443 cv
153.617 98.4443 154.514 99.3398 154.514 100.442 cv
154.322 100.636 mo
154.322 101.739 153.427 102.635 152.322 102.635 cv
151.22 102.635 150.324 101.739 150.324 100.636 cv
150.324 99.5313 151.22 98.6357 152.322 98.6357 cv
153.427 98.6357 154.322 99.5313 154.322 100.636 cv
154.098 100.379 mo
154.098 101.483 153.203 102.379 152.099 102.379 cv
150.995 102.379 150.1 101.483 150.1 100.379 cv
150.1 99.2754 150.995 98.3799 152.099 98.3799 cv
153.203 98.3799 154.098 99.2754 154.098 100.379 cv
153.875 100.315 mo
153.875 101.419 152.979 102.315 151.874 102.315 cv
150.771 102.315 149.875 101.419 149.875 100.315 cv
149.875 99.2119 150.771 98.3154 151.874 98.3154 cv
152.979 98.3154 153.875 99.2119 153.875 100.315 cv
153.65 99.7715 mo
153.65 100.876 152.755 101.771 151.651 101.771 cv
150.547 101.771 149.651 100.876 149.651 99.7715 cv
149.651 98.668 150.547 97.7725 151.651 97.7725 cv
152.755 97.7725 153.65 98.668 153.65 99.7715 cv
153.458 99.9951 mo
153.458 101.099 152.563 101.995 151.46 101.995 cv
150.355 101.995 149.46 101.099 149.46 99.9951 cv
149.46 98.8926 150.355 97.9961 151.46 97.9961 cv
152.563 97.9961 153.458 98.8926 153.458 99.9951 cv
153.234 99.9951 mo
153.234 101.099 152.339 101.995 151.235 101.995 cv
150.132 101.995 149.236 101.099 149.236 99.9951 cv
149.236 98.8926 150.132 97.9961 151.235 97.9961 cv
152.339 97.9961 153.234 98.8926 153.234 99.9951 cv
153.01 100.027 mo
153.01 101.131 152.115 102.027 151.011 102.027 cv
149.908 102.027 149.013 101.131 149.013 100.027 cv
149.013 98.9238 149.908 98.0283 151.011 98.0283 cv
152.115 98.0283 153.01 98.9238 153.01 100.027 cv
152.786 100.092 mo
152.786 101.195 151.892 102.091 150.787 102.091 cv
149.684 102.091 148.788 101.195 148.788 100.092 cv
148.788 98.9873 149.684 98.0918 150.787 98.0918 cv
151.892 98.0918 152.786 98.9873 152.786 100.092 cv
152.53 98.8115 mo
152.53 99.915 151.635 100.812 150.531 100.812 cv
149.428 100.812 148.532 99.915 148.532 98.8115 cv
148.532 97.708 149.428 96.8135 150.531 96.8135 cv
151.635 96.8135 152.53 97.708 152.53 98.8115 cv
152.307 98.4287 mo
152.307 99.5313 151.411 100.428 150.308 100.428 cv
149.203 100.428 148.309 99.5313 148.309 98.4287 cv
148.309 97.3232 149.203 96.4297 150.308 96.4297 cv
151.411 96.4297 152.307 97.3232 152.307 98.4287 cv
152.083 98.6201 mo
152.083 99.7236 151.187 100.619 150.084 100.619 cv
148.979 100.619 148.084 99.7236 148.084 98.6201 cv
148.084 97.5166 148.979 96.6211 150.084 96.6211 cv
151.187 96.6211 152.083 97.5166 152.083 98.6201 cv
151.858 98.4922 mo
151.858 99.5957 150.963 100.491 149.859 100.491 cv
148.756 100.491 147.861 99.5957 147.861 98.4922 cv
147.861 97.3887 148.756 96.4932 149.859 96.4932 cv
150.963 96.4932 151.858 97.3887 151.858 98.4922 cv
151.604 98.6201 mo
151.604 99.7236 150.707 100.619 149.604 100.619 cv
148.5 100.619 147.604 99.7236 147.604 98.6201 cv
147.604 97.5166 148.5 96.6211 149.604 96.6211 cv
150.707 96.6211 151.604 97.5166 151.604 98.6201 cv
151.379 98.3643 mo
151.379 99.4678 150.483 100.363 149.38 100.363 cv
148.276 100.363 147.381 99.4678 147.381 98.3643 cv
147.381 97.2607 148.276 96.3652 149.38 96.3652 cv
150.483 96.3652 151.379 97.2607 151.379 98.3643 cv
151.124 98.1406 mo
151.124 99.2441 150.228 100.139 149.124 100.139 cv
148.021 100.139 147.124 99.2441 147.124 98.1406 cv
147.124 97.0371 148.021 96.1416 149.124 96.1416 cv
150.228 96.1416 151.124 97.0371 151.124 98.1406 cv
150.899 97.6924 mo
150.899 98.7969 150.003 99.6914 148.899 99.6914 cv
147.797 99.6914 146.9 98.7969 146.9 97.6924 cv
146.9 96.5889 147.797 95.6924 148.899 95.6924 cv
150.003 95.6924 150.899 96.5889 150.899 97.6924 cv
150.643 97.916 mo
150.643 99.0205 149.748 99.915 148.645 99.915 cv
147.54 99.915 146.645 99.0205 146.645 97.916 cv
146.645 96.8135 147.54 95.917 148.645 95.917 cv
149.748 95.917 150.643 96.8135 150.643 97.916 cv
150.388 97.5654 mo
150.388 98.668 149.492 99.5645 148.388 99.5645 cv
147.284 99.5645 146.389 98.668 146.389 97.5654 cv
146.389 96.4609 147.284 95.5645 148.388 95.5645 cv
149.492 95.5645 150.388 96.4609 150.388 97.5654 cv
150.132 97.2773 mo
150.132 98.3799 149.236 99.2754 148.132 99.2754 cv
147.029 99.2754 146.133 98.3799 146.133 97.2773 cv
146.133 96.1719 147.029 95.2773 148.132 95.2773 cv
149.236 95.2773 150.132 96.1719 150.132 97.2773 cv
149.875 97.6924 mo
149.875 98.7969 148.979 99.6914 147.876 99.6914 cv
146.772 99.6914 145.878 98.7969 145.878 97.6924 cv
145.878 96.5889 146.772 95.6924 147.876 95.6924 cv
148.979 95.6924 149.875 96.5889 149.875 97.6924 cv
149.62 97.7568 mo
149.62 98.8604 148.724 99.7559 147.621 99.7559 cv
146.517 99.7559 145.62 98.8604 145.62 97.7568 cv
145.62 96.6533 146.517 95.7568 147.621 95.7568 cv
148.724 95.7568 149.62 96.6533 149.62 97.7568 cv
149.363 97.1172 mo
149.363 98.2197 148.469 99.1152 147.364 99.1152 cv
146.261 99.1152 145.365 98.2197 145.365 97.1172 cv
145.365 96.0127 146.261 95.1172 147.364 95.1172 cv
148.469 95.1172 149.363 96.0127 149.363 97.1172 cv
149.107 96.4766 mo
149.107 97.5811 148.212 98.4766 147.108 98.4766 cv
146.005 98.4766 145.109 97.5811 145.109 96.4766 cv
145.109 95.373 146.005 94.4775 147.108 94.4775 cv
148.212 94.4775 149.107 95.373 149.107 96.4766 cv
148.852 96.7002 mo
148.852 97.8037 147.956 98.6992 146.854 98.6992 cv
145.75 98.6992 144.854 97.8037 144.854 96.7002 cv
144.854 95.5977 145.75 94.7012 146.854 94.7012 cv
147.956 94.7012 148.852 95.5977 148.852 96.7002 cv
148.563 96.8291 mo
148.563 97.9326 147.668 98.8281 146.564 98.8281 cv
145.461 98.8281 144.566 97.9326 144.566 96.8291 cv
144.566 95.7246 145.461 94.8301 146.564 94.8301 cv
147.668 94.8301 148.563 95.7246 148.563 96.8291 cv
148.309 96.6689 mo
148.309 97.7725 147.412 98.668 146.309 98.668 cv
145.205 98.668 144.31 97.7725 144.31 96.6689 cv
144.31 95.5645 145.205 94.6699 146.309 94.6699 cv
147.412 94.6699 148.309 95.5645 148.309 96.6689 cv
148.021 96.0928 mo
148.021 97.1963 147.124 98.0918 146.021 98.0918 cv
144.918 98.0918 144.021 97.1963 144.021 96.0928 cv
144.021 94.9902 144.918 94.0938 146.021 94.0938 cv
147.124 94.0938 148.021 94.9902 148.021 96.0928 cv
147.765 96.0928 mo
147.765 97.1963 146.869 98.0918 145.765 98.0918 cv
144.661 98.0918 143.767 97.1963 143.767 96.0928 cv
143.767 94.9902 144.661 94.0938 145.765 94.0938 cv
146.869 94.0938 147.765 94.9902 147.765 96.0928 cv
147.477 95.9658 mo
147.477 97.0684 146.581 97.9648 145.478 97.9648 cv
144.374 97.9648 143.478 97.0684 143.478 95.9658 cv
143.478 94.8613 144.374 93.9658 145.478 93.9658 cv
146.581 93.9658 147.477 94.8613 147.477 95.9658 cv
147.188 95.709 mo
147.188 96.8135 146.293 97.708 145.189 97.708 cv
144.086 97.708 143.19 96.8135 143.19 95.709 cv
143.19 94.6055 144.086 93.71 145.189 93.71 cv
146.293 93.71 147.188 94.6055 147.188 95.709 cv
146.9 95.6455 mo
146.9 96.749 146.005 97.6445 144.901 97.6445 cv
143.798 97.6445 142.902 96.749 142.902 95.6455 cv
142.902 94.542 143.798 93.6455 144.901 93.6455 cv
146.005 93.6455 146.9 94.542 146.9 95.6455 cv
146.612 95.4209 mo
146.612 96.5244 145.718 97.4209 144.614 97.4209 cv
143.51 97.4209 142.614 96.5244 142.614 95.4209 cv
142.614 94.3174 143.51 93.4219 144.614 93.4219 cv
145.718 93.4219 146.612 94.3174 146.612 95.4209 cv
146.325 95.1338 mo
146.325 96.2363 145.429 97.1328 144.325 97.1328 cv
143.222 97.1328 142.327 96.2363 142.327 95.1338 cv
142.327 94.0303 143.222 93.1338 144.325 93.1338 cv
145.429 93.1338 146.325 94.0303 146.325 95.1338 cv
146.037 95.0693 mo
146.037 96.1719 145.141 97.0684 144.038 97.0684 cv
142.935 97.0684 142.038 96.1719 142.038 95.0693 cv
142.038 93.9658 142.935 93.0703 144.038 93.0703 cv
145.141 93.0703 146.037 93.9658 146.037 95.0693 cv
145.718 94.7813 mo
145.718 95.8857 144.821 96.7803 143.718 96.7803 cv
142.614 96.7803 141.718 95.8857 141.718 94.7813 cv
141.718 93.6787 142.614 92.7822 143.718 92.7822 cv
144.821 92.7822 145.718 93.6787 145.718 94.7813 cv
145.397 94.2695 mo
145.397 95.373 144.502 96.2695 143.397 96.2695 cv
142.295 96.2695 141.398 95.373 141.398 94.2695 cv
141.398 93.166 142.295 92.2695 143.397 92.2695 cv
144.502 92.2695 145.397 93.166 145.397 94.2695 cv
145.077 93.79 mo
145.077 94.8936 144.181 95.7891 143.078 95.7891 cv
141.976 95.7891 141.079 94.8936 141.079 93.79 cv
141.079 92.6865 141.976 91.79 143.078 91.79 cv
144.181 91.79 145.077 92.6865 145.077 93.79 cv
144.789 93.7578 mo
144.789 94.8613 143.895 95.7568 142.789 95.7568 cv
141.687 95.7568 140.791 94.8613 140.791 93.7578 cv
140.791 92.6543 141.687 91.7578 142.789 91.7578 cv
143.895 91.7578 144.789 92.6543 144.789 93.7578 cv
144.469 94.0449 mo
144.469 95.1494 143.573 96.0449 142.471 96.0449 cv
141.367 96.0449 140.472 95.1494 140.472 94.0449 cv
140.472 92.9424 141.367 92.0469 142.471 92.0469 cv
143.573 92.0469 144.469 92.9424 144.469 94.0449 cv
144.149 93.9492 mo
144.149 95.0537 143.254 95.9492 142.151 95.9492 cv
141.046 95.9492 140.151 95.0537 140.151 93.9492 cv
140.151 92.8467 141.046 91.9502 142.151 91.9502 cv
143.254 91.9502 144.149 92.8467 144.149 93.9492 cv
143.83 93.1826 mo
143.83 94.2861 142.935 95.1807 141.83 95.1807 cv
140.727 95.1807 139.831 94.2861 139.831 93.1826 cv
139.831 92.0791 140.727 91.1826 141.83 91.1826 cv
142.935 91.1826 143.83 92.0791 143.83 93.1826 cv
143.478 92.7031 mo
143.478 93.8057 142.583 94.7012 141.479 94.7012 cv
140.375 94.7012 139.479 93.8057 139.479 92.7031 cv
139.479 91.5986 140.375 90.7031 141.479 90.7031 cv
142.583 90.7031 143.478 91.5986 143.478 92.7031 cv
143.157 92.6064 mo
143.157 93.71 142.262 94.6055 141.159 94.6055 cv
140.055 94.6055 139.16 93.71 139.16 92.6064 cv
139.16 91.5029 140.055 90.6064 141.159 90.6064 cv
142.262 90.6064 143.157 91.5029 143.157 92.6064 cv
142.807 91.6465 mo
142.807 92.749 141.911 93.6455 140.807 93.6455 cv
139.703 93.6455 138.808 92.749 138.808 91.6465 cv
138.808 90.543 139.703 89.6475 140.807 89.6475 cv
141.911 89.6475 142.807 90.543 142.807 91.6465 cv
142.455 91.9346 mo
142.455 93.0381 141.559 93.9336 140.455 93.9336 cv
139.352 93.9336 138.455 93.0381 138.455 91.9346 cv
138.455 90.8301 139.352 89.9355 140.455 89.9355 cv
141.559 89.9355 142.455 90.8301 142.455 91.9346 cv
142.103 91.6465 mo
142.103 92.749 141.207 93.6455 140.104 93.6455 cv
138.999 93.6455 138.104 92.749 138.104 91.6465 cv
138.104 90.543 138.999 89.6475 140.104 89.6475 cv
141.207 89.6475 142.103 90.543 142.103 91.6465 cv
141.751 90.623 mo
141.751 91.7266 140.854 92.6221 139.751 92.6221 cv
138.647 92.6221 137.752 91.7266 137.752 90.623 cv
137.752 89.5195 138.647 88.624 139.751 88.624 cv
140.854 88.624 141.751 89.5195 141.751 90.623 cv
141.398 90.9434 mo
141.398 92.0469 140.502 92.9424 139.399 92.9424 cv
138.295 92.9424 137.401 92.0469 137.401 90.9434 cv
137.401 89.8389 138.295 88.9434 139.399 88.9434 cv
140.502 88.9434 141.398 89.8389 141.398 90.9434 cv
141.016 90.8467 mo
141.016 91.9502 140.119 92.8467 139.016 92.8467 cv
137.911 92.8467 137.016 91.9502 137.016 90.8467 cv
137.016 89.7432 137.911 88.8467 139.016 88.8467 cv
140.119 88.8467 141.016 89.7432 141.016 90.8467 cv
140.663 90.4951 mo
140.663 91.5986 139.768 92.4941 138.664 92.4941 cv
137.561 92.4941 136.664 91.5986 136.664 90.4951 cv
136.664 89.3906 137.561 88.4961 138.664 88.4961 cv
139.768 88.4961 140.663 89.3906 140.663 90.4951 cv
140.278 90.1426 mo
140.278 91.2471 139.385 92.1416 138.279 92.1416 cv
137.177 92.1416 136.28 91.2471 136.28 90.1426 cv
136.28 89.04 137.177 88.1445 138.279 88.1445 cv
139.385 88.1445 140.278 89.04 140.278 90.1426 cv
139.895 89.9824 mo
139.895 91.0879 138.999 91.9824 137.896 91.9824 cv
136.792 91.9824 135.897 91.0879 135.897 89.9824 cv
135.897 88.8799 136.792 87.9844 137.896 87.9844 cv
138.999 87.9844 139.895 88.8799 139.895 89.9824 cv
139.512 90.5264 mo
139.512 91.6309 138.616 92.5264 137.512 92.5264 cv
136.408 92.5264 135.513 91.6309 135.513 90.5264 cv
135.513 89.4238 136.408 88.5273 137.512 88.5273 cv
138.616 88.5273 139.512 89.4238 139.512 90.5264 cv
139.127 90.1426 mo
139.127 91.2471 138.231 92.1416 137.128 92.1416 cv
136.025 92.1416 135.13 91.2471 135.13 90.1426 cv
135.13 89.04 136.025 88.1445 137.128 88.1445 cv
138.231 88.1445 139.127 89.04 139.127 90.1426 cv
138.712 90.207 mo
138.712 91.3105 137.815 92.2061 136.712 92.2061 cv
135.609 92.2061 134.713 91.3105 134.713 90.207 cv
134.713 89.1045 135.609 88.208 136.712 88.208 cv
137.815 88.208 138.712 89.1045 138.712 90.207 cv
138.295 91.2305 mo
138.295 92.334 137.401 93.2305 136.296 93.2305 cv
135.193 93.2305 134.298 92.334 134.298 91.2305 cv
134.298 90.127 135.193 89.2314 136.296 89.2314 cv
137.401 89.2314 138.295 90.127 138.295 91.2305 cv
137.881 89.7598 mo
137.881 90.8633 136.984 91.7578 135.881 91.7578 cv
134.777 91.7578 133.881 90.8633 133.881 89.7598 cv
133.881 88.6563 134.777 87.7598 135.881 87.7598 cv
136.984 87.7598 137.881 88.6563 137.881 89.7598 cv
137.464 88.6719 mo
137.464 89.7744 136.569 90.6709 135.465 90.6709 cv
134.361 90.6709 133.466 89.7744 133.466 88.6719 cv
133.466 87.5674 134.361 86.6729 135.465 86.6729 cv
136.569 86.6729 137.464 87.5674 137.464 88.6719 cv
137.016 87.6475 mo
137.016 88.752 136.12 89.6475 135.017 89.6475 cv
133.914 89.6475 133.019 88.752 133.019 87.6475 cv
133.019 86.5439 133.914 85.6484 135.017 85.6484 cv
136.12 85.6484 137.016 86.5439 137.016 87.6475 cv
136.569 86.3369 mo
136.569 87.4404 135.673 88.3359 134.568 88.3359 cv
133.466 88.3359 132.569 87.4404 132.569 86.3369 cv
132.569 85.2334 133.466 84.3369 134.568 84.3369 cv
135.673 84.3369 136.569 85.2334 136.569 86.3369 cv
136.152 86.3369 mo
136.152 87.4404 135.257 88.3359 134.154 88.3359 cv
133.049 88.3359 132.154 87.4404 132.154 86.3369 cv
132.154 85.2334 133.049 84.3369 134.154 84.3369 cv
135.257 84.3369 136.152 85.2334 136.152 86.3369 cv
135.673 86.0488 mo
135.673 87.1523 134.777 88.0479 133.675 88.0479 cv
132.569 88.0479 131.674 87.1523 131.674 86.0488 cv
131.674 84.9453 132.569 84.0498 133.675 84.0498 cv
134.777 84.0498 135.673 84.9453 135.673 86.0488 cv
135.193 84.5459 mo
135.193 85.6484 134.298 86.5439 133.193 86.5439 cv
132.09 86.5439 131.194 85.6484 131.194 84.5459 cv
131.194 83.4404 132.09 82.5469 133.193 82.5469 cv
134.298 82.5469 135.193 83.4404 135.193 84.5459 cv
134.745 84.3535 mo
134.745 85.457 133.849 86.3525 132.745 86.3525 cv
131.643 86.3525 130.746 85.457 130.746 84.3535 cv
130.746 83.25 131.643 82.3535 132.745 82.3535 cv
133.849 82.3535 134.745 83.25 134.745 84.3535 cv
134.265 85.0566 mo
134.265 86.1611 133.37 87.0566 132.266 87.0566 cv
131.163 87.0566 130.267 86.1611 130.267 85.0566 cv
130.267 83.9531 131.163 83.0576 132.266 83.0576 cv
133.37 83.0576 134.265 83.9531 134.265 85.0566 cv
133.754 84.6406 mo
133.754 85.7451 132.857 86.6406 131.754 86.6406 cv
130.65 86.6406 129.754 85.7451 129.754 84.6406 cv
129.754 83.5381 130.65 82.6416 131.754 82.6416 cv
132.857 82.6416 133.754 83.5381 133.754 84.6406 cv
133.241 84.1611 mo
133.241 85.2646 132.346 86.1611 131.242 86.1611 cv
130.139 86.1611 129.243 85.2646 129.243 84.1611 cv
129.243 83.0576 130.139 82.1621 131.242 82.1621 cv
132.346 82.1621 133.241 83.0576 133.241 84.1611 cv
132.729 83.2021 mo
132.729 84.3057 131.834 85.2012 130.731 85.2012 cv
129.627 85.2012 128.731 84.3057 128.731 83.2021 cv
128.731 82.0986 129.627 81.2021 130.731 81.2021 cv
131.834 81.2021 132.729 82.0986 132.729 83.2021 cv
132.218 82.1455 mo
132.218 83.25 131.322 84.1455 130.219 84.1455 cv
129.115 84.1455 128.22 83.25 128.22 82.1455 cv
128.22 81.043 129.115 80.1465 130.219 80.1465 cv
131.322 80.1465 132.218 81.043 132.218 82.1455 cv
131.674 81.8262 mo
131.674 82.9297 130.778 83.8252 129.675 83.8252 cv
128.572 83.8252 127.676 82.9297 127.676 81.8262 cv
127.676 80.7222 128.572 79.8271 129.675 79.8271 cv
130.778 79.8271 131.674 80.7222 131.674 81.8262 cv
131.13 81.6025 mo
131.13 82.7061 130.234 83.6016 129.131 83.6016 cv
128.028 83.6016 127.133 82.7061 127.133 81.6025 cv
127.133 80.4985 128.028 79.603 129.131 79.603 cv
130.234 79.603 131.13 80.4985 131.13 81.6025 cv
130.556 81.666 mo
130.556 82.7695 129.659 83.665 128.555 83.665 cv
127.451 83.665 126.556 82.7695 126.556 81.666 cv
126.556 80.5625 127.451 79.6665 128.555 79.6665 cv
129.659 79.6665 130.556 80.5625 130.556 81.666 cv
129.979 81.4111 mo
129.979 82.5137 129.082 83.4092 127.979 83.4092 cv
126.875 83.4092 125.981 82.5137 125.981 81.4111 cv
125.981 80.3066 126.875 79.4111 127.979 79.4111 cv
129.082 79.4111 129.979 80.3066 129.979 81.4111 cv
129.371 80.6748 mo
129.371 81.7773 128.475 82.6738 127.372 82.6738 cv
126.268 82.6738 125.372 81.7773 125.372 80.6748 cv
125.372 79.5708 126.268 78.6748 127.372 78.6748 cv
128.475 78.6748 129.371 79.5708 129.371 80.6748 cv
128.795 80.1948 mo
128.795 81.2979 127.899 82.1943 126.795 82.1943 cv
125.692 82.1943 124.797 81.2979 124.797 80.1948 cv
124.797 79.0908 125.692 78.1953 126.795 78.1953 cv
127.899 78.1953 128.795 79.0908 128.795 80.1948 cv
128.155 79.2349 mo
128.155 80.3389 127.26 81.2344 126.155 81.2344 cv
125.053 81.2344 124.157 80.3389 124.157 79.2349 cv
124.157 78.1313 125.053 77.2358 126.155 77.2358 cv
127.26 77.2358 128.155 78.1313 128.155 79.2349 cv
127.516 78.4995 mo
127.516 79.603 126.62 80.4985 125.517 80.4985 cv
124.412 80.4985 123.518 79.603 123.518 78.4995 cv
123.518 77.396 124.412 76.5 125.517 76.5 cv
126.62 76.5 127.516 77.396 127.516 78.4995 cv
126.844 78.0518 mo
126.844 79.1548 125.948 80.0508 124.846 80.0508 cv
123.74 80.0508 122.846 79.1548 122.846 78.0518 cv
122.846 76.9478 123.74 76.0522 124.846 76.0522 cv
125.948 76.0522 126.844 76.9478 126.844 78.0518 cv
126.172 77.0278 mo
126.172 78.1313 125.276 79.0273 124.173 79.0273 cv
123.069 79.0273 122.174 78.1313 122.174 77.0278 cv
122.174 75.9243 123.069 75.0288 124.173 75.0288 cv
125.276 75.0288 126.172 75.9243 126.172 77.0278 cv
125.469 76.3242 mo
125.469 77.4282 124.572 78.3237 123.47 78.3237 cv
122.365 78.3237 121.471 77.4282 121.471 76.3242 cv
121.471 75.2202 122.365 74.3247 123.47 74.3247 cv
124.572 74.3247 125.469 75.2202 125.469 76.3242 cv
124.765 75.1089 mo
124.765 76.2119 123.868 77.1074 122.766 77.1074 cv
121.662 77.1074 120.767 76.2119 120.767 75.1089 cv
120.767 74.0049 121.662 73.1089 122.766 73.1089 cv
123.868 73.1089 124.765 74.0049 124.765 75.1089 cv
124.028 75.0767 mo
124.028 76.1802 123.133 77.0757 122.03 77.0757 cv
120.925 77.0757 120.031 76.1802 120.031 75.0767 cv
120.031 73.9731 120.925 73.0776 122.03 73.0776 cv
123.133 73.0776 124.028 73.9731 124.028 75.0767 cv
123.261 74.7568 mo
123.261 75.8608 122.365 76.7559 121.262 76.7559 cv
120.158 76.7559 119.264 75.8608 119.264 74.7568 cv
119.264 73.6533 120.158 72.7573 121.262 72.7573 cv
122.365 72.7573 123.261 73.6533 123.261 74.7568 cv
122.462 72.5171 mo
122.462 73.6211 121.566 74.5166 120.462 74.5166 cv
119.358 74.5166 118.463 73.6211 118.463 72.5171 cv
118.463 71.4141 119.358 70.5181 120.462 70.5181 cv
121.566 70.5181 122.462 71.4141 122.462 72.5171 cv
121.662 70.7261 mo
121.662 71.8301 120.767 72.7251 119.662 72.7251 cv
118.559 72.7251 117.663 71.8301 117.663 70.7261 cv
117.663 69.6226 118.559 68.7271 119.662 68.7271 cv
120.767 68.7271 121.662 69.6226 121.662 70.7261 cv
120.83 69.8945 mo
120.83 70.998 119.935 71.894 118.831 71.894 cv
117.727 71.894 116.831 70.998 116.831 69.8945 cv
116.831 68.7905 117.727 67.8955 118.831 67.8955 cv
119.935 67.8955 120.83 68.7905 120.83 69.8945 cv
119.935 68.9346 mo
119.935 70.0386 119.039 70.9341 117.936 70.9341 cv
116.831 70.9341 115.936 70.0386 115.936 68.9346 cv
115.936 67.8311 116.831 66.9355 117.936 66.9355 cv
119.039 66.9355 119.935 67.8311 119.935 68.9346 cv
119.071 68.2949 mo
119.071 69.3989 118.175 70.2944 117.071 70.2944 cv
115.968 70.2944 115.072 69.3989 115.072 68.2949 cv
115.072 67.1914 115.968 66.2959 117.071 66.2959 cv
118.175 66.2959 119.071 67.1914 119.071 68.2949 cv
118.111 67.1758 mo
118.111 68.2788 117.216 69.1748 116.111 69.1748 cv
115.009 69.1748 114.112 68.2788 114.112 67.1758 cv
114.112 66.0723 115.009 65.1763 116.111 65.1763 cv
117.216 65.1763 118.111 66.0723 118.111 67.1758 cv
117.119 65.7041 mo
117.119 66.8071 116.224 67.7031 115.12 67.7031 cv
114.017 67.7031 113.121 66.8071 113.121 65.7041 cv
113.121 64.6006 114.017 63.7046 115.12 63.7046 cv
116.224 63.7046 117.119 64.6006 117.119 65.7041 cv
116.096 64.5522 mo
116.096 65.6563 115.199 66.5518 114.097 66.5518 cv
112.992 66.5518 112.098 65.6563 112.098 64.5522 cv
112.098 63.4487 112.992 62.5532 114.097 62.5532 cv
115.199 62.5532 116.096 63.4487 116.096 64.5522 cv
115.039 62.9209 mo
115.039 64.0244 114.145 64.9204 113.041 64.9204 cv
111.938 64.9204 111.042 64.0244 111.042 62.9209 cv
111.042 61.8174 111.938 60.9219 113.041 60.9219 cv
114.145 60.9219 115.039 61.8174 115.039 62.9209 cv
113.921 62.0571 mo
113.921 63.1606 113.025 64.0566 111.922 64.0566 cv
110.817 64.0566 109.922 63.1606 109.922 62.0571 cv
109.922 60.9541 110.817 60.0581 111.922 60.0581 cv
113.025 60.0581 113.921 60.9541 113.921 62.0571 cv
112.737 62.0571 mo
112.737 63.1606 111.841 64.0566 110.738 64.0566 cv
109.635 64.0566 108.738 63.1606 108.738 62.0571 cv
108.738 60.9541 109.635 60.0581 110.738 60.0581 cv
111.841 60.0581 112.737 60.9541 112.737 62.0571 cv
111.521 59.5942 mo
111.521 60.6978 110.626 61.5933 109.522 61.5933 cv
108.419 61.5933 107.523 60.6978 107.523 59.5942 cv
107.523 58.4907 108.419 57.5947 109.522 57.5947 cv
110.626 57.5947 111.521 58.4907 111.521 59.5942 cv
110.242 58.4429 mo
110.242 59.5464 109.347 60.4419 108.243 60.4419 cv
107.139 60.4419 106.244 59.5464 106.244 58.4429 cv
106.244 57.3389 107.139 56.4429 108.243 56.4429 cv
109.347 56.4429 110.242 57.3389 110.242 58.4429 cv
108.866 55.7236 mo
108.866 56.8271 107.971 57.7231 106.867 57.7231 cv
105.764 57.7231 104.868 56.8271 104.868 55.7236 cv
104.868 54.6201 105.764 53.7241 106.867 53.7241 cv
107.971 53.7241 108.866 54.6201 108.866 55.7236 cv
107.395 53.6445 mo
107.395 54.748 106.5 55.6436 105.396 55.6436 cv
104.292 55.6436 103.397 54.748 103.397 53.6445 cv
103.397 52.541 104.292 51.645 105.396 51.645 cv
106.5 51.645 107.395 52.541 107.395 53.6445 cv
105.859 51.0532 mo
105.859 52.1572 104.964 53.0527 103.86 53.0527 cv
102.756 53.0527 101.861 52.1572 101.861 51.0532 cv
101.861 49.9497 102.756 49.0542 103.86 49.0542 cv
104.964 49.0542 105.859 49.9497 105.859 51.0532 cv
104.196 47.8867 mo
104.196 48.9902 103.3 49.8857 102.197 49.8857 cv
101.093 49.8857 100.198 48.9902 100.198 47.8867 cv
100.198 46.7832 101.093 45.8867 102.197 45.8867 cv
103.3 45.8867 104.196 46.7832 104.196 47.8867 cv
102.405 43.856 mo
102.405 44.9595 101.509 45.855 100.405 45.855 cv
99.3018 45.855 98.4063 44.9595 98.4063 43.856 cv
98.4063 42.7524 99.3018 41.8564 100.405 41.8564 cv
101.509 41.8564 102.405 42.7524 102.405 43.856 cv
100.518 39.4097 mo
100.518 40.5127 99.6221 41.4092 98.5181 41.4092 cv
97.4146 41.4092 96.519 40.5127 96.519 39.4097 cv
96.519 38.3057 97.4146 37.4102 98.5181 37.4102 cv
99.6221 37.4102 100.518 38.3057 100.518 39.4097 cv
98.4063 33.5239 mo
98.4063 34.6274 97.5107 35.5229 96.4067 35.5229 cv
95.3037 35.5229 94.4077 34.6274 94.4077 33.5239 cv
94.4077 32.4199 95.3037 31.5239 96.4067 31.5239 cv
97.5107 31.5239 98.4063 32.4199 98.4063 33.5239 cv
96.1353 30.2285 mo
96.1353 31.3325 95.2397 32.2285 94.1357 32.2285 cv
93.0322 32.2285 92.1367 31.3325 92.1367 30.2285 cv
92.1367 29.125 93.0322 28.23 94.1357 28.23 cv
95.2397 28.23 96.1353 29.125 96.1353 30.2285 cv
93.6084 28.3413 mo
93.6084 29.4453 92.7129 30.3408 91.6089 30.3408 cv
90.5049 30.3408 89.6094 29.4453 89.6094 28.3413 cv
89.6094 27.2383 90.5049 26.3423 91.6089 26.3423 cv
92.7129 26.3423 93.6084 27.2383 93.6084 28.3413 cv
90.7607 27.4141 mo
90.7607 28.5171 89.8652 29.4131 88.7617 29.4131 cv
87.6582 29.4131 86.7627 28.5171 86.7627 27.4141 cv
86.7627 26.3105 87.6582 25.4146 88.7617 25.4146 cv
89.8652 25.4146 90.7607 26.3105 90.7607 27.4141 cv
87.562 27.4453 mo
87.562 28.5493 86.6665 29.4453 85.563 29.4453 cv
84.459 29.4453 83.5635 28.5493 83.5635 27.4453 cv
83.5635 26.3423 84.459 25.4468 85.563 25.4468 cv
86.6665 25.4468 87.562 26.3423 87.562 27.4453 cv
83.8838 28.7256 mo
83.8838 29.8291 82.9873 30.7246 81.8843 30.7246 cv
80.7808 30.7246 79.8853 29.8291 79.8853 28.7256 cv
79.8853 27.6216 80.7808 26.7266 81.8843 26.7266 cv
82.9873 26.7266 83.8838 27.6216 83.8838 28.7256 cv
79.501 34.4517 mo
79.501 35.5547 78.605 36.4507 77.502 36.4507 cv
76.3979 36.4507 75.5024 35.5547 75.5024 34.4517 cv
75.5024 33.3477 76.3979 32.4521 77.502 32.4521 cv
78.605 32.4521 79.501 33.3477 79.501 34.4517 cv
74.127 40.0171 mo
74.127 41.1211 73.2314 42.0166 72.1274 42.0166 cv
71.0244 42.0166 70.1284 41.1211 70.1284 40.0171 cv
70.1284 38.9136 71.0244 38.0181 72.1274 38.0181 cv
73.2314 38.0181 74.127 38.9136 74.127 40.0171 cv
67.2178 43.248 mo
67.2178 44.3516 66.3223 45.2471 65.2183 45.2471 cv
64.1147 45.2471 63.2192 44.3516 63.2192 43.248 cv
63.2192 42.1445 64.1147 41.249 65.2183 41.249 cv
66.3223 41.249 67.2178 42.1445 67.2178 43.248 cv
57.4932 56.8755 mo
57.4932 57.979 56.5972 58.8745 55.4937 58.8745 cv
54.3906 58.8745 53.4951 57.979 53.4951 56.8755 cv
53.4951 55.7715 54.3906 54.876 55.4937 54.876 cv
56.5972 54.876 57.4932 55.7715 57.4932 56.8755 cv
40.8911 69.127 mo
40.8911 70.2305 39.9956 71.126 38.8916 71.126 cv
37.7881 71.126 36.8926 70.2305 36.8926 69.127 cv
36.8926 68.0234 37.7881 67.1279 38.8916 67.1279 cv
39.9956 67.1279 40.8911 68.0234 40.8911 69.127 cv
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
31.2212 140.82 mo
31.2212 140.82 li
@
182.248 122.932 mo
182.248 124.035 181.352 124.932 180.249 124.932 cv
179.145 124.932 178.249 124.035 178.249 122.932 cv
178.249 121.827 179.145 120.932 180.249 120.932 cv
181.352 120.932 182.248 121.827 182.248 122.932 cv
182.152 122.963 mo
182.152 124.066 181.256 124.962 180.152 124.962 cv
179.05 124.962 178.153 124.066 178.153 122.963 cv
178.153 121.859 179.05 120.965 180.152 120.965 cv
181.256 120.965 182.152 121.859 182.152 122.963 cv
182.088 122.867 mo
182.088 123.971 181.192 124.867 180.089 124.867 cv
178.985 124.867 178.089 123.971 178.089 122.867 cv
178.089 121.764 178.985 120.867 180.089 120.867 cv
181.192 120.867 182.088 121.764 182.088 122.867 cv
182.024 122.771 mo
182.024 123.875 181.128 124.771 180.025 124.771 cv
178.92 124.771 178.025 123.875 178.025 122.771 cv
178.025 121.668 178.92 120.772 180.025 120.772 cv
181.128 120.772 182.024 121.668 182.024 122.771 cv
181.96 122.707 mo
181.96 123.811 181.063 124.707 179.961 124.707 cv
178.856 124.707 177.962 123.811 177.962 122.707 cv
177.962 121.604 178.856 120.708 179.961 120.708 cv
181.063 120.708 181.96 121.604 181.96 122.707 cv
181.896 122.707 mo
181.896 123.811 181 124.707 179.896 124.707 cv
178.793 124.707 177.897 123.811 177.897 122.707 cv
177.897 121.604 178.793 120.708 179.896 120.708 cv
181 120.708 181.896 121.604 181.896 122.707 cv
181.832 122.516 mo
181.832 123.619 180.937 124.515 179.833 124.515 cv
178.729 124.515 177.833 123.619 177.833 122.516 cv
177.833 121.411 178.729 120.516 179.833 120.516 cv
180.937 120.516 181.832 121.411 181.832 122.516 cv
181.769 122.355 mo
181.769 123.458 180.872 124.354 179.769 124.354 cv
178.665 124.354 177.77 123.458 177.77 122.355 cv
177.77 121.252 178.665 120.356 179.769 120.356 cv
180.872 120.356 181.769 121.252 181.769 122.355 cv
181.704 122.228 mo
181.704 123.331 180.809 124.227 179.705 124.227 cv
178.602 124.227 177.705 123.331 177.705 122.228 cv
177.705 121.125 178.602 120.229 179.705 120.229 cv
180.809 120.229 181.704 121.125 181.704 122.228 cv
181.641 122.259 mo
181.641 123.363 180.744 124.259 179.641 124.259 cv
178.537 124.259 177.641 123.363 177.641 122.259 cv
177.641 121.156 178.537 120.26 179.641 120.26 cv
180.744 120.26 181.641 121.156 181.641 122.259 cv
181.576 122.292 mo
181.576 123.395 180.681 124.29 179.576 124.29 cv
178.473 124.29 177.578 123.395 177.578 122.292 cv
177.578 121.188 178.473 120.293 179.576 120.293 cv
180.681 120.293 181.576 121.188 181.576 122.292 cv
181.513 122.036 mo
181.513 123.139 180.616 124.035 179.513 124.035 cv
178.409 124.035 177.514 123.139 177.514 122.036 cv
177.514 120.932 178.409 120.035 179.513 120.035 cv
180.616 120.035 181.513 120.932 181.513 122.036 cv
181.448 122.259 mo
181.448 123.363 180.553 124.259 179.448 124.259 cv
178.346 124.259 177.449 123.363 177.449 122.259 cv
177.449 121.156 178.346 120.26 179.448 120.26 cv
180.553 120.26 181.448 121.156 181.448 122.259 cv
181.352 122.036 mo
181.352 123.139 180.456 124.035 179.354 124.035 cv
178.249 124.035 177.354 123.139 177.354 122.036 cv
177.354 120.932 178.249 120.035 179.354 120.035 cv
180.456 120.035 181.352 120.932 181.352 122.036 cv
181.288 121.779 mo
181.288 122.884 180.393 123.778 179.289 123.778 cv
178.186 123.778 177.289 122.884 177.289 121.779 cv
177.289 120.677 178.186 119.78 179.289 119.78 cv
180.393 119.78 181.288 120.677 181.288 121.779 cv
181.224 122.067 mo
181.224 123.171 180.329 124.066 179.226 124.066 cv
178.121 124.066 177.226 123.171 177.226 122.067 cv
177.226 120.965 178.121 120.068 179.226 120.068 cv
180.329 120.068 181.224 120.965 181.224 122.067 cv
181.161 121.939 mo
181.161 123.043 180.265 123.938 179.16 123.938 cv
178.058 123.938 177.161 123.043 177.161 121.939 cv
177.161 120.836 178.058 119.94 179.16 119.94 cv
180.265 119.94 181.161 120.836 181.161 121.939 cv
181.063 121.556 mo
181.063 122.659 180.169 123.556 179.064 123.556 cv
177.962 123.556 177.066 122.659 177.066 121.556 cv
177.066 120.452 177.962 119.556 179.064 119.556 cv
180.169 119.556 181.063 120.452 181.063 121.556 cv
181 121.556 mo
181 122.659 180.104 123.556 179.001 123.556 cv
177.897 123.556 177.002 122.659 177.002 121.556 cv
177.002 120.452 177.897 119.556 179.001 119.556 cv
180.104 119.556 181 120.452 181 121.556 cv
180.937 121.813 mo
180.937 122.915 180.041 123.811 178.937 123.811 cv
177.833 123.811 176.938 122.915 176.938 121.813 cv
176.938 120.708 177.833 119.813 178.937 119.813 cv
180.041 119.813 180.937 120.708 180.937 121.813 cv
180.872 121.748 mo
180.872 122.851 179.977 123.747 178.874 123.747 cv
177.77 123.747 176.873 122.851 176.873 121.748 cv
176.873 120.645 177.77 119.749 178.874 119.749 cv
179.977 119.749 180.872 120.645 180.872 121.748 cv
180.809 121.235 mo
180.809 122.34 179.912 123.235 178.81 123.235 cv
177.705 123.235 176.81 122.34 176.81 121.235 cv
176.81 120.133 177.705 119.236 178.81 119.236 cv
179.912 119.236 180.809 120.133 180.809 121.235 cv
180.713 121.235 mo
180.713 122.34 179.816 123.235 178.713 123.235 cv
177.609 123.235 176.714 122.34 176.714 121.235 cv
176.714 120.133 177.609 119.236 178.713 119.236 cv
179.816 119.236 180.713 120.133 180.713 121.235 cv
180.648 121.523 mo
180.648 122.627 179.752 123.522 178.649 123.522 cv
177.546 123.522 176.649 122.627 176.649 121.523 cv
176.649 120.42 177.546 119.525 178.649 119.525 cv
179.752 119.525 180.648 120.42 180.648 121.523 cv
180.584 121.46 mo
180.584 122.563 179.688 123.458 178.585 123.458 cv
177.481 123.458 176.587 122.563 176.587 121.46 cv
176.587 120.356 177.481 119.461 178.585 119.461 cv
179.688 119.461 180.584 120.356 180.584 121.46 cv
180.521 121.46 mo
180.521 122.563 179.624 123.458 178.521 123.458 cv
177.417 123.458 176.522 122.563 176.522 121.46 cv
176.522 120.356 177.417 119.461 178.521 119.461 cv
179.624 119.461 180.521 120.356 180.521 121.46 cv
180.456 121.332 mo
180.456 122.436 179.562 123.331 178.457 123.331 cv
177.354 123.331 176.459 122.436 176.459 121.332 cv
176.459 120.229 177.354 119.333 178.457 119.333 cv
179.562 119.333 180.456 120.229 180.456 121.332 cv
180.36 121.076 mo
180.36 122.18 179.465 123.075 178.361 123.075 cv
177.258 123.075 176.362 122.18 176.362 121.076 cv
176.362 119.972 177.258 119.076 178.361 119.076 cv
179.465 119.076 180.36 119.972 180.36 121.076 cv
180.296 120.916 mo
180.296 122.019 179.4 122.915 178.297 122.915 cv
177.194 122.915 176.298 122.019 176.298 120.916 cv
176.298 119.813 177.194 118.917 178.297 118.917 cv
179.4 118.917 180.296 119.813 180.296 120.916 cv
180.231 120.756 mo
180.231 121.859 179.337 122.756 178.233 122.756 cv
177.13 122.756 176.234 121.859 176.234 120.756 cv
176.234 119.652 177.13 118.757 178.233 118.757 cv
179.337 118.757 180.231 119.652 180.231 120.756 cv
180.169 120.82 mo
180.169 121.924 179.272 122.819 178.169 122.819 cv
177.066 122.819 176.17 121.924 176.17 120.82 cv
176.17 119.716 177.066 118.82 178.169 118.82 cv
179.272 118.82 180.169 119.716 180.169 120.82 cv
180.104 121.012 mo
180.104 122.116 179.209 123.011 178.105 123.011 cv
177.002 123.011 176.106 122.116 176.106 121.012 cv
176.106 119.908 177.002 119.013 178.105 119.013 cv
179.209 119.013 180.104 119.908 180.104 121.012 cv
180.009 120.82 mo
180.009 121.924 179.113 122.819 178.009 122.819 cv
176.906 122.819 176.01 121.924 176.01 120.82 cv
176.01 119.716 176.906 118.82 178.009 118.82 cv
179.113 118.82 180.009 119.716 180.009 120.82 cv
179.945 120.691 mo
179.945 121.795 179.05 122.691 177.945 122.691 cv
176.842 122.691 175.946 121.795 175.946 120.691 cv
175.946 119.589 176.842 118.693 177.945 118.693 cv
179.05 118.693 179.945 119.589 179.945 120.691 cv
179.881 120.691 mo
179.881 121.795 178.985 122.691 177.882 122.691 cv
176.777 122.691 175.882 121.795 175.882 120.691 cv
175.882 119.589 176.777 118.693 177.882 118.693 cv
178.985 118.693 179.881 119.589 179.881 120.691 cv
179.785 120.212 mo
179.785 121.315 178.89 122.212 177.785 122.212 cv
176.682 122.212 175.786 121.315 175.786 120.212 cv
175.786 119.108 176.682 118.213 177.785 118.213 cv
178.89 118.213 179.785 119.108 179.785 120.212 cv
179.721 120.275 mo
179.721 121.38 178.825 122.276 177.722 122.276 cv
176.618 122.276 175.722 121.38 175.722 120.275 cv
175.722 119.173 176.618 118.276 177.722 118.276 cv
178.825 118.276 179.721 119.173 179.721 120.275 cv
179.657 120.82 mo
179.657 121.924 178.761 122.819 177.657 122.819 cv
176.554 122.819 175.658 121.924 175.658 120.82 cv
175.658 119.716 176.554 118.82 177.657 118.82 cv
178.761 118.82 179.657 119.716 179.657 120.82 cv
179.562 120.724 mo
179.562 121.827 178.665 122.724 177.562 122.724 cv
176.459 122.724 175.563 121.827 175.563 120.724 cv
175.563 119.621 176.459 118.725 177.562 118.725 cv
178.665 118.725 179.562 119.621 179.562 120.724 cv
179.497 120.309 mo
179.497 121.411 178.602 122.307 177.498 122.307 cv
176.394 122.307 175.498 121.411 175.498 120.309 cv
175.498 119.204 176.394 118.31 177.498 118.31 cv
178.602 118.31 179.497 119.204 179.497 120.309 cv
179.433 119.989 mo
179.433 121.092 178.537 121.988 177.434 121.988 cv
176.329 121.988 175.434 121.092 175.434 119.989 cv
175.434 118.884 176.329 117.988 177.434 117.988 cv
178.537 117.988 179.433 118.884 179.433 119.989 cv
179.337 120.116 mo
179.337 121.22 178.44 122.116 177.337 122.116 cv
176.234 122.116 175.338 121.22 175.338 120.116 cv
175.338 119.013 176.234 118.116 177.337 118.116 cv
178.44 118.116 179.337 119.013 179.337 120.116 cv
179.272 120.053 mo
179.272 121.156 178.377 122.052 177.274 122.052 cv
176.17 122.052 175.274 121.156 175.274 120.053 cv
175.274 118.948 176.17 118.052 177.274 118.052 cv
178.377 118.052 179.272 118.948 179.272 120.053 cv
179.209 119.765 mo
179.209 120.867 178.313 121.764 177.21 121.764 cv
176.106 121.764 175.211 120.867 175.211 119.765 cv
175.211 118.661 176.106 117.766 177.21 117.766 cv
178.313 117.766 179.209 118.661 179.209 119.765 cv
179.113 119.701 mo
179.113 120.804 178.218 121.699 177.113 121.699 cv
176.01 121.699 175.114 120.804 175.114 119.701 cv
175.114 118.596 176.01 117.702 177.113 117.702 cv
178.218 117.702 179.113 118.596 179.113 119.701 cv
179.05 119.859 mo
179.05 120.965 178.153 121.859 177.05 121.859 cv
175.946 121.859 175.05 120.965 175.05 119.859 cv
175.05 118.757 175.946 117.861 177.05 117.861 cv
178.153 117.861 179.05 118.757 179.05 119.859 cv
178.953 119.508 mo
178.953 120.612 178.058 121.508 176.953 121.508 cv
175.85 121.508 174.954 120.612 174.954 119.508 cv
174.954 118.404 175.85 117.509 176.953 117.509 cv
178.058 117.509 178.953 118.404 178.953 119.508 cv
178.89 119.445 mo
178.89 120.548 177.993 121.444 176.891 121.444 cv
175.786 121.444 174.89 120.548 174.89 119.445 cv
174.89 118.341 175.786 117.444 176.891 117.444 cv
177.993 117.444 178.89 118.341 178.89 119.445 cv
178.825 119.637 mo
178.825 120.74 177.929 121.636 176.826 121.636 cv
175.722 121.636 174.826 120.74 174.826 119.637 cv
174.826 118.533 175.722 117.638 176.826 117.638 cv
177.929 117.638 178.825 118.533 178.825 119.637 cv
178.729 119.572 mo
178.729 120.677 177.833 121.572 176.729 121.572 cv
175.627 121.572 174.73 120.677 174.73 119.572 cv
174.73 118.469 175.627 117.572 176.729 117.572 cv
177.833 117.572 178.729 118.469 178.729 119.572 cv
178.665 119.572 mo
178.665 120.677 177.77 121.572 176.666 121.572 cv
175.563 121.572 174.666 120.677 174.666 119.572 cv
174.666 118.469 175.563 117.572 176.666 117.572 cv
177.77 117.572 178.665 118.469 178.665 119.572 cv
178.602 119.381 mo
178.602 120.484 177.705 121.38 176.603 121.38 cv
175.498 121.38 174.604 120.484 174.604 119.381 cv
174.604 118.276 175.498 117.381 176.603 117.381 cv
177.705 117.381 178.602 118.276 178.602 119.381 cv
178.537 119.285 mo
178.537 120.388 177.641 121.284 176.538 121.284 cv
175.434 121.284 174.539 120.388 174.539 119.285 cv
174.539 118.182 175.434 117.285 176.538 117.285 cv
177.641 117.285 178.537 118.182 178.537 119.285 cv
178.44 119.157 mo
178.44 120.26 177.546 121.156 176.442 121.156 cv
175.338 121.156 174.442 120.26 174.442 119.157 cv
174.442 118.052 175.338 117.158 176.442 117.158 cv
177.546 117.158 178.44 118.052 178.44 119.157 cv
178.377 119.061 mo
178.377 120.164 177.481 121.06 176.378 121.06 cv
175.274 121.06 174.379 120.164 174.379 119.061 cv
174.379 117.957 175.274 117.062 176.378 117.062 cv
177.481 117.062 178.377 117.957 178.377 119.061 cv
178.281 118.805 mo
178.281 119.908 177.386 120.804 176.283 120.804 cv
175.178 120.804 174.282 119.908 174.282 118.805 cv
174.282 117.702 175.178 116.806 176.283 116.806 cv
177.386 116.806 178.281 117.702 178.281 118.805 cv
178.218 118.772 mo
178.218 119.876 177.321 120.772 176.219 120.772 cv
175.114 120.772 174.219 119.876 174.219 118.772 cv
174.219 117.669 175.114 116.773 176.219 116.773 cv
177.321 116.773 178.218 117.669 178.218 118.772 cv
178.121 118.869 mo
178.121 119.972 177.226 120.867 176.122 120.867 cv
175.019 120.867 174.123 119.972 174.123 118.869 cv
174.123 117.766 175.019 116.87 176.122 116.87 cv
177.226 116.87 178.121 117.766 178.121 118.869 cv
178.058 118.645 mo
178.058 119.749 177.161 120.645 176.059 120.645 cv
174.954 120.645 174.059 119.749 174.059 118.645 cv
174.059 117.542 174.954 116.646 176.059 116.646 cv
177.161 116.646 178.058 117.542 178.058 118.645 cv
177.962 118.708 mo
177.962 119.813 177.066 120.708 175.962 120.708 cv
174.858 120.708 173.963 119.813 173.963 118.708 cv
173.963 117.605 174.858 116.71 175.962 116.71 cv
177.066 116.71 177.962 117.605 177.962 118.708 cv
177.865 118.549 mo
177.865 119.652 176.97 120.548 175.866 120.548 cv
174.763 120.548 173.866 119.652 173.866 118.549 cv
173.866 117.444 174.763 116.55 175.866 116.55 cv
176.97 116.55 177.865 117.444 177.865 118.549 cv
177.802 118.325 mo
177.802 119.428 176.906 120.324 175.803 120.324 cv
174.698 120.324 173.803 119.428 173.803 118.325 cv
173.803 117.222 174.698 116.326 175.803 116.326 cv
176.906 116.326 177.802 117.222 177.802 118.325 cv
177.738 118.197 mo
177.738 119.301 176.842 120.196 175.738 120.196 cv
174.635 120.196 173.738 119.301 173.738 118.197 cv
173.738 117.093 174.635 116.198 175.738 116.198 cv
176.842 116.198 177.738 117.093 177.738 118.197 cv
177.641 118.069 mo
177.641 119.173 176.746 120.068 175.642 120.068 cv
174.539 120.068 173.644 119.173 173.644 118.069 cv
173.644 116.965 174.539 116.069 175.642 116.069 cv
176.746 116.069 177.641 116.965 177.641 118.069 cv
177.578 118.197 mo
177.578 119.301 176.682 120.196 175.578 120.196 cv
174.475 120.196 173.579 119.301 173.579 118.197 cv
173.579 117.093 174.475 116.198 175.578 116.198 cv
176.682 116.198 177.578 117.093 177.578 118.197 cv
177.481 118.133 mo
177.481 119.236 176.587 120.133 175.482 120.133 cv
174.379 120.133 173.483 119.236 173.483 118.133 cv
173.483 117.029 174.379 116.133 175.482 116.133 cv
176.587 116.133 177.481 117.029 177.481 118.133 cv
177.417 118.197 mo
177.417 119.301 176.522 120.196 175.418 120.196 cv
174.315 120.196 173.419 119.301 173.419 118.197 cv
173.419 117.093 174.315 116.198 175.418 116.198 cv
176.522 116.198 177.417 117.093 177.417 118.197 cv
177.321 118.197 mo
177.321 119.301 176.426 120.196 175.322 120.196 cv
174.219 120.196 173.323 119.301 173.323 118.197 cv
173.323 117.093 174.219 116.198 175.322 116.198 cv
176.426 116.198 177.321 117.093 177.321 118.197 cv
177.226 117.462 mo
177.226 118.564 176.329 119.461 175.227 119.461 cv
174.123 119.461 173.228 118.564 173.228 117.462 cv
173.228 116.357 174.123 115.461 175.227 115.461 cv
176.329 115.461 177.226 116.357 177.226 117.462 cv
177.161 117.525 mo
177.161 118.629 176.266 119.525 175.162 119.525 cv
174.059 119.525 173.164 118.629 173.164 117.525 cv
173.164 116.422 174.059 115.525 175.162 115.525 cv
176.266 115.525 177.161 116.422 177.161 117.525 cv
177.066 117.748 mo
177.066 118.853 176.17 119.749 175.066 119.749 cv
173.963 119.749 173.066 118.853 173.066 117.748 cv
173.066 116.646 173.963 115.75 175.066 115.75 cv
176.17 115.75 177.066 116.646 177.066 117.748 cv
177.002 117.365 mo
177.002 118.469 176.106 119.364 175.003 119.364 cv
173.898 119.364 173.004 118.469 173.004 117.365 cv
173.004 116.262 173.898 115.366 175.003 115.366 cv
176.106 115.366 177.002 116.262 177.002 117.365 cv
176.938 117.493 mo
176.938 118.596 176.042 119.492 174.938 119.492 cv
173.835 119.492 172.939 118.596 172.939 117.493 cv
172.939 116.391 173.835 115.494 174.938 115.494 cv
176.042 115.494 176.938 116.391 176.938 117.493 cv
176.842 117.941 mo
176.842 119.045 175.946 119.94 174.843 119.94 cv
173.738 119.94 172.843 119.045 172.843 117.941 cv
172.843 116.837 173.738 115.941 174.843 115.941 cv
175.946 115.941 176.842 116.837 176.842 117.941 cv
176.746 117.718 mo
176.746 118.82 175.85 119.716 174.746 119.716 cv
173.644 119.716 172.747 118.82 172.747 117.718 cv
172.747 116.612 173.644 115.719 174.746 115.719 cv
175.85 115.719 176.746 116.612 176.746 117.718 cv
176.649 117.462 mo
176.649 118.564 175.755 119.461 174.65 119.461 cv
173.547 119.461 172.651 118.564 172.651 117.462 cv
172.651 116.357 173.547 115.461 174.65 115.461 cv
175.755 115.461 176.649 116.357 176.649 117.462 cv
176.587 117.397 mo
176.587 118.501 175.69 119.396 174.586 119.396 cv
173.483 119.396 172.587 118.501 172.587 117.397 cv
172.587 116.293 173.483 115.397 174.586 115.397 cv
175.69 115.397 176.587 116.293 176.587 117.397 cv
176.489 117.237 mo
176.489 118.341 175.595 119.236 174.49 119.236 cv
173.387 119.236 172.491 118.341 172.491 117.237 cv
172.491 116.133 173.387 115.238 174.49 115.238 cv
175.595 115.238 176.489 116.133 176.489 117.237 cv
176.426 117.205 mo
176.426 118.31 175.53 119.204 174.427 119.204 cv
173.323 119.204 172.427 118.31 172.427 117.205 cv
172.427 116.103 173.323 115.206 174.427 115.206 cv
175.53 115.206 176.426 116.103 176.426 117.205 cv
176.329 117.269 mo
176.329 118.374 175.434 119.269 174.331 119.269 cv
173.228 119.269 172.332 118.374 172.332 117.269 cv
172.332 116.166 173.228 115.271 174.331 115.271 cv
175.434 115.271 176.329 116.166 176.329 117.269 cv
176.234 117.205 mo
176.234 118.31 175.338 119.204 174.235 119.204 cv
173.131 119.204 172.235 118.31 172.235 117.205 cv
172.235 116.103 173.131 115.206 174.235 115.206 cv
175.338 115.206 176.234 116.103 176.234 117.205 cv
176.17 117.141 mo
176.17 118.245 175.274 119.142 174.171 119.142 cv
173.066 119.142 172.172 118.245 172.172 117.141 cv
172.172 116.038 173.066 115.142 174.171 115.142 cv
175.274 115.142 176.17 116.038 176.17 117.141 cv
176.074 117.205 mo
176.074 118.31 175.178 119.204 174.075 119.204 cv
172.971 119.204 172.075 118.31 172.075 117.205 cv
172.075 116.103 172.971 115.206 174.075 115.206 cv
175.178 115.206 176.074 116.103 176.074 117.205 cv
175.979 117.014 mo
175.979 118.116 175.083 119.013 173.979 119.013 cv
172.875 119.013 171.979 118.116 171.979 117.014 cv
171.979 115.909 172.875 115.014 173.979 115.014 cv
175.083 115.014 175.979 115.909 175.979 117.014 cv
175.914 116.821 mo
175.914 117.925 175.019 118.82 173.915 118.82 cv
172.812 118.82 171.915 117.925 171.915 116.821 cv
171.915 115.719 172.812 114.822 173.915 114.822 cv
175.019 114.822 175.914 115.719 175.914 116.821 cv
175.818 116.726 mo
175.818 117.829 174.923 118.725 173.819 118.725 cv
172.716 118.725 171.819 117.829 171.819 116.726 cv
171.819 115.622 172.716 114.727 173.819 114.727 cv
174.923 114.727 175.818 115.622 175.818 116.726 cv
175.722 116.726 mo
175.722 117.829 174.826 118.725 173.723 118.725 cv
172.62 118.725 171.724 117.829 171.724 116.726 cv
171.724 115.622 172.62 114.727 173.723 114.727 cv
174.826 114.727 175.722 115.622 175.722 116.726 cv
175.627 116.694 mo
175.627 117.797 174.73 118.693 173.627 118.693 cv
172.522 118.693 171.628 117.797 171.628 116.694 cv
171.628 115.59 172.522 114.694 173.627 114.694 cv
174.73 114.694 175.627 115.59 175.627 116.694 cv
175.53 116.726 mo
175.53 117.829 174.635 118.725 173.531 118.725 cv
172.427 118.725 171.532 117.829 171.532 116.726 cv
171.532 115.622 172.427 114.727 173.531 114.727 cv
174.635 114.727 175.53 115.622 175.53 116.726 cv
175.466 116.726 mo
175.466 117.829 174.57 118.725 173.468 118.725 cv
172.363 118.725 171.467 117.829 171.467 116.726 cv
171.467 115.622 172.363 114.727 173.468 114.727 cv
174.57 114.727 175.466 115.622 175.466 116.726 cv
175.37 116.117 mo
175.37 117.222 174.475 118.116 173.371 118.116 cv
172.268 118.116 171.372 117.222 171.372 116.117 cv
171.372 115.014 172.268 114.119 173.371 114.119 cv
174.475 114.119 175.37 115.014 175.37 116.117 cv
175.274 115.829 mo
175.274 116.934 174.379 117.829 173.275 117.829 cv
172.172 117.829 171.275 116.934 171.275 115.829 cv
171.275 114.727 172.172 113.83 173.275 113.83 cv
174.379 113.83 175.274 114.727 175.274 115.829 cv
175.178 116.086 mo
175.178 117.189 174.282 118.085 173.179 118.085 cv
172.075 118.085 171.181 117.189 171.181 116.086 cv
171.181 114.981 172.075 114.086 173.179 114.086 cv
174.282 114.086 175.178 114.981 175.178 116.086 cv
175.114 116.054 mo
175.114 117.158 174.219 118.052 173.115 118.052 cv
172.013 118.052 171.116 117.158 171.116 116.054 cv
171.116 114.95 172.013 114.055 173.115 114.055 cv
174.219 114.055 175.114 114.95 175.114 116.054 cv
175.019 116.214 mo
175.019 117.317 174.123 118.213 173.02 118.213 cv
171.915 118.213 171.021 117.317 171.021 116.214 cv
171.021 115.109 171.915 114.215 173.02 114.215 cv
174.123 114.215 175.019 115.109 175.019 116.214 cv
174.923 116.214 mo
174.923 117.317 174.026 118.213 172.924 118.213 cv
171.819 118.213 170.923 117.317 170.923 116.214 cv
170.923 115.109 171.819 114.215 172.924 114.215 cv
174.026 114.215 174.923 115.109 174.923 116.214 cv
174.826 115.989 mo
174.826 117.093 173.931 117.988 172.827 117.988 cv
171.724 117.988 170.828 117.093 170.828 115.989 cv
170.828 114.887 171.724 113.99 172.827 113.99 cv
173.931 113.99 174.826 114.887 174.826 115.989 cv
174.763 115.926 mo
174.763 117.029 173.866 117.925 172.763 117.925 cv
171.66 117.925 170.764 117.029 170.764 115.926 cv
170.764 114.822 171.66 113.927 172.763 113.927 cv
173.866 113.927 174.763 114.822 174.763 115.926 cv
174.666 115.734 mo
174.666 116.837 173.771 117.733 172.667 117.733 cv
171.563 117.733 170.668 116.837 170.668 115.734 cv
170.668 114.629 171.563 113.735 172.667 113.735 cv
173.771 113.735 174.666 114.629 174.666 115.734 cv
174.57 115.798 mo
174.57 116.901 173.675 117.797 172.571 117.797 cv
171.467 117.797 170.573 116.901 170.573 115.798 cv
170.573 114.694 171.467 113.799 172.571 113.799 cv
173.675 113.799 174.57 114.694 174.57 115.798 cv
174.475 115.574 mo
174.475 116.678 173.579 117.572 172.476 117.572 cv
171.372 117.572 170.476 116.678 170.476 115.574 cv
170.476 114.47 171.372 113.575 172.476 113.575 cv
173.579 113.575 174.475 114.47 174.475 115.574 cv
174.379 115.157 mo
174.379 116.262 173.483 117.158 172.379 117.158 cv
171.275 117.158 170.38 116.262 170.38 115.157 cv
170.38 114.055 171.275 113.159 172.379 113.159 cv
173.483 113.159 174.379 114.055 174.379 115.157 cv
174.315 115.285 mo
174.315 116.391 173.419 117.285 172.316 117.285 cv
171.212 117.285 170.315 116.391 170.315 115.285 cv
170.315 114.183 171.212 113.287 172.316 113.287 cv
173.419 113.287 174.315 114.183 174.315 115.285 cv
174.219 115.285 mo
174.219 116.391 173.323 117.285 172.219 117.285 cv
171.116 117.285 170.221 116.391 170.221 115.285 cv
170.221 114.183 171.116 113.287 172.219 113.287 cv
173.323 113.287 174.219 114.183 174.219 115.285 cv
174.091 115.255 mo
174.091 116.357 173.195 117.253 172.092 117.253 cv
170.987 117.253 170.092 116.357 170.092 115.255 cv
170.092 114.149 170.987 113.255 172.092 113.255 cv
173.195 113.255 174.091 114.149 174.091 115.255 cv
174.026 115.126 mo
174.026 116.229 173.131 117.125 172.028 117.125 cv
170.923 117.125 170.029 116.229 170.029 115.126 cv
170.029 114.021 170.923 113.127 172.028 113.127 cv
173.131 113.127 174.026 114.021 174.026 115.126 cv
173.931 114.646 mo
173.931 115.75 173.035 116.646 171.932 116.646 cv
170.828 116.646 169.932 115.75 169.932 114.646 cv
169.932 113.542 170.828 112.646 171.932 112.646 cv
173.035 112.646 173.931 113.542 173.931 114.646 cv
173.835 114.806 mo
173.835 115.909 172.939 116.806 171.836 116.806 cv
170.732 116.806 169.836 115.909 169.836 114.806 cv
169.836 113.702 170.732 112.807 171.836 112.807 cv
172.939 112.807 173.835 113.702 173.835 114.806 cv
173.738 114.935 mo
173.738 116.038 172.843 116.934 171.739 116.934 cv
170.637 116.934 169.741 116.038 169.741 114.935 cv
169.741 113.83 170.637 112.935 171.739 112.935 cv
172.843 112.935 173.738 113.83 173.738 114.935 cv
173.644 114.998 mo
173.644 116.103 172.747 116.998 171.644 116.998 cv
170.54 116.998 169.645 116.103 169.645 114.998 cv
169.645 113.895 170.54 112.998 171.644 112.998 cv
172.747 112.998 173.644 113.895 173.644 114.998 cv
173.547 114.614 mo
173.547 115.719 172.651 116.612 171.548 116.612 cv
170.443 116.612 169.549 115.719 169.549 114.614 cv
169.549 113.511 170.443 112.615 171.548 112.615 cv
172.651 112.615 173.547 113.511 173.547 114.614 cv
173.45 114.263 mo
173.45 115.366 172.556 116.262 171.451 116.262 cv
170.349 116.262 169.452 115.366 169.452 114.263 cv
169.452 113.159 170.349 112.263 171.451 112.263 cv
172.556 112.263 173.45 113.159 173.45 114.263 cv
173.354 114.774 mo
173.354 115.878 172.459 116.773 171.356 116.773 cv
170.252 116.773 169.356 115.878 169.356 114.774 cv
169.356 113.671 170.252 112.775 171.356 112.775 cv
172.459 112.775 173.354 113.671 173.354 114.774 cv
173.259 114.998 mo
173.259 116.103 172.363 116.998 171.26 116.998 cv
170.156 116.998 169.261 116.103 169.261 114.998 cv
169.261 113.895 170.156 112.998 171.26 112.998 cv
172.363 112.998 173.259 113.895 173.259 114.998 cv
173.164 114.486 mo
173.164 115.59 172.268 116.485 171.163 116.485 cv
170.061 116.485 169.164 115.59 169.164 114.486 cv
169.164 113.383 170.061 112.487 171.163 112.487 cv
172.268 112.487 173.164 113.383 173.164 114.486 cv
173.066 114.23 mo
173.066 115.334 172.172 116.229 171.067 116.229 cv
169.964 116.229 169.069 115.334 169.069 114.23 cv
169.069 113.127 169.964 112.231 171.067 112.231 cv
172.172 112.231 173.066 113.127 173.066 114.23 cv
172.971 114.263 mo
172.971 115.366 172.075 116.262 170.972 116.262 cv
169.868 116.262 168.973 115.366 168.973 114.263 cv
168.973 113.159 169.868 112.263 170.972 112.263 cv
172.075 112.263 172.971 113.159 172.971 114.263 cv
172.875 114.614 mo
172.875 115.719 171.979 116.612 170.877 116.612 cv
169.772 116.612 168.876 115.719 168.876 114.614 cv
168.876 113.511 169.772 112.615 170.877 112.615 cv
171.979 112.615 172.875 113.511 172.875 114.614 cv
172.779 114.71 mo
172.779 115.813 171.884 116.71 170.779 116.71 cv
169.677 116.71 168.78 115.813 168.78 114.71 cv
168.78 113.606 169.677 112.711 170.779 112.711 cv
171.884 112.711 172.779 113.606 172.779 114.71 cv
172.684 113.975 mo
172.684 115.078 171.788 115.974 170.684 115.974 cv
169.58 115.974 168.685 115.078 168.685 113.975 cv
168.685 112.87 169.58 111.976 170.684 111.976 cv
171.788 111.976 172.684 112.87 172.684 113.975 cv
172.556 113.687 mo
172.556 114.79 171.66 115.686 170.556 115.686 cv
169.452 115.686 168.557 114.79 168.557 113.687 cv
168.557 112.583 169.452 111.687 170.556 111.687 cv
171.66 111.687 172.556 112.583 172.556 113.687 cv
172.491 113.815 mo
172.491 114.918 171.596 115.813 170.492 115.813 cv
169.389 115.813 168.492 114.918 168.492 113.815 cv
168.492 112.711 169.389 111.815 170.492 111.815 cv
171.596 111.815 172.491 112.711 172.491 113.815 cv
172.363 114.039 mo
172.363 115.142 171.467 116.038 170.364 116.038 cv
169.261 116.038 168.365 115.142 168.365 114.039 cv
168.365 112.935 169.261 112.038 170.364 112.038 cv
171.467 112.038 172.363 112.935 172.363 114.039 cv
172.268 114.006 mo
172.268 115.109 171.372 116.005 170.268 116.005 cv
169.164 116.005 168.269 115.109 168.269 114.006 cv
168.269 112.903 169.164 112.007 170.268 112.007 cv
171.372 112.007 172.268 112.903 172.268 114.006 cv
172.172 113.91 mo
172.172 115.014 171.275 115.909 170.172 115.909 cv
169.069 115.909 168.173 115.014 168.173 113.91 cv
168.173 112.807 169.069 111.911 170.172 111.911 cv
171.275 111.911 172.172 112.807 172.172 113.91 cv
172.075 113.751 mo
172.075 114.854 171.181 115.75 170.076 115.75 cv
168.973 115.75 168.077 114.854 168.077 113.751 cv
168.077 112.646 168.973 111.752 170.076 111.752 cv
171.181 111.752 172.075 112.646 172.075 113.751 cv
171.979 113.526 mo
171.979 114.629 171.083 115.525 169.98 115.525 cv
168.876 115.525 167.98 114.629 167.98 113.526 cv
167.98 112.423 168.876 111.528 169.98 111.528 cv
171.083 111.528 171.979 112.423 171.979 113.526 cv
171.884 113.238 mo
171.884 114.343 170.987 115.238 169.885 115.238 cv
168.78 115.238 167.885 114.343 167.885 113.238 cv
167.885 112.136 168.78 111.239 169.885 111.239 cv
170.987 111.239 171.884 112.136 171.884 113.238 cv
171.755 112.983 mo
171.755 114.086 170.859 114.981 169.756 114.981 cv
168.653 114.981 167.758 114.086 167.758 112.983 cv
167.758 111.879 168.653 110.984 169.756 110.984 cv
170.859 110.984 171.755 111.879 171.755 112.983 cv
171.66 113.238 mo
171.66 114.343 170.764 115.238 169.66 115.238 cv
168.557 115.238 167.661 114.343 167.661 113.238 cv
167.661 112.136 168.557 111.239 169.66 111.239 cv
170.764 111.239 171.66 112.136 171.66 113.238 cv
171.563 113.463 mo
171.563 114.566 170.668 115.461 169.564 115.461 cv
168.461 115.461 167.565 114.566 167.565 113.463 cv
167.565 112.359 168.461 111.464 169.564 111.464 cv
170.668 111.464 171.563 112.359 171.563 113.463 cv
171.467 113.334 mo
171.467 114.438 170.573 115.334 169.468 115.334 cv
168.365 115.334 167.469 114.438 167.469 113.334 cv
167.469 112.231 168.365 111.336 169.468 111.336 cv
170.573 111.336 171.467 112.231 171.467 113.334 cv
171.34 112.887 mo
171.34 113.99 170.443 114.887 169.341 114.887 cv
168.237 114.887 167.341 113.99 167.341 112.887 cv
167.341 111.783 168.237 110.887 169.341 110.887 cv
170.443 110.887 171.34 111.783 171.34 112.887 cv
171.244 112.535 mo
171.244 113.639 170.349 114.534 169.244 114.534 cv
168.142 114.534 167.245 113.639 167.245 112.535 cv
167.245 111.431 168.142 110.536 169.244 110.536 cv
170.349 110.536 171.244 111.431 171.244 112.535 cv
171.147 112.727 mo
171.147 113.83 170.252 114.727 169.148 114.727 cv
168.046 114.727 167.15 113.83 167.15 112.727 cv
167.15 111.623 168.046 110.728 169.148 110.728 cv
170.252 110.728 171.147 111.623 171.147 112.727 cv
171.053 112.566 mo
171.053 113.671 170.156 114.566 169.053 114.566 cv
167.949 114.566 167.054 113.671 167.054 112.566 cv
167.054 111.464 167.949 110.567 169.053 110.567 cv
170.156 110.567 171.053 111.464 171.053 112.566 cv
170.923 112.694 mo
170.923 113.799 170.029 114.694 168.925 114.694 cv
167.821 114.694 166.926 113.799 166.926 112.694 cv
166.926 111.592 167.821 110.696 168.925 110.696 cv
170.029 110.696 170.923 111.592 170.923 112.694 cv
170.828 113.015 mo
170.828 114.119 169.932 115.014 168.829 115.014 cv
167.725 115.014 166.83 114.119 166.83 113.015 cv
166.83 111.911 167.725 111.016 168.829 111.016 cv
169.932 111.016 170.828 111.911 170.828 113.015 cv
170.732 112.375 mo
170.732 113.479 169.836 114.374 168.733 114.374 cv
167.63 114.374 166.733 113.479 166.733 112.375 cv
166.733 111.271 167.63 110.376 168.733 110.376 cv
169.836 110.376 170.732 111.271 170.732 112.375 cv
170.604 112.279 mo
170.604 113.383 169.708 114.279 168.605 114.279 cv
167.5 114.279 166.606 113.383 166.606 112.279 cv
166.606 111.176 167.5 110.279 168.605 110.279 cv
169.708 110.279 170.604 111.176 170.604 112.279 cv
170.508 112.183 mo
170.508 113.287 169.612 114.183 168.509 114.183 cv
167.405 114.183 166.509 113.287 166.509 112.183 cv
166.509 111.079 167.405 110.184 168.509 110.184 cv
169.612 110.184 170.508 111.079 170.508 112.183 cv
170.38 111.703 mo
170.38 112.807 169.483 113.702 168.381 113.702 cv
167.277 113.702 166.382 112.807 166.382 111.703 cv
166.382 110.6 167.277 109.705 168.381 109.705 cv
169.483 109.705 170.38 110.6 170.38 111.703 cv
170.284 112.023 mo
170.284 113.127 169.389 114.021 168.286 114.021 cv
167.181 114.021 166.285 113.127 166.285 112.023 cv
166.285 110.92 167.181 110.024 168.286 110.024 cv
169.389 110.024 170.284 110.92 170.284 112.023 cv
170.156 112.247 mo
170.156 113.351 169.261 114.246 168.156 114.246 cv
167.054 114.246 166.158 113.351 166.158 112.247 cv
166.158 111.144 167.054 110.248 168.156 110.248 cv
169.261 110.248 170.156 111.144 170.156 112.247 cv
170.061 112.119 mo
170.061 113.223 169.164 114.119 168.062 114.119 cv
166.957 114.119 166.063 113.223 166.063 112.119 cv
166.063 111.016 166.957 110.119 168.062 110.119 cv
169.164 110.119 170.061 111.016 170.061 112.119 cv
169.964 111.799 mo
169.964 112.903 169.069 113.799 167.965 113.799 cv
166.861 113.799 165.966 112.903 165.966 111.799 cv
165.966 110.696 166.861 109.8 167.965 109.8 cv
169.069 109.8 169.964 110.696 169.964 111.799 cv
169.836 111.575 mo
169.836 112.68 168.94 113.575 167.837 113.575 cv
166.733 113.575 165.838 112.68 165.838 111.575 cv
165.838 110.472 166.733 109.575 167.837 109.575 cv
168.94 109.575 169.836 110.472 169.836 111.575 cv
169.741 111.734 mo
169.741 112.839 168.845 113.735 167.741 113.735 cv
166.637 113.735 165.741 112.839 165.741 111.734 cv
165.741 110.632 166.637 109.736 167.741 109.736 cv
168.845 109.736 169.741 110.632 169.741 111.734 cv
169.612 111.734 mo
169.612 112.839 168.717 113.735 167.613 113.735 cv
166.509 113.735 165.614 112.839 165.614 111.734 cv
165.614 110.632 166.509 109.736 167.613 109.736 cv
168.717 109.736 169.612 110.632 169.612 111.734 cv
169.517 111.479 mo
169.517 112.583 168.62 113.479 167.518 113.479 cv
166.413 113.479 165.518 112.583 165.518 111.479 cv
165.518 110.376 166.413 109.48 167.518 109.48 cv
168.62 109.48 169.517 110.376 169.517 111.479 cv
169.389 111.191 mo
169.389 112.296 168.492 113.191 167.39 113.191 cv
166.285 113.191 165.39 112.296 165.39 111.191 cv
165.39 110.088 166.285 109.192 167.39 109.192 cv
168.492 109.192 169.389 110.088 169.389 111.191 cv
169.292 111.224 mo
169.292 112.327 168.396 113.223 167.293 113.223 cv
166.189 113.223 165.294 112.327 165.294 111.224 cv
165.294 110.119 166.189 109.225 167.293 109.225 cv
168.396 109.225 169.292 110.119 169.292 111.224 cv
169.164 111.288 mo
169.164 112.391 168.269 113.287 167.165 113.287 cv
166.063 113.287 165.167 112.391 165.167 111.288 cv
165.167 110.184 166.063 109.288 167.165 109.288 cv
168.269 109.288 169.164 110.184 169.164 111.288 cv
169.069 111.127 mo
169.069 112.231 168.173 113.127 167.069 113.127 cv
165.966 113.127 165.07 112.231 165.07 111.127 cv
165.07 110.024 165.966 109.128 167.069 109.128 cv
168.173 109.128 169.069 110.024 169.069 111.127 cv
168.94 111.319 mo
168.94 112.423 168.046 113.318 166.941 113.318 cv
165.838 113.318 164.942 112.423 164.942 111.319 cv
164.942 110.216 165.838 109.32 166.941 109.32 cv
168.046 109.32 168.94 110.216 168.94 111.319 cv
168.845 110.872 mo
168.845 111.976 167.949 112.87 166.846 112.87 cv
165.741 112.87 164.847 111.976 164.847 110.872 cv
164.847 109.769 165.741 108.873 166.846 108.873 cv
167.949 108.873 168.845 109.769 168.845 110.872 cv
168.717 110.52 mo
168.717 111.623 167.821 112.519 166.717 112.519 cv
165.614 112.519 164.718 111.623 164.718 110.52 cv
164.718 109.416 165.614 108.521 166.717 108.521 cv
167.821 108.521 168.717 109.416 168.717 110.52 cv
168.59 110.775 mo
168.59 111.879 167.693 112.775 166.589 112.775 cv
165.486 112.775 164.59 111.879 164.59 110.775 cv
164.59 109.672 165.486 108.776 166.589 108.776 cv
167.693 108.776 168.59 109.672 168.59 110.775 cv
168.492 110.552 mo
168.492 111.655 167.598 112.551 166.493 112.551 cv
165.39 112.551 164.494 111.655 164.494 110.552 cv
164.494 109.447 165.39 108.553 166.493 108.553 cv
167.598 108.553 168.492 109.447 168.492 110.552 cv
168.365 110.775 mo
168.365 111.879 167.469 112.775 166.366 112.775 cv
165.262 112.775 164.366 111.879 164.366 110.775 cv
164.366 109.672 165.262 108.776 166.366 108.776 cv
167.469 108.776 168.365 109.672 168.365 110.775 cv
168.237 110.711 mo
168.237 111.815 167.341 112.711 166.237 112.711 cv
165.134 112.711 164.238 111.815 164.238 110.711 cv
164.238 109.608 165.134 108.713 166.237 108.713 cv
167.341 108.713 168.237 109.608 168.237 110.711 cv
168.142 110.359 mo
168.142 111.464 167.245 112.359 166.143 112.359 cv
165.037 112.359 164.143 111.464 164.143 110.359 cv
164.143 109.256 165.037 108.36 166.143 108.36 cv
167.245 108.36 168.142 109.256 168.142 110.359 cv
167.98 110.359 mo
167.98 111.464 167.086 112.359 165.981 112.359 cv
164.878 112.359 163.982 111.464 163.982 110.359 cv
163.982 109.256 164.878 108.36 165.981 108.36 cv
167.086 108.36 167.98 109.256 167.98 110.359 cv
167.885 109.976 mo
167.885 111.079 166.989 111.976 165.886 111.976 cv
164.782 111.976 163.887 111.079 163.887 109.976 cv
163.887 108.873 164.782 107.977 165.886 107.977 cv
166.989 107.977 167.885 108.873 167.885 109.976 cv
167.758 110.136 mo
167.758 111.239 166.861 112.136 165.758 112.136 cv
164.654 112.136 163.758 111.239 163.758 110.136 cv
163.758 109.032 164.654 108.136 165.758 108.136 cv
166.861 108.136 167.758 109.032 167.758 110.136 cv
167.63 110.775 mo
167.63 111.879 166.733 112.775 165.63 112.775 cv
164.525 112.775 163.631 111.879 163.631 110.775 cv
163.631 109.672 164.525 108.776 165.63 108.776 cv
166.733 108.776 167.63 109.672 167.63 110.775 cv
167.533 110.488 mo
167.533 111.592 166.637 112.487 165.534 112.487 cv
164.43 112.487 163.534 111.592 163.534 110.488 cv
163.534 109.385 164.43 108.488 165.534 108.488 cv
166.637 108.488 167.533 109.385 167.533 110.488 cv
167.405 110.04 mo
167.405 111.144 166.509 112.038 165.406 112.038 cv
164.302 112.038 163.407 111.144 163.407 110.04 cv
163.407 108.937 164.302 108.041 165.406 108.041 cv
166.509 108.041 167.405 108.937 167.405 110.04 cv
167.245 109.815 mo
167.245 110.92 166.35 111.815 165.246 111.815 cv
164.143 111.815 163.247 110.92 163.247 109.815 cv
163.247 108.713 164.143 107.816 165.246 107.816 cv
166.35 107.816 167.245 108.713 167.245 109.815 cv
167.15 109.688 mo
167.15 110.792 166.254 111.687 165.15 111.687 cv
164.046 111.687 163.15 110.792 163.15 109.688 cv
163.15 108.585 164.046 107.688 165.15 107.688 cv
166.254 107.688 167.15 108.585 167.15 109.688 cv
167.021 109.432 mo
167.021 110.536 166.126 111.431 165.022 111.431 cv
163.918 111.431 163.023 110.536 163.023 109.432 cv
163.023 108.329 163.918 107.433 165.022 107.433 cv
166.126 107.433 167.021 108.329 167.021 109.432 cv
@
0 lj
172.125 118.007 mo
174.125 115.363 li
172.125 112.72 li
170.126 115.363 li
172.125 118.007 li
172.125 118.007 li
cp
172.015 118.118 mo
174.014 115.475 li
172.015 112.831 li
170.015 115.475 li
172.015 118.118 li
172.015 118.118 li
cp
171.881 118.052 mo
173.88 115.407 li
171.881 112.764 li
169.882 115.407 li
171.881 118.052 li
171.881 118.052 li
cp
171.77 117.586 mo
173.77 114.942 li
171.77 112.298 li
169.771 114.942 li
171.77 117.586 li
171.77 117.586 li
cp
171.637 117.363 mo
173.637 114.719 li
171.637 112.075 li
169.637 114.719 li
171.637 117.363 li
171.637 117.363 li
cp
171.525 117.519 mo
173.524 114.875 li
171.525 112.231 li
169.526 114.875 li
171.525 117.519 li
171.525 117.519 li
cp
171.392 117.474 mo
173.391 114.83 li
171.392 112.188 li
169.394 114.83 li
171.392 117.474 li
171.392 117.474 li
cp
171.28 117.407 mo
173.281 114.764 li
171.28 112.12 li
169.282 114.764 li
171.28 117.407 li
171.28 117.407 li
cp
171.147 117.474 mo
173.146 114.83 li
171.147 112.188 li
169.148 114.83 li
171.147 117.474 li
171.147 117.474 li
cp
171.015 117.429 mo
173.014 114.786 li
171.015 112.143 li
169.016 114.786 li
171.015 117.429 li
171.015 117.429 li
cp
170.904 117.562 mo
172.902 114.919 li
170.904 112.275 li
168.904 114.919 li
170.904 117.562 li
170.904 117.562 li
cp
170.771 117.207 mo
172.77 114.563 li
170.771 111.92 li
168.771 114.563 li
170.771 117.207 li
170.771 117.207 li
cp
170.637 117.118 mo
172.637 114.475 li
170.637 111.832 li
168.637 114.475 li
170.637 117.118 li
170.637 117.118 li
cp
170.503 116.985 mo
172.504 114.342 li
170.503 111.698 li
168.504 114.342 li
170.503 116.985 li
170.503 116.985 li
cp
170.394 116.94 mo
172.392 114.297 li
170.394 111.654 li
168.394 114.297 li
170.394 116.94 li
170.394 116.94 li
cp
170.259 117.007 mo
172.259 114.363 li
170.259 111.72 li
168.26 114.363 li
170.259 117.007 li
170.259 117.007 li
cp
170.126 116.808 mo
172.125 114.164 li
170.126 111.521 li
168.126 114.164 li
170.126 116.808 li
170.126 116.808 li
cp
169.993 116.341 mo
171.992 113.697 li
169.993 111.054 li
167.993 113.697 li
169.993 116.341 li
169.993 116.341 li
cp
169.859 115.874 mo
171.859 113.23 li
169.859 110.587 li
167.859 113.23 li
169.859 115.874 li
169.859 115.874 li
cp
169.726 116.141 mo
171.726 113.497 li
169.726 110.854 li
167.727 113.497 li
169.726 116.141 li
169.726 116.141 li
cp
169.592 116.141 mo
171.593 113.497 li
169.592 110.854 li
167.594 113.497 li
169.592 116.141 li
169.592 116.141 li
cp
169.459 115.919 mo
171.458 113.275 li
169.459 110.632 li
167.461 113.275 li
169.459 115.919 li
169.459 115.919 li
cp
169.326 115.853 mo
171.325 113.209 li
169.326 110.564 li
167.327 113.209 li
169.326 115.853 li
169.326 115.853 li
cp
169.193 115.72 mo
171.192 113.075 li
169.193 110.432 li
167.193 113.075 li
169.193 115.72 li
169.193 115.72 li
cp
169.06 115.63 mo
171.06 112.986 li
169.06 110.343 li
167.061 112.986 li
169.06 115.63 li
169.06 115.63 li
cp
168.927 115.318 mo
170.925 112.675 li
168.927 110.032 li
166.928 112.675 li
168.927 115.318 li
168.927 115.318 li
cp
168.793 115.696 mo
170.792 113.053 li
168.793 110.409 li
166.795 113.053 li
168.793 115.696 li
168.793 115.696 li
cp
168.637 115.874 mo
170.637 113.23 li
168.637 110.587 li
166.639 113.23 li
168.637 115.874 li
168.637 115.874 li
cp
168.504 115.253 mo
170.503 112.609 li
168.504 109.966 li
166.505 112.609 li
168.504 115.253 li
168.504 115.253 li
cp
168.371 115.274 mo
170.37 112.631 li
168.371 109.987 li
166.372 112.631 li
168.371 115.274 li
168.371 115.274 li
cp
168.215 115.452 mo
170.216 112.809 li
168.215 110.165 li
166.216 112.809 li
168.215 115.452 li
168.215 115.452 li
cp
168.082 115.431 mo
170.082 112.787 li
168.082 110.144 li
166.083 112.787 li
168.082 115.431 li
168.082 115.431 li
cp
167.949 115.163 mo
169.948 112.52 li
167.949 109.876 li
165.95 112.52 li
167.949 115.163 li
167.949 115.163 li
cp
167.793 115.052 mo
169.793 112.409 li
167.793 109.766 li
165.794 112.409 li
167.793 115.052 li
167.793 115.052 li
cp
167.66 115.03 mo
169.659 112.387 li
167.66 109.742 li
165.661 112.387 li
167.66 115.03 li
167.66 115.03 li
cp
167.505 114.741 mo
169.504 112.098 li
167.505 109.454 li
165.506 112.098 li
167.505 114.741 li
167.505 114.741 li
cp
167.371 114.652 mo
169.371 112.01 li
167.371 109.366 li
165.372 112.01 li
167.371 114.652 li
167.371 114.652 li
cp
167.216 114.652 mo
169.216 112.01 li
167.216 109.366 li
165.216 112.01 li
167.216 114.652 li
167.216 114.652 li
cp
167.061 114.386 mo
169.06 111.742 li
167.061 109.099 li
165.062 111.742 li
167.061 114.386 li
167.061 114.386 li
cp
166.928 113.875 mo
168.927 111.231 li
166.928 108.589 li
164.928 111.231 li
166.928 113.875 li
166.928 113.875 li
cp
166.771 113.497 mo
168.771 110.854 li
166.771 108.211 li
164.772 110.854 li
166.771 113.497 li
166.771 113.497 li
cp
166.616 113.853 mo
168.616 111.209 li
166.616 108.565 li
164.616 111.209 li
166.616 113.853 li
166.616 113.853 li
cp
166.461 113.853 mo
168.459 111.209 li
166.461 108.565 li
164.462 111.209 li
166.461 113.853 li
166.461 113.853 li
cp
166.327 113.786 mo
168.326 111.143 li
166.327 108.499 li
164.329 111.143 li
166.327 113.786 li
166.327 113.786 li
cp
166.172 114.141 mo
168.171 111.498 li
166.172 108.854 li
164.173 111.498 li
166.172 114.141 li
166.172 114.141 li
cp
166.018 114.141 mo
168.016 111.498 li
166.018 108.854 li
164.017 111.498 li
166.018 114.141 li
166.018 114.141 li
cp
165.86 113.653 mo
167.859 111.01 li
165.86 108.366 li
163.862 111.01 li
165.86 113.653 li
165.86 113.653 li
cp
165.705 113.342 mo
167.705 110.698 li
165.705 108.055 li
163.706 110.698 li
165.705 113.342 li
165.705 113.342 li
cp
165.55 113.275 mo
167.549 110.632 li
165.55 107.988 li
163.552 110.632 li
165.55 113.275 li
165.55 113.275 li
cp
165.372 113.342 mo
167.371 110.698 li
165.372 108.055 li
163.373 110.698 li
165.372 113.342 li
165.372 113.342 li
cp
165.216 113.32 mo
167.216 110.677 li
165.216 108.033 li
163.218 110.677 li
165.216 113.32 li
165.216 113.32 li
cp
165.062 112.941 mo
167.061 110.298 li
165.062 107.654 li
163.062 110.298 li
165.062 112.941 li
165.062 112.941 li
cp
164.905 112.742 mo
166.905 110.099 li
164.905 107.455 li
162.907 110.099 li
164.905 112.742 li
164.905 112.742 li
cp
164.728 112.92 mo
166.728 110.276 li
164.728 107.633 li
162.729 110.276 li
164.728 112.92 li
164.728 112.92 li
cp
164.572 112.809 mo
166.571 110.165 li
164.572 107.521 li
162.573 110.165 li
164.572 112.809 li
164.572 112.809 li
cp
164.417 112.564 mo
166.416 109.921 li
164.417 107.276 li
162.418 109.921 li
164.417 112.564 li
164.417 112.564 li
cp
164.239 112.409 mo
166.238 109.766 li
164.239 107.123 li
162.24 109.766 li
164.239 112.409 li
164.239 112.409 li
cp
164.084 112.453 mo
166.083 109.81 li
164.084 107.166 li
162.085 109.81 li
164.084 112.453 li
164.084 112.453 li
cp
163.906 111.854 mo
165.905 109.21 li
163.906 106.566 li
161.907 109.21 li
163.906 111.854 li
163.906 111.854 li
cp
163.729 111.454 mo
165.728 108.811 li
163.729 106.167 li
161.729 108.811 li
163.729 111.454 li
163.729 111.454 li
cp
163.572 111.854 mo
165.571 109.21 li
163.572 106.566 li
161.574 109.21 li
163.572 111.854 li
163.572 111.854 li
cp
163.395 112.143 mo
165.394 109.499 li
163.395 106.855 li
161.396 109.499 li
163.395 112.143 li
163.395 112.143 li
cp
163.218 111.854 mo
165.216 109.21 li
163.218 106.566 li
161.219 109.21 li
163.218 111.854 li
163.218 111.854 li
cp
163.04 111.454 mo
165.038 108.811 li
163.04 106.167 li
161.041 108.811 li
163.04 111.454 li
163.04 111.454 li
cp
162.862 111.343 mo
164.861 108.699 li
162.862 106.056 li
160.862 108.699 li
162.862 111.343 li
162.862 111.343 li
cp
162.685 111.564 mo
164.685 108.921 li
162.685 106.277 li
160.685 108.921 li
162.685 111.564 li
162.685 111.564 li
cp
162.506 111.454 mo
164.507 108.811 li
162.506 106.167 li
160.507 108.811 li
162.506 111.454 li
162.506 111.454 li
cp
162.328 111.099 mo
164.329 108.455 li
162.328 105.812 li
160.329 108.455 li
162.328 111.099 li
162.328 111.099 li
cp
162.15 110.521 mo
164.15 107.877 li
162.15 105.233 li
160.151 107.877 li
162.15 110.521 li
162.15 110.521 li
cp
161.973 110.409 mo
163.973 107.766 li
161.973 105.123 li
159.974 107.766 li
161.973 110.409 li
161.973 110.409 li
cp
161.796 110.165 mo
163.795 107.521 li
161.796 104.878 li
159.796 107.521 li
161.796 110.165 li
161.796 110.165 li
cp
161.595 109.832 mo
163.595 107.188 li
161.595 104.545 li
159.597 107.188 li
161.595 109.832 li
161.595 109.832 li
cp
161.418 110.276 mo
163.418 107.633 li
161.418 104.989 li
159.419 107.633 li
161.418 110.276 li
161.418 110.276 li
cp
161.24 109.966 mo
163.239 107.321 li
161.24 104.678 li
159.241 107.321 li
161.24 109.966 li
161.24 109.966 li
cp
161.041 109.521 mo
163.04 106.877 li
161.041 104.233 li
159.041 106.877 li
161.041 109.521 li
161.041 109.521 li
cp
160.841 109.966 mo
162.84 107.321 li
160.841 104.678 li
158.841 107.321 li
160.841 109.966 li
160.841 109.966 li
cp
160.663 110.032 mo
162.662 107.389 li
160.663 104.745 li
158.663 107.389 li
160.663 110.032 li
160.663 110.032 li
cp
160.462 109.921 mo
162.462 107.276 li
160.462 104.634 li
158.464 107.276 li
160.462 109.921 li
160.462 109.921 li
cp
160.264 109.564 mo
162.262 106.922 li
160.264 104.278 li
158.264 106.922 li
160.264 109.564 li
160.264 109.564 li
cp
160.063 109.121 mo
162.063 106.478 li
160.063 103.834 li
158.063 106.478 li
160.063 109.121 li
160.063 109.121 li
cp
159.862 108.943 mo
161.863 106.3 li
159.862 103.657 li
157.863 106.3 li
159.862 108.943 li
159.862 108.943 li
cp
159.663 109.055 mo
161.662 106.411 li
159.663 103.768 li
157.664 106.411 li
159.663 109.055 li
159.663 109.055 li
cp
159.463 109.388 mo
161.462 106.744 li
159.463 104.101 li
157.464 106.744 li
159.463 109.388 li
159.463 109.388 li
cp
159.263 108.965 mo
161.263 106.321 li
159.263 103.679 li
157.264 106.321 li
159.263 108.965 li
159.263 108.965 li
cp
159.063 108.565 mo
161.063 105.923 li
159.063 103.279 li
157.064 105.923 li
159.063 108.565 li
159.063 108.565 li
cp
158.841 108.477 mo
160.841 105.833 li
158.841 103.19 li
156.842 105.833 li
158.841 108.477 li
158.841 108.477 li
cp
158.642 108.455 mo
160.64 105.812 li
158.642 103.168 li
156.643 105.812 li
158.642 108.455 li
158.642 108.455 li
cp
158.419 108.232 mo
160.419 105.589 li
158.419 102.945 li
156.42 105.589 li
158.419 108.232 li
158.419 108.232 li
cp
158.219 107.477 mo
160.219 104.833 li
158.219 102.19 li
156.221 104.833 li
158.219 107.477 li
158.219 107.477 li
cp
157.996 107.232 mo
159.996 104.589 li
157.996 101.945 li
155.998 104.589 li
157.996 107.232 li
157.996 107.232 li
cp
157.775 107.41 mo
159.774 104.767 li
157.775 102.123 li
155.775 104.767 li
157.775 107.41 li
157.775 107.41 li
cp
157.553 107.744 mo
159.552 105.101 li
157.553 102.457 li
155.555 105.101 li
157.553 107.744 li
157.553 107.744 li
cp
157.331 107.5 mo
159.329 104.855 li
157.331 102.213 li
155.332 104.855 li
157.331 107.5 li
157.331 107.5 li
cp
157.109 107.011 mo
159.108 104.367 li
157.109 101.725 li
155.108 104.367 li
157.109 107.011 li
157.109 107.011 li
cp
156.887 107.033 mo
158.886 104.39 li
156.887 101.746 li
154.888 104.39 li
156.887 107.033 li
156.887 107.033 li
cp
156.664 107.211 mo
158.663 104.567 li
156.664 101.924 li
154.665 104.567 li
156.664 107.211 li
156.664 107.211 li
cp
156.441 107.144 mo
158.441 104.5 li
156.441 101.857 li
154.442 104.5 li
156.441 107.144 li
156.441 107.144 li
cp
156.198 106.922 mo
158.197 104.278 li
156.198 101.635 li
154.198 104.278 li
156.198 106.922 li
156.198 106.922 li
cp
155.976 107.144 mo
157.976 104.5 li
155.976 101.857 li
153.976 104.5 li
155.976 107.144 li
155.976 107.144 li
cp
155.731 106.723 mo
157.73 104.078 li
155.731 101.435 li
153.732 104.078 li
155.731 106.723 li
155.731 106.723 li
cp
155.487 106.366 mo
157.486 103.723 li
155.487 101.079 li
153.487 103.723 li
155.487 106.366 li
155.487 106.366 li
cp
155.242 105.767 mo
157.242 103.123 li
155.242 100.479 li
153.243 103.123 li
155.242 105.767 li
155.242 105.767 li
cp
155.021 105.812 mo
157.021 103.168 li
155.021 100.524 li
153.021 103.168 li
155.021 105.812 li
155.021 105.812 li
cp
154.754 106.3 mo
156.753 103.657 li
154.754 101.014 li
152.755 103.657 li
154.754 106.3 li
154.754 106.3 li
cp
154.51 105.522 mo
156.51 102.879 li
154.51 100.235 li
152.51 102.879 li
154.51 105.522 li
154.51 105.522 li
cp
154.265 104.767 mo
156.264 102.123 li
154.265 99.4795 li
152.267 102.123 li
154.265 104.767 li
154.265 104.767 li
cp
154.021 104.612 mo
156.02 101.969 li
154.021 99.3252 li
152.021 101.969 li
154.021 104.612 li
154.021 104.612 li
cp
153.755 104.767 mo
155.753 102.123 li
153.755 99.4795 li
151.755 102.123 li
153.755 104.767 li
153.755 104.767 li
cp
153.487 104.79 mo
155.487 102.146 li
153.487 99.5029 li
151.488 102.146 li
153.487 104.79 li
153.487 104.79 li
cp
153.222 104.522 mo
155.221 101.88 li
153.222 99.2354 li
151.223 101.88 li
153.222 104.522 li
153.222 104.522 li
cp
152.977 104.545 mo
154.976 101.901 li
152.977 99.2588 li
150.979 101.901 li
152.977 104.545 li
152.977 104.545 li
cp
152.688 104.9 mo
154.688 102.257 li
152.688 99.6133 li
150.688 102.257 li
152.688 104.9 li
152.688 104.9 li
cp
152.422 104.589 mo
154.421 101.945 li
152.422 99.3018 li
150.422 101.945 li
152.422 104.589 li
152.422 104.589 li
cp
152.154 103.945 mo
154.153 101.302 li
152.154 98.6582 li
150.156 101.302 li
152.154 103.945 li
152.154 103.945 li
cp
151.865 104.033 mo
153.866 101.391 li
151.865 98.7471 li
149.866 101.391 li
151.865 104.033 li
151.865 104.033 li
cp
151.6 103.745 mo
153.599 101.102 li
151.6 98.458 li
149.601 101.102 li
151.6 103.745 li
151.6 103.745 li
cp
151.312 103.346 mo
153.31 100.702 li
151.312 98.0586 li
149.312 100.702 li
151.312 103.346 li
151.312 103.346 li
cp
151.021 102.723 mo
153.021 100.08 li
151.021 97.4365 li
149.023 100.08 li
151.021 102.723 li
151.021 102.723 li
cp
150.732 103.034 mo
152.732 100.392 li
150.732 97.748 li
148.733 100.392 li
150.732 103.034 li
150.732 103.034 li
cp
150.445 103.234 mo
152.444 100.592 li
150.445 97.9482 li
148.444 100.592 li
150.445 103.234 li
150.445 103.234 li
cp
150.133 102.746 mo
152.133 100.103 li
150.133 97.459 li
148.134 100.103 li
150.133 102.746 li
150.133 102.746 li
cp
149.845 103.034 mo
151.844 100.392 li
149.845 97.748 li
147.845 100.392 li
149.845 103.034 li
149.845 103.034 li
cp
149.533 102.457 mo
151.533 99.8135 li
149.533 97.1699 li
147.534 99.8135 li
149.533 102.457 li
149.533 102.457 li
cp
149.222 102.213 mo
151.223 99.5693 li
149.222 96.9258 li
147.224 99.5693 li
149.222 102.213 li
149.222 102.213 li
cp
148.911 101.945 mo
150.91 99.3018 li
148.911 96.6592 li
146.912 99.3018 li
148.911 101.945 li
148.911 101.945 li
cp
148.601 101.435 mo
150.6 98.792 li
148.601 96.1484 li
146.602 98.792 li
148.601 101.435 li
148.601 101.435 li
cp
148.267 101.68 mo
150.267 99.0361 li
148.267 96.3926 li
146.268 99.0361 li
148.267 101.68 li
148.267 101.68 li
cp
147.934 101.391 mo
149.934 98.7471 li
147.934 96.1035 li
145.935 98.7471 li
147.934 101.391 li
147.934 101.391 li
cp
147.623 100.524 mo
149.623 97.8809 li
147.623 95.2373 li
145.623 97.8809 li
147.623 100.524 li
147.623 100.524 li
cp
147.268 100.435 mo
149.267 97.792 li
147.268 95.1484 li
145.268 97.792 li
147.268 100.435 li
147.268 100.435 li
cp
146.934 101.079 mo
148.934 98.4365 li
146.934 95.793 li
144.935 98.4365 li
146.934 101.079 li
146.934 101.079 li
cp
146.602 100.901 mo
148.601 98.2588 li
146.602 95.6152 li
144.602 98.2588 li
146.602 100.901 li
146.602 100.901 li
cp
146.246 100.479 mo
148.245 97.8359 li
146.246 95.1934 li
144.246 97.8359 li
146.246 100.479 li
146.246 100.479 li
cp
145.891 100.235 mo
147.89 97.5918 li
145.891 94.9482 li
143.892 97.5918 li
145.891 100.235 li
145.891 100.235 li
cp
145.535 100.191 mo
147.534 97.5469 li
145.535 94.9033 li
143.536 97.5469 li
145.535 100.191 li
145.535 100.191 li
cp
145.157 99.5029 mo
147.157 96.8594 li
145.157 94.2148 li
143.157 96.8594 li
145.157 99.5029 li
145.157 99.5029 li
cp
144.78 99.7471 mo
146.779 97.1035 li
144.78 94.46 li
142.78 97.1035 li
144.78 99.7471 li
144.78 99.7471 li
cp
144.402 99.5469 mo
146.4 96.9043 li
144.402 94.2598 li
142.403 96.9043 li
144.402 99.5469 li
144.402 99.5469 li
cp
144.024 98.3027 mo
146.023 95.6602 li
144.024 93.0166 li
142.025 95.6602 li
144.024 98.3027 li
144.024 98.3027 li
cp
143.625 98.3691 mo
145.623 95.7256 li
143.625 93.082 li
141.626 95.7256 li
143.625 98.3691 li
143.625 98.3691 li
cp
143.247 99.2588 mo
145.246 96.6152 li
143.247 93.9717 li
141.248 96.6152 li
143.247 99.2588 li
143.247 99.2588 li
cp
142.825 99.0361 mo
144.824 96.3926 li
142.825 93.749 li
140.826 96.3926 li
142.825 99.0361 li
142.825 99.0361 li
cp
142.425 98.2363 mo
144.424 95.5928 li
142.425 92.9492 li
140.426 95.5928 li
142.425 98.2363 li
142.425 98.2363 li
cp
142.002 97.4805 mo
144.002 94.8379 li
142.002 92.1943 li
140.004 94.8379 li
142.002 97.4805 li
142.002 97.4805 li
cp
141.581 96.6152 mo
143.58 93.9717 li
141.581 91.3281 li
139.581 93.9717 li
141.581 96.6152 li
141.581 96.6152 li
cp
141.159 96.793 mo
143.157 94.1494 li
141.159 91.5059 li
139.16 94.1494 li
141.159 96.793 li
141.159 96.793 li
cp
140.715 95.9258 mo
142.714 93.2822 li
140.715 90.6387 li
138.715 93.2822 li
140.715 95.9258 li
140.715 95.9258 li
cp
140.27 94.5479 mo
142.27 91.9043 li
140.27 89.2617 li
138.271 91.9043 li
140.27 94.5479 li
140.27 94.5479 li
cp
139.804 94.3701 mo
141.804 91.7275 li
139.804 89.084 li
137.804 91.7275 li
139.804 94.3701 li
139.804 94.3701 li
cp
139.338 95.0156 mo
141.336 92.3721 li
139.338 89.7285 li
137.338 92.3721 li
139.338 95.0156 li
139.338 95.0156 li
cp
138.871 95.4375 mo
140.869 92.7939 li
138.871 90.1494 li
136.872 92.7939 li
138.871 95.4375 li
138.871 95.4375 li
cp
138.383 94.3037 mo
140.381 91.6602 li
138.383 89.0166 li
136.383 91.6602 li
138.383 94.3037 li
138.383 94.3037 li
cp
137.894 94.082 mo
139.893 91.4385 li
137.894 88.7959 li
135.895 91.4385 li
137.894 94.082 li
137.894 94.082 li
cp
137.383 93.1943 mo
139.383 90.5508 li
137.383 87.9072 li
135.383 90.5508 li
137.383 93.1943 li
137.383 93.1943 li
cp
136.872 92.3047 mo
138.871 89.6611 li
136.872 87.0186 li
134.871 89.6611 li
136.872 92.3047 li
136.872 92.3047 li
cp
136.338 92.3496 mo
138.338 89.7061 li
136.338 87.0625 li
134.339 89.7061 li
136.338 92.3496 li
136.338 92.3496 li
cp
135.805 91.8379 mo
137.804 89.1943 li
135.805 86.5508 li
133.807 89.1943 li
135.805 91.8379 li
135.805 91.8379 li
cp
135.25 90.9717 mo
137.249 88.3291 li
135.25 85.6855 li
133.251 88.3291 li
135.25 90.9717 li
135.25 90.9717 li
cp
134.672 90.5059 mo
136.671 87.8623 li
134.672 85.2188 li
132.673 87.8623 li
134.672 90.5059 li
134.672 90.5059 li
cp
134.095 90.3281 mo
136.095 87.6836 li
134.095 85.041 li
132.095 87.6836 li
134.095 90.3281 li
134.095 90.3281 li
cp
133.517 88.4844 mo
135.516 85.8408 li
133.517 83.1973 li
131.519 85.8408 li
133.517 88.4844 li
133.517 88.4844 li
cp
132.896 87.6631 mo
134.895 85.0195 li
132.896 82.376 li
130.896 85.0195 li
132.896 87.6631 li
132.896 87.6631 li
cp
132.272 87.8398 mo
134.273 85.1973 li
132.272 82.5537 li
130.273 85.1973 li
132.272 87.8398 li
132.272 87.8398 li
cp
131.629 87.7959 mo
133.629 85.1523 li
131.629 82.5088 li
129.629 85.1523 li
131.629 87.7959 li
131.629 87.7959 li
cp
130.985 87.3525 mo
132.984 84.709 li
130.985 82.0645 li
128.985 84.709 li
130.985 87.3525 li
130.985 87.3525 li
cp
130.296 86.3076 mo
132.296 83.6631 li
130.296 81.0195 li
128.296 83.6631 li
130.296 86.3076 li
130.296 86.3076 li
cp
129.607 84.8867 mo
131.606 82.2432 li
129.607 79.5986 li
127.608 82.2432 li
129.607 84.8867 li
129.607 84.8867 li
cp
128.896 84.3076 mo
130.896 81.6641 li
128.896 79.021 li
126.897 81.6641 li
128.896 84.3076 li
128.896 84.3076 li
cp
128.163 83.1533 mo
130.163 80.5093 li
128.163 77.8657 li
126.165 80.5093 li
128.163 83.1533 li
128.163 83.1533 li
cp
127.386 82.7744 mo
129.386 80.1313 li
127.386 77.4883 li
125.387 80.1313 li
127.386 82.7744 li
127.386 82.7744 li
cp
126.608 81.9307 mo
128.607 79.2876 li
126.608 76.644 li
124.609 79.2876 li
126.608 81.9307 li
126.608 81.9307 li
cp
125.786 80.8203 mo
127.787 78.1768 li
125.786 75.5337 li
123.787 78.1768 li
125.786 80.8203 li
125.786 80.8203 li
cp
124.942 80.354 mo
126.942 77.71 li
124.942 75.0664 li
122.943 77.71 li
124.942 80.354 li
124.942 80.354 li
cp
124.076 79.3765 mo
126.075 76.7329 li
124.076 74.0894 li
122.077 76.7329 li
124.076 79.3765 li
124.076 79.3765 li
cp
123.166 77.5547 mo
125.165 74.9111 li
123.166 72.2681 li
121.166 74.9111 li
123.166 77.5547 li
123.166 77.5547 li
cp
122.232 75.8667 mo
124.23 73.2231 li
122.232 70.5796 li
120.233 73.2231 li
122.232 75.8667 li
122.232 75.8667 li
cp
121.255 74.356 mo
123.254 71.7124 li
121.255 69.0693 li
119.256 71.7124 li
121.255 74.356 li
121.255 74.356 li
cp
120.233 73.8008 mo
122.232 71.1572 li
120.233 68.5132 li
118.234 71.1572 li
120.233 73.8008 li
120.233 73.8008 li
cp
119.166 72.4014 mo
121.166 69.7578 li
119.166 67.1143 li
117.168 69.7578 li
119.166 72.4014 li
119.166 72.4014 li
cp
118.057 70.979 mo
120.056 68.3359 li
118.057 65.6924 li
116.056 68.3359 li
118.057 70.979 li
118.057 70.979 li
cp
116.878 69.7798 mo
118.878 67.1362 li
116.878 64.4927 li
114.879 67.1362 li
116.878 69.7798 li
116.878 69.7798 li
cp
115.657 69.4688 mo
117.656 66.8252 li
115.657 64.1816 li
113.658 66.8252 li
115.657 69.4688 li
115.657 69.4688 li
cp
114.347 68.5581 mo
116.345 65.9146 li
114.347 63.2715 li
112.348 65.9146 li
114.347 68.5581 li
114.347 68.5581 li
cp
112.969 66.8921 mo
114.968 64.2485 li
112.969 61.605 li
110.971 64.2485 li
112.969 66.8921 li
112.969 66.8921 li
cp
111.525 64.1816 mo
113.524 61.5386 li
111.525 58.8945 li
109.525 61.5386 li
111.525 64.1816 li
111.525 64.1816 li
cp
109.971 62.6934 mo
111.969 60.0503 li
109.971 57.4067 li
107.971 60.0503 li
109.971 62.6934 li
109.971 62.6934 li
cp
108.326 61.0723 mo
110.325 58.4287 li
108.326 55.7852 li
106.327 58.4287 li
108.326 61.0723 li
108.326 61.0723 li
cp
106.549 55.252 mo
108.548 52.6084 li
106.549 49.9648 li
104.55 52.6084 li
106.549 55.252 li
106.549 55.252 li
cp
104.617 52.4082 mo
106.616 49.7646 li
104.617 47.1211 li
102.617 49.7646 li
104.617 52.4082 li
104.617 52.4082 li
cp
102.528 48.3877 mo
104.528 45.7437 li
102.528 43.1006 li
100.529 45.7437 li
102.528 48.3877 li
102.528 48.3877 li
cp
100.24 45.1001 mo
102.24 42.4561 li
100.24 39.813 li
98.2412 42.4561 li
100.24 45.1001 li
100.24 45.1001 li
cp
97.73 40.3687 mo
99.7295 37.7246 li
97.73 35.0815 li
95.731 37.7246 li
97.73 40.3687 li
97.73 40.3687 li
cp
94.8867 36.3257 mo
96.8857 33.6816 li
94.8867 31.0381 li
92.8872 33.6816 li
94.8867 36.3257 li
94.8867 36.3257 li
cp
91.688 32.3711 mo
93.6865 29.7275 li
91.688 27.084 li
89.688 29.7275 li
91.688 32.3711 li
91.688 32.3711 li
cp
88 29.0171 mo
90 26.3735 li
88 23.73 li
86.0015 26.3735 li
88 29.0171 li
88 29.0171 li
cp
83.624 31.1714 mo
85.623 28.5278 li
83.624 25.8843 li
81.625 28.5278 li
83.624 31.1714 li
83.624 31.1714 li
cp
78.27 33.7935 mo
80.27 31.1494 li
78.27 28.5059 li
76.2715 31.1494 li
78.27 33.7935 li
78.27 33.7935 li
cp
71.3618 38.9243 mo
73.3608 36.2808 li
71.3618 33.6377 li
69.3628 36.2808 li
71.3618 38.9243 li
71.3618 38.9243 li
cp
61.6323 51.2534 mo
63.6309 48.6099 li
61.6323 45.9668 li
59.6328 48.6099 li
61.6323 51.2534 li
61.6323 51.2534 li
cp
44.9941 68.1807 mo
46.9927 65.5371 li
44.9941 62.8931 li
42.9941 65.5371 li
44.9941 68.1807 li
44.9941 68.1807 li
cp
3.05176e-5 .993988 1 3.05176e-5 cmyk
@
186.364 130.246 mo
188.364 127.603 li
186.364 124.959 li
184.365 127.603 li
186.364 130.246 li
186.364 130.246 li
cp
186.298 129.824 mo
188.297 127.182 li
186.298 124.538 li
184.299 127.182 li
186.298 129.824 li
186.298 129.824 li
cp
186.231 130.27 mo
188.229 127.626 li
186.231 124.982 li
184.232 127.626 li
186.231 130.27 li
186.231 130.27 li
cp
186.164 130.624 mo
188.164 127.981 li
186.164 125.338 li
184.165 127.981 li
186.164 130.624 li
186.164 130.624 li
cp
186.099 130.381 mo
188.097 127.737 li
186.099 125.093 li
184.1 127.737 li
186.099 130.381 li
186.099 130.381 li
cp
186.031 130.203 mo
188.031 127.559 li
186.031 124.916 li
184.032 127.559 li
186.031 130.203 li
186.031 130.203 li
cp
185.965 130.136 mo
187.964 127.493 li
185.965 124.85 li
183.966 127.493 li
185.965 130.136 li
185.965 130.136 li
cp
185.898 130.292 mo
187.897 127.647 li
185.898 125.004 li
183.898 127.647 li
185.898 130.292 li
185.898 130.292 li
cp
185.831 130.402 mo
187.831 127.759 li
185.831 125.115 li
183.832 127.759 li
185.831 130.402 li
185.831 130.402 li
cp
185.765 130.336 mo
187.765 127.691 li
185.765 125.049 li
183.766 127.691 li
185.765 130.336 li
185.765 130.336 li
cp
185.698 129.936 mo
187.698 127.292 li
185.698 124.648 li
183.698 127.292 li
185.698 129.936 li
185.698 129.936 li
cp
185.631 129.58 mo
187.63 126.937 li
185.631 124.293 li
183.633 126.937 li
185.631 129.58 li
185.631 129.58 li
cp
185.543 129.959 mo
187.542 127.315 li
185.543 124.672 li
183.543 127.315 li
185.543 129.959 li
185.543 129.959 li
cp
185.477 130.068 mo
187.476 127.425 li
185.477 124.781 li
183.477 127.425 li
185.477 130.068 li
185.477 130.068 li
cp
185.409 130.002 mo
187.409 127.358 li
185.409 124.716 li
183.41 127.358 li
185.409 130.002 li
185.409 130.002 li
cp
185.342 129.758 mo
187.343 127.114 li
185.342 124.471 li
183.344 127.114 li
185.342 129.758 li
185.342 129.758 li
cp
185.276 129.447 mo
187.274 126.804 li
185.276 124.16 li
183.277 126.804 li
185.276 129.447 li
185.276 129.447 li
cp
185.209 129.402 mo
187.209 126.759 li
185.209 124.116 li
183.21 126.759 li
185.209 129.402 li
185.209 129.402 li
cp
185.143 129.225 mo
187.142 126.581 li
185.143 123.938 li
183.145 126.581 li
185.143 129.225 li
185.143 129.225 li
cp
185.076 129.314 mo
187.075 126.671 li
185.076 124.027 li
183.077 126.671 li
185.076 129.314 li
185.076 129.314 li
cp
184.986 129.625 mo
186.986 126.981 li
184.986 124.338 li
182.987 126.981 li
184.986 129.625 li
184.986 129.625 li
cp
184.921 129.47 mo
186.92 126.825 li
184.921 124.182 li
182.921 126.825 li
184.921 129.47 li
184.921 129.47 li
cp
184.854 129.024 mo
186.853 126.382 li
184.854 123.738 li
182.854 126.382 li
184.854 129.024 li
184.854 129.024 li
cp
184.787 129.047 mo
186.786 126.403 li
184.787 123.76 li
182.788 126.403 li
184.787 129.047 li
184.787 129.047 li
cp
184.721 128.892 mo
186.72 126.248 li
184.721 123.605 li
182.722 126.248 li
184.721 128.892 li
184.721 128.892 li
cp
184.654 128.581 mo
186.653 125.938 li
184.654 123.294 li
182.655 125.938 li
184.654 128.581 li
184.654 128.581 li
cp
184.565 128.47 mo
186.565 125.826 li
184.565 123.183 li
182.565 125.826 li
184.565 128.47 li
184.565 128.47 li
cp
184.498 128.292 mo
186.498 125.648 li
184.498 123.005 li
182.5 125.648 li
184.498 128.292 li
184.498 128.292 li
cp
184.432 128.447 mo
186.432 125.804 li
184.432 123.16 li
182.433 125.804 li
184.432 128.447 li
184.432 128.447 li
cp
184.365 128.559 mo
186.364 125.915 li
184.365 123.271 li
182.366 125.915 li
184.365 128.559 li
184.365 128.559 li
cp
184.277 128.314 mo
186.276 125.671 li
184.277 123.027 li
182.277 125.671 li
184.277 128.314 li
184.277 128.314 li
cp
184.209 128.202 mo
186.21 125.559 li
184.209 122.916 li
182.21 125.559 li
184.209 128.202 li
184.209 128.202 li
cp
184.144 128.337 mo
186.143 125.693 li
184.144 123.05 li
182.144 125.693 li
184.144 128.337 li
184.144 128.337 li
cp
184.076 128.358 mo
186.076 125.716 li
184.076 123.072 li
182.077 125.716 li
184.076 128.358 li
184.076 128.358 li
cp
183.987 128.603 mo
185.986 125.959 li
183.987 123.315 li
181.989 125.959 li
183.987 128.603 li
183.987 128.603 li
cp
183.922 128.358 mo
185.921 125.716 li
183.922 123.072 li
181.921 125.716 li
183.922 128.358 li
183.922 128.358 li
cp
183.854 128.114 mo
185.854 125.471 li
183.854 122.827 li
181.854 125.471 li
183.854 128.114 li
183.854 128.114 li
cp
183.766 128.004 mo
185.765 125.36 li
183.766 122.716 li
181.767 125.36 li
183.766 128.004 li
183.766 128.004 li
cp
183.698 127.67 mo
185.698 125.026 li
183.698 122.383 li
181.699 125.026 li
183.698 127.67 li
183.698 127.67 li
cp
183.633 127.759 mo
185.631 125.115 li
183.633 122.472 li
181.634 125.115 li
183.633 127.759 li
183.633 127.759 li
cp
183.543 127.737 mo
185.543 125.093 li
183.543 122.45 li
181.545 125.093 li
183.543 127.737 li
183.543 127.737 li
cp
183.477 127.826 mo
185.477 125.182 li
183.477 122.538 li
181.478 125.182 li
183.477 127.826 li
183.477 127.826 li
cp
183.41 128.048 mo
185.409 125.404 li
183.41 122.761 li
181.411 125.404 li
183.41 128.048 li
183.41 128.048 li
cp
183.321 127.626 mo
185.32 124.982 li
183.321 122.339 li
181.321 124.982 li
183.321 127.626 li
183.321 127.626 li
cp
183.255 127.448 mo
185.254 124.805 li
183.255 122.161 li
181.255 124.805 li
183.255 127.448 li
183.255 127.448 li
cp
183.165 127.337 mo
185.164 124.693 li
183.165 122.05 li
181.167 124.693 li
183.165 127.337 li
183.165 127.337 li
cp
183.1 127.292 mo
185.099 124.648 li
183.1 122.005 li
181.1 124.648 li
183.1 127.292 li
183.1 127.292 li
cp
183.032 127.358 mo
185.031 124.716 li
183.032 122.072 li
181.034 124.716 li
183.032 127.358 li
183.032 127.358 li
cp
182.943 126.893 mo
184.943 124.25 li
182.943 121.606 li
180.944 124.25 li
182.943 126.893 li
182.943 126.893 li
cp
182.876 126.804 mo
184.877 124.16 li
182.876 121.517 li
180.878 124.16 li
182.876 126.804 li
182.876 126.804 li
cp
182.788 127.004 mo
184.787 124.359 li
182.788 121.716 li
180.789 124.359 li
182.788 127.004 li
182.788 127.004 li
cp
182.722 126.692 mo
184.721 124.049 li
182.722 121.405 li
180.722 124.049 li
182.722 126.692 li
182.722 126.692 li
cp
182.633 126.382 mo
184.633 123.738 li
182.633 121.095 li
180.634 123.738 li
182.633 126.382 li
182.633 126.382 li
cp
182.565 126.315 mo
184.565 123.671 li
182.565 121.027 li
180.566 123.671 li
182.565 126.315 li
182.565 126.315 li
cp
182.478 126.515 mo
184.477 123.871 li
182.478 121.228 li
180.478 123.871 li
182.478 126.515 li
182.478 126.515 li
cp
182.411 126.759 mo
184.41 124.116 li
182.411 121.473 li
180.41 124.116 li
182.411 126.759 li
182.411 126.759 li
cp
182.322 126.736 mo
184.32 124.093 li
182.322 121.45 li
180.322 124.093 li
182.322 126.736 li
182.322 126.736 li
cp
182.255 126.781 mo
184.254 124.138 li
182.255 121.494 li
180.256 124.138 li
182.255 126.781 li
182.255 126.781 li
cp
182.166 126.759 mo
184.165 124.116 li
182.166 121.473 li
180.167 124.116 li
182.166 126.759 li
182.166 126.759 li
cp
182.099 126.271 mo
184.1 123.627 li
182.099 120.983 li
180.1 123.627 li
182.099 126.271 li
182.099 126.271 li
cp
182.011 125.938 mo
184.01 123.294 li
182.011 120.651 li
180.012 123.294 li
182.011 125.938 li
182.011 125.938 li
cp
181.944 126.315 mo
183.943 123.671 li
181.944 121.027 li
179.945 123.671 li
181.944 126.315 li
181.944 126.315 li
cp
181.854 126.448 mo
183.854 123.805 li
181.854 121.161 li
179.856 123.805 li
181.854 126.448 li
181.854 126.448 li
cp
181.767 125.938 mo
183.766 123.294 li
181.767 120.651 li
179.768 123.294 li
181.767 125.938 li
181.767 125.938 li
cp
181.699 125.604 mo
183.698 122.96 li
181.699 120.317 li
179.7 122.96 li
181.699 125.604 li
181.699 125.604 li
cp
181.61 125.893 mo
183.61 123.25 li
181.61 120.606 li
179.611 123.25 li
181.61 125.893 li
181.61 125.893 li
cp
181.521 126.248 mo
183.521 123.605 li
181.521 120.962 li
179.522 123.605 li
181.521 126.248 li
181.521 126.248 li
cp
181.456 125.981 mo
183.455 123.338 li
181.456 120.694 li
179.455 123.338 li
181.456 125.981 li
181.456 125.981 li
cp
181.366 125.583 mo
183.365 122.938 li
181.366 120.295 li
179.367 122.938 li
181.366 125.583 li
181.366 125.583 li
cp
181.277 125.227 mo
183.277 122.583 li
181.277 119.939 li
179.277 122.583 li
181.277 125.227 li
181.277 125.227 li
cp
181.212 125.271 mo
183.21 122.627 li
181.212 119.984 li
179.212 122.627 li
181.212 125.271 li
181.212 125.271 li
cp
181.122 125.693 mo
183.121 123.05 li
181.122 120.406 li
179.123 123.05 li
181.122 125.693 li
181.122 125.693 li
cp
181.034 125.648 mo
183.032 123.005 li
181.034 120.361 li
179.034 123.005 li
181.034 125.648 li
181.034 125.648 li
cp
180.967 125.137 mo
182.966 122.493 li
180.967 119.851 li
178.967 122.493 li
180.967 125.137 li
180.967 125.137 li
cp
180.878 125.115 mo
182.876 122.472 li
180.878 119.829 li
178.879 122.472 li
180.878 125.115 li
180.878 125.115 li
cp
180.789 125.293 mo
182.788 122.649 li
180.789 120.007 li
178.789 122.649 li
180.789 125.293 li
180.789 125.293 li
cp
180.7 125.227 mo
182.698 122.583 li
180.7 119.939 li
178.701 122.583 li
180.7 125.227 li
180.7 125.227 li
cp
180.634 124.938 mo
182.633 122.294 li
180.634 119.65 li
178.634 122.294 li
180.634 124.938 li
180.634 124.938 li
cp
180.544 124.76 mo
182.544 122.116 li
180.544 119.473 li
178.545 122.116 li
180.544 124.76 li
180.544 124.76 li
cp
180.455 124.693 mo
182.455 122.05 li
180.455 119.406 li
178.456 122.05 li
180.455 124.693 li
180.455 124.693 li
cp
180.367 124.693 mo
182.366 122.05 li
180.367 119.406 li
178.367 122.05 li
180.367 124.693 li
180.367 124.693 li
cp
180.277 124.582 mo
182.277 121.938 li
180.277 119.295 li
178.278 121.938 li
180.277 124.582 li
180.277 124.582 li
cp
180.189 124.404 mo
182.188 121.761 li
180.189 119.117 li
178.189 121.761 li
180.189 124.404 li
180.189 124.404 li
cp
180.122 124.826 mo
182.122 122.183 li
180.122 119.539 li
178.123 122.183 li
180.122 124.826 li
180.122 124.826 li
cp
180.034 124.805 mo
182.032 122.161 li
180.034 119.518 li
178.034 122.161 li
180.034 124.805 li
180.034 124.805 li
cp
179.945 124.004 mo
181.944 121.36 li
179.945 118.718 li
177.945 121.36 li
179.945 124.004 li
179.945 124.004 li
cp
179.856 123.938 mo
181.854 121.294 li
179.856 118.65 li
177.856 121.294 li
179.856 123.938 li
179.856 123.938 li
cp
179.768 124.338 mo
181.767 121.694 li
179.768 119.052 li
177.768 121.694 li
179.768 124.338 li
179.768 124.338 li
cp
179.678 124.383 mo
181.678 121.739 li
179.678 119.096 li
177.679 121.739 li
179.678 124.383 li
179.678 124.383 li
cp
179.589 124.093 mo
181.589 121.45 li
179.589 118.807 li
177.59 121.45 li
179.589 124.093 li
179.589 124.093 li
cp
179.5 124.093 mo
181.5 121.45 li
179.5 118.807 li
177.501 121.45 li
179.5 124.093 li
179.5 124.093 li
cp
179.412 124.027 mo
181.411 121.384 li
179.412 118.739 li
177.412 121.384 li
179.412 124.027 li
179.412 124.027 li
cp
179.322 124.004 mo
181.321 121.36 li
179.322 118.718 li
177.323 121.36 li
179.322 124.004 li
179.322 124.004 li
cp
179.234 124.004 mo
181.232 121.36 li
179.234 118.718 li
177.234 121.36 li
179.234 124.004 li
179.234 124.004 li
cp
179.145 123.605 mo
181.144 120.962 li
179.145 118.318 li
177.146 120.962 li
179.145 123.605 li
179.145 123.605 li
cp
179.057 123.383 mo
181.055 120.739 li
179.057 118.096 li
177.057 120.739 li
179.057 123.383 li
179.057 123.383 li
cp
178.967 123.693 mo
180.967 121.05 li
178.967 118.406 li
176.968 121.05 li
178.967 123.693 li
178.967 123.693 li
cp
178.879 123.826 mo
180.878 121.184 li
178.879 118.541 li
176.88 121.184 li
178.879 123.826 li
178.879 123.826 li
cp
178.789 123.472 mo
180.789 120.828 li
178.789 118.186 li
176.79 120.828 li
178.789 123.472 li
178.789 123.472 li
cp
178.701 123.428 mo
180.7 120.784 li
178.701 118.141 li
176.702 120.784 li
178.701 123.428 li
178.701 123.428 li
cp
178.611 123.605 mo
180.611 120.962 li
178.611 118.318 li
176.613 120.962 li
178.611 123.605 li
178.611 123.605 li
cp
178.523 123.183 mo
180.522 120.539 li
178.523 117.896 li
176.524 120.539 li
178.523 123.183 li
178.523 123.183 li
cp
178.412 122.916 mo
180.41 120.272 li
178.412 117.629 li
176.413 120.272 li
178.412 122.916 li
178.412 122.916 li
cp
178.323 123.094 mo
180.322 120.45 li
178.323 117.807 li
176.323 120.45 li
178.323 123.094 li
178.323 123.094 li
cp
178.234 123.027 mo
180.232 120.383 li
178.234 117.739 li
176.235 120.383 li
178.234 123.027 li
178.234 123.027 li
cp
178.146 122.649 mo
180.145 120.007 li
178.146 117.363 li
176.146 120.007 li
178.146 122.649 li
178.146 122.649 li
cp
178.057 122.583 mo
180.055 119.939 li
178.057 117.296 li
176.058 119.939 li
178.057 122.583 li
178.057 122.583 li
cp
177.945 123.027 mo
179.945 120.383 li
177.945 117.739 li
175.946 120.383 li
177.945 123.027 li
177.945 123.027 li
cp
177.856 123.205 mo
179.856 120.562 li
177.856 117.917 li
175.856 120.562 li
177.856 123.205 li
177.856 123.205 li
cp
177.768 122.872 mo
179.768 120.229 li
177.768 117.586 li
175.769 120.229 li
177.768 122.872 li
177.768 122.872 li
cp
177.679 122.36 mo
179.678 119.717 li
177.679 117.074 li
175.68 119.717 li
177.679 122.36 li
177.679 122.36 li
cp
177.568 121.983 mo
179.567 119.34 li
177.568 116.696 li
175.568 119.34 li
177.568 121.983 li
177.568 121.983 li
cp
177.479 122.027 mo
179.479 119.384 li
177.479 116.741 li
175.479 119.384 li
177.479 122.027 li
177.479 122.027 li
cp
177.391 122.183 mo
179.39 119.539 li
177.391 116.896 li
175.391 119.539 li
177.391 122.183 li
177.391 122.183 li
cp
177.279 122.027 mo
179.277 119.384 li
177.279 116.741 li
175.28 119.384 li
177.279 122.027 li
177.279 122.027 li
cp
177.19 122.072 mo
179.189 119.428 li
177.19 116.784 li
175.19 119.428 li
177.19 122.072 li
177.19 122.072 li
cp
177.102 121.938 mo
179.1 119.295 li
177.102 116.651 li
175.103 119.295 li
177.102 121.938 li
177.102 121.938 li
cp
176.989 121.827 mo
178.99 119.185 li
176.989 116.541 li
174.99 119.185 li
176.989 121.827 li
176.989 121.827 li
cp
176.901 121.562 mo
178.9 118.918 li
176.901 116.273 li
174.902 118.918 li
176.901 121.562 li
176.901 121.562 li
cp
176.79 121.116 mo
178.789 118.473 li
176.79 115.829 li
174.791 118.473 li
176.79 121.116 li
176.79 121.116 li
cp
176.702 121.672 mo
178.701 119.028 li
176.702 116.386 li
174.701 119.028 li
176.702 121.672 li
176.702 121.672 li
cp
176.591 122.139 mo
178.589 119.495 li
176.591 116.852 li
174.591 119.495 li
176.591 122.139 li
176.591 122.139 li
cp
176.501 121.538 mo
178.5 118.895 li
176.501 116.252 li
174.503 118.895 li
176.501 121.538 li
176.501 121.538 li
cp
176.39 121.228 mo
178.391 118.584 li
176.39 115.94 li
174.391 118.584 li
176.39 121.228 li
176.39 121.228 li
cp
176.302 120.806 mo
178.301 118.162 li
176.302 115.519 li
174.303 118.162 li
176.302 120.806 li
176.302 120.806 li
cp
176.19 120.717 mo
178.189 118.073 li
176.19 115.431 li
174.191 118.073 li
176.19 120.717 li
176.19 120.717 li
cp
176.103 121.14 mo
178.102 118.496 li
176.103 115.853 li
174.103 118.496 li
176.103 121.14 li
176.103 121.14 li
cp
175.99 121.205 mo
177.989 118.562 li
175.99 115.919 li
173.991 118.562 li
175.99 121.205 li
175.99 121.205 li
cp
175.901 121.027 mo
177.901 118.385 li
175.901 115.741 li
173.902 118.385 li
175.901 121.027 li
175.901 121.027 li
cp
175.791 120.828 mo
177.79 118.186 li
175.791 115.541 li
173.791 118.186 li
175.791 120.828 li
175.791 120.828 li
cp
175.68 120.85 mo
177.679 118.207 li
175.68 115.563 li
173.681 118.207 li
175.68 120.85 li
175.68 120.85 li
cp
175.591 121.006 mo
177.59 118.363 li
175.591 115.72 li
173.592 118.363 li
175.591 121.006 li
175.591 121.006 li
cp
175.479 120.739 mo
177.479 118.096 li
175.479 115.452 li
173.48 118.096 li
175.479 120.739 li
175.479 120.739 li
cp
175.368 120.562 mo
177.368 117.917 li
175.368 115.274 li
173.369 117.917 li
175.368 120.562 li
175.368 120.562 li
cp
175.28 120.429 mo
177.279 117.784 li
175.28 115.141 li
173.281 117.784 li
175.28 120.429 li
175.28 120.429 li
cp
175.168 120.45 mo
177.167 117.807 li
175.168 115.163 li
173.17 117.807 li
175.168 120.45 li
175.168 120.45 li
cp
175.058 120.606 mo
177.057 117.963 li
175.058 115.318 li
173.058 117.963 li
175.058 120.606 li
175.058 120.606 li
cp
174.946 120.007 mo
176.946 117.363 li
174.946 114.719 li
172.947 117.363 li
174.946 120.007 li
174.946 120.007 li
cp
174.835 120.095 mo
176.835 117.451 li
174.835 114.808 li
172.836 117.451 li
174.835 120.095 li
174.835 120.095 li
cp
174.746 120.473 mo
176.746 117.829 li
174.746 115.186 li
172.747 117.829 li
174.746 120.473 li
174.746 120.473 li
cp
174.636 120.095 mo
176.634 117.451 li
174.636 114.808 li
172.637 117.451 li
174.636 120.095 li
174.636 120.095 li
cp
174.523 119.65 mo
176.524 117.007 li
174.523 114.363 li
172.525 117.007 li
174.523 119.65 li
174.523 119.65 li
cp
174.413 119.962 mo
176.413 117.318 li
174.413 114.674 li
172.414 117.318 li
174.413 119.962 li
174.413 119.962 li
cp
174.303 120.117 mo
176.302 117.474 li
174.303 114.83 li
172.303 117.474 li
174.303 120.117 li
174.303 120.117 li
cp
174.191 119.829 mo
176.19 117.185 li
174.191 114.541 li
172.192 117.185 li
174.191 119.829 li
174.191 119.829 li
cp
174.08 119.606 mo
176.079 116.962 li
174.08 114.318 li
172.081 116.962 li
174.08 119.606 li
174.08 119.606 li
cp
173.969 119.495 mo
175.969 116.852 li
173.969 114.208 li
171.97 116.852 li
173.969 119.495 li
173.969 119.495 li
cp
173.857 119.451 mo
175.856 116.808 li
173.857 114.164 li
171.859 116.808 li
173.857 119.451 li
173.857 119.451 li
cp
173.746 119.273 mo
175.747 116.63 li
173.746 113.986 li
171.747 116.63 li
173.746 119.273 li
173.746 119.273 li
cp
173.637 119.361 mo
175.636 116.719 li
173.637 114.075 li
171.637 116.719 li
173.637 119.361 li
173.637 119.361 li
cp
173.524 119.295 mo
175.523 116.651 li
173.524 114.008 li
171.525 116.651 li
173.524 119.295 li
173.524 119.295 li
cp
173.414 119.052 mo
175.413 116.408 li
173.414 113.764 li
171.415 116.408 li
173.414 119.052 li
173.414 119.052 li
cp
173.303 119.117 mo
175.302 116.474 li
173.303 113.83 li
171.304 116.474 li
173.303 119.117 li
173.303 119.117 li
cp
173.191 118.984 mo
175.19 116.341 li
173.191 113.697 li
171.192 116.341 li
173.191 118.984 li
173.191 118.984 li
cp
173.058 118.65 mo
175.058 116.007 li
173.058 113.363 li
171.06 116.007 li
173.058 118.65 li
173.058 118.65 li
cp
172.947 118.606 mo
174.946 115.963 li
172.947 113.32 li
170.948 115.963 li
172.947 118.606 li
172.947 118.606 li
cp
172.836 118.541 mo
174.835 115.897 li
172.836 113.254 li
170.837 115.897 li
172.836 118.541 li
172.836 118.541 li
cp
172.725 118.718 mo
174.725 116.075 li
172.725 113.432 li
170.726 116.075 li
172.725 118.718 li
172.725 118.718 li
cp
172.592 118.939 mo
174.591 116.296 li
172.592 113.653 li
170.592 116.296 li
172.592 118.939 li
172.592 118.939 li
cp
172.48 118.541 mo
174.48 115.897 li
172.48 113.254 li
170.481 115.897 li
172.48 118.541 li
172.48 118.541 li
cp
172.369 118.141 mo
174.369 115.496 li
172.369 112.853 li
170.37 115.496 li
172.369 118.141 li
172.369 118.141 li
cp
172.235 118.052 mo
174.236 115.407 li
172.235 112.764 li
170.237 115.407 li
172.235 118.052 li
172.235 118.052 li
cp
@
174.325 119.606 mo
176.323 116.962 li
174.325 114.318 li
172.325 116.962 li
174.325 119.606 li
174.325 119.606 li
cp
174.191 119.673 mo
176.19 117.029 li
174.191 114.386 li
172.192 117.029 li
174.191 119.673 li
174.191 119.673 li
cp
174.08 119.917 mo
176.079 117.273 li
174.08 114.629 li
172.081 117.273 li
174.08 119.917 li
174.08 119.917 li
cp
173.947 119.807 mo
175.946 117.163 li
173.947 114.52 li
171.947 117.163 li
173.947 119.807 li
173.947 119.807 li
cp
173.836 119.361 mo
175.835 116.719 li
173.836 114.075 li
171.837 116.719 li
173.836 119.361 li
173.836 119.361 li
cp
173.702 119.096 mo
175.702 116.452 li
173.702 113.809 li
171.703 116.452 li
173.702 119.096 li
173.702 119.096 li
cp
173.592 118.918 mo
175.591 116.273 li
173.592 113.631 li
171.593 116.273 li
173.592 118.918 li
173.592 118.918 li
cp
173.459 118.852 mo
175.458 116.208 li
173.459 113.564 li
171.458 116.208 li
173.459 118.852 li
173.459 118.852 li
cp
173.348 118.852 mo
175.346 116.208 li
173.348 113.564 li
171.348 116.208 li
173.348 118.852 li
173.348 118.852 li
cp
173.215 118.695 mo
175.213 116.052 li
173.215 113.408 li
171.215 116.052 li
173.215 118.695 li
173.215 118.695 li
cp
173.08 118.785 mo
175.08 116.141 li
173.08 113.497 li
171.082 116.141 li
173.08 118.785 li
173.08 118.785 li
cp
172.969 119.25 mo
174.97 116.606 li
172.969 113.963 li
170.97 116.606 li
172.969 119.25 li
172.969 119.25 li
cp
172.836 119.25 mo
174.835 116.606 li
172.836 113.963 li
170.837 116.606 li
172.836 119.25 li
172.836 119.25 li
cp
172.703 118.541 mo
174.701 115.897 li
172.703 113.254 li
170.704 115.897 li
172.703 118.541 li
172.703 118.541 li
cp
172.569 118.429 mo
174.568 115.786 li
172.569 113.143 li
170.571 115.786 li
172.569 118.429 li
172.569 118.429 li
cp
172.437 118.739 mo
174.436 116.096 li
172.437 113.453 li
170.437 116.096 li
172.437 118.739 li
172.437 118.739 li
cp
172.325 118.695 mo
174.325 116.052 li
172.325 113.408 li
170.325 116.052 li
172.325 118.695 li
172.325 118.695 li
cp
172.192 118.186 mo
174.191 115.541 li
172.192 112.897 li
170.192 115.541 li
172.192 118.186 li
172.192 118.186 li
cp
172.058 118.073 mo
174.059 115.431 li
172.058 112.787 li
170.06 115.431 li
172.058 118.073 li
172.058 118.073 li
cp
171.925 118.318 mo
173.924 115.675 li
171.925 113.03 li
169.926 115.675 li
171.925 118.318 li
171.925 118.318 li
cp
171.792 118.141 mo
173.791 115.496 li
171.792 112.853 li
169.793 115.496 li
171.792 118.141 li
171.792 118.141 li
cp
171.659 117.695 mo
173.658 115.052 li
171.659 112.409 li
169.659 115.052 li
171.659 117.695 li
171.659 117.695 li
cp
171.525 117.586 mo
173.524 114.942 li
171.525 112.298 li
169.526 114.942 li
171.525 117.586 li
171.525 117.586 li
cp
171.392 117.606 mo
173.391 114.963 li
171.392 112.32 li
169.394 114.963 li
171.392 117.606 li
171.392 117.606 li
cp
171.259 117.94 mo
173.258 115.297 li
171.259 112.654 li
169.261 115.297 li
171.259 117.94 li
171.259 117.94 li
cp
171.103 117.519 mo
173.103 114.875 li
171.103 112.231 li
169.104 114.875 li
171.103 117.519 li
171.103 117.519 li
cp
170.97 117.273 mo
172.969 114.629 li
170.97 111.986 li
168.971 114.629 li
170.97 117.273 li
170.97 117.273 li
cp
170.837 117.541 mo
172.836 114.897 li
170.837 112.253 li
168.838 114.897 li
170.837 117.541 li
170.837 117.541 li
cp
170.704 116.829 mo
172.703 114.186 li
170.704 111.542 li
168.704 114.186 li
170.704 116.829 li
170.704 116.829 li
cp
170.548 116.784 mo
172.548 114.141 li
170.548 111.498 li
168.549 114.141 li
170.548 116.784 li
170.548 116.784 li
cp
170.415 116.94 mo
172.414 114.297 li
170.415 111.654 li
168.416 114.297 li
170.415 116.94 li
170.415 116.94 li
cp
170.281 116.252 mo
172.28 113.608 li
170.281 110.965 li
168.282 113.608 li
170.281 116.252 li
170.281 116.252 li
cp
170.126 115.919 mo
172.125 113.275 li
170.126 110.632 li
168.126 113.275 li
170.126 115.919 li
170.126 115.919 li
cp
169.993 116.896 mo
171.992 114.253 li
169.993 111.609 li
167.993 114.253 li
169.993 116.896 li
169.993 116.896 li
cp
169.837 117.095 mo
171.837 114.453 li
169.837 111.81 li
167.838 114.453 li
169.837 117.095 li
169.837 117.095 li
cp
169.704 116.296 mo
171.703 113.653 li
169.704 111.01 li
167.705 113.653 li
169.704 116.296 li
169.704 116.296 li
cp
169.549 116.408 mo
171.548 113.764 li
169.549 111.12 li
167.549 113.764 li
169.549 116.408 li
169.549 116.408 li
cp
169.415 116.541 mo
171.415 113.896 li
169.415 111.253 li
167.416 113.896 li
169.415 116.541 li
169.415 116.541 li
cp
169.261 116.386 mo
171.259 113.742 li
169.261 111.099 li
167.26 113.742 li
169.261 116.386 li
169.261 116.386 li
cp
169.104 116.474 mo
171.103 113.83 li
169.104 111.188 li
167.105 113.83 li
169.104 116.474 li
169.104 116.474 li
cp
168.971 116.341 mo
170.97 113.697 li
168.971 111.054 li
166.973 113.697 li
168.971 116.341 li
168.971 116.341 li
cp
168.814 116.252 mo
170.815 113.608 li
168.814 110.965 li
166.816 113.608 li
168.814 116.252 li
168.814 116.252 li
cp
168.66 116.208 mo
170.659 113.564 li
168.66 110.921 li
166.66 113.564 li
168.66 116.208 li
168.66 116.208 li
cp
168.504 115.808 mo
170.503 113.164 li
168.504 110.521 li
166.505 113.164 li
168.504 115.808 li
168.504 115.808 li
cp
168.35 116.03 mo
170.349 113.387 li
168.35 110.743 li
166.35 113.387 li
168.35 116.03 li
168.35 116.03 li
cp
168.193 115.808 mo
170.192 113.164 li
168.193 110.521 li
166.194 113.164 li
168.193 115.808 li
168.193 115.808 li
cp
168.037 115.229 mo
170.038 112.586 li
168.037 109.942 li
166.038 112.586 li
168.037 115.229 li
168.037 115.229 li
cp
167.883 114.853 mo
169.882 112.208 li
167.883 109.564 li
165.884 112.208 li
167.883 114.853 li
167.883 114.853 li
cp
167.727 114.719 mo
169.726 112.075 li
167.727 109.432 li
165.728 112.075 li
167.727 114.719 li
167.727 114.719 li
cp
167.572 114.942 mo
169.571 112.298 li
167.572 109.654 li
165.571 112.298 li
167.572 114.942 li
167.572 114.942 li
cp
167.416 114.963 mo
169.415 112.32 li
167.416 109.677 li
165.417 112.32 li
167.416 114.963 li
167.416 114.963 li
cp
167.26 114.541 mo
169.261 111.897 li
167.26 109.255 li
165.261 111.897 li
167.26 114.541 li
167.26 114.541 li
cp
167.082 114.52 mo
169.082 111.876 li
167.082 109.232 li
165.083 111.876 li
167.082 114.52 li
167.082 114.52 li
cp
166.928 114.985 mo
168.927 112.342 li
166.928 109.698 li
164.928 112.342 li
166.928 114.985 li
166.928 114.985 li
cp
166.771 114.52 mo
168.771 111.876 li
166.771 109.232 li
164.772 111.876 li
166.771 114.52 li
166.771 114.52 li
cp
166.594 114.12 mo
168.594 111.476 li
166.594 108.832 li
164.595 111.476 li
166.594 114.12 li
166.594 114.12 li
cp
166.438 113.963 mo
168.438 111.32 li
166.438 108.677 li
164.438 111.32 li
166.438 113.963 li
166.438 113.963 li
cp
166.261 113.92 mo
168.26 111.276 li
166.261 108.633 li
164.262 111.276 li
166.261 113.92 li
166.261 113.92 li
cp
166.105 114.297 mo
168.105 111.654 li
166.105 109.01 li
164.105 111.654 li
166.105 114.297 li
166.105 114.297 li
cp
165.928 113.986 mo
167.928 111.343 li
165.928 108.699 li
163.928 111.343 li
165.928 113.986 li
165.928 113.986 li
cp
165.749 113.608 mo
167.75 110.965 li
165.749 108.321 li
163.75 110.965 li
165.749 113.608 li
165.749 113.608 li
cp
165.595 113.941 mo
167.594 111.298 li
165.595 108.654 li
163.595 111.298 li
165.595 113.941 li
165.595 113.941 li
cp
165.417 113.497 mo
167.416 110.854 li
165.417 108.211 li
163.418 110.854 li
165.417 113.497 li
165.417 113.497 li
cp
165.239 112.831 mo
167.238 110.188 li
165.239 107.545 li
163.239 110.188 li
165.239 112.831 li
165.239 112.831 li
cp
165.062 112.787 mo
167.061 110.144 li
165.062 107.5 li
163.062 110.144 li
165.062 112.787 li
165.062 112.787 li
cp
164.884 112.897 mo
166.883 110.254 li
164.884 107.61 li
162.885 110.254 li
164.884 112.897 li
164.884 112.897 li
cp
164.705 113.453 mo
166.705 110.81 li
164.705 108.166 li
162.707 110.81 li
164.705 113.453 li
164.705 113.453 li
cp
164.528 113.119 mo
166.526 110.476 li
164.528 107.832 li
162.529 110.476 li
164.528 113.119 li
164.528 113.119 li
cp
164.351 113.098 mo
166.35 110.454 li
164.351 107.811 li
162.352 110.454 li
164.351 113.098 li
164.351 113.098 li
cp
164.173 113.098 mo
166.172 110.454 li
164.173 107.811 li
162.174 110.454 li
164.173 113.098 li
164.173 113.098 li
cp
163.973 112.364 mo
165.973 109.722 li
163.973 107.078 li
161.973 109.722 li
163.973 112.364 li
163.973 112.364 li
cp
163.795 111.942 mo
165.794 109.299 li
163.795 106.655 li
161.796 109.299 li
163.795 111.942 li
163.795 111.942 li
cp
163.617 111.587 mo
165.616 108.943 li
163.617 106.3 li
161.618 108.943 li
163.617 111.587 li
163.617 111.587 li
cp
163.418 111.876 mo
165.417 109.232 li
163.418 106.589 li
161.418 109.232 li
163.418 111.876 li
163.418 111.876 li
cp
163.239 112.586 mo
165.239 109.942 li
163.239 107.299 li
161.24 109.942 li
163.239 112.586 li
163.239 112.586 li
cp
163.04 112.809 mo
165.038 110.165 li
163.04 107.521 li
161.041 110.165 li
163.04 112.809 li
163.04 112.809 li
cp
162.84 111.897 mo
164.839 109.255 li
162.84 106.611 li
160.841 109.255 li
162.84 111.897 li
162.84 111.897 li
cp
162.662 110.653 mo
164.661 108.01 li
162.662 105.366 li
160.663 108.01 li
162.662 110.653 li
162.662 110.653 li
cp
162.462 111.276 mo
164.462 108.633 li
162.462 105.989 li
160.462 108.633 li
162.462 111.276 li
162.462 111.276 li
cp
162.262 111.81 mo
164.262 109.166 li
162.262 106.522 li
160.264 109.166 li
162.262 111.81 li
162.262 111.81 li
cp
162.063 111.075 mo
164.061 108.432 li
162.063 105.789 li
160.063 108.432 li
162.063 111.075 li
162.063 111.075 li
cp
161.863 111.12 mo
163.862 108.477 li
161.863 105.833 li
159.862 108.477 li
161.863 111.12 li
161.863 111.12 li
cp
161.662 110.454 mo
163.662 107.811 li
161.662 105.167 li
159.663 107.811 li
161.662 110.454 li
161.662 110.454 li
cp
161.462 110.12 mo
163.462 107.477 li
161.462 104.833 li
159.463 107.477 li
161.462 110.12 li
161.462 110.12 li
cp
161.24 110.188 mo
163.239 107.545 li
161.24 104.9 li
159.241 107.545 li
161.24 110.188 li
161.24 110.188 li
cp
161.041 110.21 mo
163.04 107.566 li
161.041 104.923 li
159.041 107.566 li
161.041 110.21 li
161.041 110.21 li
cp
160.841 110.343 mo
162.84 107.699 li
160.841 105.056 li
158.841 107.699 li
160.841 110.343 li
160.841 110.343 li
cp
160.619 110.564 mo
162.617 107.922 li
160.619 105.278 li
158.62 107.922 li
160.619 110.564 li
160.619 110.564 li
cp
160.396 111.054 mo
162.396 108.411 li
160.396 105.767 li
158.396 108.411 li
160.396 111.054 li
160.396 111.054 li
cp
160.196 110.254 mo
162.195 107.61 li
160.196 104.968 li
158.197 107.61 li
160.196 110.254 li
160.196 110.254 li
cp
159.974 109.722 mo
161.973 107.078 li
159.974 104.435 li
157.976 107.078 li
159.974 109.722 li
159.974 109.722 li
cp
159.753 109.921 mo
161.752 107.276 li
159.753 104.634 li
157.753 107.276 li
159.753 109.921 li
159.753 109.921 li
cp
159.53 109.521 mo
161.529 106.877 li
159.53 104.233 li
157.53 106.877 li
159.53 109.521 li
159.53 109.521 li
cp
159.308 109.632 mo
161.307 106.988 li
159.308 104.345 li
157.309 106.988 li
159.308 109.632 li
159.308 109.632 li
cp
159.085 109.742 mo
161.086 107.1 li
159.085 104.456 li
157.086 107.1 li
159.085 109.742 li
159.085 109.742 li
cp
158.863 109.276 mo
160.862 106.633 li
158.863 103.989 li
156.863 106.633 li
158.863 109.276 li
158.863 109.276 li
cp
158.62 108.633 mo
160.619 105.989 li
158.62 103.346 li
156.619 105.989 li
158.62 108.633 li
158.62 108.633 li
cp
158.396 108.654 mo
160.396 106.011 li
158.396 103.367 li
156.397 106.011 li
158.396 108.654 li
158.396 108.654 li
cp
158.153 109.188 mo
160.151 106.544 li
158.153 103.9 li
156.154 106.544 li
158.153 109.188 li
158.153 109.188 li
cp
157.931 108.988 mo
159.93 106.345 li
157.931 103.701 li
155.931 106.345 li
157.931 108.988 li
157.931 108.988 li
cp
157.687 108.099 mo
159.685 105.456 li
157.687 102.813 li
155.688 105.456 li
157.687 108.099 li
157.687 108.099 li
cp
157.441 108.166 mo
159.441 105.522 li
157.441 102.879 li
155.442 105.522 li
157.441 108.166 li
157.441 108.166 li
cp
157.197 108.432 mo
159.196 105.789 li
157.197 103.146 li
155.198 105.789 li
157.197 108.432 li
157.197 108.432 li
cp
156.953 108.299 mo
158.952 105.656 li
156.953 103.013 li
154.954 105.656 li
156.953 108.299 li
156.953 108.299 li
cp
156.708 108.121 mo
158.708 105.478 li
156.708 102.835 li
154.71 105.478 li
156.708 108.121 li
156.708 108.121 li
cp
156.465 107.744 mo
158.464 105.101 li
156.465 102.457 li
154.466 105.101 li
156.465 107.744 li
156.465 107.744 li
cp
156.198 107.521 mo
158.197 104.878 li
156.198 102.234 li
154.198 104.878 li
156.198 107.521 li
156.198 107.521 li
cp
155.953 107.211 mo
157.953 104.567 li
155.953 101.924 li
153.954 104.567 li
155.953 107.211 li
155.953 107.211 li
cp
155.688 107.123 mo
157.687 104.479 li
155.688 101.836 li
153.688 104.479 li
155.688 107.123 li
155.688 107.123 li
cp
155.42 107.144 mo
157.42 104.5 li
155.42 101.857 li
153.421 104.5 li
155.42 107.144 li
155.42 107.144 li
cp
155.153 106.566 mo
157.153 103.923 li
155.153 101.279 li
153.154 103.923 li
155.153 106.566 li
155.153 106.566 li
cp
154.888 106.678 mo
156.887 104.033 li
154.888 101.391 li
152.888 104.033 li
154.888 106.678 li
154.888 106.678 li
cp
154.62 106.855 mo
156.619 104.212 li
154.62 101.567 li
152.622 104.212 li
154.62 106.855 li
154.62 106.855 li
cp
154.354 106.544 mo
156.354 103.9 li
154.354 101.257 li
152.354 103.9 li
154.354 106.544 li
154.354 106.544 li
cp
154.065 106.056 mo
156.064 103.412 li
154.065 100.769 li
152.066 103.412 li
154.065 106.056 li
154.065 106.056 li
cp
153.776 105.656 mo
155.775 103.013 li
153.776 100.369 li
151.777 103.013 li
153.776 105.656 li
153.776 105.656 li
cp
153.51 105.123 mo
155.51 102.479 li
153.51 99.835 li
151.51 102.479 li
153.51 105.123 li
153.51 105.123 li
cp
153.222 105.167 mo
155.221 102.523 li
153.222 99.8799 li
151.223 102.523 li
153.222 105.167 li
153.222 105.167 li
cp
152.932 104.812 mo
154.931 102.168 li
152.932 99.5244 li
150.934 102.168 li
152.932 104.812 li
152.932 104.812 li
cp
152.622 104.767 mo
154.62 102.123 li
152.622 99.4795 li
150.623 102.123 li
152.622 104.767 li
152.622 104.767 li
cp
152.332 105.278 mo
154.331 102.635 li
152.332 99.9912 li
150.333 102.635 li
152.332 105.278 li
152.332 105.278 li
cp
152.021 104.944 mo
154.021 102.301 li
152.021 99.6572 li
150.023 102.301 li
152.021 104.944 li
152.021 104.944 li
cp
151.732 104.833 mo
153.732 102.19 li
151.732 99.5469 li
149.733 102.19 li
151.732 104.833 li
151.732 104.833 li
cp
151.422 104.522 mo
153.421 101.88 li
151.422 99.2354 li
149.423 101.88 li
151.422 104.522 li
151.422 104.522 li
cp
151.111 103.657 mo
153.11 101.014 li
151.111 98.3691 li
149.111 101.014 li
151.111 103.657 li
151.111 103.657 li
cp
150.777 103.457 mo
152.776 100.813 li
150.777 98.1699 li
148.778 100.813 li
150.777 103.457 li
150.777 103.457 li
cp
150.467 103.723 mo
152.465 101.079 li
150.467 98.4365 li
148.468 101.079 li
150.467 103.723 li
150.467 103.723 li
cp
150.133 103.879 mo
152.133 101.235 li
150.133 98.5928 li
148.134 101.235 li
150.133 103.879 li
150.133 103.879 li
cp
149.801 103.19 mo
151.799 100.547 li
149.801 97.9033 li
147.801 100.547 li
149.801 103.19 li
149.801 103.19 li
cp
149.467 102.879 mo
151.466 100.235 li
149.467 97.5918 li
147.468 100.235 li
149.467 102.879 li
149.467 102.879 li
cp
149.134 102.945 mo
151.133 100.302 li
149.134 97.6582 li
147.135 100.302 li
149.134 102.945 li
149.134 102.945 li
cp
148.778 102.367 mo
150.777 99.7246 li
148.778 97.0811 li
146.779 99.7246 li
148.778 102.367 li
148.778 102.367 li
cp
148.423 102.168 mo
150.422 99.5244 li
148.423 96.8809 li
146.425 99.5244 li
148.423 102.168 li
148.423 102.168 li
cp
148.067 102.568 mo
150.066 99.9248 li
148.067 97.2813 li
146.068 99.9248 li
148.067 102.568 li
148.067 102.568 li
cp
147.712 102.412 mo
149.711 99.7686 li
147.712 97.126 li
145.713 99.7686 li
147.712 102.412 li
147.712 102.412 li
cp
147.356 101.235 mo
149.356 98.5928 li
147.356 95.9482 li
145.357 98.5928 li
147.356 101.235 li
147.356 101.235 li
cp
146.979 100.612 mo
148.979 97.9688 li
146.979 95.3262 li
144.979 97.9688 li
146.979 100.612 li
146.979 100.612 li
cp
146.602 101.791 mo
148.601 99.1465 li
146.602 96.5029 li
144.602 99.1465 li
146.602 101.791 li
146.602 101.791 li
cp
146.224 101.768 mo
148.224 99.125 li
146.224 96.4814 li
144.225 99.125 li
146.224 101.768 li
146.224 101.768 li
cp
145.824 101.457 mo
147.823 98.8135 li
145.824 96.1699 li
143.823 98.8135 li
145.824 101.457 li
145.824 101.457 li
cp
145.424 100.946 mo
147.423 98.3027 li
145.424 95.6602 li
143.425 98.3027 li
145.424 100.946 li
145.424 100.946 li
cp
145.023 99.2139 mo
147.023 96.5703 li
145.023 93.9268 li
143.024 96.5703 li
145.023 99.2139 li
145.023 99.2139 li
cp
144.625 98.9473 mo
146.623 96.3047 li
144.625 93.6611 li
142.626 96.3047 li
144.625 98.9473 li
144.625 98.9473 li
cp
144.202 99.0137 mo
146.201 96.3701 li
144.202 93.7275 li
142.202 96.3701 li
144.202 99.0137 li
144.202 99.0137 li
cp
143.78 98.5244 mo
145.779 95.8809 li
143.78 93.2383 li
141.78 95.8809 li
143.78 98.5244 li
143.78 98.5244 li
cp
143.335 98.2363 mo
145.335 95.5928 li
143.335 92.9492 li
141.336 95.5928 li
143.335 98.2363 li
143.335 98.2363 li
cp
142.892 98.458 mo
144.891 95.8145 li
142.892 93.1709 li
140.893 95.8145 li
142.892 98.458 li
142.892 98.458 li
cp
142.448 97.9258 mo
144.447 95.2822 li
142.448 92.6387 li
140.447 95.2822 li
142.448 97.9258 li
142.448 97.9258 li
cp
142.002 97.7031 mo
144.002 95.0596 li
142.002 92.416 li
140.004 95.0596 li
142.002 97.7031 li
142.002 97.7031 li
cp
141.536 97.2813 mo
143.536 94.6377 li
141.536 91.9941 li
139.537 94.6377 li
141.536 97.2813 li
141.536 97.2813 li
cp
141.047 96.9707 mo
143.048 94.3271 li
141.047 91.6836 li
139.049 94.3271 li
141.047 96.9707 li
141.047 96.9707 li
cp
140.582 97.1475 mo
142.581 94.5049 li
140.582 91.8613 li
138.581 94.5049 li
140.582 97.1475 li
140.582 97.1475 li
cp
140.07 96.6152 mo
142.069 93.9717 li
140.07 91.3281 li
138.07 93.9717 li
140.07 96.6152 li
140.07 96.6152 li
cp
139.581 95.2373 mo
141.581 92.5947 li
139.581 89.9512 li
137.583 92.5947 li
139.581 95.2373 li
139.581 95.2373 li
cp
139.049 95.7256 mo
141.047 93.082 li
139.049 90.4395 li
137.05 93.082 li
139.049 95.7256 li
139.049 95.7256 li
cp
138.538 95.2822 mo
140.536 92.6387 li
138.538 89.9951 li
136.538 92.6387 li
138.538 95.2822 li
138.538 95.2822 li
cp
137.981 93.8154 mo
139.982 91.1719 li
137.981 88.5283 li
135.982 91.1719 li
137.981 93.8154 li
137.981 93.8154 li
cp
137.427 93.3721 mo
139.426 90.7285 li
137.427 88.085 li
135.428 90.7285 li
137.427 93.3721 li
137.427 93.3721 li
cp
136.872 91.8613 mo
138.871 89.2178 li
136.872 86.5742 li
134.871 89.2178 li
136.872 91.8613 li
136.872 91.8613 li
cp
136.294 91.5723 mo
138.293 88.9287 li
136.294 86.2852 li
134.295 88.9287 li
136.294 91.5723 li
136.294 91.5723 li
cp
135.693 91.7715 mo
137.693 89.1289 li
135.693 86.4854 li
133.694 89.1289 li
135.693 91.7715 li
135.693 91.7715 li
cp
135.095 90.5273 mo
137.094 87.8838 li
135.095 85.2402 li
133.095 87.8838 li
135.095 90.5273 li
135.095 90.5273 li
cp
134.472 90.373 mo
136.472 87.7285 li
134.472 85.085 li
132.474 87.7285 li
134.472 90.373 li
134.472 90.373 li
cp
133.827 89.6836 mo
135.827 87.04 li
133.827 84.3965 li
131.829 87.04 li
133.827 89.6836 li
133.827 89.6836 li
cp
133.183 89.4619 mo
135.184 86.8184 li
133.183 84.1748 li
131.185 86.8184 li
133.183 89.4619 li
133.183 89.4619 li
cp
132.495 88.8174 mo
134.495 86.1738 li
132.495 83.5303 li
130.496 86.1738 li
132.495 88.8174 li
132.495 88.8174 li
cp
131.808 88.0176 mo
133.807 85.374 li
131.808 82.7314 li
129.807 85.374 li
131.808 88.0176 li
131.808 88.0176 li
cp
131.096 87.2402 mo
133.095 84.5967 li
131.096 81.9541 li
129.097 84.5967 li
131.096 87.2402 li
131.096 87.2402 li
cp
130.341 86.5078 mo
132.34 83.8643 li
130.341 81.2207 li
128.341 83.8643 li
130.341 86.5078 li
130.341 86.5078 li
cp
129.585 86.7734 mo
131.584 84.1299 li
129.585 81.4863 li
127.586 84.1299 li
129.585 86.7734 li
129.585 86.7734 li
cp
128.808 84.375 mo
130.807 81.7314 li
128.808 79.0874 li
126.808 81.7314 li
128.808 84.375 li
128.808 84.375 li
cp
127.985 82.9307 mo
129.984 80.2871 li
127.985 77.6436 li
125.987 80.2871 li
127.985 82.9307 li
127.985 82.9307 li
cp
127.142 82.2861 mo
129.141 79.6431 li
127.142 77 li
125.143 79.6431 li
127.142 82.2861 li
127.142 82.2861 li
cp
126.275 80.8418 mo
128.274 78.1992 li
126.275 75.5557 li
124.275 78.1992 li
126.275 80.8418 li
126.275 80.8418 li
cp
125.364 80.8867 mo
127.364 78.2432 li
125.364 75.6001 li
123.365 78.2432 li
125.364 80.8867 li
125.364 80.8867 li
cp
124.432 79.3765 mo
126.431 76.7329 li
124.432 74.0894 li
122.433 76.7329 li
124.432 79.3765 li
124.432 79.3765 li
cp
123.454 76.7993 mo
125.454 74.1558 li
123.454 71.5127 li
121.454 74.1558 li
123.454 76.7993 li
123.454 76.7993 li
cp
122.433 76.644 mo
124.432 74.0005 li
122.433 71.3574 li
120.434 74.0005 li
122.433 76.644 li
122.433 76.644 li
cp
121.366 76.022 mo
123.365 73.3784 li
121.366 70.7349 li
119.366 73.3784 li
121.366 76.022 li
121.366 76.022 li
cp
120.233 73.645 mo
122.232 71.0015 li
120.233 68.3584 li
118.234 71.0015 li
120.233 73.645 li
120.233 73.645 li
cp
119.078 71.7788 mo
121.077 69.1357 li
119.078 66.4922 li
117.078 69.1357 li
119.078 71.7788 li
119.078 71.7788 li
cp
117.834 71.6904 mo
119.833 69.0469 li
117.834 66.4033 li
115.835 69.0469 li
117.834 71.6904 li
117.834 71.6904 li
cp
116.546 70.8687 mo
118.545 68.2251 li
116.546 65.5815 li
114.546 68.2251 li
116.546 70.8687 li
116.546 70.8687 li
cp
115.169 68.6689 mo
117.168 66.0254 li
115.169 63.3818 li
113.169 66.0254 li
115.169 68.6689 li
115.169 68.6689 li
cp
113.725 67.4917 mo
115.724 64.8481 li
113.725 62.2046 li
111.725 64.8481 li
113.725 67.4917 li
113.725 67.4917 li
cp
112.17 65.1812 mo
114.169 62.5381 li
112.17 59.8945 li
110.169 62.5381 li
112.17 65.1812 li
112.17 65.1812 li
cp
110.503 62.2495 mo
112.502 59.606 li
110.503 56.9624 li
108.504 59.606 li
110.503 62.2495 li
110.503 62.2495 li
cp
108.726 58.9395 mo
110.726 56.2959 li
108.726 53.6523 li
106.727 56.2959 li
108.726 58.9395 li
108.726 58.9395 li
cp
106.815 57.0732 mo
108.815 54.4297 li
106.815 51.7866 li
104.816 54.4297 li
106.815 57.0732 li
106.815 57.0732 li
cp
104.728 53.3413 mo
106.727 50.6978 li
104.728 48.0542 li
102.728 50.6978 li
104.728 53.3413 li
104.728 53.3413 li
cp
102.439 50.9204 mo
104.439 48.2764 li
102.439 45.6333 li
100.44 48.2764 li
102.439 50.9204 li
102.439 50.9204 li
cp
99.9067 44.6333 mo
101.906 41.9897 li
99.9067 39.3467 li
97.9077 41.9897 li
99.9067 44.6333 li
99.9067 44.6333 li
cp
97.0854 39.1904 mo
99.085 36.5474 li
97.0854 33.9038 li
95.0864 36.5474 li
97.0854 39.1904 li
97.0854 39.1904 li
cp
93.8872 33.6152 mo
95.8862 30.9717 li
93.8872 28.3281 li
91.8872 30.9717 li
93.8872 33.6152 li
93.8872 33.6152 li
cp
90.1772 29.2168 mo
92.1768 26.5732 li
90.1772 23.9297 li
88.1782 26.5732 li
90.1772 29.2168 li
90.1772 29.2168 li
cp
85.8013 30.2832 mo
87.8003 27.6396 li
85.8013 24.9961 li
83.8018 27.6396 li
85.8013 30.2832 li
85.8013 30.2832 li
cp
80.4478 31.7715 mo
82.4468 29.1279 li
80.4478 26.4844 li
78.4482 29.1279 li
80.4478 31.7715 li
80.4478 31.7715 li
cp
73.5615 36.6582 mo
75.5601 34.0151 li
73.5615 31.3716 li
71.5615 34.0151 li
73.5615 36.6582 li
73.5615 36.6582 li
cp
63.8315 49.9648 mo
65.8301 47.3213 li
63.8315 44.6777 li
61.8315 47.3213 li
63.8315 49.9648 li
63.8315 49.9648 li
cp
47.1929 66.5366 mo
49.1924 63.8931 li
47.1929 61.249 li
45.1938 63.8931 li
47.1929 66.5366 li
47.1929 66.5366 li
cp
.627649 3.05176e-5 1 3.05176e-5 cmyk
@
188.563 132.38 mo
190.563 129.736 li
188.563 127.093 li
186.565 129.736 li
188.563 132.38 li
188.563 132.38 li
cp
188.497 131.979 mo
190.497 129.335 li
188.497 126.692 li
186.498 129.335 li
188.497 131.979 li
188.497 131.979 li
cp
188.431 131.913 mo
190.43 129.27 li
188.431 126.626 li
186.432 129.27 li
188.431 131.913 li
188.431 131.913 li
cp
188.364 132.224 mo
190.363 129.58 li
188.364 126.937 li
186.364 129.58 li
188.364 132.224 li
188.364 132.224 li
cp
188.297 132.224 mo
190.297 129.58 li
188.297 126.937 li
186.298 129.58 li
188.297 132.224 li
188.297 132.224 li
cp
188.229 132.202 mo
190.23 129.559 li
188.229 126.915 li
186.231 129.559 li
188.229 132.202 li
188.229 132.202 li
cp
188.142 131.979 mo
190.141 129.335 li
188.142 126.692 li
186.143 129.335 li
188.142 131.979 li
188.142 131.979 li
cp
188.076 131.957 mo
190.074 129.314 li
188.076 126.671 li
186.076 129.314 li
188.076 131.957 li
188.076 131.957 li
cp
188.009 131.757 mo
190.008 129.113 li
188.009 126.47 li
186.009 129.113 li
188.009 131.757 li
188.009 131.757 li
cp
187.942 131.558 mo
189.941 128.914 li
187.942 126.271 li
185.942 128.914 li
187.942 131.558 li
187.942 131.558 li
cp
187.875 131.269 mo
189.875 128.625 li
187.875 125.981 li
185.876 128.625 li
187.875 131.269 li
187.875 131.269 li
cp
187.808 131.469 mo
189.809 128.825 li
187.808 126.183 li
185.809 128.825 li
187.808 131.469 li
187.808 131.469 li
cp
187.742 131.735 mo
189.741 129.092 li
187.742 126.448 li
185.743 129.092 li
187.742 131.735 li
187.742 131.735 li
cp
187.675 131.38 mo
189.675 128.736 li
187.675 126.093 li
185.676 128.736 li
187.675 131.38 li
187.675 131.38 li
cp
187.608 131.603 mo
189.607 128.959 li
187.608 126.315 li
185.61 128.959 li
187.608 131.603 li
187.608 131.603 li
cp
187.542 131.936 mo
189.541 129.291 li
187.542 126.647 li
185.543 129.291 li
187.542 131.936 li
187.542 131.936 li
cp
187.476 131.735 mo
189.475 129.092 li
187.476 126.448 li
185.477 129.092 li
187.476 131.735 li
187.476 131.735 li
cp
187.409 131.091 mo
189.408 128.447 li
187.409 125.804 li
185.409 128.447 li
187.409 131.091 li
187.409 131.091 li
cp
187.319 130.846 mo
189.318 128.202 li
187.319 125.559 li
185.32 128.202 li
187.319 130.846 li
187.319 130.846 li
cp
187.253 131.024 mo
189.252 128.38 li
187.253 125.736 li
185.254 128.38 li
187.253 131.024 li
187.253 131.024 li
cp
187.187 130.957 mo
189.186 128.314 li
187.187 125.671 li
185.188 128.314 li
187.187 130.957 li
187.187 130.957 li
cp
187.12 131.047 mo
189.119 128.403 li
187.12 125.76 li
185.12 128.403 li
187.12 131.047 li
187.12 131.047 li
cp
187.054 130.846 mo
189.052 128.202 li
187.054 125.559 li
185.055 128.202 li
187.054 130.846 li
187.054 130.846 li
cp
186.986 130.357 mo
188.986 127.714 li
186.986 125.071 li
184.986 127.714 li
186.986 130.357 li
186.986 130.357 li
cp
186.897 130.535 mo
188.896 127.892 li
186.897 125.249 li
184.898 127.892 li
186.897 130.535 li
186.897 130.535 li
cp
186.831 130.402 mo
188.83 127.759 li
186.831 125.115 li
184.832 127.759 li
186.831 130.402 li
186.831 130.402 li
cp
186.764 130.068 mo
188.764 127.425 li
186.764 124.781 li
184.766 127.425 li
186.764 130.068 li
186.764 130.068 li
cp
186.698 130.336 mo
188.697 127.691 li
186.698 125.049 li
184.699 127.691 li
186.698 130.336 li
186.698 130.336 li
cp
186.631 130.514 mo
188.63 127.87 li
186.631 125.227 li
184.633 127.87 li
186.631 130.514 li
186.631 130.514 li
cp
186.542 130.292 mo
188.542 127.647 li
186.542 125.004 li
184.543 127.647 li
186.542 130.292 li
186.542 130.292 li
cp
186.476 129.98 mo
188.475 127.337 li
186.476 124.693 li
184.477 127.337 li
186.476 129.98 li
186.476 129.98 li
cp
186.409 129.936 mo
188.407 127.292 li
186.409 124.648 li
184.41 127.292 li
186.409 129.936 li
186.409 129.936 li
cp
186.343 129.869 mo
188.342 127.226 li
186.343 124.582 li
184.343 127.226 li
186.343 129.869 li
186.343 129.869 li
cp
186.253 130.27 mo
188.253 127.626 li
186.253 124.982 li
184.254 127.626 li
186.253 130.27 li
186.253 130.27 li
cp
186.187 130.357 mo
188.187 127.714 li
186.187 125.071 li
184.188 127.714 li
186.187 130.357 li
186.187 130.357 li
cp
186.12 129.847 mo
188.12 127.204 li
186.12 124.561 li
184.121 127.204 li
186.12 129.847 li
186.12 129.847 li
cp
186.031 129.98 mo
188.031 127.337 li
186.031 124.693 li
184.032 127.337 li
186.031 129.98 li
186.031 129.98 li
cp
185.965 129.936 mo
187.964 127.292 li
185.965 124.648 li
183.966 127.292 li
185.965 129.936 li
185.965 129.936 li
cp
185.898 129.559 mo
187.897 126.915 li
185.898 124.271 li
183.898 126.915 li
185.898 129.559 li
185.898 129.559 li
cp
185.809 129.604 mo
187.808 126.959 li
185.809 124.315 li
183.811 126.959 li
185.809 129.604 li
185.809 129.604 li
cp
185.743 129.47 mo
187.742 126.825 li
185.743 124.182 li
183.743 126.825 li
185.743 129.47 li
185.743 129.47 li
cp
185.676 128.959 mo
187.675 126.315 li
185.676 123.671 li
183.677 126.315 li
185.676 128.959 li
185.676 128.959 li
cp
185.587 129.137 mo
187.586 126.493 li
185.587 123.85 li
183.588 126.493 li
185.587 129.137 li
185.587 129.137 li
cp
185.521 129.58 mo
187.521 126.937 li
185.521 124.293 li
183.521 126.937 li
185.521 129.58 li
185.521 129.58 li
cp
185.453 129.202 mo
187.452 126.559 li
185.453 123.916 li
183.455 126.559 li
185.453 129.202 li
185.453 129.202 li
cp
185.365 128.937 mo
187.364 126.293 li
185.365 123.649 li
183.365 126.293 li
185.365 128.937 li
185.365 128.937 li
cp
185.299 128.914 mo
187.298 126.271 li
185.299 123.627 li
183.299 126.271 li
185.299 128.914 li
185.299 128.914 li
cp
185.209 129.113 mo
187.209 126.47 li
185.209 123.826 li
183.21 126.47 li
185.209 129.113 li
185.209 129.113 li
cp
185.143 129.447 mo
187.142 126.804 li
185.143 124.16 li
183.145 126.804 li
185.143 129.447 li
185.143 129.447 li
cp
185.055 129.004 mo
187.054 126.36 li
185.055 123.717 li
183.055 126.36 li
185.055 129.004 li
185.055 129.004 li
cp
184.986 128.603 mo
186.986 125.959 li
184.986 123.315 li
182.987 125.959 li
184.986 128.603 li
184.986 128.603 li
cp
184.921 128.425 mo
186.92 125.781 li
184.921 123.138 li
182.921 125.781 li
184.921 128.425 li
184.921 128.425 li
cp
184.832 127.915 mo
186.831 125.271 li
184.832 122.627 li
182.833 125.271 li
184.832 127.915 li
184.832 127.915 li
cp
184.766 127.87 mo
186.764 125.227 li
184.766 122.583 li
182.766 125.227 li
184.766 127.87 li
184.766 127.87 li
cp
184.676 127.937 mo
186.676 125.293 li
184.676 122.649 li
182.678 125.293 li
184.676 127.937 li
184.676 127.937 li
cp
184.609 128.004 mo
186.608 125.36 li
184.609 122.716 li
182.61 125.36 li
184.609 128.004 li
184.609 128.004 li
cp
184.521 128.069 mo
186.521 125.426 li
184.521 122.783 li
182.521 125.426 li
184.521 128.069 li
184.521 128.069 li
cp
184.432 128.024 mo
186.432 125.382 li
184.432 122.738 li
182.433 125.382 li
184.432 128.024 li
184.432 128.024 li
cp
184.365 128.625 mo
186.364 125.981 li
184.365 123.338 li
182.366 125.981 li
184.365 128.625 li
184.365 128.625 li
cp
184.277 128.425 mo
186.276 125.781 li
184.277 123.138 li
182.277 125.781 li
184.277 128.425 li
184.277 128.425 li
cp
184.209 127.937 mo
186.21 125.293 li
184.209 122.649 li
182.21 125.293 li
184.209 127.937 li
184.209 127.937 li
cp
184.121 127.937 mo
186.12 125.293 li
184.121 122.649 li
182.122 125.293 li
184.121 127.937 li
184.121 127.937 li
cp
184.055 128.048 mo
186.054 125.404 li
184.055 122.761 li
182.055 125.404 li
184.055 128.048 li
184.055 128.048 li
cp
183.966 128.226 mo
185.965 125.583 li
183.966 122.938 li
181.966 125.583 li
183.966 128.226 li
183.966 128.226 li
cp
183.877 127.87 mo
185.876 125.227 li
183.877 122.583 li
181.877 125.227 li
183.877 127.87 li
183.877 127.87 li
cp
183.811 127.87 mo
185.809 125.227 li
183.811 122.583 li
181.812 125.227 li
183.811 127.87 li
183.811 127.87 li
cp
183.721 127.826 mo
185.721 125.182 li
183.721 122.538 li
181.722 125.182 li
183.721 127.826 li
183.721 127.826 li
cp
183.633 127.714 mo
185.631 125.071 li
183.633 122.428 li
181.634 125.071 li
183.633 127.714 li
183.633 127.714 li
cp
183.565 127.87 mo
185.565 125.227 li
183.565 122.583 li
181.565 125.227 li
183.565 127.87 li
183.565 127.87 li
cp
183.477 127.603 mo
185.477 124.959 li
183.477 122.316 li
181.478 124.959 li
183.477 127.603 li
183.477 127.603 li
cp
183.388 127.425 mo
185.388 124.781 li
183.388 122.139 li
181.389 124.781 li
183.388 127.425 li
183.388 127.425 li
cp
183.321 127.025 mo
185.32 124.383 li
183.321 121.739 li
181.321 124.383 li
183.321 127.025 li
183.321 127.025 li
cp
183.232 126.893 mo
185.231 124.25 li
183.232 121.606 li
181.232 124.25 li
183.232 126.893 li
183.232 126.893 li
cp
183.145 127.114 mo
185.143 124.471 li
183.145 121.827 li
181.144 124.471 li
183.145 127.114 li
183.145 127.114 li
cp
183.077 126.893 mo
185.076 124.25 li
183.077 121.606 li
181.077 124.25 li
183.077 126.893 li
183.077 126.893 li
cp
182.987 126.736 mo
184.986 124.093 li
182.987 121.45 li
180.989 124.093 li
182.987 126.736 li
182.987 126.736 li
cp
182.899 126.937 mo
184.898 124.293 li
182.899 121.65 li
180.899 124.293 li
182.899 126.937 li
182.899 126.937 li
cp
182.811 126.915 mo
184.81 124.271 li
182.811 121.628 li
180.812 124.271 li
182.811 126.915 li
182.811 126.915 li
cp
182.722 126.647 mo
184.721 124.004 li
182.722 121.36 li
180.722 124.004 li
182.722 126.647 li
182.722 126.647 li
cp
182.655 126.671 mo
184.654 124.027 li
182.655 121.384 li
180.655 124.027 li
182.655 126.671 li
182.655 126.671 li
cp
182.565 126.759 mo
184.565 124.116 li
182.565 121.473 li
180.566 124.116 li
182.565 126.759 li
182.565 126.759 li
cp
182.478 126.581 mo
184.477 123.938 li
182.478 121.294 li
180.478 123.938 li
182.478 126.581 li
182.478 126.581 li
cp
182.388 126.382 mo
184.387 123.738 li
182.388 121.095 li
180.389 123.738 li
182.388 126.382 li
182.388 126.382 li
cp
182.3 126.137 mo
184.299 123.493 li
182.3 120.85 li
180.3 123.493 li
182.3 126.137 li
182.3 126.137 li
cp
182.21 126.004 mo
184.209 123.36 li
182.21 120.717 li
180.212 123.36 li
182.21 126.004 li
182.21 126.004 li
cp
182.122 126.248 mo
184.121 123.605 li
182.122 120.962 li
180.122 123.605 li
182.122 126.248 li
182.122 126.248 li
cp
182.055 126.159 mo
184.055 123.516 li
182.055 120.872 li
180.055 123.516 li
182.055 126.159 li
182.055 126.159 li
cp
181.966 125.826 mo
183.966 123.183 li
181.966 120.539 li
179.967 123.183 li
181.966 125.826 li
181.966 125.826 li
cp
181.877 125.849 mo
183.877 123.205 li
181.877 120.562 li
179.878 123.205 li
181.877 125.849 li
181.877 125.849 li
cp
181.788 125.736 mo
183.787 123.094 li
181.788 120.45 li
179.789 123.094 li
181.788 125.736 li
181.788 125.736 li
cp
181.699 125.781 mo
183.698 123.138 li
181.699 120.494 li
179.7 123.138 li
181.699 125.781 li
181.699 125.781 li
cp
181.61 125.981 mo
183.61 123.338 li
181.61 120.694 li
179.611 123.338 li
181.61 125.981 li
181.61 125.981 li
cp
181.521 125.893 mo
183.521 123.25 li
181.521 120.606 li
179.522 123.25 li
181.521 125.893 li
181.521 125.893 li
cp
181.433 125.716 mo
183.433 123.072 li
181.433 120.429 li
179.434 123.072 li
181.433 125.716 li
181.433 125.716 li
cp
181.345 125.716 mo
183.344 123.072 li
181.345 120.429 li
179.346 123.072 li
181.345 125.716 li
181.345 125.716 li
cp
181.255 125.271 mo
183.255 122.627 li
181.255 119.984 li
179.256 122.627 li
181.255 125.271 li
181.255 125.271 li
cp
181.167 125.093 mo
183.165 122.45 li
181.167 119.807 li
179.168 122.45 li
181.167 125.093 li
181.167 125.093 li
cp
181.077 125.671 mo
183.077 123.027 li
181.077 120.383 li
179.079 123.027 li
181.077 125.671 li
181.077 125.671 li
cp
180.989 125.493 mo
182.987 122.849 li
180.989 120.205 li
178.99 122.849 li
180.989 125.493 li
180.989 125.493 li
cp
180.878 125.182 mo
182.876 122.538 li
180.878 119.895 li
178.879 122.538 li
180.878 125.182 li
180.878 125.182 li
cp
180.789 125.026 mo
182.788 122.383 li
180.789 119.739 li
178.789 122.383 li
180.789 125.026 li
180.789 125.026 li
cp
180.7 124.894 mo
182.698 122.25 li
180.7 119.606 li
178.701 122.25 li
180.7 124.894 li
180.7 124.894 li
cp
180.611 124.982 mo
182.61 122.339 li
180.611 119.695 li
178.611 122.339 li
180.611 124.982 li
180.611 124.982 li
cp
180.522 124.826 mo
182.521 122.183 li
180.522 119.539 li
178.523 122.183 li
180.522 124.826 li
180.522 124.826 li
cp
180.434 124.738 mo
182.433 122.095 li
180.434 119.451 li
178.434 122.095 li
180.434 124.738 li
180.434 124.738 li
cp
180.345 124.582 mo
182.344 121.938 li
180.345 119.295 li
178.346 121.938 li
180.345 124.582 li
180.345 124.582 li
cp
180.232 124.315 mo
182.233 121.672 li
180.232 119.028 li
178.234 121.672 li
180.232 124.315 li
180.232 124.315 li
cp
180.145 124.182 mo
182.144 121.538 li
180.145 118.895 li
178.146 121.538 li
180.145 124.182 li
180.145 124.182 li
cp
180.055 124.271 mo
182.055 121.628 li
180.055 118.984 li
178.057 121.628 li
180.055 124.271 li
180.055 124.271 li
cp
179.967 124.359 mo
181.966 121.716 li
179.967 119.072 li
177.968 121.716 li
179.967 124.359 li
179.967 124.359 li
cp
179.856 124.116 mo
181.854 121.473 li
179.856 118.828 li
177.856 121.473 li
179.856 124.116 li
179.856 124.116 li
cp
179.768 124.093 mo
181.767 121.45 li
179.768 118.807 li
177.768 121.45 li
179.768 124.093 li
179.768 124.093 li
cp
179.678 123.895 mo
181.678 121.251 li
179.678 118.606 li
177.679 121.251 li
179.678 123.895 li
179.678 123.895 li
cp
179.567 123.671 mo
181.565 121.027 li
179.567 118.385 li
177.568 121.027 li
179.567 123.671 li
179.567 123.671 li
cp
179.479 124.072 mo
181.478 121.429 li
179.479 118.785 li
177.479 121.429 li
179.479 124.072 li
179.479 124.072 li
cp
179.39 123.895 mo
181.389 121.251 li
179.39 118.606 li
177.391 121.251 li
179.39 123.895 li
179.39 123.895 li
cp
179.277 123.605 mo
181.277 120.962 li
179.277 118.318 li
177.279 120.962 li
179.277 123.605 li
179.277 123.605 li
cp
179.189 123.717 mo
181.188 121.072 li
179.189 118.429 li
177.19 121.072 li
179.189 123.717 li
179.189 123.717 li
cp
179.079 123.561 mo
181.077 120.917 li
179.079 118.273 li
177.079 120.917 li
179.079 123.561 li
179.079 123.561 li
cp
178.99 123.627 mo
180.989 120.983 li
178.99 118.34 li
176.989 120.983 li
178.99 123.627 li
178.99 123.627 li
cp
178.9 123.449 mo
180.899 120.806 li
178.9 118.162 li
176.901 120.806 li
178.9 123.449 li
178.9 123.449 li
cp
178.789 123.138 mo
180.789 120.494 li
178.789 117.852 li
176.79 120.494 li
178.789 123.138 li
178.789 123.138 li
cp
178.701 123.138 mo
180.7 120.494 li
178.701 117.852 li
176.702 120.494 li
178.701 123.138 li
178.701 123.138 li
cp
178.589 123.05 mo
180.589 120.406 li
178.589 117.763 li
176.591 120.406 li
178.589 123.05 li
178.589 123.05 li
cp
178.5 123.228 mo
180.5 120.584 li
178.5 117.94 li
176.501 120.584 li
178.5 123.228 li
178.5 123.228 li
cp
178.391 123.16 mo
180.389 120.518 li
178.391 117.873 li
176.39 120.518 li
178.391 123.16 li
178.391 123.16 li
cp
178.278 122.872 mo
180.277 120.229 li
178.278 117.586 li
176.28 120.229 li
178.278 122.872 li
178.278 122.872 li
cp
178.189 123.16 mo
180.189 120.518 li
178.189 117.873 li
176.19 120.518 li
178.189 123.16 li
178.189 123.16 li
cp
178.078 123.027 mo
180.078 120.383 li
178.078 117.739 li
176.079 120.383 li
178.078 123.027 li
178.078 123.027 li
cp
177.989 122.605 mo
179.989 119.962 li
177.989 117.318 li
175.99 119.962 li
177.989 122.605 li
177.989 122.605 li
cp
177.879 122.339 mo
179.878 119.695 li
177.879 117.052 li
175.88 119.695 li
177.879 122.339 li
177.879 122.339 li
cp
177.768 122.228 mo
179.768 119.584 li
177.768 116.94 li
175.769 119.584 li
177.768 122.228 li
177.768 122.228 li
cp
177.679 122.472 mo
179.678 119.829 li
177.679 117.185 li
175.68 119.829 li
177.679 122.472 li
177.679 122.472 li
cp
177.568 122.405 mo
179.567 119.762 li
177.568 117.118 li
175.568 119.762 li
177.568 122.405 li
177.568 122.405 li
cp
177.456 122.36 mo
179.455 119.717 li
177.456 117.074 li
175.458 119.717 li
177.456 122.36 li
177.456 122.36 li
cp
177.346 121.872 mo
179.346 119.229 li
177.346 116.586 li
175.346 119.229 li
177.346 121.872 li
177.346 121.872 li
cp
177.257 121.739 mo
179.256 119.096 li
177.257 116.452 li
175.258 119.096 li
177.257 121.739 li
177.257 121.739 li
cp
177.146 122.116 mo
179.145 119.473 li
177.146 116.829 li
175.147 119.473 li
177.146 122.116 li
177.146 122.116 li
cp
177.034 121.806 mo
179.034 119.162 li
177.034 116.519 li
175.035 119.162 li
177.034 121.806 li
177.034 121.806 li
cp
176.924 121.827 mo
178.923 119.185 li
176.924 116.541 li
174.925 119.185 li
176.924 121.827 li
176.924 121.827 li
cp
176.812 121.961 mo
178.812 119.317 li
176.812 116.674 li
174.813 119.317 li
176.812 121.961 li
176.812 121.961 li
cp
176.724 121.761 mo
178.723 119.117 li
176.724 116.474 li
174.725 119.117 li
176.724 121.761 li
176.724 121.761 li
cp
176.613 121.294 mo
178.611 118.65 li
176.613 116.007 li
174.613 118.65 li
176.613 121.294 li
176.613 121.294 li
cp
176.501 121.116 mo
178.5 118.473 li
176.501 115.829 li
174.503 118.473 li
176.501 121.116 li
176.501 121.116 li
cp
176.39 121.294 mo
178.391 118.65 li
176.39 116.007 li
174.391 118.65 li
176.39 121.294 li
176.39 121.294 li
cp
176.28 121.317 mo
178.278 118.674 li
176.28 116.03 li
174.28 118.674 li
176.28 121.317 li
176.28 121.317 li
cp
176.168 121.184 mo
178.168 118.541 li
176.168 115.897 li
174.169 118.541 li
176.168 121.184 li
176.168 121.184 li
cp
176.058 121.272 mo
178.057 118.629 li
176.058 115.985 li
174.059 118.629 li
176.058 121.272 li
176.058 121.272 li
cp
175.946 121.473 mo
177.945 118.828 li
175.946 116.185 li
173.947 118.828 li
175.946 121.473 li
175.946 121.473 li
cp
175.835 121.405 mo
177.834 118.762 li
175.835 116.118 li
173.836 118.762 li
175.835 121.405 li
175.835 121.405 li
cp
175.724 121.072 mo
177.724 118.429 li
175.724 115.786 li
173.725 118.429 li
175.724 121.072 li
175.724 121.072 li
cp
175.612 120.917 mo
177.613 118.273 li
175.612 115.63 li
173.613 118.273 li
175.612 120.917 li
175.612 120.917 li
cp
175.479 121.116 mo
177.479 118.473 li
175.479 115.829 li
173.48 118.473 li
175.479 121.116 li
175.479 121.116 li
cp
175.368 120.628 mo
177.368 117.984 li
175.368 115.341 li
173.369 117.984 li
175.368 120.628 li
175.368 120.628 li
cp
175.258 119.984 mo
177.257 117.341 li
175.258 114.697 li
173.258 117.341 li
175.258 119.984 li
175.258 119.984 li
cp
175.147 120.295 mo
177.146 117.651 li
175.147 115.008 li
173.146 117.651 li
175.147 120.295 li
175.147 120.295 li
cp
175.035 120.229 mo
177.034 117.586 li
175.035 114.942 li
173.036 117.586 li
175.035 120.229 li
175.035 120.229 li
cp
174.902 119.939 mo
176.901 117.296 li
174.902 114.652 li
172.902 117.296 li
174.902 119.939 li
174.902 119.939 li
cp
174.791 120.406 mo
176.79 117.763 li
174.791 115.12 li
172.791 117.763 li
174.791 120.406 li
174.791 120.406 li
cp
174.681 120.361 mo
176.679 117.719 li
174.681 115.075 li
172.682 117.719 li
174.681 120.361 li
174.681 120.361 li
cp
174.547 119.584 mo
176.546 116.94 li
174.547 114.297 li
172.548 116.94 li
174.547 119.584 li
174.547 119.584 li
cp
174.436 119.451 mo
176.435 116.808 li
174.436 114.164 li
172.437 116.808 li
174.436 119.451 li
174.436 119.451 li
cp
@
174.568 116.962 mo
177.724 116.962 li
177.724 120.117 li
174.568 120.117 li
174.568 116.962 li
174.568 116.962 li
cp
174.458 117.074 mo
177.613 117.074 li
177.613 120.229 li
174.458 120.229 li
174.458 117.074 li
174.458 117.074 li
cp
174.325 116.919 mo
177.479 116.919 li
177.479 120.072 li
174.325 120.072 li
174.325 116.919 li
174.325 116.919 li
cp
174.213 116.741 mo
177.368 116.741 li
177.368 119.895 li
174.213 119.895 li
174.213 116.741 li
174.213 116.741 li
cp
174.08 116.962 mo
177.234 116.962 li
177.234 120.117 li
174.08 120.117 li
174.08 116.962 li
174.08 116.962 li
cp
173.969 117.095 mo
177.123 117.095 li
177.123 120.25 li
173.969 120.25 li
173.969 117.095 li
173.969 117.095 li
cp
173.836 116.829 mo
176.989 116.829 li
176.989 119.984 li
173.836 119.984 li
173.836 116.829 li
173.836 116.829 li
cp
173.725 116.452 mo
176.88 116.452 li
176.88 119.606 li
173.725 119.606 li
173.725 116.452 li
173.725 116.452 li
cp
173.592 116.341 mo
176.746 116.341 li
176.746 119.495 li
173.592 119.495 li
173.592 116.341 li
173.592 116.341 li
cp
173.459 116.386 mo
176.613 116.386 li
176.613 119.539 li
173.459 119.539 li
173.459 116.386 li
173.459 116.386 li
cp
173.348 116.118 mo
176.501 116.118 li
176.501 119.273 li
173.348 119.273 li
173.348 116.118 li
173.348 116.118 li
cp
173.215 115.63 mo
176.368 115.63 li
176.368 118.785 li
173.215 118.785 li
173.215 115.63 li
173.215 115.63 li
cp
173.08 115.696 mo
176.235 115.696 li
176.235 118.852 li
173.08 118.852 li
173.08 115.696 li
173.08 115.696 li
cp
172.969 115.72 mo
176.123 115.72 li
176.123 118.874 li
172.969 118.874 li
172.969 115.72 li
172.969 115.72 li
cp
172.836 115.919 mo
175.99 115.919 li
175.99 119.072 li
172.836 119.072 li
172.836 115.919 li
172.836 115.919 li
cp
172.703 115.853 mo
175.856 115.853 li
175.856 119.007 li
172.703 119.007 li
172.703 115.853 li
172.703 115.853 li
cp
172.569 115.829 mo
175.724 115.829 li
175.724 118.984 li
172.569 118.984 li
172.569 115.829 li
172.569 115.829 li
cp
172.437 115.763 mo
175.591 115.763 li
175.591 118.918 li
172.437 118.918 li
172.437 115.763 li
172.437 115.763 li
cp
172.303 115.519 mo
175.458 115.519 li
175.458 118.674 li
172.303 118.674 li
172.303 115.519 li
172.303 115.519 li
cp
172.17 115.829 mo
175.324 115.829 li
175.324 118.984 li
172.17 118.984 li
172.17 115.829 li
172.17 115.829 li
cp
172.037 115.341 mo
175.19 115.341 li
175.19 118.496 li
172.037 118.496 li
172.037 115.341 li
172.037 115.341 li
cp
171.903 115.12 mo
175.058 115.12 li
175.058 118.273 li
171.903 118.273 li
171.903 115.12 li
171.903 115.12 li
cp
171.77 114.963 mo
174.925 114.963 li
174.925 118.118 li
171.77 118.118 li
171.77 114.963 li
171.77 114.963 li
cp
171.637 114.586 mo
174.791 114.586 li
174.791 117.739 li
171.637 117.739 li
171.637 114.586 li
171.637 114.586 li
cp
171.503 114.674 mo
174.657 114.674 li
174.657 117.829 li
171.503 117.829 li
171.503 114.674 li
171.503 114.674 li
cp
171.37 114.697 mo
174.523 114.697 li
174.523 117.852 li
171.37 117.852 li
171.37 114.697 li
171.37 114.697 li
cp
171.237 114.963 mo
174.391 114.963 li
174.391 118.118 li
171.237 118.118 li
171.237 114.963 li
171.237 114.963 li
cp
171.103 114.83 mo
174.258 114.83 li
174.258 117.984 li
171.103 117.984 li
171.103 114.83 li
171.103 114.83 li
cp
170.948 114.475 mo
174.103 114.475 li
174.103 117.629 li
170.948 117.629 li
170.948 114.475 li
170.948 114.475 li
cp
170.815 114.496 mo
173.969 114.496 li
173.969 117.651 li
170.815 117.651 li
170.815 114.496 li
170.815 114.496 li
cp
170.681 114.408 mo
173.836 114.408 li
173.836 117.562 li
170.681 117.562 li
170.681 114.408 li
170.681 114.408 li
cp
170.526 114.208 mo
173.681 114.208 li
173.681 117.363 li
170.526 117.363 li
170.526 114.208 li
170.526 114.208 li
cp
170.394 113.853 mo
173.547 113.853 li
173.547 117.007 li
170.394 117.007 li
170.394 113.853 li
170.394 113.853 li
cp
170.237 113.853 mo
173.391 113.853 li
173.391 117.007 li
170.237 117.007 li
170.237 113.853 li
170.237 113.853 li
cp
170.104 113.875 mo
173.258 113.875 li
173.258 117.029 li
170.104 117.029 li
170.104 113.875 li
170.104 113.875 li
cp
169.948 113.408 mo
173.103 113.408 li
173.103 116.563 li
169.948 116.563 li
169.948 113.408 li
169.948 113.408 li
cp
169.814 113.453 mo
172.969 113.453 li
172.969 116.606 li
169.814 116.606 li
169.814 113.453 li
169.814 113.453 li
cp
169.659 113.541 mo
172.814 113.541 li
172.814 116.696 li
169.659 116.696 li
169.659 113.541 li
169.659 113.541 li
cp
169.526 113.653 mo
172.682 113.653 li
172.682 116.808 li
169.526 116.808 li
169.526 113.653 li
169.526 113.653 li
cp
169.371 113.608 mo
172.525 113.608 li
172.525 116.763 li
169.371 116.763 li
169.371 113.608 li
169.371 113.608 li
cp
169.216 113.143 mo
172.369 113.143 li
172.369 116.296 li
169.216 116.296 li
169.216 113.143 li
169.216 113.143 li
cp
169.06 112.654 mo
172.215 112.654 li
172.215 115.808 li
169.06 115.808 li
169.06 112.654 li
169.06 112.654 li
cp
168.927 112.253 mo
172.081 112.253 li
172.081 115.407 li
168.927 115.407 li
168.927 112.253 li
168.927 112.253 li
cp
168.771 112.586 mo
171.925 112.586 li
171.925 115.741 li
168.771 115.741 li
168.771 112.586 li
168.771 112.586 li
cp
168.616 113.143 mo
171.77 113.143 li
171.77 116.296 li
168.616 116.296 li
168.616 113.143 li
168.616 113.143 li
cp
168.459 112.564 mo
171.614 112.564 li
171.614 115.72 li
168.459 115.72 li
168.459 112.564 li
168.459 112.564 li
cp
168.305 112.163 mo
171.458 112.163 li
171.458 115.318 li
168.305 115.318 li
168.305 112.163 li
168.305 112.163 li
cp
168.149 112.764 mo
171.304 112.764 li
171.304 115.919 li
168.149 115.919 li
168.149 112.764 li
168.149 112.764 li
cp
167.993 112.853 mo
171.147 112.853 li
171.147 116.007 li
167.993 116.007 li
167.993 112.853 li
167.993 112.853 li
cp
167.838 112.586 mo
170.993 112.586 li
170.993 115.741 li
167.838 115.741 li
167.838 112.586 li
167.838 112.586 li
cp
167.66 112.01 mo
170.815 112.01 li
170.815 115.163 li
167.66 115.163 li
167.66 112.01 li
167.66 112.01 li
cp
167.505 111.876 mo
170.659 111.876 li
170.659 115.03 li
167.505 115.03 li
167.505 111.876 li
167.505 111.876 li
cp
167.349 111.676 mo
170.503 111.676 li
170.503 114.83 li
167.349 114.83 li
167.349 111.676 li
167.349 111.676 li
cp
167.193 111.298 mo
170.349 111.298 li
170.349 114.453 li
167.193 114.453 li
167.193 111.298 li
167.193 111.298 li
cp
167.016 111.72 mo
170.171 111.72 li
170.171 114.875 li
167.016 114.875 li
167.016 111.72 li
167.016 111.72 li
cp
166.86 112.098 mo
170.015 112.098 li
170.015 115.253 li
166.86 115.253 li
166.86 112.098 li
166.86 112.098 li
cp
166.684 111.654 mo
169.837 111.654 li
169.837 114.808 li
166.684 114.808 li
166.684 111.654 li
166.684 111.654 li
cp
166.526 111.364 mo
169.682 111.364 li
169.682 114.52 li
166.526 114.52 li
166.526 111.364 li
166.526 111.364 li
cp
166.35 111.188 mo
169.504 111.188 li
169.504 114.342 li
166.35 114.342 li
166.35 111.188 li
166.35 111.188 li
cp
166.194 111.165 mo
169.349 111.165 li
169.349 114.318 li
166.194 114.318 li
166.194 111.165 li
166.194 111.165 li
cp
166.018 111.165 mo
169.171 111.165 li
169.171 114.318 li
166.018 114.318 li
166.018 111.165 li
166.018 111.165 li
cp
165.839 111.054 mo
168.992 111.054 li
168.992 114.208 li
165.839 114.208 li
165.839 111.054 li
165.839 111.054 li
cp
165.661 110.743 mo
168.814 110.743 li
168.814 113.896 li
165.661 113.896 li
165.661 110.743 li
165.661 110.743 li
cp
165.506 110.543 mo
168.66 110.543 li
168.66 113.697 li
165.506 113.697 li
165.506 110.543 li
165.506 110.543 li
cp
165.328 110.521 mo
168.482 110.521 li
168.482 113.675 li
165.328 113.675 li
165.328 110.521 li
165.328 110.521 li
cp
165.15 110.521 mo
168.305 110.521 li
168.305 113.675 li
165.15 113.675 li
165.15 110.521 li
165.15 110.521 li
cp
164.972 110.276 mo
168.126 110.276 li
168.126 113.432 li
164.972 113.432 li
164.972 110.276 li
164.972 110.276 li
cp
164.794 110.364 mo
167.949 110.364 li
167.949 113.52 li
164.794 113.52 li
164.794 110.364 li
164.794 110.364 li
cp
164.595 109.987 mo
167.75 109.987 li
167.75 113.143 li
164.595 113.143 li
164.595 109.987 li
164.595 109.987 li
cp
164.417 109.366 mo
167.572 109.366 li
167.572 112.52 li
164.417 112.52 li
164.417 109.366 li
164.417 109.366 li
cp
164.239 109.121 mo
167.394 109.121 li
167.394 112.275 li
164.239 112.275 li
164.239 109.121 li
164.239 109.121 li
cp
164.061 109.632 mo
167.216 109.632 li
167.216 112.787 li
164.061 112.787 li
164.061 109.632 li
164.061 109.632 li
cp
163.862 109.698 mo
167.016 109.698 li
167.016 112.853 li
163.862 112.853 li
163.862 109.698 li
163.862 109.698 li
cp
163.685 109.366 mo
166.838 109.366 li
166.838 112.52 li
163.685 112.52 li
163.685 109.366 li
163.685 109.366 li
cp
163.484 109.299 mo
166.639 109.299 li
166.639 112.453 li
163.484 112.453 li
163.484 109.299 li
163.484 109.299 li
cp
163.307 109.099 mo
166.461 109.099 li
166.461 112.253 li
163.307 112.253 li
163.307 109.099 li
163.307 109.099 li
cp
163.105 109.055 mo
166.261 109.055 li
166.261 112.208 li
163.105 112.208 li
163.105 109.055 li
163.105 109.055 li
cp
162.907 109.454 mo
166.061 109.454 li
166.061 112.609 li
162.907 112.609 li
162.907 109.454 li
162.907 109.454 li
cp
162.707 109.121 mo
165.86 109.121 li
165.86 112.275 li
162.707 112.275 li
162.707 109.121 li
162.707 109.121 li
cp
162.506 108.411 mo
165.661 108.411 li
165.661 111.564 li
162.506 111.564 li
162.506 108.411 li
162.506 108.411 li
cp
162.307 107.966 mo
165.462 107.966 li
165.462 111.12 li
162.307 111.12 li
162.307 107.966 li
162.307 107.966 li
cp
162.106 107.678 mo
165.261 107.678 li
165.261 110.832 li
162.106 110.832 li
162.106 107.678 li
162.106 107.678 li
cp
161.907 108.121 mo
165.062 108.121 li
165.062 111.276 li
161.907 111.276 li
161.907 108.121 li
161.907 108.121 li
cp
161.707 108.121 mo
164.861 108.121 li
164.861 111.276 li
161.707 111.276 li
161.707 108.121 li
161.707 108.121 li
cp
161.507 107.521 mo
164.661 107.521 li
164.661 110.677 li
161.507 110.677 li
161.507 107.521 li
161.507 107.521 li
cp
161.285 107.654 mo
164.438 107.654 li
164.438 110.81 li
161.285 110.81 li
161.285 107.654 li
161.285 107.654 li
cp
161.086 107.744 mo
164.239 107.744 li
164.239 110.897 li
161.086 110.897 li
161.086 107.744 li
161.086 107.744 li
cp
160.885 107.811 mo
164.04 107.811 li
164.04 110.965 li
160.885 110.965 li
160.885 107.811 li
160.885 107.811 li
cp
160.663 107.877 mo
163.817 107.877 li
163.817 111.031 li
160.663 111.031 li
160.663 107.877 li
160.663 107.877 li
cp
160.441 107.678 mo
163.595 107.678 li
163.595 110.832 li
160.441 110.832 li
160.441 107.678 li
160.441 107.678 li
cp
160.219 107.256 mo
163.373 107.256 li
163.373 110.409 li
160.219 110.409 li
160.219 107.256 li
160.219 107.256 li
cp
160.019 107.033 mo
163.173 107.033 li
163.173 110.188 li
160.019 110.188 li
160.019 107.033 li
160.019 107.033 li
cp
159.796 106.833 mo
162.951 106.833 li
162.951 109.987 li
159.796 109.987 li
159.796 106.833 li
159.796 106.833 li
cp
159.575 106.611 mo
162.729 106.611 li
162.729 109.766 li
159.575 109.766 li
159.575 106.611 li
159.575 106.611 li
cp
159.329 106.101 mo
162.484 106.101 li
162.484 109.255 li
159.329 109.255 li
159.329 106.101 li
159.329 106.101 li
cp
159.108 106.277 mo
162.262 106.277 li
162.262 109.432 li
159.108 109.432 li
159.108 106.277 li
159.108 106.277 li
cp
158.886 105.767 mo
162.041 105.767 li
162.041 108.921 li
158.886 108.921 li
158.886 105.767 li
158.886 105.767 li
cp
158.642 105.611 mo
161.796 105.611 li
161.796 108.766 li
158.642 108.766 li
158.642 105.611 li
158.642 105.611 li
cp
158.419 106.123 mo
161.574 106.123 li
161.574 109.276 li
158.419 109.276 li
158.419 106.123 li
158.419 106.123 li
cp
158.174 106.144 mo
161.329 106.144 li
161.329 109.299 li
158.174 109.299 li
158.174 106.144 li
158.174 106.144 li
cp
157.953 105.789 mo
161.107 105.789 li
161.107 108.943 li
157.953 108.943 li
157.953 105.789 li
157.953 105.789 li
cp
157.709 105.167 mo
160.862 105.167 li
160.862 108.321 li
157.709 108.321 li
157.709 105.167 li
157.709 105.167 li
cp
157.464 105.146 mo
160.619 105.146 li
160.619 108.299 li
157.464 108.299 li
157.464 105.146 li
157.464 105.146 li
cp
157.219 105.079 mo
160.374 105.079 li
160.374 108.232 li
157.219 108.232 li
157.219 105.079 li
157.219 105.079 li
cp
156.953 104.657 mo
160.107 104.657 li
160.107 107.811 li
156.953 107.811 li
156.953 104.657 li
156.953 104.657 li
cp
156.708 104.367 mo
159.862 104.367 li
159.862 107.521 li
156.708 107.521 li
156.708 104.367 li
156.708 104.367 li
cp
156.465 104.411 mo
159.619 104.411 li
159.619 107.566 li
156.465 107.566 li
156.465 104.411 li
156.465 104.411 li
cp
156.198 104.589 mo
159.353 104.589 li
159.353 107.744 li
156.198 107.744 li
156.198 104.589 li
156.198 104.589 li
cp
155.931 104.456 mo
159.085 104.456 li
159.085 107.61 li
155.931 107.61 li
155.931 104.456 li
155.931 104.456 li
cp
155.688 104.745 mo
158.841 104.745 li
158.841 107.899 li
155.688 107.899 li
155.688 104.745 li
155.688 104.745 li
cp
155.42 104.612 mo
158.575 104.612 li
158.575 107.766 li
155.42 107.766 li
155.42 104.612 li
155.42 104.612 li
cp
155.153 103.923 mo
158.308 103.923 li
158.308 107.078 li
155.153 107.078 li
155.153 103.923 li
155.153 103.923 li
cp
154.865 103.768 mo
158.021 103.768 li
158.021 106.922 li
154.865 106.922 li
154.865 103.768 li
154.865 103.768 li
cp
154.599 103.567 mo
157.753 103.567 li
157.753 106.723 li
154.599 106.723 li
154.599 103.567 li
154.599 103.567 li
cp
154.331 103.945 mo
157.486 103.945 li
157.486 107.1 li
154.331 107.1 li
154.331 103.945 li
154.331 103.945 li
cp
154.044 103.989 mo
157.197 103.989 li
157.197 107.144 li
154.044 107.144 li
154.044 103.989 li
154.044 103.989 li
cp
153.755 102.746 mo
156.908 102.746 li
156.908 105.9 li
153.755 105.9 li
153.755 102.746 li
153.755 102.746 li
cp
153.465 102.502 mo
156.619 102.502 li
156.619 105.656 li
153.465 105.656 li
153.465 102.502 li
153.465 102.502 li
cp
153.177 103.168 mo
156.332 103.168 li
156.332 106.321 li
153.177 106.321 li
153.177 103.168 li
153.177 103.168 li
cp
152.888 102.19 mo
156.043 102.19 li
156.043 105.345 li
152.888 105.345 li
152.888 102.19 li
152.888 102.19 li
cp
152.577 101.369 mo
155.731 101.369 li
155.731 104.522 li
152.577 104.522 li
152.577 101.369 li
152.577 101.369 li
cp
152.288 101.725 mo
155.442 101.725 li
155.442 104.878 li
152.288 104.878 li
152.288 101.725 li
152.288 101.725 li
cp
151.977 101.746 mo
155.132 101.746 li
155.132 104.9 li
151.977 104.9 li
151.977 101.746 li
151.977 101.746 li
cp
151.666 101.213 mo
154.82 101.213 li
154.82 104.367 li
151.666 104.367 li
151.666 101.213 li
151.666 101.213 li
cp
151.355 101.391 mo
154.51 101.391 li
154.51 104.545 li
151.355 104.545 li
151.355 101.391 li
151.355 101.391 li
cp
151.044 100.567 mo
154.198 100.567 li
154.198 103.723 li
151.044 103.723 li
151.044 100.567 li
151.044 100.567 li
cp
150.711 100.258 mo
153.866 100.258 li
153.866 103.412 li
150.711 103.412 li
150.711 100.258 li
150.711 100.258 li
cp
150.4 100.924 mo
153.554 100.924 li
153.554 104.078 li
150.4 104.078 li
150.4 100.924 li
150.4 100.924 li
cp
150.066 101.059 mo
153.222 101.059 li
153.222 104.212 li
150.066 104.212 li
150.066 101.059 li
150.066 101.059 li
cp
149.733 100.479 mo
152.888 100.479 li
152.888 103.634 li
149.733 103.634 li
149.733 100.479 li
149.733 100.479 li
cp
149.378 100.191 mo
152.532 100.191 li
152.532 103.346 li
149.378 103.346 li
149.378 100.191 li
149.378 100.191 li
cp
149.044 99.9023 mo
152.199 99.9023 li
152.199 103.057 li
149.044 103.057 li
149.044 99.9023 li
149.044 99.9023 li
cp
148.689 98.7705 mo
151.844 98.7705 li
151.844 101.924 li
148.689 101.924 li
148.689 98.7705 li
148.689 98.7705 li
cp
148.335 99.0361 mo
151.488 99.0361 li
151.488 102.19 li
148.335 102.19 li
148.335 99.0361 li
148.335 99.0361 li
cp
147.979 99.2139 mo
151.133 99.2139 li
151.133 102.367 li
147.979 102.367 li
147.979 99.2139 li
147.979 99.2139 li
cp
147.601 98.5928 mo
150.756 98.5928 li
150.756 101.746 li
147.601 101.746 li
147.601 98.5928 li
147.601 98.5928 li
cp
147.224 98.792 mo
150.378 98.792 li
150.378 101.945 li
147.224 101.945 li
147.224 98.792 li
147.224 98.792 li
cp
146.846 98.6807 mo
149.999 98.6807 li
149.999 101.836 li
146.846 101.836 li
146.846 98.6807 li
146.846 98.6807 li
cp
146.468 98.2139 mo
149.623 98.2139 li
149.623 101.369 li
146.468 101.369 li
146.468 98.2139 li
146.468 98.2139 li
cp
146.091 97.7031 mo
149.245 97.7031 li
149.245 100.857 li
146.091 100.857 li
146.091 97.7031 li
146.091 97.7031 li
cp
145.691 97.502 mo
148.845 97.502 li
148.845 100.657 li
145.691 100.657 li
145.691 97.502 li
145.691 97.502 li
cp
145.29 97.4365 mo
148.444 97.4365 li
148.444 100.592 li
145.29 100.592 li
145.29 97.4365 li
145.29 97.4365 li
cp
144.869 97.126 mo
148.022 97.126 li
148.022 100.28 li
144.869 100.28 li
144.869 97.126 li
144.869 97.126 li
cp
144.447 95.9258 mo
147.601 95.9258 li
147.601 99.0811 li
144.447 99.0811 li
144.447 95.9258 li
144.447 95.9258 li
cp
144.024 95.6602 mo
147.179 95.6602 li
147.179 98.8135 li
144.024 98.8135 li
144.024 95.6602 li
144.024 95.6602 li
cp
143.603 95.9482 mo
146.756 95.9482 li
146.756 99.1016 li
143.603 99.1016 li
143.603 95.9482 li
143.603 95.9482 li
cp
143.157 95.9258 mo
146.313 95.9258 li
146.313 99.0811 li
143.157 99.0811 li
143.157 95.9258 li
143.157 95.9258 li
cp
142.714 95.3926 mo
145.868 95.3926 li
145.868 98.5479 li
142.714 98.5479 li
142.714 95.3926 li
142.714 95.3926 li
cp
142.247 94.8154 mo
145.402 94.8154 li
145.402 97.9688 li
142.247 97.9688 li
142.247 94.8154 li
142.247 94.8154 li
cp
141.78 94.5273 mo
144.935 94.5273 li
144.935 97.6807 li
141.78 97.6807 li
141.78 94.5273 li
141.78 94.5273 li
cp
141.314 94.1934 mo
144.468 94.1934 li
144.468 97.3477 li
141.314 97.3477 li
141.314 94.1934 li
141.314 94.1934 li
cp
140.826 93.8154 mo
143.979 93.8154 li
143.979 96.9707 li
140.826 96.9707 li
140.826 93.8154 li
140.826 93.8154 li
cp
140.337 92.6387 mo
143.491 92.6387 li
143.491 95.793 li
140.337 95.793 li
140.337 92.6387 li
140.337 92.6387 li
cp
139.826 91.9492 mo
142.98 91.9492 li
142.98 95.1045 li
139.826 95.1045 li
139.826 91.9492 li
139.826 91.9492 li
cp
139.314 92.5703 mo
142.47 92.5703 li
142.47 95.7256 li
139.314 95.7256 li
139.314 92.5703 li
139.314 92.5703 li
cp
138.782 93.4375 mo
141.937 93.4375 li
141.937 96.5918 li
138.782 96.5918 li
138.782 93.4375 li
138.782 93.4375 li
cp
138.249 93.1709 mo
141.403 93.1709 li
141.403 96.3262 li
138.249 96.3262 li
138.249 93.1709 li
138.249 93.1709 li
cp
137.693 91.6602 mo
140.849 91.6602 li
140.849 94.8154 li
137.693 94.8154 li
137.693 91.6602 li
137.693 91.6602 li
cp
137.138 90.5723 mo
140.293 90.5723 li
140.293 93.7275 li
137.138 93.7275 li
137.138 90.5723 li
137.138 90.5723 li
cp
136.538 90.3281 mo
139.692 90.3281 li
139.692 93.4824 li
136.538 93.4824 li
136.538 90.3281 li
136.538 90.3281 li
cp
135.962 89.8389 mo
139.115 89.8389 li
139.115 92.9932 li
135.962 92.9932 li
135.962 89.8389 li
135.962 89.8389 li
cp
135.338 88.3955 mo
138.493 88.3955 li
138.493 91.5498 li
135.338 91.5498 li
135.338 88.3955 li
135.338 88.3955 li
cp
134.717 87.8623 mo
137.871 87.8623 li
137.871 91.0166 li
134.717 91.0166 li
134.717 87.8623 li
134.717 87.8623 li
cp
134.095 87.7061 mo
137.249 87.7061 li
137.249 90.8613 li
134.095 90.8613 li
134.095 87.7061 li
134.095 87.7061 li
cp
133.428 87.5732 mo
136.583 87.5732 li
136.583 90.7285 li
133.428 90.7285 li
133.428 87.5732 li
133.428 87.5732 li
cp
132.762 86.8623 mo
135.917 86.8623 li
135.917 90.0166 li
132.762 90.0166 li
132.762 86.8623 li
132.762 86.8623 li
cp
132.051 85.085 mo
135.205 85.085 li
135.205 88.2393 li
132.051 88.2393 li
132.051 85.085 li
132.051 85.085 li
cp
131.341 84.3525 mo
134.494 84.3525 li
134.494 87.5059 li
131.341 87.5059 li
131.341 84.3525 li
131.341 84.3525 li
cp
130.607 82.1084 mo
133.762 82.1084 li
133.762 85.2627 li
130.607 85.2627 li
130.607 82.1084 li
130.607 82.1084 li
cp
129.852 81.6201 mo
133.005 81.6201 li
133.005 84.7744 li
129.852 84.7744 li
129.852 81.6201 li
129.852 81.6201 li
cp
129.053 82.1318 mo
132.206 82.1318 li
132.206 85.2852 li
129.053 85.2852 li
129.053 82.1318 li
129.053 82.1318 li
cp
128.23 80.8652 mo
131.384 80.8652 li
131.384 84.0195 li
128.23 84.0195 li
128.23 80.8652 li
128.23 80.8652 li
cp
127.408 79.5098 mo
130.563 79.5098 li
130.563 82.6641 li
127.408 82.6641 li
127.408 79.5098 li
127.408 79.5098 li
cp
126.52 78.3984 mo
129.674 78.3984 li
129.674 81.5537 li
126.52 81.5537 li
126.52 78.3984 li
126.52 78.3984 li
cp
125.632 76.9551 mo
128.785 76.9551 li
128.785 80.1094 li
125.632 80.1094 li
125.632 76.9551 li
125.632 76.9551 li
cp
124.676 75.6226 mo
127.83 75.6226 li
127.83 78.7769 li
124.676 78.7769 li
124.676 75.6226 li
124.676 75.6226 li
cp
123.699 74.667 mo
126.853 74.667 li
126.853 77.8218 li
123.699 77.8218 li
123.699 74.667 li
123.699 74.667 li
cp
122.677 74.2446 mo
125.831 74.2446 li
125.831 77.3994 li
122.677 77.3994 li
122.677 74.2446 li
122.677 74.2446 li
cp
121.61 74.1113 mo
124.765 74.1113 li
124.765 77.2656 li
121.61 77.2656 li
121.61 74.1113 li
121.61 74.1113 li
cp
120.499 73.623 mo
123.654 73.623 li
123.654 76.7769 li
120.499 76.7769 li
120.499 73.623 li
120.499 73.623 li
cp
119.322 70.6685 mo
122.477 70.6685 li
122.477 73.8232 li
119.322 73.8232 li
119.322 70.6685 li
119.322 70.6685 li
cp
118.101 70.1797 mo
121.255 70.1797 li
121.255 73.334 li
118.101 73.334 li
118.101 70.1797 li
118.101 70.1797 li
cp
116.79 68.958 mo
119.943 68.958 li
119.943 72.1123 li
116.79 72.1123 li
116.79 68.958 li
116.79 68.958 li
cp
115.435 65.9365 mo
118.59 65.9365 li
118.59 69.0913 li
115.435 69.0913 li
115.435 65.9365 li
115.435 65.9365 li
cp
113.969 64.9819 mo
117.123 64.9819 li
117.123 68.1362 li
113.969 68.1362 li
113.969 64.9819 li
113.969 64.9819 li
cp
112.414 62.6934 mo
115.567 62.6934 li
115.567 65.8477 li
112.414 65.8477 li
112.414 62.6934 li
112.414 62.6934 li
cp
110.77 60.8945 mo
113.924 60.8945 li
113.924 64.0488 li
110.77 64.0488 li
110.77 60.8945 li
110.77 60.8945 li
cp
108.993 57.54 mo
112.146 57.54 li
112.146 60.6943 li
108.993 60.6943 li
108.993 57.54 li
108.993 57.54 li
cp
107.06 55.7407 mo
110.214 55.7407 li
110.214 58.8945 li
107.06 58.8945 li
107.06 55.7407 li
107.06 55.7407 li
cp
104.972 52.2749 mo
108.126 52.2749 li
108.126 55.4297 li
104.972 55.4297 li
104.972 52.2749 li
104.972 52.2749 li
cp
102.706 47.8101 mo
105.861 47.8101 li
105.861 50.9644 li
102.706 50.9644 li
102.706 47.8101 li
102.706 47.8101 li
cp
100.173 43.0117 mo
103.328 43.0117 li
103.328 46.166 li
100.173 46.166 li
100.173 43.0117 li
100.173 43.0117 li
cp
97.3306 38.7026 mo
100.485 38.7026 li
100.485 41.8564 li
97.3306 41.8564 li
97.3306 38.7026 li
97.3306 38.7026 li
cp
94.1313 32.2158 mo
97.2856 32.2158 li
97.2856 35.3701 li
94.1313 35.3701 li
94.1313 32.2158 li
94.1313 32.2158 li
cp
90.4434 26.0181 mo
93.5981 26.0181 li
93.5981 29.1724 li
90.4434 29.1724 li
90.4434 26.0181 li
90.4434 26.0181 li
cp
86.0679 25.6626 mo
89.2222 25.6626 li
89.2222 28.8169 li
86.0679 28.8169 li
86.0679 25.6626 li
86.0679 25.6626 li
cp
80.7139 26.2178 mo
83.8687 26.2178 li
83.8687 29.3726 li
80.7139 29.3726 li
80.7139 26.2178 li
80.7139 26.2178 li
cp
73.8057 31.5493 mo
76.96 31.5493 li
76.96 34.7041 li
73.8057 34.7041 li
73.8057 31.5493 li
73.8057 31.5493 li
cp
64.0757 44.189 mo
67.23 44.189 li
67.23 47.3438 li
64.0757 47.3438 li
64.0757 44.189 li
64.0757 44.189 li
cp
47.4595 65.0708 mo
50.6138 65.0708 li
50.6138 68.2251 li
47.4595 68.2251 li
47.4595 65.0708 li
47.4595 65.0708 li
cp
.883665 .769161 3.05176e-5 3.05176e-5 cmyk
@
188.809 129.381 mo
191.964 129.381 li
191.964 132.534 li
188.809 132.534 li
188.809 129.381 li
188.809 129.381 li
cp
188.741 129.47 mo
191.896 129.47 li
191.896 132.624 li
188.741 132.624 li
188.741 129.47 li
188.741 129.47 li
cp
188.676 129.58 mo
191.828 129.58 li
191.828 132.735 li
188.676 132.735 li
188.676 129.58 li
188.676 129.58 li
cp
188.608 129.247 mo
191.763 129.247 li
191.763 132.401 li
188.608 132.401 li
188.608 129.247 li
188.608 129.247 li
cp
188.542 129.137 mo
191.695 129.137 li
191.695 132.29 li
188.542 132.29 li
188.542 129.137 li
188.542 129.137 li
cp
188.475 129.225 mo
191.63 129.225 li
191.63 132.38 li
188.475 132.38 li
188.475 129.225 li
188.475 129.225 li
cp
188.407 129.402 mo
191.563 129.402 li
191.563 132.558 li
188.407 132.558 li
188.407 129.402 li
188.407 129.402 li
cp
188.342 129.225 mo
191.496 129.225 li
191.496 132.38 li
188.342 132.38 li
188.342 129.225 li
188.342 129.225 li
cp
188.274 129.157 mo
191.43 129.157 li
191.43 132.313 li
188.274 132.313 li
188.274 129.157 li
188.274 129.157 li
cp
188.209 129.113 mo
191.363 129.113 li
191.363 132.268 li
188.209 132.268 li
188.209 129.113 li
188.209 129.113 li
cp
188.142 129.069 mo
191.296 129.069 li
191.296 132.224 li
188.142 132.224 li
188.142 129.069 li
188.142 129.069 li
cp
188.076 128.937 mo
191.229 128.937 li
191.229 132.091 li
188.076 132.091 li
188.076 128.937 li
188.076 128.937 li
cp
188.009 128.714 mo
191.163 128.714 li
191.163 131.868 li
188.009 131.868 li
188.009 128.714 li
188.009 128.714 li
cp
187.942 128.559 mo
191.096 128.559 li
191.096 131.713 li
187.942 131.713 li
187.942 128.559 li
187.942 128.559 li
cp
187.854 128.714 mo
191.008 128.714 li
191.008 131.868 li
187.854 131.868 li
187.854 128.714 li
187.854 128.714 li
cp
187.786 128.825 mo
190.94 128.825 li
190.94 131.979 li
187.786 131.979 li
187.786 128.825 li
187.786 128.825 li
cp
187.72 128.581 mo
190.873 128.581 li
190.873 131.735 li
187.72 131.735 li
187.72 128.581 li
187.72 128.581 li
cp
187.653 128.603 mo
190.808 128.603 li
190.808 131.757 li
187.653 131.757 li
187.653 128.603 li
187.653 128.603 li
cp
187.586 128.736 mo
190.74 128.736 li
190.74 131.892 li
187.586 131.892 li
187.586 128.736 li
187.586 128.736 li
cp
187.521 128.514 mo
190.675 128.514 li
190.675 131.668 li
187.521 131.668 li
187.521 128.514 li
187.521 128.514 li
cp
187.452 128.137 mo
190.607 128.137 li
190.607 131.291 li
187.452 131.291 li
187.452 128.137 li
187.452 128.137 li
cp
187.364 128.004 mo
190.518 128.004 li
190.518 131.157 li
187.364 131.157 li
187.364 128.004 li
187.364 128.004 li
cp
187.298 128.048 mo
190.452 128.048 li
190.452 131.202 li
187.298 131.202 li
187.298 128.048 li
187.298 128.048 li
cp
187.231 128.159 mo
190.385 128.159 li
190.385 131.313 li
187.231 131.313 li
187.231 128.159 li
187.231 128.159 li
cp
187.165 128.159 mo
190.319 128.159 li
190.319 131.313 li
187.165 131.313 li
187.165 128.159 li
187.165 128.159 li
cp
187.098 128.137 mo
190.252 128.137 li
190.252 131.291 li
187.098 131.291 li
187.098 128.137 li
187.098 128.137 li
cp
187.031 127.915 mo
190.185 127.915 li
190.185 131.069 li
187.031 131.069 li
187.031 127.915 li
187.031 127.915 li
cp
186.942 127.691 mo
190.096 127.691 li
190.096 130.846 li
186.942 130.846 li
186.942 127.691 li
186.942 127.691 li
cp
186.876 127.67 mo
190.029 127.67 li
190.029 130.824 li
186.876 130.824 li
186.876 127.67 li
186.876 127.67 li
cp
186.809 127.647 mo
189.963 127.647 li
189.963 130.802 li
186.809 130.802 li
186.809 127.647 li
186.809 127.647 li
cp
186.743 127.337 mo
189.896 127.337 li
189.896 130.49 li
186.743 130.49 li
186.743 127.337 li
186.743 127.337 li
cp
186.653 127.337 mo
189.809 127.337 li
189.809 130.49 li
186.653 130.49 li
186.653 127.337 li
186.653 127.337 li
cp
186.586 127.448 mo
189.741 127.448 li
189.741 130.603 li
186.586 130.603 li
186.586 127.448 li
186.586 127.448 li
cp
186.521 127.138 mo
189.675 127.138 li
189.675 130.292 li
186.521 130.292 li
186.521 127.138 li
186.521 127.138 li
cp
186.432 126.87 mo
189.586 126.87 li
189.586 130.024 li
186.432 130.024 li
186.432 126.87 li
186.432 126.87 li
cp
186.364 126.893 mo
189.52 126.893 li
189.52 130.047 li
186.364 130.047 li
186.364 126.893 li
186.364 126.893 li
cp
186.298 127.025 mo
189.452 127.025 li
189.452 130.18 li
186.298 130.18 li
186.298 127.025 li
186.298 127.025 li
cp
186.231 127.069 mo
189.386 127.069 li
189.386 130.225 li
186.231 130.225 li
186.231 127.069 li
186.231 127.069 li
cp
186.143 127.138 mo
189.297 127.138 li
189.297 130.292 li
186.143 130.292 li
186.143 127.138 li
186.143 127.138 li
cp
186.076 126.849 mo
189.229 126.849 li
189.229 130.002 li
186.076 130.002 li
186.076 126.849 li
186.076 126.849 li
cp
186.009 126.581 mo
189.164 126.581 li
189.164 129.736 li
186.009 129.736 li
186.009 126.581 li
186.009 126.581 li
cp
185.921 126.581 mo
189.074 126.581 li
189.074 129.736 li
185.921 129.736 li
185.921 126.581 li
185.921 126.581 li
cp
185.854 126.647 mo
189.008 126.647 li
189.008 129.803 li
185.854 129.803 li
185.854 126.647 li
185.854 126.647 li
cp
185.765 126.581 mo
188.919 126.581 li
188.919 129.736 li
185.765 129.736 li
185.765 126.581 li
185.765 126.581 li
cp
185.698 126.47 mo
188.854 126.47 li
188.854 129.625 li
185.698 129.625 li
185.698 126.47 li
185.698 126.47 li
cp
185.631 126.226 mo
188.786 126.226 li
188.786 129.381 li
185.631 129.381 li
185.631 126.226 li
185.631 126.226 li
cp
185.543 126.204 mo
188.697 126.204 li
188.697 129.358 li
185.543 129.358 li
185.543 126.204 li
185.543 126.204 li
cp
185.477 126.183 mo
188.63 126.183 li
188.63 129.335 li
185.477 129.335 li
185.477 126.183 li
185.477 126.183 li
cp
185.388 126.248 mo
188.542 126.248 li
188.542 129.402 li
185.388 129.402 li
185.388 126.248 li
185.388 126.248 li
cp
185.32 126.293 mo
188.475 126.293 li
188.475 129.447 li
185.32 129.447 li
185.32 126.293 li
185.32 126.293 li
cp
185.231 126.004 mo
188.386 126.004 li
188.386 129.157 li
185.231 129.157 li
185.231 126.004 li
185.231 126.004 li
cp
185.164 126.004 mo
188.319 126.004 li
188.319 129.157 li
185.164 129.157 li
185.164 126.004 li
185.164 126.004 li
cp
185.099 125.849 mo
188.253 125.849 li
188.253 129.004 li
185.099 129.004 li
185.099 125.849 li
185.099 125.849 li
cp
185.01 125.404 mo
188.164 125.404 li
188.164 128.559 li
185.01 128.559 li
185.01 125.404 li
185.01 125.404 li
cp
184.943 125.538 mo
188.097 125.538 li
188.097 128.691 li
184.943 128.691 li
184.943 125.538 li
184.943 125.538 li
cp
184.854 126.004 mo
188.009 126.004 li
188.009 129.157 li
184.854 129.157 li
184.854 126.004 li
184.854 126.004 li
cp
184.766 125.426 mo
187.919 125.426 li
187.919 128.581 li
184.766 128.581 li
184.766 125.426 li
184.766 125.426 li
cp
184.699 125.182 mo
187.854 125.182 li
187.854 128.337 li
184.699 128.337 li
184.699 125.182 li
184.699 125.182 li
cp
184.609 125.736 mo
187.765 125.736 li
187.765 128.892 li
184.609 128.892 li
184.609 125.736 li
184.609 125.736 li
cp
184.543 125.516 mo
187.698 125.516 li
187.698 128.67 li
184.543 128.67 li
184.543 125.516 li
184.543 125.516 li
cp
184.454 125.227 mo
187.608 125.227 li
187.608 128.38 li
184.454 128.38 li
184.454 125.227 li
184.454 125.227 li
cp
184.387 125.249 mo
187.542 125.249 li
187.542 128.403 li
184.387 128.403 li
184.387 125.249 li
184.387 125.249 li
cp
184.299 125.049 mo
187.452 125.049 li
187.452 128.202 li
184.299 128.202 li
184.299 125.049 li
184.299 125.049 li
cp
184.209 125.182 mo
187.364 125.182 li
187.364 128.337 li
184.209 128.337 li
184.209 125.182 li
184.209 125.182 li
cp
184.144 125.16 mo
187.298 125.16 li
187.298 128.314 li
184.144 128.314 li
184.144 125.16 li
184.144 125.16 li
cp
184.055 124.781 mo
187.209 124.781 li
187.209 127.937 li
184.055 127.937 li
184.055 124.781 li
184.055 124.781 li
cp
183.987 124.604 mo
187.142 124.604 li
187.142 127.759 li
183.987 127.759 li
183.987 124.604 li
183.987 124.604 li
cp
183.898 124.561 mo
187.054 124.561 li
187.054 127.714 li
183.898 127.714 li
183.898 124.561 li
183.898 124.561 li
cp
183.811 124.493 mo
186.964 124.493 li
186.964 127.647 li
183.811 127.647 li
183.811 124.493 li
183.811 124.493 li
cp
183.743 124.627 mo
186.897 124.627 li
186.897 127.78 li
183.743 127.78 li
183.743 124.627 li
183.743 124.627 li
cp
183.653 124.871 mo
186.809 124.871 li
186.809 128.024 li
183.653 128.024 li
183.653 124.871 li
183.653 124.871 li
cp
183.565 124.627 mo
186.72 124.627 li
186.72 127.78 li
183.565 127.78 li
183.565 124.627 li
183.565 124.627 li
cp
183.477 124.072 mo
186.631 124.072 li
186.631 127.226 li
183.477 127.226 li
183.477 124.072 li
183.477 124.072 li
cp
183.41 124.25 mo
186.565 124.25 li
186.565 127.403 li
183.41 127.403 li
183.41 124.25 li
183.41 124.25 li
cp
183.321 124.738 mo
186.476 124.738 li
186.476 127.892 li
183.321 127.892 li
183.321 124.738 li
183.321 124.738 li
cp
183.232 124.516 mo
186.388 124.516 li
186.388 127.67 li
183.232 127.67 li
183.232 124.516 li
183.232 124.516 li
cp
183.145 124.182 mo
186.298 124.182 li
186.298 127.337 li
183.145 127.337 li
183.145 124.182 li
183.145 124.182 li
cp
183.077 124.561 mo
186.231 124.561 li
186.231 127.714 li
183.077 127.714 li
183.077 124.561 li
183.077 124.561 li
cp
182.987 124.471 mo
186.143 124.471 li
186.143 127.626 li
182.987 127.626 li
182.987 124.471 li
182.987 124.471 li
cp
182.899 123.871 mo
186.054 123.871 li
186.054 127.025 li
182.899 127.025 li
182.899 123.871 li
182.899 123.871 li
cp
182.811 123.85 mo
185.965 123.85 li
185.965 127.004 li
182.811 127.004 li
182.811 123.85 li
182.811 123.85 li
cp
182.722 123.826 mo
185.876 123.826 li
185.876 126.981 li
182.722 126.981 li
182.722 123.826 li
182.722 123.826 li
cp
182.655 123.717 mo
185.809 123.717 li
185.809 126.87 li
182.655 126.87 li
182.655 123.717 li
182.655 123.717 li
cp
182.565 123.649 mo
185.721 123.649 li
185.721 126.804 li
182.565 126.804 li
182.565 123.649 li
182.565 123.649 li
cp
182.478 123.627 mo
185.631 123.627 li
185.631 126.781 li
182.478 126.781 li
182.478 123.627 li
182.478 123.627 li
cp
182.388 123.671 mo
185.543 123.671 li
185.543 126.825 li
182.388 126.825 li
182.388 123.671 li
182.388 123.671 li
cp
182.3 123.449 mo
185.453 123.449 li
185.453 126.604 li
182.3 126.604 li
182.3 123.449 li
182.3 123.449 li
cp
182.21 123.271 mo
185.365 123.271 li
185.365 126.426 li
182.21 126.426 li
182.21 123.271 li
182.21 123.271 li
cp
182.122 123.16 mo
185.276 123.16 li
185.276 126.315 li
182.122 126.315 li
182.122 123.16 li
182.122 123.16 li
cp
182.032 122.982 mo
185.188 122.982 li
185.188 126.137 li
182.032 126.137 li
182.032 122.982 li
182.032 122.982 li
cp
181.944 122.982 mo
185.099 122.982 li
185.099 126.137 li
181.944 126.137 li
181.944 122.982 li
181.944 122.982 li
cp
181.854 122.806 mo
185.01 122.806 li
185.01 125.959 li
181.854 125.959 li
181.854 122.806 li
181.854 122.806 li
cp
181.767 122.45 mo
184.921 122.45 li
184.921 125.604 li
181.767 125.604 li
181.767 122.45 li
181.767 122.45 li
cp
181.678 122.738 mo
184.832 122.738 li
184.832 125.893 li
181.678 125.893 li
181.678 122.738 li
181.678 122.738 li
cp
181.589 123.05 mo
184.743 123.05 li
184.743 126.204 li
181.589 126.204 li
181.589 123.05 li
181.589 123.05 li
cp
181.5 122.895 mo
184.654 122.895 li
184.654 126.048 li
181.5 126.048 li
181.5 122.895 li
181.5 122.895 li
cp
181.411 122.627 mo
184.565 122.627 li
184.565 125.781 li
181.411 125.781 li
181.411 122.627 li
181.411 122.627 li
cp
181.321 122.383 mo
184.477 122.383 li
184.477 125.538 li
181.321 125.538 li
181.321 122.383 li
181.321 122.383 li
cp
181.232 122.316 mo
184.387 122.316 li
184.387 125.471 li
181.232 125.471 li
181.232 122.316 li
181.232 122.316 li
cp
181.144 122.36 mo
184.299 122.36 li
184.299 125.516 li
181.144 125.516 li
181.144 122.36 li
181.144 122.36 li
cp
181.055 122.339 mo
184.209 122.339 li
184.209 125.493 li
181.055 125.493 li
181.055 122.339 li
181.055 122.339 li
cp
180.967 122.072 mo
184.121 122.072 li
184.121 125.227 li
180.967 125.227 li
180.967 122.072 li
180.967 122.072 li
cp
180.878 122.072 mo
184.032 122.072 li
184.032 125.227 li
180.878 125.227 li
180.878 122.072 li
180.878 122.072 li
cp
180.767 122.206 mo
183.922 122.206 li
183.922 125.36 li
180.767 125.36 li
180.767 122.206 li
180.767 122.206 li
cp
180.679 122.095 mo
183.832 122.095 li
183.832 125.249 li
180.679 125.249 li
180.679 122.095 li
180.679 122.095 li
cp
180.589 122.072 mo
183.743 122.072 li
183.743 125.227 li
180.589 125.227 li
180.589 122.072 li
180.589 122.072 li
cp
180.5 122.294 mo
183.653 122.294 li
183.653 125.448 li
180.5 125.448 li
180.5 122.294 li
180.5 122.294 li
cp
180.41 121.894 mo
183.565 121.894 li
183.565 125.049 li
180.41 125.049 li
180.41 121.894 li
180.41 121.894 li
cp
180.3 121.672 mo
183.455 121.672 li
183.455 124.826 li
180.3 124.826 li
180.3 121.672 li
180.3 121.672 li
cp
180.212 121.784 mo
183.365 121.784 li
183.365 124.938 li
180.212 124.938 li
180.212 121.784 li
180.212 121.784 li
cp
180.122 121.65 mo
183.277 121.65 li
183.277 124.805 li
180.122 124.805 li
180.122 121.65 li
180.122 121.65 li
cp
180.012 121.694 mo
183.165 121.694 li
183.165 124.85 li
180.012 124.85 li
180.012 121.694 li
180.012 121.694 li
cp
179.922 121.606 mo
183.077 121.606 li
183.077 124.76 li
179.922 124.76 li
179.922 121.606 li
179.922 121.606 li
cp
179.834 121.294 mo
182.987 121.294 li
182.987 124.449 li
179.834 124.449 li
179.834 121.294 li
179.834 121.294 li
cp
179.745 120.895 mo
182.899 120.895 li
182.899 124.049 li
179.745 124.049 li
179.745 120.895 li
179.745 120.895 li
cp
179.633 121.184 mo
182.788 121.184 li
182.788 124.338 li
179.633 124.338 li
179.633 121.184 li
179.633 121.184 li
cp
179.545 121.272 mo
182.698 121.272 li
182.698 124.426 li
179.545 124.426 li
179.545 121.272 li
179.545 121.272 li
cp
179.434 120.872 mo
182.589 120.872 li
182.589 124.027 li
179.434 124.027 li
179.434 120.872 li
179.434 120.872 li
cp
179.346 121.272 mo
182.5 121.272 li
182.5 124.426 li
179.346 124.426 li
179.346 121.272 li
179.346 121.272 li
cp
179.256 121.072 mo
182.411 121.072 li
182.411 124.227 li
179.256 124.227 li
179.256 121.072 li
179.256 121.072 li
cp
179.145 120.518 mo
182.3 120.518 li
182.3 123.671 li
179.145 123.671 li
179.145 120.518 li
179.145 120.518 li
cp
179.057 120.584 mo
182.21 120.584 li
182.21 123.738 li
179.057 123.738 li
179.057 120.584 li
179.057 120.584 li
cp
178.945 120.651 mo
182.099 120.651 li
182.099 123.805 li
178.945 123.805 li
178.945 120.651 li
178.945 120.651 li
cp
178.855 120.317 mo
182.011 120.317 li
182.011 123.472 li
178.855 123.472 li
178.855 120.317 li
178.855 120.317 li
cp
178.746 120.185 mo
181.899 120.185 li
181.899 123.338 li
178.746 123.338 li
178.746 120.185 li
178.746 120.185 li
cp
178.656 120.072 mo
181.812 120.072 li
181.812 123.228 li
178.656 123.228 li
178.656 120.072 li
178.656 120.072 li
cp
178.545 119.739 mo
181.699 119.739 li
181.699 122.895 li
178.545 122.895 li
178.545 119.739 li
178.545 119.739 li
cp
178.434 119.895 mo
181.589 119.895 li
181.589 123.05 li
178.434 123.05 li
178.434 119.895 li
178.434 119.895 li
cp
178.346 120.317 mo
181.5 120.317 li
181.5 123.472 li
178.346 123.472 li
178.346 120.317 li
178.346 120.317 li
cp
178.234 120.205 mo
181.389 120.205 li
181.389 123.36 li
178.234 123.36 li
178.234 120.205 li
178.234 120.205 li
cp
178.123 119.695 mo
181.277 119.695 li
181.277 122.849 li
178.123 122.849 li
178.123 119.695 li
178.123 119.695 li
cp
178.034 119.65 mo
181.188 119.65 li
181.188 122.806 li
178.034 122.806 li
178.034 119.65 li
178.034 119.65 li
cp
177.923 119.895 mo
181.077 119.895 li
181.077 123.05 li
177.923 123.05 li
177.923 119.895 li
177.923 119.895 li
cp
177.812 119.695 mo
180.967 119.695 li
180.967 122.849 li
177.812 122.849 li
177.812 119.695 li
177.812 119.695 li
cp
177.724 119.206 mo
180.878 119.206 li
180.878 122.36 li
177.724 122.36 li
177.724 119.206 li
177.724 119.206 li
cp
177.613 119.052 mo
180.767 119.052 li
180.767 122.206 li
177.613 122.206 li
177.613 119.052 li
177.613 119.052 li
cp
177.501 119.206 mo
180.655 119.206 li
180.655 122.36 li
177.501 122.36 li
177.501 119.206 li
177.501 119.206 li
cp
177.391 119.473 mo
180.544 119.473 li
180.544 122.627 li
177.391 122.627 li
177.391 119.473 li
177.391 119.473 li
cp
177.302 119.117 mo
180.455 119.117 li
180.455 122.272 li
177.302 122.272 li
177.302 119.117 li
177.302 119.117 li
cp
177.19 119.052 mo
180.345 119.052 li
180.345 122.206 li
177.19 122.206 li
177.19 119.052 li
177.19 119.052 li
cp
177.079 119.361 mo
180.232 119.361 li
180.232 122.517 li
177.079 122.517 li
177.079 119.361 li
177.079 119.361 li
cp
176.968 119.007 mo
180.122 119.007 li
180.122 122.161 li
176.968 122.161 li
176.968 119.007 li
176.968 119.007 li
cp
176.856 118.739 mo
180.012 118.739 li
180.012 121.894 li
176.856 121.894 li
176.856 118.739 li
176.856 118.739 li
cp
176.746 118.718 mo
179.9 118.718 li
179.9 121.872 li
176.746 121.872 li
176.746 118.718 li
176.746 118.718 li
cp
176.634 118.496 mo
179.789 118.496 li
179.789 121.65 li
176.634 121.65 li
176.634 118.496 li
176.634 118.496 li
cp
176.524 118.65 mo
179.678 118.65 li
179.678 121.806 li
176.524 121.806 li
176.524 118.65 li
176.524 118.65 li
cp
176.413 118.584 mo
179.567 118.584 li
179.567 121.739 li
176.413 121.739 li
176.413 118.584 li
176.413 118.584 li
cp
176.302 118.34 mo
179.455 118.34 li
179.455 121.494 li
176.302 121.494 li
176.302 118.34 li
176.302 118.34 li
cp
176.19 118.451 mo
179.346 118.451 li
179.346 121.606 li
176.19 121.606 li
176.19 118.451 li
176.19 118.451 li
cp
176.079 118.096 mo
179.234 118.096 li
179.234 121.251 li
176.079 121.251 li
176.079 118.096 li
176.079 118.096 li
cp
175.969 118.029 mo
179.123 118.029 li
179.123 121.184 li
175.969 121.184 li
175.969 118.029 li
175.969 118.029 li
cp
175.856 117.873 mo
179.012 117.873 li
179.012 121.027 li
175.856 121.027 li
175.856 117.873 li
175.856 117.873 li
cp
175.747 117.763 mo
178.9 117.763 li
178.9 120.917 li
175.747 120.917 li
175.747 117.763 li
175.747 117.763 li
cp
175.636 118.073 mo
178.789 118.073 li
178.789 121.228 li
175.636 121.228 li
175.636 118.073 li
175.636 118.073 li
cp
175.523 117.852 mo
178.678 117.852 li
178.678 121.006 li
175.523 121.006 li
175.523 117.852 li
175.523 117.852 li
cp
175.391 117.141 mo
178.545 117.141 li
178.545 120.295 li
175.391 120.295 li
175.391 117.141 li
175.391 117.141 li
cp
175.28 117.385 mo
178.434 117.385 li
178.434 120.539 li
175.28 120.539 li
175.28 117.385 li
175.28 117.385 li
cp
175.168 117.829 mo
178.323 117.829 li
178.323 120.983 li
175.168 120.983 li
175.168 117.829 li
175.168 117.829 li
cp
175.058 117.94 mo
178.213 117.94 li
178.213 121.095 li
175.058 121.095 li
175.058 117.94 li
175.058 117.94 li
cp
174.925 117.496 mo
178.078 117.496 li
178.078 120.651 li
174.925 120.651 li
174.925 117.496 li
174.925 117.496 li
cp
174.813 116.985 mo
177.968 116.985 li
177.968 120.14 li
174.813 120.14 li
174.813 116.985 li
174.813 116.985 li
cp
174.701 117.095 mo
177.856 117.095 li
177.856 120.25 li
174.701 120.25 li
174.701 117.095 li
174.701 117.095 li
cp
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPF+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B81F2C027D90222AF37AF8158DABD8A6A3309F2136
FACBE1848A44C17EBCB6720936CA51DBF738C2EEE54BA4F168ED7CF54A35C3CA
C2EC5792742EF714EF05> |-
/parenright <1C60D8A8C9B81F2C3A8416F95B41DEC1B2BC8682121EE1FC7A7
6516A86A96EAF9A7B20C852F99192A17B1BC2E1C3BBEEF7820FA171548238E9D
502CFB76D8CAB7DA316A1> |-
/comma <1C60D8A8C9B854D0E112FCA8966643D972DDF4069EA1A683517CC489
AC8679957DA7C55CD598C98C32> |-
/slash <1C60D8A8C9B854D079F228A01DE49912BABB5E0DCC35A8718ABAD0B4
9BD5874C536DBB> |-
/R <1C60D8A8C9B6079F7627FE36DB81007EC91E9799402440B74F883E0E71F7
6F9B49D24FCA75B072C6EA389BCABE75262B6C5F8A70C6CE0801838B3187DCBE
B76B5A56F8F52F1F1F3E3403EF7802CE27BB130E1362790F9F11E90781F59694
A46F1107A77DF7B9D4B9C5CF3BF43FA3061CCC40E069C9A95B0C100D7A665D7D
FB9A58F221F4A7F862304DBC9AF6BADF1C566CC2137F432AD7B0604589D6A9> |-
/S <1C60D8A8C9B64EDFD79AA67B28B8030B7B2511726D47A2C647E6ADE4A75D
60FE51B70409FEA2C2A9D7923702F7072E14338647DCA5330DE50EDA2CCB0752
54DDA0450AE151E3AD2AF69F31ACB18B90B175E0A002C815586B968D823D305B
880C63E38B1F61D3E4825B28FACD70F6184988F8C8142F835C751F2AFA99C8FD
CB3C32A924504B161C26B5D49345699D3C6CC842F42B517C47936E8733FE1D65
069FA9ED0ADD81E34596> |-
/q <1C60D8A8C9B7EF3272B02106CF08D5008F2C7B5C8A9E114B257E751D0EE2
E0E889E013C54302409DAD4E6D23B15FB78D5F060BEB9C423829DC7C805B4072
3AE1214611FA3E3BE7E73C9A4AC39A13D58C83078721D53EED13089D735BBC4E
DDCEBC620368A1BF783774342A4B535057A642890CD57B3AEB75C87B92DEA681
35> |-
/t <1C60D8A8C9B854D0E39D4A6FD38FFEE65D2052948A24EB808F85141A7307
6E5305FE4B51354AB4CDEBC31E5AC6CD8CD9912464DD321E756CA23CBAFB773F
242158A04D01B1DC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPF+Helvetica /Encoding get
dup 33 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 47 /slash put
dup 82 /R put
dup 83 /S put
dup 113 /q put
dup 116 /t put
pop
%ADOEndSubsetFont
/SYHDPF+Helvetica*1 
[32{/.notdef}rp /minus /space 6{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 
2{/.notdef}rp /slash /zero /one /two /three /four 3{/.notdef}rp 
/eight 25{/.notdef}rp /R /S 29{/.notdef}rp /q 2{/.notdef}rp /t 
139{/.notdef}rp]
SYHDPF+Helvetica nf
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
103.283 159.054 mo
(q!R)sh
115.726 159.054 mo
(\(t\))
[2.66309 2.22363 0 ]xsh
SYHDPF+Helvetica*1 [0 -7.9971 -7.9971 0 0 0 ]msf
9.49365 95.2119 mo
(S\(q,t\)!/!R\(t\))
[-5.33398 -2.66309 -4.44629 -2.22314 -2.22314 -2.66309 -2.22314 -2.22314 -2.22314 -5.77393 -2.66309 -2.22314 
0 ]ysh
SYHDPF+Helvetica*1 [0 -6.39768 -6.39768 0 0 0 ]msf
5.49561 55.6724 mo
(2)sh
SYHDPF+Helvetica*1 [2.6657 0 0 -2.6657 0 0 ]msf
30.8394 141.774 mo
(!)sh
196.605 7.48975 mo
(!)sh
138.604 67.7358 mo
138.604 19.2871 li
179.39 19.2871 li
179.39 67.7358 li
138.604 67.7358 li
cp
0 0 0 0 cmyk
ef
1 lj
138.604 67.7358 mo
138.604 19.2871 li
179.39 19.2871 li
179.39 67.7358 li
138.604 67.7358 li
@
179.39 67.7358 mo
179.39 19.2871 li
138.604 67.7358 mo
138.604 19.2871 li
138.604 19.2871 mo
179.39 19.2871 li
138.604 67.7358 mo
179.39 67.7358 li
138.604 67.7358 mo
138.604 19.2871 li
138.604 67.7358 mo
179.39 67.7358 li
179.39 67.7358 mo
179.39 19.2871 li
138.604 67.7358 mo
138.604 19.2871 li
138.604 19.2871 mo
179.39 19.2871 li
138.604 67.7358 mo
179.39 67.7358 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPF+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B854D0E112FCA896665672EF12164189457C7632C9> |-
/six <1C60D8A8C9B7EF326DA8A82F3E3A701BDBF87B0445B24BB4A9441F8832
C322D1BC33CF817D969D30356F5A9C7B6A3BC04BCB60307EEA3C8DBDCAEDF63B
B0D16D5E88C603BCDDAF740BE4D413C23FF83ABB568EDD80EC21C6080EFCCE97
BC5B698D120BBDD3ACB1C21306A55CFC0AF870A681C2F910A278AFB09345386F
B78FE3E94B4F156D6934F4> |-
/equal <1C60D8A8C9B7F374CC52CC6AFA2AC69E2626E08155548B3F09D59299
6A164FA4C0B7A39FE024A3E562036F05B86028> |-
/s <1C60D8A8C9B7A73DF2FC7D7CF8DDB6CD30877299DE999D72A56E2491407E
5E9DB603A87C07C7833274D37DB06BC1585B03D1793010176CAC94215F5F838E
E9E9FCB1BE630D2F0EB931A6A4E8BD85C1E9E977D2BF9622D6DF0584BAE6A5C1
944BB5B543054E11EC2B82F9913C122731ED179BC7F4BE008E0F45> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPF+Helvetica /Encoding get
dup 46 /period put
dup 54 /six put
dup 61 /equal put
dup 115 /s put
pop
%ADOEndSubsetFont
/SYHDPF+Helvetica*1 
[32{/.notdef}rp /minus /space 6{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 
/.notdef /period /slash /zero /one /two /three /four 
/.notdef /six /.notdef /eight 4{/.notdef}rp /equal 20{/.notdef}rp /R 
/S 29{/.notdef}rp /q /.notdef /s /t 139{/.notdef}rp]
SYHDPF+Helvetica nf
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
149 28.5249 mo
(t!=!0.6!)
[2.22363 2.22266 4.66992 2.22363 4.44629 2.22363 4.44629 0 ]xsh
173.678 28.5249 mo
(s)sh
146.197 25.6865 mo
146.197 26.7905 145.301 27.686 144.198 27.686 cv
143.094 27.686 142.197 26.7905 142.197 25.6865 cv
142.197 24.5825 143.094 23.687 144.198 23.687 cv
145.301 23.687 146.197 24.5825 146.197 25.6865 cv
@
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
149 40.4077 mo
(t!=!1.0!)
[2.22363 2.22266 4.66992 2.22363 4.44629 2.22363 4.44629 0 ]xsh
173.678 40.4077 mo
(s)sh
0 lj
144.202 40.2124 mo
146.201 37.5688 li
144.202 34.9258 li
142.202 37.5688 li
144.202 40.2124 li
144.202 40.2124 li
cp
3.05176e-5 .993988 1 3.05176e-5 cmyk
@
0 0 0 1 cmyk
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
149 52.272 mo
(t!=!1.2!)
[2.22363 2.22266 4.66992 2.22363 4.44629 2.22363 4.44629 0 ]xsh
173.678 52.272 mo
(s)sh
144.202 52.0752 mo
146.201 49.4316 li
144.202 46.7881 li
142.202 49.4316 li
144.202 52.0752 li
144.202 52.0752 li
cp
.627649 3.05176e-5 1 3.05176e-5 cmyk
@
0 0 0 1 cmyk
SYHDPF+Helvetica*1 [7.9971 0 0 -7.9971 0 0 ]msf
149 64.1577 mo
(t!=!1.4!)
[2.22363 2.22266 4.66992 2.22363 4.44629 2.22363 4.44629 0 ]xsh
173.678 64.1577 mo
(s)sh
142.626 59.7388 mo
145.779 59.7388 li
145.779 62.8931 li
142.626 62.8931 li
142.626 59.7388 li
142.626 59.7388 li
cp
.883665 .769161 3.05176e-5 3.05176e-5 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/SYHDPF+Helvetica*1 uf
/SYHDPF+Helvetica uf
/Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 15.0
%%AI8_CreatorVersion: 15.0.0
%%For: (APS Workgroup) ()
%%Title: (5.eps)
%%CreationDate: 11/2/2011 7:11 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!iCB6Q,CcKP5>fA]#J'RH06:SF+#UljM$R3X&b%'\''hHtaaHT[:e5gJ'O^!C#S,`G7!AQb=0akGDsNT['CJ+QSVs#[^+Ahk;f
%TAAG3gd[H84b)kc2#8e4Wc&TpB%R6nN+K<:,\kWE1)V]shI0mX6l+X[N4\\T0UePjj/t),QH+W_36c<)s0P98-g_H:UqLb$$jPaA
%D3P7lm^N%`g3>GAD&^@MDdh5c[ai\VkEF#\0D#\,'G$D2[JiFiNQ#=Q[_]7(#(Og:YGHMoco[d/4+`heh9FsJq,c@PlRD*/l5BLP
%I=F6A%d#q5*-Fs=*=gKg.=RG/`ID,"ZPfJA6B=];5.NmY%hj@Cr>0]p#p9-19Pi&Oj3_q0U(t_4@9`Y!!#Y?817O5B)2@%i,S2!&
%R-r>f8f1;-m?rL(c=PJ0j@4`2d&6/Qg(Y!#R[dJ0_6=lX<%OM0nf,\m$GK&JUsfYJNV%fX4i6*)iEnjkG#&Yq.Mg"VAcI5k;:n9g
%@E>A=W&5Y&iq95\`$`@+KT%;=ShNG.<'\q;m13oe#_qn![CBt0+2SG+f6AtSo&M\a1);]Hc1W5FPXl3Rc6gElC4(Xq)s'tR!6K&#
%KA0f0,eK16E#W$hK23c>b\(LgXR[gV#!`0C,"TTkStg!_'DimM;3(?(rE:$74_:eFgd[$Gi).EJWrKEtJ#Tbfkd-[2U:j&:=?]S)
%TiH,R.H.f56sM`epCZXl[";C,Z&sSIPn;u7.d^A##D;'ar;:o:oOimrO[9"l*^3LOprm@/ZWsBbniZj2H$G2^BbinSdom3q:0pSi
%TNN`JJ#-&i/<tg!WDouhJS)78-C]]IfdpGhn-_(rAt^+?#+s8D>_ZkP1;$dC_io*Yg=0m,ZrThrnE[J#1oSsG9;L%4bG7W2-[?'&
%dcWa^)uP4u0J<-RAhYhu>4N(+"eX-G"pLWDm$&LNAJc52_I"uFp]OEH=9LGh$9n"4i>;8-`W]HN9h>kg)%6s<ThVWnhpGTDSL9XK
%Zm;H!:\#tQ4W+7a53X*(O#p.8MDcXXTG`\#4ol@c82>5V9U[s9"e*7EktDc=OI'C7n-OT\!!sa_Vpp"e$9k.$N"J7qA.j&/`$IPH
%S<Oh/k:%e+W?Y[o["i7HGa(*soOIs3o;$.)1P&8uNAR@/TFD<kngFnX^J76n*lAiR':KM>LG9FQOI+o>g;!^9l]fTW8g<=@3!cE\
%G,@r#q$qV?YRFqI\k)&?''b\[&_[oBKQt#uFCOJ/8GAeq`D=8_!9?09-Zu"3<5R=!mKnFML`67_=BSf*j;mkR?+nBAUVp']!TA.3
%"r'hNY:JBr=2$HEPh*un5bBGbn`pNRBQn0W.:rXK]ZRMgrWbY6;9;H130$+!IZf2b]>6_n-i&O(:F=1bb"qR]SL/h:5KUZ6LA[Ua
%aOi;s^LE<f;LXdYV%WT.q+:RZf..U,Q1C.:X&d@"b"qShOoJ!n*p+"tao%=:l!NL!N0-bt'?OD]^+![P^KMphL>UGp/rfm'OXKdH
%-BYGV\TG5[6*J2D,bO.j3W)sr?jLlPEhZT-=,Jk[K)Vr-8I8KF:$*6uKLZ#/o/K/=0PLhi9n#tdhZ3A(09pGg8PMtrIU_Ztc>j6^
%1BF"G@8$AW<X-X-V_"\JCuFkond=e;-'n+kg`nR6nd^+S!Dqp:kouiM>G42H7)L[A3?YLLWoN7^-nU,'8R?-[pOnh$AU*iN!hQ.T
%aoj8d6p,YjW!8GTIa\8\1m4J7)F4=c=c>M7.^J;<\r8[M:7(LgP.pNAWA)/5EbjoS17PFW''+0ADiu?)<!*-%9Y-,9P_"qE+H#a&
%A(o)tL//PToj,jP!gecql:F!1R'rC%%9^JCc2nd09UT6^O5O.uP<e#7N@n/T9(U4Adh9JB!6S);%hM[*Ml:2e)LIU/3?.Vks"ECi
%`/ap!#`Lp7/S6;h!ii+(R3]F&gb_Z:Jb1a(,u5f/.uQ[Ed1kgnqEH:@%UdaNV'>,A9(u.,(4AbW<5n1emjr#q1<"ngnE]Y4ci`o$
%;Zp!!0TM#Y#I<>t(jOP`0-t%l`[b>'?6WZKQo//JjA(F"4H"HbU0rO4+QQ.,M0pP@A`2":_lqOOW.ojl#3cd9T1i6'4mZ.8W7'<-
%=G*BPiU1=n!16oiku>1r80h&H_B)hQAE[4[nCgFNqCJr9n"_4G<%M3!6_Q#k"[Hdh!B_&&?oj8q_BSgYl,Yh=GL[CYacrTnZIgKZ
%!!B6OC][MPlRZI;i-b/N9*g;u5GaGRK<5p<GW%Om>nEUj#`gE]$tWd(7;#sK:lS5F,VE1q.'e((QDFmZ'@?uY,GR^-<Up*'.^fTg
%Bq(djBhp]+5+,d#M5i]K#0@Ju-49m-E1F9d(lB+8>-'2_'2(`b1-(c4)J.'#(<.cM]LorZIjGf?'<96OUGIkL.P4?<a=QF;M4gl&
%7E?m:*QBFCqXVY!k&e6c-&cpRTn8_NH$![b!Z3Qt[:GO-,7RT"73naA.e8$4m:2B'dGN1-WkdL(da=(/AI2!u)(jZ[PF,4*2%#<9
%M(Db`Cf#eO.3Jeigoh(\$aiSM`<Eq&/QbUB<b+?_=uodN,rAn.VQqC!=GD",L3L0r3gE:Xhh&AZ&k5_6$fOm,idb1]_@\I64IB^1
%"3T+!+',ls&X@#T#]9u.PGSQmW%;@TBuCu/PdJ=QPqgD&91C6=*ZpIT]gcW8;Zt9sC9\+.6+!h;$;VXe=YjVlXlNQ?Bg`gU\%H88
%&g>^Ol]r92X=:gV8.ptm"q\<9n-U]^R;I%,S_PGFRi&c'Bknh[RAt"lBW\%H22e`u>o"STj$?]\1!4*>[SaW=AmripA3WS9K-A!.
%Y^d`[9u7OZRh&Fs_ua`eej%RJoN,`[@21XcR0hDf^i>0q3V7NMQUln1SZYufUbWK]`sKF*hSb-NP!XO_,+X#d^eY@a9;mrr'J&5`
%2.t"4i:SAA<J`G^^8)+H["S322H6t!.hA35=\0CgD$mIjANB6/_QjGX9n%Xj8U?Y(iNkqY.O4.>r(!2J,NL`2LE!#aal8n$\\kJm
%!?#JUY;*t"!0.[#rL_U?/!:X.?KZ(GfKn6.)Na`cJqTarkS#!M!mXA(CdD%CbqV!t^`6Gi>Y2>SW;qQ`%.cNq7K7#B%aPlT)-9O5
%'fH^X6[Fki8sI@9P`YT_bdIkM";%n3J>Z>&''4;B'<!uGDoHJYL6jk1j$Y]A@EHQdjKZn6UT3ZeMRJ(_^lh]QqZ)g2X\(37(Mlh!
%(s2emV$LB\Qf(k#9B^j:X-ilT8LYr*V7\),PM%-,':7eur!JA(9%8Zs,3r20.Zkia+a>u.BImJLe4di^!1lMqn<-A@PXR#%!<H1n
%AsEiRb%)UP,a"Cc>@]KT+=.\GX!eY<PJC]Xd1?Ql#c&*p3m9Jgpb`G_945'DOsI,]J`%;g*Ql=<`Z)S98Ra*!]:LQG5^6`P;c5%r
%:g^M+?`:?*N)5`1.eIb5p4mI='EhTp''\>(6Fr'61IrjtJP-57T(2Bp8Js_sJ6teUUl?j\[g\5)#!Ab@&X%C#oL1A_NLc?q>-`r3
%McW,TX7FGsJ=n]K[JPiob9Vqqb``Y!L[t9hcR>jPB-hi_P(9+P]I6PnI`BeB;epY-<lHs:hBWiB4!h!`[%CnUXZB*T[59W:CQ`Q;
%"t0C26+8&kK$$W!.Xji$<^fS/;OpjO[9:.tdkrNAD"8';PBXMTD6Hi0%:1>BH$0dA;2njr>*`5QSoN0mA7/.&BOG,L,lLE[_MX.@
%nq`)1WWWn!%KB.F]W+XEe0k1*^'SsuaA!r96;gB#4-",%e8$<aB9r+tRTZ&[1*_s/68D%jWY/gXa4;M1'coo'Wal7\mhMH0koEXB
%bHg](+\`]D),Ue32iND\[>D\^.2.3!Cais&5hmWc=>dT/7r9]oMI[HHfRm"oK)ifMp4W:g,R(3Bg0nQpMPDs\H&aA3?D2e,p4/*-
%o;,n\9"gA;111o$!n:c$$Z.$RBX0@md$QF6C?r`4BuLZ/#WL]gY6Ze`[]H2WicW:?<J?$tIN+\o`$_)9e6N3[P7U8H+P!m);MoWO
%:@\GQ<(B)2)3oY&O,%\;4dAf;cc,E^r#n4'rkQi4L"Uk5q<QH"(S?]ebf;MJg)k_OKT0dtrZS`M(>olb?Cd#7%@1X+/NW9u&:Yd\
%`Vt[@gZssiKYa<GRJ%6hGd%)9+c+PWoK;!tMr"3uI3AGL4qY`dkBK1-O*^?>DHe*AiZIdk!5fi`n$DdlFb<C6$#KA<_8F$GrK#9m
%N"S(GIum0k3Vmn7(Il+3oJ8*.nW-h&ckGCpZ/$'9dJs<;lB%0qa$REtSdgA;[(jF(Zgmp!?P(V@V]50jUtnK#81!9O\L7f[mN;'k
%.c(cXhnl>@(-R/PWD&hjO*AX.58$YppFZmOU](P4T'#$grr$_]0H/9sT782[_C.%rW!N$)00X2rTj*>SBThA=_0h-sS581OIuU@I
%7'uqqN6a[V6'2+]GNUb*5+HPq)*X(qlZLVQ@q]/Af,kD4B>hh8jUK_5@=-_!%rdRb)0kp4Di<g"q":sVGUGJH0;fb*QAZP659Nck
%K!D8Cbp&j";'(,t"qWFgj(51tnLAuN?H"QB-rng`<Va<qdcupe3)m:GPhT/MTCGj=&:lhd0:\.@c;ZHeOZo>Xmg\H4=ar4%'0hrr
%J1%MaJ?I#;f;b1@jgX["_lM+gLq#kbLPTG%K5%tm&@^nKg8_X:"EdoQd`1?]$h5hqLHo/^#]r@X)1`F]p\L[cT=!ma;"Wj-![>[@
%+<6U-A(micl@lLm7"2>ks18eK&7Wl*X)il,Y3F8;Ich5e4N#,46bi?mF]HE>)p.0gld^)@'QP.jLljeF[K[,.lDQe!OK%$TWuRn1
%N`LIb/)SC4(*mSTlG8)r+o+RcC_V6VNc=Z(6Eh^AQ</b5*79(eQd=n!5Kg^2&*E(a>o_0<LSOUKkH=l7HfI^dZ\DkYFhWOs/@Z:R
%^/09jSG-Y_XPKKOD*ZVUD,Jq.:XSM':\=6!IQDbh,.ruUT`Tal>93Yo%)rqq@/1b[L)[U=ET.,rq4KlcM];GB%(k1_df$h<Lo!@<
%^2jDmM1u<\*.A4'd@mdXTR,Z)<I=GM;&URN5*_h*5BWME?TJ45q.J=t&,ObK$rHn^r4Bl'+Ybu<)j,#qoBGGXeTa2Q#XKA"O-E3O
%BB5V5$kg+U&H_UoT*r<e7Z%E`@[#,ef*K+,EuC+^]8jD"MlCTI;>WmR[eRj,!tPt>]g(eU=0U1Q-oW2B+Q.D&o!:K1YG#N%eP^sf
%";.aO_U5<aGg;Ib&7[`t1Ot"iq!i%qY7^bL,6no"NR<:9VsU1^&ODI2qnpN@OIn<JBCJ3qMJr9TQ,4R1rkMl2kdN5;h7kjMB&dF^
%nX8(oH-jGEBmSAu+Gh)np&)308!4^<d<FR^IG[L4`3ZeA0Vg'JV.[iOHH)EJ%+>X4=[b&ld\""2;@H.u?pF)k"@b,Vd((Ta=!+Gh
%hF7I2'O3C]GOsQW5W.V-*"Zhi,Wi7>Gt8&tJGMM&HN[%BXVh>BdkiUX19Y$EoF%%'pp8i]o!HA#dMI*Tc-pZ.0R:=C&bu)3.K2IR
%MUnZWmiZ0Km:R$d\1!7%s!X6l@8XGuINfdGR7:()DBjUd80pKTO4bTd+o$&m2k%J[h%lp#BLuLT5Xj84rOY4[bDkJse>2%/X[f@]
%e=3H2ci<[665!+66D_N.q^qF[ObkuUr$)Eul/R^0f#]$HcWgg`;`ks'"'%9e-W@*A'\8^$c:H?$G6WYoQ/Q8Ns6GX%?7=n6FtOQ'
%m6?6^@@Z0LF>b3>"2s*#Z=n.0"t^/T:p^_'F6\6ah4P8Ve,&\9el&*Rs6CcBhu='0q/k!PrkB\tjeTtB95"j;k2"^\s$NTjSDn6A
%X?V`"p#dDP/2kJci1StN=J#YbBK-nLD>K;1+NJH+/E;7$s4-S_4roVYCAEo-*g/^`n^qS]Sad,&)GT1=7^>&q%<:p7IuI9VV<-f`
%/p7DgN;_)L.aVf%O6FV\R'h93h-*0YZ7C-2X!d^:*:]Q!20k`e`g@U<HM>$r=ITg*e.ZmJLf:\5cr9e\j,).Kc\EH3.Q."fY"/FC
%_FC45%p='Cp?(:Cn-pg>=V*O;7:@[i2H2RZ,LHO4eVg0K0&iW6,?7+GqSA0I)7RTA#.rLs'aBs2Vt4@jqC8&X-8s<:1_XAeCmI1J
%+888]9_nb74kD5Zg<3*<3Z5=)S@$7Rl%tp0c`"XdKYc3K73E/'kMp7uHB0.h1/s^!n,-Hl0:EBKPR`l>n'm.$BcB`BAP`LtnM%R0
%Bi!+R9`)a'!.-&8CBg67.D<?TLJOg=5:q8?dX0F1p%52;mHM*/"OkJ;VJk'-oVq%I;^'tdoOF-NdT<@pU;Gs0_i<Z'2Vr,TiR#@>
%5KYn.B6\\EPW?qSdGO?UV:$o[`*9XkGW497NjAME>_:.d\)l+VD;gAh!hJg9U.][)NttuI-6Sr_p?'_A,oK<jJ9rJ65NT018Q79A
%CBWOiEVFfBT5At;@mm&U0cKOoo@X8SYX)Yi(hKqAWnC'^O/A+!$30c3q`VlTs5TL!+/0kc<a0=>)m^H'@-Js9/SnYus.4(,Hi7*Z
%di\3pIrnT(8B*OAUQ9]t6eF@?:Ljg<N9V-ij'@t'+spdkDkT6[IHn0Em86s3O[XDU$Pu4D?7EKR-C&2bFW22VbJoo[,/#,;oWP_h
%D7jSDqU86Y6+ETk/KsGXL@<XG?(hP/9/9_=2(o>iJSI@<&?'A"R+bq1(/)dg@86V!5g)\5R2O5P@=MK:K-`=N?,\Crs.1YYU.&S=
%e?j'eS)SFY:"nDlXtf9pM?KgDPhkPBe._gel\e],]X6tEqtj?c9f!*IndNjA>jr.)3=%;H)A8jP8X<T^iuB&cd28<46#d^J"ANKi
%"`-LV5bXpO/IO&PJl`R+:cb(bZ_m5JY/V.JP#?gA'(1=9Y^PGGM8Ff9/(C)Xf]LNlP;@.4(aCb"*];FOB>T%]^g/liZ60lrVNPOd
%\b]4fN^rZcOQ+'Q1nEU:8q\ibC7,YM.@j5?'V&[\$K)==WtkNjkuJ<?Oj'WG#*!oYGgt$L<?CfOR.YLNQ;pfbeO$t$+gh@V7*a/V
%lEKMp#/Qp2!G"o.:Zusbr`]p]E6`:o7X*4O+?]_;k5X:gi6_!bH%iXJFLOE;j(l019!qT#0QBafopO,eT!=daZqjX5+M?-XBTcfj
%"cE@1rSIY\B?7!:>Ei\(b_Kj$g+IKX3u300cbP@hLnB]?g?5P@nZ&0fDOakS34FGIJMW.J/iB`KQo2KRQrA]t1st?hlRer*>k-gl
%^W)f];EtHo&Qk5t(fbo:=E"Bo1dp%Ed[EDe!)C<+P7F%?n"=gt6ida=._n;;LOGu025NuSd1FpE8mbHiHrnn6+XH5agk!PG%A:##
%eUe[SE8D:MFu36q_FB$.(Hn/5$_BLBb@M4oAP"_c1nqh)nY,Mu?jKe>Nc\1><5aZOh[fm_UbMj+AfYSl(EqoY!J'B5@cutb09*A/
%hJ*+G+T;o._D]ZU>O2E&/I8W6fQ`[\7n_Q=%G.2a"GRY>[3R!a?.4bFk(%-g#_:#bN0.UaMmW_JHGk_/pCK0F;@iF0eW03Bf!Lk-
%]HC#_hU2+E)kB24'bQ:<d<`b5J<@iS[tpi\mu2NB9j`jXKNhklJ9-Q&>')*+5Rt`b&A;u73O'A>M]X\>&P.mpU]\f-2Of;m+@EJP
%ppX8tEN@3Sqo=;,8>GTdC.VXZBSQ4ifmRDPVB<_EfG&o@m2C*O_L_iqd&8IT-PlZ0+3e9.JTc2F)boK9H#1,*Z>"-*[]b84g7$#B
%I9<dUI@eGJ_FIhlJMq4rCm>lu*4'B:?t%Z$cPD4oY2T!dmR1(@]8"QqNu\PU"Y$Kip?tRHlV0,Y"_n1/YXS"XMt*T)[VIV*U&])Y
%Rp/O2Mm\Q$[oqEUMa170O1NVi"`E0<NFZt6Z#58bfo#(_:b>ZKjY>3MH5j8uHE5,"2kC)+QY.6gQV+'K>`N<]`)G$oEsUVj*5D4Q
%H8hM"&^k:p7<-pI:Kp+TWi(CA/FC9p!f#rU5^+?P43=Lq%;k&ekloV53I,>e"$-o]cMKK`3<r@B;0djgS*cDf\8aM5H&pGr2r.A'
%e!Vc@P*r+g;c0siV3Ao.5]07jL[B<@Z.cg&Z01E,)/Ae,@G:_uWD@u%peTK>44;fd,u!)lc-hmegXAoI2JcSh-"opiM$E,]L-%U4
%e4@]L_%Dl2GG2!P06H-DE&q3nfiC-L6+Lgdo`;IJ8$_i0/H-1A(6`>Dl'Tdt#=8;.ZmQ?J'rdmlH@^9S@0@`o%TaCufC?.E9s'VG
%d.GTZ1PHcWSFNn9[V2dq@A-UMNOo^UE$&5AG3q[tie=Mo!f'48[Q(Z=ZD%St25V-0%U(C2_a.d0X#A]if1;!fBmY4b]WUE-=t;a[
%crf+F#L,+h2q6hD".`5Ab.(Z-5HRsF;)9TZqflX#"gDGp"Q;,D@1f<A#rA,9`\SrFOLQF8YdnMuoYZf!"9"5#[Fq;/b.&VbW7pK6
%>!ZPpLD$.N1<$.i$fkEb+WfA*n;ik/8_%iDq\1k7qQa>(8DBUoL6B]Am!8Wg_VeZ1hhB%8$VoO(n\5uj[08l??FKkL:.T97:t0d%
%=As/`Gmi@aE"/bob]GjA0N=2T"\o=!&?Z1%&(Fs;bFs/`5!7%7.fou]$or]sHqT7d2k;oA&"c8,q9Koh^N#+DM]=B7\<)3X%sIdH
%eZ;_qcdoiM>HRjIjdiqHOIpRPrDr44)gDd.HQsn^pBZa;gl7kO,@%A;%2\`N9RQk(J8lmKjkrR:b"YZ.:Fb7Yr7Tg*?cql+e3e!G
%YSV_gNRP@!do2hnNE;f)M?iNGI;nf..D;9W'T8)n/WA%UDp+VonOE'-\Ca@6bI+BuiiWibm7l!o7mj0DG$^K>Srp28EA>;s%)Xjp
%@em_:j=Qt:>[>tTWeiAilK2%[\S9e;IL$qPdF<XU]R_+;o0tD)2r83pb'5/'?WZ)tkruA,_<&@OKE_m&IY%dP4j3XjrD5X;4"4,M
%C,_Jm85(W0Hr_+th_(Zm1:WqE^*7'X8/&O`T-2$&NMi\S!L"ZQ.Xcu)M;N`ZorVU+`M`E>,/uPtoC,'%lVe!#Mbc-ODLVW:6%@Gj
%&o%U<mds8%%TZ>lGiFl_!hiK2LL(HT,W<2<#ee??<0Mm<5$t3;VHB#ur3p?ooaRT,T7:J)$=XIqE[TCP7l`r<e''CZL:*/bmM*DN
%XKZSAM"`fU;ucQ9@Y@aO^W!V`SaG!l&QYdKjS)?PVR@&)mEG!Fep+]]q^87a<Osk(lXk!sgH"SlZja4j\&M,G/'NtgZ2^bj3&)ZK
%[J885NW<j6Oi!Tsr(_:p8$=5Y3imRDEn^g3icDkA2mnLCFFA\EZCta*Wl=fc52UHc-<P>mam7eR*+MENoMbW"]fJ$iRZ>-iqMhcJ
%H%Y*5(S2OR7;/QdoCP]8m^!cc)Xc+)E6jt\9n!<F-)#4820",le?[:I`elcN5IDTtmFI@\1W%;aStBdF=ArEchkQC@&QY8<KXf:V
%,B#Mq7,G"$7DBC)h]#u=B3UM2K_7MIcn1jeBk%)K@mt(`lI0rO1YdaKVO<IMJ2O]a[3:LnP"eaE@r4Cn[#M:61jHOpmp>C8%!N;!
%KfKH&B8s/;ro=Dnib?RIlfG:Aa&qm"W?6"mlWC[X)&'*4;<IF,\7pop\07A+4p1sKXFLL"^@@7J9Sf4m])94&Up0sO3cf@)fe^Y%
%jEIbBKtVoe#`OLb1HF/G`Hq,Zhjg*C4_&C$`t]Uq5XQ*T*)p9P/tS[EYs+e.+.?[;\ki$7-<Qlqbk#of`S6j/E)44q_m=062oPQ=
%(`f#R'mD:J?6*(*7U!4O9XR)I1;oVANGa%Mcd=5ZRetJcT)!0u<PmJKK=]#8Ht]rU6r0io3<):;TcJ$7Gmi_kJ2OX:o=TPNpt2@n
%.ti%P>hJMb^3p=R/0Dl6#o[Nf?F9M5$.dNfH`33f&TN,Fi!$3e7IbI:V.2+'FBHGmND6pFPT\8Xa&/C4N(ak^D\t">SLYdtZ#5J/
%]/'MiN..j;;&Ee$7Tb_a(b9E<MDS(Wj[p0:gdOn,jNXt!G")*dU&CG.p8N'!HPu!?T-?,d([UY2XMH:43d9_`:QZd&pe79R8aqGW
%4&g;W_O$A82+V<2=5*91G=MUSoXT6[qD<VLR![7EeZ_;n$anhb?dF,.?i6csMk'70C\ea=Bnf-'cEomDF8!=`qXeU1gM*$;bqsg-
%^$DXk[!2OG<qlH5\A.o0?@QTHF8Df*UW\eae!isslC[WG%FK';3cV@flaKZTgqN%%\"/lX[cp_Dk%f-(Bp^gR^>V[#VGE!)[=]:%
%Ve?&H]1I]iM[b]V`5/#/lePG$Z>'$^kOfiZKe/&BWtnJlK'DSk>^hkoHWp&^gVKE%;nP5\l@+O!4;ZZ#2$dPp9_6]]EbnPGo]iP"
%.[iO!$uP/R4W+pXTL&RNE2J(I&SXg++hrF;/k89?VWWF[99SXYB:q0>C9L4"=f*u;\CicL[I:C[HBc)j"t9>(_07bTUs^a1a"7pN
%fkoDk-c/>>fPZtQ&/@,as8I:C<n4,7NdB#2f])k^c6W)p1>Z!2.XmNuq2qq-2oioL6MS8B,M\1NpH(Ydk;KAK$q9j#J/WEPO8HF@
%_4'*3\t0<ONNjhu+&&qkWkMX5@PrLe)Cna55J8nm$<q2q$u8YT.]FEB$=^C2QS)9?HTp>QJp"Zt.C<We]T0i65MJPNXS%-rQ)Nua
%HhD>8=:p\i3E*$3ZnT=bg&enG7C>8.Lgdg>VH=FaV[7FG?rn1RV5cSD(8"(6Kmc0tKsg/(`JTop[4\*o0'F`cR].%-'L2RkRZ(YM
%Tf7)?%\X3Cb_IFtVQ$\iQg3CpD7el,`-mg(.%sL&'rgD%=N#-/+V:TKEn_Vak+X,6I$Y#mg5l!;EY7En?kV[/8WF'%SuD%%0F@/A
%A<6g#ium+/rkb3caOVF`8;O[SJ=>*bQiR.PF[u:aS;\a&=LeV:W-&QC*hi,k:Im!q_\()-;Z'Ilm)U8#[5+n-lCl345Z:_gN.oO2
%;4_t-qAfIu!s(4h;$%>f5SDAB0qA-J1fT[13D/`+i"'5=>In]'](MUW<6p3":Tnh(io$"+kKbr>MJl#J8jm>HiOS,sl.D$cn0)qH
%R-k/'oQuQeLl%uH,lTKd7a2oZDVEFqQ9<"qjYYd9$#:]lptC=+cKB/*9j@p^WhPg`1cA>0WYpB)/7?Zp)LCd?Sar,a>\^!IpoFDd
%j,3]qUds^u"(g\]WR$hNZ:Cdf=,:HT0<Goq/kVh(WciE.UWLJglt<-jF==/'.!Ji^6Q_FWVT\S-.MLL28!.P>Hq<<CY1c>8h+,.J
%6JQm4@fN(Zi9iO0%8LrCC>%XDb3*]G:9;QsR.8f64`?b\U_6_JV;jE"\:jI@:L\kYT!'=p2e/aQ1)Dj)K93KcVs8rJ*nBWV(A+<W
%h,R.G.PbGeg\ur'%^&,;`dHhG*/F8CkNEa$4-5DpYn!FpJc^\X/ATWl!c6I./3rOO7i@b4Dr/_j-Zk9+>dG%;GRUV_.Md72mD4A=
%Z#315!i;;bpcu0cGeY%4"H<s\U'ZIB?-%F<*KtVsp?&GofXHKZB50?K![GplisXS/Am4\oW/STWnD^hIl?8Yg1F[uIo:;;<mSqck
%UlH[^Nq54dg84k0gI\OM=W4H-.W[&cX)"Q?!PM7Jb$Jo3Vcj#?I.oa=8NjB0ogk_!'g5\,38@3AZeO'bL93n;RE!X7V7,>l%dW:F
%$qedk.mU]d=a(9LURX^#DD3\(VEL$*T\Wfk3GsR#BmXV>g8h_YU1pHnH_O6am.Q_\(TcBEJ[mlueXVoMb%CjU7h)$*BW:;9mb(k0
%maGr!do>&1na`432qPN$96WVTm`]Bc0YB*/%61J(;IAV8"M3L_3OMQqX]&#gK;lL^g\MkJ29(@p*\>m%rDXe29s$Zd:D<uTYVS3.
%^emo">3Bp:Yn6st<!p]n<nLs/qIkE*qpC,f8<-.Shfqd-RDM*_4#'`g')Lu,Ge`MFK<b:UZTt0ukQ*E),UNo\cr:f)7\TEk6(bU@
%MZQR/K=1G9gTfV7SVi"d/.12."jBL#[iQ\HZt$sO"i?tr6`&p\3":l+lOZf,Dq?_\b)EGd:[<7.b570XARo8]UF#EO45a"i`YlH0
%/Tr@bBo_Zg]j*15%DBi;60Z^6B><K\6SJ)POaaPS)X$h..)`cf%\5%L:5:(-,?NbC'1]4!1M(g,eaH4+B7!-$)B;mV,b/M`e9=$b
%I.$"4JKogZc,:E]B923/SU(T4#\&N1bQ;D5$g7,XgLV1l7'LP[rH`^gi0a=h'djUMD\-dP]Rr8=@,foA!i;DAZq;`[>S:3t].hj;
%fn^LSrJqdXQ-e*N[S5pq]pe>MHtkeRpW/(6S2qkhr,p_sY_?,/Ek=1M.pDKnlR$ff>a=-+nSX/jcK3m7W7-r?rC1HS,]^>*jVA"0
%;RXCf70,`-Anrd)%beRaqtDBcT\KCge6GBah9KZB01fo]XJ]bk5</-&X+N`H>j+6s*+?5N(>KF3e>&C@Dn3ugmk/b;T5),\H'Cmn
%)0fkT>dSV/=F"T]R^6"-.A:2KXF.s;B?kT0e=@<-!n&!VNk;&H@4-S+?&Aal=I]^4Xb:j"aONb9M.X%0&nm_d7X*UeEl^O5HVYcL
%+VN.jSRid;]9_I`8P^k_m+8"bm0>\l`S@("RSr`M#W\V+<D:MJ(@6:RFIR^a(SogX47#SN.<u&S,XA^cr2_C(Y-E)tR^gO6[qfdD
%7WqS*B2ASF.I!^6T(STC)Pe=@3Lt7r;@4O3Y,%PDQ\,9A?+L'$24WZ85ShC3O\u2N&GE$hT>V1%@G4;ZZEr(/O@G*8-CPW@7UmI$
%;7,7]L[S8'b15o=n,=CrOlSuA/#23TVO*E[kIisNMkJmNSP!/_'\?%B\dt_n=Of?Th)I4%/YWb`k&^W&VS^=oOKIM\$:WZ3,s\M$
%<F@55B"-_b^-*V+)8<dgg@Qcp6X.s[XbdsJ6&,(0,Pj%(V"V!)eb3Tj]"1a`GO*'?--7tKqr=eWmGDSue9c'6g5=TK5#g'LNlu9T
%0QXBZ?tS.3!*W:tf0b,6ERen8"4CraVU9RqJ/mp:esiF,fKB,6Z9KsZNj#H-B,)?Wor=]\deIkaI?^(1pXFk..A7cZqSB4G0eI-T
%7[tIWh;'[Ij>K+F5gWP6kPC3Q(V,\*_,Bi=M<7>BVPgqi-52ipR%kC7E=?%uU@T^L.eF`Lm-4@W`"i\IgTNE()2Au1FCCXg`sd<2
%l%_1OWOUA^cSP^M0Jq)'07`o=3MWJ-+sSkF1L4'q07Yf;qbcLq<?+5T`c(;e2qR%_5t"AXdlU5)*AKpJmTuI:!<ek5ZG3l-oEBA6
%bo*tGJj)2*$hY^mCsli+.i[80nml9EGY%EkY*/VM7Rn8uhT3r7eJg+209F"Oe`H?F2![`rZd.ZbdB"XbcT7C'F4r\'q5eZ5J-FMe
%c=`]k8+rE0V"7aPnf]jU8`s<rWm9_t/>b$PQd067b6OeF90/[W<[F)nWZ3Oeo3(8I&N"8ok6kMVo'$RDjjX#6Z=m4JHn%;(5+PI_
%!,[k_G4)Qu1i^.KHh1bnX]*QC:DOH"MLDRNaB?ql9lETV*I(f9/&p:,\T8<H<jWcqj69c-.BM_R;G33g2l&,ZAV#R,qYa1)8Q)#H
%-/@/K>BD6H<m[qC]PL(dB<9`5nMqYacI$4-DO_A(m]'(F=V9"4CIa^kT6/2%e>;FcJ'X80W@IEaZ6d1`)V<2II#2;HRY7'<E]9Ka
%R\_^Jl5JG^pX(SA_.gc3Ct%gZ!LGEDM(46L'>K-s=d=/CE9q(F7bOWoR@E$0KNSkW<Qbr;Jf?5:WoR#*\q!Feg&NdLn\h?CrR`H+
%3g3q<RT%C3("?l.*-ZYF:eb"_YHih!Dk8r4J[BX.+aWA_`cZTr`n0@ofD(o)kWC?Yh.qFhma?ksFX)$&G)Y^Md3OXc4<MgK*HREC
%3+"H"73<T<hs]4[he["S>in%ek".P0C:7:+]mp''b=k\_k]0.0k0Q<_hJlXaYHIPE)J8%lc7-tnFu_Q0TG4,7TrfVR'naBd-J"#.
%DP1,f^0@=Gh6O'obr0RlH,m.2>CgHkIkb$9]8p]ZW#A8f^W.n!baFp3i$r'?_sj+]p)A4THNnN.%)DV7D'C>$`kAVGnRf>W)qO_U
%.d#<54o!EDC_%EanDL)g"N+,<=Ml9'@$^Psi6`t%D4@rBj=ElOBZ@#KA@t#Ig!5-_Ybd/,SS-1F-KH:>&U#&(NWP-cOA,+U;5.$t
%#+1+!R@>h)&-OI=CT;a\dV5(\%/k>4aqpk[V:5j:H*3aD!&@?nRcud+V=h2_#A[[Lpl^:g-^?c#OBJTN6#b9#V"uol8Pn0j.3H(l
%hU"G`08Hu?S/Y7\7A&X@m;uR=+B?9ET@=,A<o%fX^!ZIdiKfVYUA&8EZki*>\M.Nm"<k1W@?7n"m7&XC*$tr.k@2.O]f-=JJYUc/
%2[D[a.V-Id5+G:7NQ4#$EHU^Z,f;2ZaY&u3QuM?(nX*tM+'Brs\]>7!@NBd*"<k\4f_j9Yd43Sb=HU%M<Hk0.oD._AQM%1>%Pf:W
%a",2"aDO)Hl1e?R!7AXE!d50o:'TlFC4:0;JM]9+?^-I*2K^^,elm-[io_XRf.7aSVterc"PTqb7$s4F"D3#,l*9@K=rN,R=ipMZ
%_"5PB<T-%:S^6noPG"h=1\6F1[ZI#gm`[f*;qs6Ak*_!1Y;J+SjW"eDR<eMBY\VA)__FuGaa$O>b>aWT7\R.>od)Ec$pq)[9C'gG
%;kJDOe*5GPRAW+9E4D;fQ'nP>)cbPK=u5c/XYmG++ipWe6fL=HH#!f$7%iVf95CZY8a,9\fKn_t"">r&k#YOl@/&0)>q?9fTL<U!
%^`agJ=Y*$=e9W#;["a5hK@gJ$aEr9u#'k[[(E@5MX&W'51;qoH'3Y[HpA^LUL2J_le0U1bf&P$?FuJDGWSJ)cY/gErkqtH_1<jo(
%hG5,F6JJI(5]at(V,dNS>-9p+J/g3e$PO<Y>"`16-15_VZNXlghm(j7?tOuGMt\7H?KWYfnebXq)2p,X]H@U-qF2qbZWlb%H"T(&
%#WpFpg>LQCV>\a@mF=L+X4&?Ip1D@b\)8Crd(g1*>^#"nP%4U?>*<D>Df,.m=b*fD,Zt-.m%S:7DDmOr`!aQ^.Tgob94Vpl;1nOd
%\&s"r0?.7IZ'&g:9ZeS-L%_c<.jj@\bfr24nh:se#6'KOH*2#1jc]0MSG2,P8]ii35HHdmccVmBd"8m=dMO:(i*!Q3g+*!bdkiW,
%k4X-H4fo^1Z(%8Tp].7g1FJt#a"ot:]Us*kc">oAAJZ^-*dt'd]u)WKX.+m,@+Xds.\\rI]%6W?an,WV'jG?WWWq43ZBCoG?Gm,C
%1_6CTr7P_2E799<D"Zr@>'@OI;S+tLLP(jYI--2fo'-%o6galQnk^&/`CB.XW*G4&bN2Y"(s4I9:8kJ.1XL;KnkWsU_K=IL0H*[5
%ZUaTi\BID0>g6g5[(G/^fnnEsXhpN[oXN8nSp,":!-`(@G1VYA@`=VR[B]#NoIMC[hDW:JAq@?2c)S!_1Vu7NV_ApYb)#_)G>Oi7
%0)2@q/%6D#.\Xo&ZmphHEHlDGBU8"Og=lBpc(E5.mN/Knr=G*H<logNX".,M^8CDQ1W(]pe1&&?1WNZ^IB8o9G^IBt^7*Y&]Y@R9
%>-rAtr:i4-h/a(\mHWEQKD^G#M5R3qOGVmUBd[bpc'3d:H7GC]#IX@m^W0ORS/oQB/h"3fdD@?]\So-Pj<=iFY^-P4GtkIalTQmg
%FBN_//e6GVGXQE.Y,T(jJO+-9SKHRN0?U*'h@a_<a,8nJ9ZuKjO*&:9MqC=Rg2<e8g?*:bALd#6NmRS!VW+8qMUN.uW35&8/(R:O
%'rTln/un)Lh:)VGH;)n`[195-H1Y)Q=&80e`Fn3TZ-UK`d(&JoPLsN4eYh#mf9"Wtj@(n32_-3J.2/nP"eLtl0b"fnN842/!WG_=
%p+6p><V2[9T=/QFT+NK4PKQYT-2*bZT'K/<1HO^Hm@NW7lncfL><H"j3O-oO-0*D1D7=h#T95IHEi,ooZ-Pu&;)sHaQ.T`6e[HBl
%\oM8Pd6:;nk?8PrbYh$`SChI2LE=!>d+T-0N98JDe8"ft4sNl3]"mTfI5VrnlUpMb9=,uYqb2gSm_lgSLup%hcc?7\BJ[?QOk=<R
%l$K5-mklHc)$,i:8(X*[B6;d8(jWl"@\6LuT94uB@Ubs,)V`-Fb3Fh37Tk./qot"TI7E;EHe$`0fOn_>/fs)WSChItF-;Bog/s8m
%(o:n&B&_F9]/uq7CRSsR6t-i_R=4a<^?c;/NjVpX1K-<b>fG#aj`!\h=kN2[b9G?UZ^AW?8YWZIL-n.tW=`m5k+l3NI<$GE4AJQ;
%C!X6Cp.7i76/?Q]VqS.H$aCR-_T%1,(3QVnjeoDdBhbHeHSj9@9`0'W@T*lqe7YZ7f$*FZ\P/T!%)L<0ff7R7>o*IH(,iQ!hb&NR
%&1ak/]j+=)K:!&$G\C@^Dri,S1j8Ql<\FC7cj@6tnNW"F@p8oY@D7tOnNTIp=OmFmEVqXR?H4'lI/]SBY$g03a5_D]iD5YIXH&d)
%o/IfHIaA+^8qr+$fflGB7n6gAAf^%HXB9WGEr'SrW9$,C]6m-?a:RP!EKKX&*o,s'8.>i8j=E,sB\RiCn:i$YhX]u2Rc#YtUJZA3
%Dm_>^0WL`Uh<1+BKN]PMZACkk*,:0mfuL!N%^eXM*!VO07oEh_\=Q+4ePB's']WEDeL]Vicn]t+6K$MXb"Ij`;;8Y8j&MG6p)'6(
%[]a_al6P-YE\S%+ICI5^%0>1_Fe;Z"jJ]gg"Ij]n1Ss6!Ng^`)UGb"^1lGaTnT5V2!]A7iUN94d;;8t[HTd3?E3lltotgtKhE?ck
%#Em"s$7U:?DKsn%;@6Y^R6mV=%RMbYQ$!K:`A2hj"e^!C@mC$r=Q*J9Jek-L5giXe,$joD<=6\XLW.*6_0Wc!:8)Xc]O.N'T1>+6
%Bi+YEan;Tjf5N.e<iu73UT,Q-YGLZZLEul&\fU8(r],tE=g@CeC0NJHrO9_T%-miVHo@"k;d@oPo@VX5?*<Ufj6PGC"`*dIhkqQ=
%LuPGf^'L1(ntV0b[*//kqJi.p]BDohR]ft'*g.O>oQf/KVbmp)\J(^W?4IBW/IA:%N'hC*(6EfjXqJ&#q9)oi(K:ugR!in[[$AE]
%ANf/WObNIq$eS.-[2VdcC`nS\2ODR+,*dZXAT"cTg#Q$KA>\$>>a>4+#J!gEJ>;a^1[AAV4ECNNbL9$,Q%+:jZS(#(c=nI;[676;
%fW/\nq)[+E-25<Jdp+AX)Pd;g7g[H=](0a^0uHZ3BInqn]\C`]Be`<S[Utem[Z4S"A>61Xn+PTdl#p4SVDE?u$r]>r[43:9GFs)[
%?`4OiTlR$3RWj\dj?+I;.dpDY(VsW=e&DZm:'eCSNW#p#2d7oRO5Lq/b*I!g=ilFPYP-"Ti=u-jISTGBn"+8Wc@<'$+WD$e#ci?u
%dVkS%^sd[(NKn,<_.ZAR\srS<[:`-:RP%Zj]JmsV$_$5\MY":sX-:oAPX$R+QACp^g.o,/cY!!':I\HC1Bf-M:3`Pm8u:d\*j/5B
%q@>Zm&!MB+D\-DY]H"L&\auVBB&;%0p*g^lH!Sj00T^c(kceN),8'b)WZYV0Ar;kQ*UfPg?qkM*,Yfk..aP4\-1KFdCOJ9UNjX>@
%oq94f;/5'$)OaW$4k>p!KuN'kF0*pWF\Nf7L(J8jK8BGp<$uW+g5e=1a-R[=Frlg[WbT\hKlTTe+N(b[XK$*,B[lb_]fIVbp/'A&
%ecSjZn1VsHT>Tkd7+YsGnd[,s8epXl9c)@!p*Vm)b!$`c4=s1+%\*,_:;3sr<nY`Wpr6rXG](fTe+Ei]/NA<@$I_!-4&nrV[nN^G
%o9Wlo)MI(tEK$A]!hfN:bn\[eCa)10Q*&?A8p>7:@Y?dd2rjtM.Q_%c-ac]e]P\]&hJ!B8'fK+K1A<H6>rQ8O0JKIr$ZW[;d8bTU
%#\iC$eY$BqEg?n2Id#^9D`c;496EBVhg*;6pGO0QN\dERgsYVNM-d2T?ErhDAOokGD\.&RG.2Gi]b$q%-md9K8(o(X'rN=[HFp?J
%^,t.*O^"kun\.(p:fdQPD((:X@;WX=1lp6`f[SJd8[iIcT:no;+ns;j5q>G;mOmckoWl"%J&0/Q'@"ArPPA::8GLJdY*9V5$#,i@
%G@uBEkUN:NZWP7XKh?Kbfi6*3J`@HCXQ->uPWfuIht6275%e)"?.5]']iTXH]L509mqphV"e=a%g/\)+T0n%V:p4c/.ccsAPVUV.
%I^9A<]0\i5O$;[W!h+"n=cmC+fgO,@.A)-nKkRn@L"m9BR<UK<[ZJJ0;]@S^F.\WZ<,M9cl>]Ip,Wa1?oVeqm=<]'=Bg/8e%PF66
%\2]8`q1uUi=LT`9ed3UVB5>\d,\k;iGs7sBbcToi7+89X2#:X[PXMGFL`V1B0,H'o<p$+TGZE:.[jd//o+;ciklU+sij`#=<_+Hk
%J%8[T8"V((42hP$g^i^'<_/8?XQ@J@MA8b,oC/*)("*3+?S5AmijN'8YsS$n`O-I3oJj&C\Os+nNV`afPqq`me/c/[A]&8<Si,>=
%FgRH=Xm?E:]"$:*Q%Fef_6)`u.t`G/bJZXt;=JOe2q?Fg9q@A`$Q`K`OHeZKj5e:HMc1VKh.l&Si1Y;$6\V48/9kjm4UUEn?-=$H
%FI#b3V@"_`eIFJ6bpil-XTrM&j]JD<iF5T+/FVe+ZJ_GLON`>c>o#OZRjtW7p$L%=j!9!'@t*1?]7PeRb;^)Jkt]lt06h0Do1=8^
%l3.\//?9e;gg?Xa>k$+o*ju?dG$"1[,U?$_G.8`o.0U5`bfG!3nBbU7_Gpsb>$!f8#*H)cnBa4aQa2,_Rd5Q\k,H0nm;O57"/Npl
%"V6Rom23CfTfNBmg$BO[$6D7P`Efn0Tlmb1fo4@5GRJBs*a4>DlTM^M(Hg3DOm+i'k=fl^EcEmYH<-mM\6Q/oT`ZaJNe3&;eIFI,
%[S"A'QZWY%/U44JU0gC5V32Z04L@:h[LDO<>SK<-<qE<RG3+=27O]/E@_=ETOBaDtb^,$eL;t2>*a51A)hfRh<UarN4Bb\NE+r<X
%?guD\MT;Shi>S!o<'.Go,'R&VE#i"R//C?i?D>e3fW7p=clg_'<UEV*Yd.HK6T(&Z<]aP]VAU(1ZrVX3#AO\O&$;*=&&(JP%0[9E
%;hH*:#OMm?3mP]MXl,l[MLbeGPd.Mn_*_udL8&aoi8O7+qP;i=cC_Om_*c5Jg7_P60=r9H!V:)JY\IRUXY!K@coR!*ci^[L_*bQ>
%+k7()M<:PjTs]#]n*AI9buNbgFY18&$6JJcR',0%MBRjL_*`"HnE>b%/7%bl>%@3'/cf.Ti1Y:VY%El(V;U;62)Wno:%U9_[rBFm
%%rIl!lR@)B6F0gki1Y;$6Z'Dd!Ap!o\kqnC3_@q5T2rO`,[FD<="nNr>s)6RDJ.S@@3k[gYs.@!BXAi>caea"fK.krQUFDJMTRbB
%(<,BXYWl!1=X7!B_A1GaRBa"`)^^"\Uh#X[l@Y:h;c2VQT3enL*-oG_VqXoCmQ4-H5us=rqrHZh`WScfGkZ3@i5O$;g;2]-HZ:&5
%7#+'Xl)2HV5#.#?5P%dqqpb'(kdS%<G%Pr)opqWO@'BFQp\eS_),#'--agS=ED6!OS+X^(WV(\1mp2N\DEk=Xe)\hL5^;2#/HulR
%YKa-!nTSlTG;g<.J^MeZqI`;LN)HS1gXEfbRh+"I47A5cLV`fLemi1e,ikm<^tGRif2n:thH9QLi8m.ODSgb5^VJ>ka!IVVhE>?5
%.:5^^hm*9&R^kSODS;i,dq%Y3>Y[o($Lc$1[kYUbh4t@%?ZC)^1u:Z7i9Mt)EM?$Mh0itNArGK'$$8inO9t#,kAT]^W*!^S):8hU
%"//"jT(td:ht@rt=!$[?T^<Q@[r*7i%^nl:]]S5e+7lU#ceF*-eg$WdlCCElM,O\93uQuc8T1kW"^[30Am=JmYKt6mKmob#7VHc(
%A]5mpo$XNBLI@XE,sWJEm?He!LRN1;98o1/l`IeKBt:]ULsPdT$LqhK\!GkH5-NfYp_Q?/d6W2"F8&XMUq@]NkiRZ;%H'UA!#to4
%6Xo0U94><o(%JdFRc8;AS/.0(DdUE4S%An&L;nU)Ld<M1KUDcEaa4Vh<_RlVJG=lN)3N,4AB[i!@ftBHN+e@qTg.!LS;W>:cQU#<
%.%]4Ti,?uNp*cY"b;&j*/RGJu-Q*&r_1X>$STug63':^rrm+["e`3>!6$ChF+,#ma3)I.'m`NkMlBbi*K)?aoIP<4#a:DD'K6lbe
%dMbkJlL1kX*JB0U5E2V6I3a.0K,?6>a>UI7%."P[Ca3-Di;lTqLNrcd"*,M6[:e05^E$sT3+<]F_2Mb?@\TD87d2CiLEti#hMgDo
%3;airfj_JSBno,!4o"W/^ub/hLi!/M(Yk#SV<PTV`05_uPhB?$'r/<(Md\Gi.DoeAKpU_Eq(l#4.h+7<)3lpsE:+ZS"c>Ro*\Zhq
%DZmE^=+DJOCP-uY-u`,:qmgb;g:-r[r_+C9V\QCmUKc@mZ<ZWKoMU#F4s"d]mTlI1bn[F$3ms]L-&MJhAjfr6D8aUPZu.oVZ4=ZY
%&gY6"2fGEY<SrBW\."MW8e6:O[\%p7H+nKYJ)e#E_\n'rOb>&YL6VQ5^.*G9At;A3R)(_k7M5-!JGe!T0(2Hhq/19=jk2p:Y4M;=
%7tN@]LSR&$%\LM=6-.q&HB<H/<oWL0?g_Fb^TQs('434d6j-NgmK+?>A2I]d;DUf!A,"L>3I?]P07j"X+nAk1kpT5S;tYP3_;k!G
%/f(T>h*G^nO&?M+`h;n:1VG:)jmNi$j#^jGVaY9A#+nA,b(@m/kfc2^N<@_cd`G?83"Y'>KN+^GAR\`!U/PEffhYX&SZe^G\OCjq
%,fK,b_dp$;mU"6ir8*COqjZb4_?*CR2Q_/;J$N0aieV[BRmhfRJiN'7&[DCdk/'Z"Hl[_cN8Ssb(-kgqKO25ui9M4\o,s2DL*qt_
%^Vmo"d>4:eSJjI/VC[(TI.Y6p!.o!9fEa9Z;ouCV,kUfNhe]+$1Qa_H:r#s2/?Ta$>mH.)-J:B`RNKSWP*Dpcm>W"5jG]?apOu;&
%Uidm'[i_>s4:U=BL5@S"5eqAZ)C>1EP8l!JVs#@RdjVtZ(BmCKeQXN]M!)HmXe&&r@h_!89qtn&Rg!h%b+06F_*q7,,s&-t`ThH/
%pP&1_GX%TKEn/uS2[l#g!72B(93UEX)EtG!B![.s:E:X@_))u'GWF]1\(q.J%+k'KFnUFHoJo5R_6h-\LA6XFIQPS^\B;^rbXQV[
%LNno:Dk;hU<e;f)`5cMknU>+QB=k-`#$G+OW&(EpTk++`lNTPu$mLKZ.$C^Oqt4"-La!>MJVhAMP=VbkMG$hMPCm]dr!i(R^UQ*E
%LZWj3Jg,c,'),G?C.Uo=)N'oE,JtbrGKa(]Nmf[@^/4GUhESb-E3FoVZU9U4,1O"E)[SX4W)*6,puhP"*o"cFhM_FOk2/"6d=b7e
%I.=Sn!;A4oqtd4GBJe6a'h&*@om;OQ%iPDUM*>NCk32.\?kid?EoEN01_1-RHrSe?:H$8j]_NeZ4IT9lTTefI8B@N=PO.N([N7ZT
%]Q2XX:eq3>kCA+J8PSUq@f0oOb]Z1)*$SCj&ar6B4U9c?EY'I9+1'Q&^*p^$!_=*/a0-t62!a[,\W7=`[2dpl1CY?)a`HbR`c8t%
%B"O+`1W$tj_#=?CaiT.36%+RF6?P\;ZiG`2QT`7g07-s.QYdYCBeto-Co>sdJAb1I!+6-#"GSQ319HSf@fu6eB^[q;5:H!l-(hs8
%?jVok/)@R#J?"Y67$_FqWG,K85bfFV9M6.P9OrD*hHn'5-ZE1>\fWA/m/sd/@oCM?7[=Fj]QprTc=Rdk*lC'q2%oIm]*Mja'&^K&
%BNCm!6JaoeS;Z%GD%cfo.IV9&ZN+0U(IQ+hc'O<G9dbXJ6N+'GjO&.BNSJd%81;/WkQ!.pmkleD"QR.C"=HDr1>[b2m`ir)gb=!l
%=hJ<*MI='N6O'@Q#m0qNPX<G2_+:hRp8l(,:2b=gJ.fs!<WTW=]puRY"d#[$^)Wek\BQYX$&7@%:)h9]SL3lUA(;*LWr+oa<gCk)
%(rIMfq#7W;R4s>(pYrP\abQ(qd)F)9&?K1!e+ZBbIQK-pS_TO;eP%o"'jku"Im`dh.E&-J:TQQlg`KaLn/m='(SuJLC9M&7_hQQH
%,Aq9p/sj<NUSg^8m@WeR=n0+K3VS!"Ii>G$[GCPsWXlef:[D5An]f:J38/PqcXe+-).CK>9nQQbRVT>=\Z4"0I0Tfie])m,/c6=C
%`QI/D5HRoiCe=3k,q==R#IJ+$pH'ZbY(O:2],9Ak@*HR-52NG)<U08Un)@?$s)Bo(Bf'hKX/iX/!q_MS350)VL956;6QA#'[\hSo
%s5C;/F`T(%U@q-e_<J0+C(;,)m,:j@Dn/Ik[Wbr&SNX<5h4nmb3SY31^O+m[0^!66[*Zj8+\;g<'F7q8P7,'gMp5!d@+.Qd,%cG]
%)2=P[7]!H__K2iB9YM7FG/"*D_oL7=664]H<cBW;0?PBE:\HYF24A<tBhQq1)8Tr>RTQ:]*$XG81>uX59+INXBkF,I'>%Zdf>Zt<
%d%@T^&+@c(&eSU4IP;M;8>]]LQ$N8u(<b4Eqpf5d.R&(%P(V''2L9=k<eu[?mF'`<G?N+,,nFbDm8gFgI'hGVSUVVI9!O%oKD*)W
%?"FVLFkQ't+/+g`r<a0MHQ1)[T;NZ9Y.PORatHQ%8O-sjQ9F"'\.1M(gR:JY]*dS,L:/,/HGG?mU8)C6_";e>'iE3</f]h=*.>"K
%dn$];[]S0:&tHCh`'J';QLYNoFW4(3hV"HpVRm623e'M^1#:D]:hB!-NR0X%Z\&8tZ($>K%ddQF9Ui1<b\:UEXi>)+=r_36DF=ms
%1/LJ4B[&@2>,9U+][=7he/NiB'YNBj!\QM+7UCF3n;Z<Eq>>R4L:]1ii*pcZ)pLds]`-%G[Q!b53J.u\oG^lDoL=c:!IXOPOd!D3
%2^jOqDoDP8#=nKIb41KJ5_Sb-YiHVQ+`"jh<;VeR]ltXaZ;Bu@Ht)'SJ+lkY2oPUICS\484T!cH,2+<N/+4;'(-]m3HCt-N8^?]f
%Cgilc08eW/_VG_Pm+/,9mC2A)@It4_6hjm[%b*#UCk)QHT0)(hQJ>6??<#d0P:_ma*JD3)l9_gC=@])dZWKeu_M;GM<QZW]2DQ1@
%qmhti<Us?-h"0,i1j;"G?WEa53Cc)H*SRRueR?3qMc*usUVlNaA5bETm9J;HCp7t:TA"Pefb098n'6l4VpG1G3](s;=*C!#KA@Jm
%),0*+(K_eB5$i++`(aK3V#)TZnFRk34%TH:9!E*$i]lsHr*+NPUGQC4C;RE"%*rCerER432/dI&2!9kR]J.+-h^g8bW9fcX>4&$8
%qJ9@,rC2cp.F^:CiT>Cb&?Wi#DtP])p8Ml9GU'HJD?&)^bplp<Y^l\>FTVhVF7.1jj!!$`Y<:9)`8>B49`54>E>mGW%2F&Y5$ohF
%esfcjh]I!B2(O(HD5(:;;9'iG[.AFK,gRVjmbMLC;1!8a#j:Mia[INom->?:7Z2(cRHAOPOgn/Q%T<%r#.L.mFgg?T_qmZqlcaa=
%_'p01h)@L9,o$8JkFU!qZGf9_<BqXQV:+,_eg^SS>KtC&H?.;;<c:WtbsHfD5;"jWf<NIcmH,&[ajb@FE@"]>lD5=BB-B[tC&Nb#
%ikeRPU"AG*2cB;I_e0+q*mW[i?nZML`KFQWYVcG8^N(r\N>u48q<CG0Z&sae/EslR_K3?UJ]XXh]p(`u$!3]QC:F1!Qa9K4%-"g?
%55OqsDJ`*1ae/9t%5$mAo8DJh;>-$;/BE'-058TH/U%^s>/Df(=F9ufKPJIlqocfba1ic_iL2`UCSmr$7V^<7fNiZt=KFK3T\T9*
%#+`ms--%5K'[&KV]BPH\3aQ:eAc9KIr0`!LS=<A?@4<QK3W,>[<c\hNS<MB$?1V=8'm_?9?%9Oi4&_B_L4?8;HI6ZA)Y'cAWM"?O
%Pm\$?p7's1I8qGthjf*Wouh'?DIt!j7ShZdDt^;oM:OT^Gj;Oum8mrXk+ls%Z`d*Ar3b4Uf%Me'^8Z-g3W#!!5MEEg@o1UZF@="o
%5H9<).Y\:EhG!hqiTtdr(,#-M&ICG+!6;XnBLmkeod)%;c.">Ho)DFZWkHs7boEdM2ZCu`$VY+3k6_2(d6_tlR8H=cX;M*uJbGfc
%MXJIfZM2!eIZe][;qdNhXfbI_\]$6pE>8njG#r><,ghd>_m=h7^jHga+'_/ob5"$RO5pd)1XPT.Icu"M@_@1K$M3#!HZ+.S"s;er
%bL9tGlGCaVKYipU0.H"l[l\D'hS=7fZWlM,mbmq@/K&>FaXo]+gZPLrM";6HL"fFnY&6.P]=M)VP0PPK#<mS0/`gA\F&lG8iSEqT
%$08@/6?hj?V(0A16%rurhJp2#OrhTjrM(oL56IJDee?fp9[lXXe1A[9A0S[bM84OE8BuQULBf[W:lj+Jps)P]*=@0rY'q8Bg%2pT
%+sc.T&YM5CRV4c\]"sgFq:t_#dNPum/JK+gM'-5l1-b<9845^VXQZlQUT7ej<Tr@89HS[XQm&(`T.+F$V;SUPLW4COoBVjn!@Pl(
%1BZF^ihqIRYpr)?\Ocif3Gef:QOn*C_\`Bf*010j..o`/^`XG>Bi]u]Z9W(=@'H-ZPm0P^\SD0^/l,+Wpmqd."2OuE#5`a'&R0)p
%f=AC:3]2;=co>X>pQkqk"N(6?C3r8_Dd\iQ%d@[n;ZNKG3e<EaKiSmGO:N-cK]-l>+>l/g%032S[N>l2Y1]c0N3r=S'`e0lJBb"n
%]VK'.)8U?p`C<&bisl'6U^Th)(m?^b922HM0Y2\R;UIM\X>``c7VXIG..TU&VY/@JiLoFIm>FuuiKD7HG0Na&/l?VW'lE6fJX$?L
%TW,]EN#BV!P,WpVCq,.;RcQd]\Wm:/UqXlLS@6p4)UXue!G';dNDu*IXV:LGB>7#r#B<e!d7DJjf6\taSX1A;!f68'qL3NM_I4Bm
%fQ:T>Wq]2u8NS4fG<6gf`>4B$1u"#Xa&Wg^h,IN1J=LN*fI0Cu!TGKV?J(s[9a[RVLkc@Q/OM"Kl?YgMaR>b*Ou_Cj`I0^U>.QX#
%Bp2GdpmD[;H/eJYJ=r&GNDlVJ@L1j(cW0^WGL8A2#e<G.8"Pn`7;u1Oc^9?lG\(.4Iir<B[sp/ZK=qoZ9A-ETJd^aX14`OIpD6ds
%0H.*'CAU0.2;JXImu$Z^"(S)*qBslY#R7g@1NK?N49Asah#m5uBr8B6WD)*#k),a@bc`oop?t:u_YNKfjTS4u)O9_C!Q^%kq;9g@
%F-aBK[LY&<n6HN]Rim.5cL4D\?hf<GW32W<k9P+e4C;Z[F44'6pK04ES1\!,];=*'W>>L;Afi_o@VUN95D(iA#_rr!NWY@tI>+^B
%_gQ</md51:77g*lHpdH'ICff$KH]$_rU\mFFH]o*k>m$!fq7;N"A%_#.Mm(q(V&7K96[I6+-ZOq[M@UC(O"`4hU>#iJGAg&/:;Dd
%bOVM)TEXa"`(cZi51'/O6Z+)4_Y5%c2ii^SX7CTH[S_iIdX3="J>WdfO1W[mmjHj)8<tlk6t=0$%uZ;/H`,NPI8Ht!a+9d,dWHo#
%p"S4Je2ZU$[qZuHVHk=2N?O#tdRtGj61l(XNKDS:-@V$^OG,&h5pc=f-`R?K\XpqpT:)3RjLs<59FuWJ7ISMM*J<8=_<&+c?Tjie
%>:LKB%4+"IGq*9`L6@@l]`uT4(%'6jHtQ$<2E;5HY?P[X-K>!+1>E2X(I'8REWH95mYGKB*I61N%uCe&)\c8L.qD1]6/@<sg=*!J
%@%?:N^5!+^MrOa,q<Lb&gPT?Ygh:T%OY;"u'm?"7D7j'AY)s]GOQ:_d4Tq\b7HHj\7/Uua%O:B>a9L67X5uh=,,XoU+VQp\/W^H$
%Ajb\##K\jq5[N(!=f:r^9u8.ZTBn>cl["#@]2*<HdRXE.75b"]8Yj[@\%5LihC>AC%uju-q9e-8aT23+Pm=>9h?o%A+ee5\!O%97
%H9GZ!@N%l0W'rYOTT@/=iX+.-]]\8>&b\T@r=o+J')(hXRg8`V(s/JQ'u+,T`dr0(!*\pA6b`>=Psko-FV,e03&D:,E;(%`$61\s
%#L7l;OlPN*b?<aEKLc/]Fb`dP[EW/(U6ZoESuQ*bPg\A=V3<%sr9!/6Gi;DSMRUG+$`O?CPib<hlnMQNj\O!o]f*UOUj;nI^8m:Y
%"^:ZQ`s=:3^G7chK9gI_Y2SL<qSe(5*OM+l"qMKuX%h(_%qObe1ne8QDt%G%L@`UR%2PM?R//]57Z)bcrN^_oKo?H,eXOAFl:lN!
%h/A8GB?^lBbGmKB<E52h<,Z/$T],gSHK-1#J)!%]Dh=&L)NkN`Pm-iX4=mf2l^%[`hqp]4n_f=;ZH$qW:)U\Q$,(X`)2;O:Xt-QO
%2qSFN-W=9L2\@;-7Vrb8U3_IB6)<K;Z?h.a,03bs^T$)RD9lQeDfE>hdVs$Q)gZ)\''d_iA42S6bcf7-2fId1kRO4k7D2Q8CVQk*
%5en[Z35;QOBSF^*H4qV!bupu(=p^p'De'16OXa]TX#ISm,&3Q`TZK1V[H^Hnmbc,2(d6/qH35\u)U:":2i8+DX6P[7]%cY>eJf.E
%+ZXLj:VFSQE7BI1Hg2'&!g3Z+?G-XsWST%:/Cg4toVKV4LW>`SW]*fs60srg)`]Y8GL[WF%kZI6%b)H+)uZ`)54RTR6+tCJ&(kb\
%eM-RN@#KOpE)I.ToBF3?HP=VQ_;&S%9<'ol\M!;ReXMXq^%'J/-bl_=i+!tr_"g.d#)c7A_"g.d"p-Dg#L;e;2g@1/JRbb;cmUEr
%l4$2bd4JDaNTU5`V:6HiXm)FZ?bMT.,(<V,0b?5Il4(9cgd8^%8eA+N!tk`[:K`JjX#DTbeTUe<B&L?o,+Z)DFPsjK;LgfIIS[Z)
%psX[f^%"X;g\nF(!seYUo;Q(oDa:YVSko<BHDC$u4'$8DmaW7IN0,)>C!k1Z\aIrd,&@Z6e2l,!fe;j,lA^SK/<7;?DsGrV1(l.!
%Mr#EHHC#$58k0f!P&Fh(6bRUJYuktqE,1dnmc>DKDU-DB["a+/l6'1oM!^OjrKMs0b=4b2desL3[j*ZUijck%7't3b"FIJGSOTS#
%R&.\gO[/X:RsRFSg0I'P?i+?^]3-b(W\[ZqGsuCT)T/&n_Zn_i6]=bIhh4Q\m1a:2]06E9l8"=a/4cUB+P7Y57Q54\G;PdE6g"kY
%Q(\D:,rEKA(/@ccHjoBHP>`lA&Z+SBP^4,s^8O8T=@FXc9fI<]\]ACJ[GjXNZ#Y6U]gOZhh[mbZIAdlXabMOQ.cn\!ZU%i>=aOMf
%8W>qaCnQ!27^+fKC99:FPnd17^`YUAfcdlg=cQf$?0YFS[@cbJjR6X\XBAPYr`p$`_Au\cDVIglM,llV<Tq`#ho9d@fgB3R(ZeQ'
%EBf5YMo?N>%ql+e`c7D#Gs-h?'Fe56Jo&AB_aCX)/?Vc8q4KF>;<*uVl)&a);6Z^1-)2g`e3+$Qi#X[EGF];2!fE5[3FWu;L!W6W
%hM-c1pBo@9BnBJa/V(uf]1?>CSUedPC'>/,T'FPIq-a^(SglbsDUh:SF_YB"[3H`)l+-pnKIJg"j0,3V5+eJ_PfpA'O6\p^*:h5O
%Wb/RZ0E1]&S"3lmL81iOCana@n'%(Aa$f41E0W"tE./Bf)aQ?nZ7Q5!JbCdFF^'`6V.aZo-#1N+/[[faDbH5S#m-,MRd+]<UfeZZ
%_.#LDQa+HP24.m^c+(6ZUl?M.pl*p)-VlrUZuJSdOt@D/jjBf]VH#Y]DW2<u.LMsuJeMPpF0gP(a`#'3r%0a!/r#beZ%TAk1Q!<0
%]9qp9-*=SN.U<$s$fE6)g&Y::55*[NA=?"4Al?VI(?YSWX2K0f?A]YtVKr7\1C`]WWSD&&iOcLYK`8?50.f[:[u5XUf=`<U;@J8Z
%bYb8U23KD)pj4)?Nd#PHTHLag8C>S/1Q5SCK.bK8PT$ml)Ps"i1hrT%:HT9eB-8rR+fng=H<LUoZ)1/f&J#Ai*a(GUZpSdAKte/A
%;"KKq]`m#*M:5cTjUt4[@(riqYDcA"G.oQXT-$+$;Ji;Cmk%)tC-sWGPrI,d`cUmB4Aq.R#:5j=>)Z>`R;-P0Pu\#;XebgARQqpB
%eO:s!WK.9"c_XgE38_AM1crqhiZd#1K)s$#2ls@<T>o`QR,]0U7f24ISiOAPVEU5HFg&TJC+gW5kdcM:IB-CVNkRt+:gh.FaSTqO
%23`LHfkZ+d_3,.h\;=?rNNuW;fF,f=4#a;[AN`@7P9RM5_CDX+M24nk_<TtQ@1LB_k)blla<>R>64&`+8D?*h$fL78M8:J!.]k,%
%WUM0uDQn@%C<SO+&;?^qaVX6oQ]NI&`/*Cq2NoE#rR3]@8`E!oG\FX3QZ7>V**4"_ZVFL6D#fNa3'FZa1@)uB3:C4D3aKh8[S0N%
%/#S:q>PZ-):p@X^`@j_Gi8s4C*WgHic^[c7pL"BnF&ajqlMF3l.]&r'I^7ef?6;NAVl^N3\)?T.MXBuRrc;$3onM*g@IM8^?-OS:
%PTZ3MWH5n2(+2+LP(bB.3p;)U=&SZ<loI;+iFfc`ePige#r+'bg,i7pW"LZMf/Z`,*1;c9U\O'Sg:o*lD[iuK(U@;YH\^7fO\EtI
%`9A;^qiPn&d_e',Gh3I71=`7rX;Je#!^IslrbS3R4..':!9hi)_>t;no#&"c^a+nje5=+9$"jK91(0K*+M[g#oUU<'47bYk1/a/f
%J\s,fj:+h,o8Io<IHQ)]A[@m&<BX6O[,b:7Rm_ZI#p;'u6ibX2K-;^pOCgeIe8mnUFFriG_F[WFBq<I.^.eSX26,t,Zq='kl,UK2
%A1ibt`!Is'^CW0%Z]ZU&TNacT2dfieUlL"(9-[\I^pRs4La&X1qR*%'-i4nhc=$B?S`@:U:_otI"f$nZWN1d%jX+K9m22ihU#R?B
%,@EH_P,CQm+S%m>',Z(,-+YRtfR'__C_<'^;hlbtouK`Q:Q9t@`cfhfRXl-^NbDOaj(Q'_):[k4L\&IU3GSC?U:EslcEP>celLF(
%R8uRe/X[bE]3!pBLT.X3MQ4a8I>@#n-n;`,^o+]5O75=+0]It-Ca<tZ%&uYX(q_UAhKQQ_@#ei[FgA,K*i;r52DkkQ,!4&U'&/C@
%rl_3:g\]rG1'bZ#W^r2aTb$\1.!]Pj/fYK(A!&lbIlJ0aE&a\P[TcFs>0l.A6F0-Ea[A]McST8;9Bo*Sh.A:-,d#Nl3.\LOd$e5U
%Q2N6[P5uRpiM;c5,l!<j-Cl5K/"%05M6)D0Pdh%(,#=,khN:/3c"f2mOVlYcU]V\-RI$KNOlhbW\?)qkBD;c!p4N<X]W]c?"2+ff
%f@(EujaFV7.Tbk'E=KK9**+:.[o+Y/ZK`\P2HPJhGM1'XZiDuL$J<:nraO]BPb>NrTu[BjRTUo(?4'4Y7@U)*h!<=FCuk'NL/)"u
%_T$.RQ2>eGO*o=`2n`-"WRcJa7?<:ILK*gN<?.7=VY(7\f&'n\67'6C([X_f'<2=C<jN#M+lhj@$DB18Ug!?r<D`"iP7OWtSP[-g
%B@beQ@i,1jq09tl,.]OWjs<9pSAp:sClP`aEF9UMp>$,0..bn.6FHLhE+F%.<Oui$JW`Pc/i8Y>P<CZnf3J,2*71Y\G(.7MJ\a1=
%%VFjK=VIgn!$&u4K;?K>^/DTXW?Jf'(Ym\-_:1lgffX=\Smq._"-;S-OFb"fSuI%B0Ek"c-2*be8gjcpQ,.H]%**Yor;&Z.64!r1
%^t#gMGlt1rXf@Eip.ehT3Z'4*g#$.8k=aN=B#`JiYPVAa;hNnO$IVh<Q4u*K1:H*hoajS0<K+&Fh8^Su(.D^D1+o;YYL6RmII&*\
%S]j7<lZ""^nd(1:aG0+m`EI>-,ip292:;U3oX`NJ^oi]n0W4l$FO>p\,6_g6_)A<Rh;8FA;&FO/)b?;N(Yk$>'UK>p26NThmBB9E
%T/=uMiEdIe6gjW08RgqY'.k8/9_dh`]Z9pCo!h[+[%0A,n3GC37[=o)5G5WaTcWM`>;*J.L9;R,EC3@U1""RG]?#lQL"@+n^&5ch
%UXGA+YB$DZ<KaEF7KoR1-Xm:T]$]FI)_Vm8QE,HBZW`*142!Vk&bSeg:uSt\eIW[b9[c"dA)e:kCqc$_,/.@@*=<#i;U;K+:i7Ts
%]MkgE(iAqg,aiBno[0`g("'i$$jYfd"cg,DbYe9/<n:RupgV!Aa%,#dJO(X6,?dk(%pga/IW0K:\#*`a">t7*E1!h#Kq@rEN&$Ld
%#hE<qYb\).Gap-j=t238k3[=/2>+tfU/ZX(.\#f<,2+V'$8!5Q+U8Jp#Mp;DmYNuQ!'ra7P'_tC")j,4D7>*a7OqD3]J7R&Q\e(a
%ggRR[Wu19MN9E#tjGgT'CuhB*P(Qf'HfJGh<d#4)jJ4*eO?kDb%W+GiF,i:lfRgI`W)gR,l-gX^d1r_XNinb":uq*Y-fK*dO;9dV
%o"L<KUtRB3qn=5V+im8(a'r4(VQLQ\n$rrcUs.a"B-;`Cfk2P]+!eZ;"D.hLHIQTe)C#Wf/$uqu^3EjCU3^C_M?EVblLmF9<]rX4
%\n,=q3A?O7`n=JJ8H570-mJi9kVR%f+Z@t<P"n,?ZB6+D83"]M=$pf.JRf>J%K*n]L,Z1C!s8iD-u'tm`(-QC7R$dmPqTAh)+ZeA
%a&4gY!s8k1K.GYH%LaUZ3=K^LX^of48:*l7S\J.WDZ9,ojaL&G8D,5DF$B^4QGNh=X;fh^i[TqK1A<ijO'L@/%LaU/c=V>@aao!g
%1%ab_@p'aA3"0[n)p*Y^K\[0RE7V-IORT]eU5e6L5U&C]+L?ZZ`7PntE2*cs4]B6&p*$RnMGIk-H,p_H/(mH'$m^L<AK/aBJHR`&
%ej#6"_]sc1VU\*SBb-=fP2:m$bu^Hq,TB9GI]!usY`Wsqd2>KBB]U[J7.HWlB2GaJ,R4O:<jT'8Of%YK:94ahY@]">0Ta)t[Ao5I
%^d,ada,2d<!s8iCD+,Dcg-ENc@FQsghF97+'\4*l4B$lb\:*]j:f9m9&PaPi82]P.IMc,p,iX:B-B7[)8TZJ_K_:1E0PkoAmEsh=
%V)u%be><r.+s%[_hc"*SaW^pr87Qh!KVcI]4hSf=A"dDt;/%(j_).@qLXpD\hZ9*+O!]WQ&NG'Y+aUhV;Gu<>_-%)B=@,,F!U\ok
%-*s8Y'sngQ#9HSG,dgA[^KTY0[B`A.j\^b64ec!T!d;0+8k7C2`#+Cpb*A$dYs1s(9"jd-2$?dQF[sr=Qbt]jJQ,+c*DrjOFH(Ci
%M&(N`mCK*O::06/.$r@.?n,H(U1GKE=ck<CA<-n7?qE.8%h.aF>>uC=UEs7Z.:dWK:uD#PfHH^.0t)!UMJuDT2lZ2FKN9i_BW("Y
%D"fWU?'J%JN,<#<`^B;6(m;7#\pnoGF-W"uRZcU&jkbEB_ruS'!6.Tf[TjkhD#l?6VJ-!B!an@\#_7KAp<<(.0ViNB7_38Uo*C-8
%'o%Z3a:/"((N!ff]/Yk[bFmb,)Vj(b0<%ap2K\A%9M@>WB]dsma%(\?GDYYuT?f324ZEg&NTaS9_c-KFRPQ@&'R'24Xie(E<4SMC
%O`AHpo#"PgTC;"GUeb9Obq=^c1<nldM"P![&cQJT+?7L/4+$1mSGd!cK-:Z:k_AmQa%BU@;2\YL;s,.`)gKl?n1:l;^:R6qs!>D?
%3Ald7Epna&jFc^d61ng]9=SCAr^b\@%u-YiC>:M*n:DTKZ\<G9mCO?F]L>KKiKZ2?<S7J&8VG&5BAeSUR&rWZ?X./ofR%kbdC6fQ
%(DCh7%klcFG'u*R1MQ$sS@h_eH2>cfWA8fjBFKRsXr;-FiN,TRDc2,pJK3HJ\;uWde#Se6.YD9MYfs`b?5gCB,kTL=B;7P^'C.nF
%m+1ac&kKbNBW!nhpAAuM[9DR[g@N)T<iZBGN+[uOXTD+?<2Vns:cYHn#*S-[Jf6S,0*ATmlI69,5=R_GpqV<`2F?HRdjsgkeBNmt
%N`.m?hHKfQ:`+6@l.jagW$,ud'e43AHWM!kDI+A^Q0o`0b/NFdh<:bEmf\Kt>T$M?4`"qS+n%iuP#.5=#2;ki4jM>&*oI_Y&2n=;
%=m#>@^K/]q]7_K;SWe9r"eC)k$:Z&1ptm^f'L6GU<aX.i)hMoYU`KsrJ4LGim]@[:;uM,H!%2`Mg;Iu9WuN<t'I[+q6m0hb?TSiE
%dY57=U.4Z$<4WW::"SS?M<*QqI(bKEn"5@9F]7J^`LA]M/h[B/D'SS1@q;+eeZn"cgn]L-C?!FR+e93(3Pm^=n2if4"F\lm.0^D(
%q:RC;IDAshV=5('rX4P55J_EYmrX>1k%N>'_VCY*>[Jjj([!gP_8lj39AVD`cj+&gGW9f_\FRID?ft=)(frm<Ce:htVE@d!N-#c=
%KH%pr%u)(b)n9=ZftA[bRN^3b[5V.f6be>L"VQ9Ee+CN7bp'lqD2hCH6jb=Y!FKOn!m^Y"X-@VP'Fe5$`_P4]OVD1ufuReS[@$K/
%pOISFRF79cjVfWp&eF`(U\bfooKT.GiHqU<kYF0Wc@&5DO@XI/).@\/=,WHlm?3]="IY4bQ5Ad?/O'dUK[Uh6)m[-FAr,O"bI!'.
%ckHfbr;U?s9tTgCDQV=T)8lL50`ba9]tO8scsr"X5R7[EBK&WkC`kRpIF"8WgM]ZPRSqZo`2:(jn%BTOS.%M%/P1"bXX]T.<NCKG
%f@cntOTLoB?68bMrp-?DiHmS<Pa51]IZ7VIfO;#[D//F3^^`Hm^J0\n'\H^fh/?D*(\9u3Bs7HpkL\@OB?tJnIH9E9jgs`DI!`9F
%in&+8:AOT.^NPU-Ai[j90Alf"`R(]kdgag!?btLPAJIR*0ludu]FrBCP'"fBKhXJ:]Mg1`rn_#Zlna'.hZ%iP1p24Zk*`-fVd=g=
%#+#4b>Y8!33EP*cUqcX"rAVcp+8ktRonAmqnG`$GTC4slrV@ice+4JuaS3`qrn90s4?@lZm)q&J?fIh`gZC?lC&$WJ[pT"!G,I"T
%KE&]0NEmfR0E(;tXKd[O7-&05K,V?mmTM12)qES0E]5=shk7taZEmg>[m-Y-mb2rGh)N+kpZoR:d<+X"n"$$e5.KD(d`Ko.d(aa`
%?'BQ]@b?#u^AQ4!9:N9`[;,()C]0#aQ?W>aQS_r5J\T/GjnE%eOGe`u(u@L6>2.uQLR:B14+2+Yq>B?g$%>KCGtYl>o'X[qn:N?4
%f?'AOR<c&>i(hC\O'_c"08/:0rMu48h(eM1;<P,i?Ir^o=>KGO>auTbM[uAnhSjbA8rW;aT:4!I-%%?+/s7mY)B\883`ukSo2pLT
%s4%!hk(PgbT0KpB:$+mq2trJ_q3dY;96SGA>piu=]%j6E*gLF!oD,X=r7c*<o.nCBa`$J@k4;CKp7o`rU@OpPP[N`te%Y481GAUh
%g@(UNDSEH\5Fm)qDZS(3$XeFC!gr<J5QBdt."Eb-pJ#q(ID>LL]"EDdR?p"(q=iK]hJ;6WV]tOiq=6<t0+r<\9Ceq%]\$jW98rE3
%)h4rAO&9eJP*#[NVtA$Kd+KaQ\keso9Q'YH?YklY14Hnbl`47d\Wj_N]P*VkkFW9pRuQZFs7jap[2f4[!TsD<2o**!pNuddmA9X`
%R.C%*!Cs]-kgPk>ZJCN!rTEX!@=7A5O72K&['9@+MKaQ]EqcZNs5t0d55ZYE2Ii/K5.dr/\?GQacAQo$JYb$Y`Fh-MVd=]<OX>89
%Y?cEil]2Q]^AXgXMk4%MIf5eHdH_d$s3-]+h30=.F"bS2FVOT[.UN)fHd[Dj)Q;PfioT(a8cPf_WVtBAV#T8MUV#6D^A83inU4Lm
%nSS#rYBJq.a7!p?f3\AM$GrAeOo?l74t3InGCR`6ULkD:o8@gB\oO,Dia5m%qpUhB#h=F#Gk[neDTcZ/T'hYhH0pZ(./69G^A7=-
%*.+7tY292<hKo!q4.eQ[jII[@JF`'M<WI28^30BM3SX>EUt>//\"=Y4[>L<?+5_Q(c5,44[q^%:\TIR)^r/@t^%KN>?J[21K)>l<
%\*mJeU5T[dMSAW#q`7GXP%1>,]^\:UOM<p1P_TF]>Mn0#=[qUB[D"Wu+g!RnDnU`88P('sqG]*X[%8NBe8WAb,bI*lPIGFKd-]Hh
%SsR+=qsNaAY3%t8hg`^34IlH@ikn:c6#TLjIsZ,4KR^Urs7"8hTCEG?qEnEC4_.3tKY;Qj,8Vtj4SaU\U[2ok9crtFj]B%d_jC>h
%qk*4+f"6A/egQ%3EFIXDY72EHPl^+G?/tVG7VQ^BF'QV$pr`3[I3ecBbGYKWGYfj%]!&d#%I\c?;.'=cA,5;WVRO2n?QEtD^O#q=
%.[oh.kHEQbY`)&$K[hQU/S/mn]Qa%tBE#0kqD6!tLspIqAt2m,Ajt+J2pqch-ad3Z^)1pgkdBggRJ%/_q8`?0Dk?g[;d[53`P]UB
%ml^66-8=QQ2P9kBs0n-TLCZ4:Hi9G3_=XK=YHc,tLogSGY?F`2l!=>T_u!cTY5cI$o9q;,F>t5rrSc/eotU,Y@o;_5U<_Y'a--@Y
%f+&EJoZSObB;C$j$r5,2#'[fVE1f97'aq3.iICW=ni,RqR;>&b2QtrJm3DJ^f5KO@nBhJ$(]H3c]2k,eb]<DA%p#TELDM&W^$kiB
%DMX2UbLo"S`8tJ.(EU$b8tLP4fr1:A0=![_gS`e5hYd"sn,E%AUJJN_jj<nUqfC3imQPHtVCtp5jSu_B]t[JditH>nq]U"4+236?
%MF:JYT7$CP2'#UKq)qPc1:pC1ZZdJAd>0#BR45>QoX0]LjnJWCRi([eqpSQ[Xm=OI9KEbFBWsN^ho.88$[2HMN8BlWqY83u8+<9:
%reM2tdQdWca7#tU114D>YtA;d>7>H*I,WJV]-;Xg^qT?AA4OC^qTJcMP2gPFbkMF`R:Zio!/Af_q/@l+FgY>U>M?-],34":`>dY2
%d@V[nHeEkmrq>oWBu]+i+`^ZafAi3H[r2(bYq>onET>Rk^AR'H5C`S+B:jZrEUD3Cb(Ais;pY4:CL;MforW-sq;cIdr9s)mIXV.Q
%oZ:1l?T`@Kj/KdWoDJ47I.NQ^f,oJd&*Q%"Q2U@o3XE`]n],eoD1-^$e,?g1DZB^da$.03C%p3=D#r5<nb-IZYM],-baOk?If,*o
%040/'mCboCT9m<@nEJp&_`p9Sf?;cPHLp:\leP3d-"cb/>Mc`k+mA=To_,'35IgCZqSq09gr-_6[!hkWO.NrVc-%b&q5=2'a1'fa
%^2^[Up"Rs]c[Pcc\%A,Jhg4U,[iTn]Z(hfq.GB`5&3mbVWg"QN=2.*F&al-TYJ'qlZc2l%hRn6tqM4eO_\_B`r[;+UH)2(%n@d"H
%5QC<EbLaN*bMOs;Hp$bYj*[M&eX%uOa\BYUG-gr.l0Q=b:Ofk$oad+s2;?=<#ll:js8H;p&,8N;%$^KdhSY*[gYaC-fCE+XQ4fW$
%jM3-]7/AkRhW:#[2kkT$iXb/4HK7s'_inOVrYDK<k5?c>qKl$7+("<^MjNcppW-?=4se\>22h>katK-aQe*g<g@?2sp8u#L8FZPf
%P@<fd9HnZs%7J0`#mc!lBV;A#rJ>f)g@rXn2Ko`L'Jhs\jkWE4d\2.G8GI<OKM/g?o1+Fd?RJ20_Nu>R&q6AWiDR7*n;]fOY7i&n
%1JNr2X.&:>gj"c]GF<g)FNWXe"4-mAL>>Y^]_VGcIur!354e2`YJ0hR]79hVb-Q"KrR)'L?iBQM=.[(prGqf"B=l(=rqQ2F?TnDD
%Q`n1"pSVm^QTrXW?#6h%9hk%%]=)""anNripVhQ9)kZ$^b(J7K\grR)I,T;EKC1>VcE")MFajSDo_ceJA_HS!a).*cTs-ZLHD^ik
%dWJ>$^&L-,]1KESgGX/"C-T.>?F=p@Dr*UD[VRKVrr(mWOqY\SE"V`(a(M]Nr<?#`_,R0G6k>>Ccfj=`LO(i.GmO$)4pJeLl/W7[
%Ib<*Z#[sOqVn`RoT)7X^q7uXGjaYk5Da3j0(JfI2JaL!LPOd/b0E4jEX3]u`&oDkoqipfBRNA9JfT[Db08DaghH]onX5@]P<1-TJ
%IC-/H\h9DK+(?Jc\G[kA==JFhq^^Q$a"(d`VMCa)9XgWTFWWj;e]i$III-9TEk5(_-Q]u#d_kj_VtT`@b5Ts/&PKs+hd:ijl2,D1
%NoPb)3hF&o3inS<esk"YWO0`94PQjdiX4?UIocHW>X7hh^);sEr\)=KqY%qlJ,ZHAArf.PJI],7n?@4kK_9H[mh1O`[_p%ErpfW\
%X9gLp!&\&1;uZK;qqE4-I-p%fo@^c!P^`DcYsH8CEW7*k4o*)b+-uZ`iEPCSrB^D35?tnm`&h>G&&[CHD23-0o,!,ARm3-\pn8M)
%pVH.bcS*Dgj$%JGXf?q/9na\Vc-'JOGdaQ`n(I8I^@dNc<,2*K8,'cu>M^IY2a(dpjb0h5%IlNmQ[aeLZbP_m+FeVtrs6T7r$-To
%IH*Q/PG;44g$eFGUR+47hdO).^Ope'7JmWrddY^M_@quXnWj+[&':,]rB"9Imf9Eb4.oaIn*hPd_IML#/+CI<p^nd]S\BI662h?Y
%d2AO#jH]2]^Rr7:-iOC\h`]chce&(bcsc":1O(f`<f;Ishsup/7lo.jF[3c-5Ip?[$EOs@hs:(*MlXV2$!D?7[nV=fS"UdJ5OF-:
%Sj,s1dmpQGqaJ83=TiEsb:b(1icM[<-`d^RR#]c>\a_Jf()4FUA>]cV9`%sRln0Epk<Jp.@j5UDF1^u&/p5rP_>aC#^MpE>ki(J^
%3q6_9U6mt<0j]8&g:u1#SN'OjkAKQ3p";.1aG5hj*'2)`^?i>1j1Y,'\lRiZ<<9)0SR:rJBOl7`?_WpulY02]?pr%ZpH<`tC"KWf
%rh4PM*WMDcSpU<@=!;eRT7-R`QJ]k4jTer\`VU_Q[ls,VGWkfTPr&Kk4md-:Rh@X9\X34r="S%<hYQ#?;qk1;mCb*fC>2DZot5&a
%\*nh;`kB-rF\fVtrDrZNLtl<Cm!l+7h<hh(qh\C0J)eJVO5K0#i:cgAiO)1V8\4rc]a+ObfD6pD55OX)LO[e[:=;Ah#BY@Bhcn]I
%S.IKsqq(/KkhSI0J*c[R^SXcS5<4O6l28kH6C6\QImq++i3-e,351lq`I$<@ZlR#UZaY0T)iM_ukNjeWe&ETUr/A>.HeMToPcDBC
%K)?oF0<^!*^43Dkj[tS]"KRDq03KThF>E(rJ%8u0HoaI]]_lf"l1)]!?;m[9$iL"OheV@NG2eYV\9`RdcL\O;gXL@SY<MpHiNn<2
%HKFqdMct.ILD>"_01@YXJ\&?jYC:fiB<&V.5!=#XQPU`*Y?osIHg7e!h#I2VDh%\BjB_c97lS`hij[b`]p&D39%7cCZ*M-WES]A]
%\G;J(A?:%9L;*_,']gFM/$$iPH;?$(Tg`L!bC>NLYK7J@qo@/`rqX!68E=`G1s=W4da>,)4'2&tl>uO\%d$"5*qLIkIW7TX4CA#-
%Al<WjjWIq0ompbZm8r1<[ol/Z`$u1%jjr+;l'PD6Cd1+uRkdG'9kF-+hsKLiHc\4Zg[i17C+DV7\fp6Bhjs2nd9gd>nG6A8gjF@Y
%HL'.g0>3qaM7r&>GBj)-`FH>aDpG5nr\*M%#9b94q*#&4ETNhY[lQ9Imd?dH*rDfQRJo6M),jZWr@<:)ouZMY5(DpoX0PoS]=`Ko
%J*T2Sl_BcS.SGkIg&kgXL\ID<Hi"1d<DaXZDT"6KrL5R*4`#b<48gc9bf??dDQ19m^\d4&h,^T^Z&[MGO.-T?fMf05gT<spr+f@l
%QGR-f.APGp"-sEh-*fgGn@:c-RR8+as5R`f\T6L+d:0HNA?Sj&/7h?ArF`nA3:A10pjiMFooniopdR^7pRhHGZd6C4n\bD&U^XX/
%L&G@[r_NN;h(SV5],9\@r*pN7`K)YMmYXVDoN*\PPT8<P2kKm>qjX3"^]45tY<MmXIkDd>m*1l'I-pa!(QVggo_V)RNu(lT:Ykn:
%]_q#oDIgI7T"]^=GMU5:niq'lY=lY-62onEETT:W0Cu(=l$qc$09gtdo:e=*qo/THkdub>0&Cl_]D2/!q0RBt(qRW3%El^MmtZ>D
%er*H.VgUVuHad@H[DfZ#LOC)<4+hqYb<+r>i*S/9mNM8p\K<PP7ob&P(D$PJn@3RqFWKVV'^cM'5&TfdCY3Znc64dj?/1O4BA%j%
%G0tegGl$LsY<MsHIg[t((H;?irR]s+&!>i1L-5C`=5SN,iKp0dptb+?I>5FOH2O;2Sc74eD7>QZrGK0UEqSG:2t#4.GAfAY>LGe8
%`D,tOD5ue]Q\KK?D#Lfm58V/u\"/i&4DeR[9X#,#a29_eF"L(i(#FheY&At6CkS/Fcu6$uK!fPFe;'k3>,V'##93>OGNdUtW.bQ/
%_YVFclYtMReffXIqY;g>H`Q#>4*gjET(ll&HJ&7in'Yc$rM<frcFnKF%c&o-oe/c'%S\m*rF+O&qM>4@cl-E'*S,,pRjT2WT,@Ii
%d*53>-k^?M\&1&2,:LAiGs;^mIcq_X#WCt'q(VO>fEaQ`-`Y(-ka.Sb_++CU*L;+ke.]JRiEt66fDe+&?@J@r4\fd,TY;IO!k_I0
%R+F\aeY<;QVA[OL\^,[K9CP\^@bD9%2m1C=%c5<uFZ_3Zf/u@'EG-rBQF1^gi11kA\jLb0VC(YKn4jI1AIe"[Q\OE=D7!/6("tJY
%rf-D#m+V&\TPI?<d:iL-U"[1JN;jXlNJ78I2D%9HI.,m8r"!o,iP44Cs#7e1O)lJt9dQOtVQ(.?r4.7N5Hk>3Ib>Y/So")o\0/<A
%qspNJc2TT2aa]$5-sROPAU3.a@m7`$q7cLq\Cg[9hO"3_<rg"Veo)8us.@k&r[W@[^NcKYH=,t(jh8D^s+(`rs(*AQ^"L!;)"><3
%bQ%HnpVXG^q_Il#V7\3'9X$)!qe`k\L@)4KCO\((5:pHG0FV_/)>W`r4LH0[AY511/6Uc0`<"W>V]6WcAYh"GY%AZ3<*AtEQ36uN
%3ttS7R[RDt8*7slFcnb-'ZIEAaoRgKf8F(+&+dBS^O+-m&(=K'jus@HUSo$]U!I18&R1DBrYsG\0nPVYON4;5<jp,?!W!Y(EZoa'
%4Y8[USsM5)m:?]rf>HBH3sW3YG>t0*B1j%8jZhmF."I8DHN<'E4<D(>L/SEgV/pcpejIBWl!qZ?_pZY&'oM_&S8HA4ob"cF!q_ft
%)HOo2L?Q(oX!@^&p,f`,'V)"LY5?2B'T`*!=+0Bo9EjZL-6_A;;:9T.(+U="DVpX-,&U96-WiFM3/`5e<D446A.X:FF13Pc3n2Uk
%FQ2%`g18ZO=Ur?`g@?`/\boW0kr)31[C/McWJGDCP]!ge#uO48cbJn5fHapQ<^d-,og+2q@Hr/YR&[S=[d;Zk&:KY#;2ie!<Qc!0
%fAWqcF6O(o5It9nI&dK[GM#Pi\JWosYV4b.86=ZR$e[cp12A#ta^0^q@7XkHm^=Z^;ABHg*pqP`=P@Fjj[#o8MV'UqMa6@>E/\7J
%hGp+dFRHH`='g'4e2QMhJV1X<Z88m^V7TLAQAQER7Ad:6U7R=!WN=(FfH=XM<^gOm%h^E6TNagCWoR/45=2X]6m&47'Vk8!eT,d"
%jl`0=qisX0k(/eA8`#M:h'<20NDl5K$aLP9E<tW=^Y(C19,="Tf[OP67*HbZ!%[JtgO,,?'hY50<acPq5"NF:7c12F@0kjsq6d\[
%;pV=Y[71\RgMSOJT=h2PDl7J'^THSTpF[UZqoP^Pa^W5s,*l44!fLFdE%LU.[pC=[hKE<>LccN7;2if4W\][\]o50=?H.9SXORWC
%2f=cfhI.o:<uFYR4Ai@l/$Djc-KJi)>1^q['4PNXm^F@?El9P]!^I&HVMieHYC^j3g&n!D\Q9Ih)ctM:F5#qggt#Iq__OX41`kR!
%gP[BKfuhsY98=t6D@*7f<B+l#6JRW=Y/Ep;gLNJW<CC4l+!e?:`aS<hP,d?VP/TRI8B3,JkGbKCkhJg(?nrbCh1g,_-+k6kNuL!6
%$tPGJF)R2p<*^)-#lN%n1Sc:\.DKrP6j34Df#%KRmPp3T"Z7n&C2SC(kD2=bDM=I):.5UTYhmPf\&DgWD',n!""_@8<m2)$H"hI3
%Y,6hViumV0@K=%h9fF=@s/DtF&=>QA%T]=*I:&:uUo=c0qljUX5ifcNb/M5==*7!ZM3f#k<MM>4Q1`(p!rKkrQcW,t#g-@"Ls2jY
%W!`E%3h@ScUg'`J<ZLO/%38_S+L$*t*X6R7e+:4X,ZU%b-&Y\a(lhIPc;R`ddCGT6-5f^Z?2!)5j%`DTgtj+0Mm@r978,aZ0tL*X
%(<FmLb;ue1(+VVd1lPQP&Qlu4AmkG^epTKSVJ=\eHV5+p3Ee5,@j1![LT6Z8F"]2r=pA7%[[/-:<.R[KTZ\I_cXi!=`DPO;Z`4u+
%QZN4FPQ57:;F?S0\=%XK^`&XO@-QgErQn@d&cIrqft[2'pW,eeZ7BXG3T79VS`"fq(-tEW@/25VR3Tl7q`NNJY))KA)f3uhOJDK3
%Z4--,=BPo)H_4:MJOTK=!+kA\+Y$Hn&cu,MJK1e/i#'Gs4B8d/S\%PtUFhePXt0`P("ca=U9$N#gn6lL=2`Zr'b8-G&9uV6h3,`h
%RmN8f,-Zm3"":P]ZD7q0PDLTD;gOOc;2ie!<Qie"O'O-6k?WN%k@q8;-%]]mRJTi'?TQGnP`@WeW)6mT:0(GV*3I+P>uulJGe'#'
%4&cfC7Jpg!bCDIn,*/`2Kd&E%MiJdZRERAjPOhUncI'1hEC@qd970rMITrHm:f`//rKG:25mF!e"Ojsc7`FTF99-e"[)16a*[/I&
%(PA`@^`n4aJ48k.?.W(N;Xr9(aeC"MCF4,H_;m^XSTAo@_dW"u<9?r;ge/pG/R+;LUEtX9)t%0QgG8NJ`Q4T@k"_#n>ucu,M\UG[
%/B$a7\[NQL].@eFIO`'Ko&?/hE&k#;[$8UB]dnrO=eli10k<jL"H?7?Y!%\c[OP%@Lqk,S"B^,*Yr=D9g5B&N3KcfRqOm^S.Cr8K
%/OO/W#!P[^9$1nbgJ5!Na$+>9GV@TK,pY$Nl_qQe\&o9BaO+=Znt/Pjl\jD%W?MD%GS"8>l+5.]KW;/1c!.U^jCjMUa!aF?WN,(D
%grhpocJ#Ugr4o95-!9ATID#JuQI@GWj)2V$f.V]Js6[*9%&opk%<L)g":"B9^g_T+.qY6G"E0a74Wm71,e-8t\kYsO6YF,:@u+p,
%'IfY(:pRlJMU9Cf9l]nr9WA-*fk#],qsELQb$pN"*@k,X?kEnNS.<`R=;sVmUm-Wd>6Jt7,FN$UU[qI8Ecg_RR<F>8I%.%jX)S0+
%Y[9/onp!AlZ=*#eCscSl1-j4dFt'Fd@T'6g<iUtk+s$khgm_Al&?;TO-M=ZQ&]i@g$'%lAc;R`d0t?\cm6#3u`NXoY#Zr9=I9;73
%fr4+WfIW_\//]EmpY5P<P+#&o'KH//rd4>#Qj!2XVYImuALU5]%NNkY2L86C]llOJ1FFa!os6]ec-FtXijrr;nDU&l#No7E*o%/h
%QWn$(5afRJP`Q2F<PMH%X,KeC:\>FB[s?3;*'*.NTbN>[;+h@_q_J+EUGZ_Q.Vr'/-lZ,@UWDK]A:2OqZg3Z;&Ok("8lV=6b%tC9
%jfHK72hrI_?nX="Z(,Ym:"#tK%)C8Z76P[Z+Q?#=W&`trOqm!,J:3[cY*,X<p$l1k\\h=`1j%DV"pf[)9thmX&p[68&YuEl?kGU=
%^g6Q*TkTbX9qUbQ3*Odu="Y2I6d6K3Vd7/Bc+aa0))VX<`<.Y!=\3_Wj.iJl#8pc:qdg#Wpc=#!^Xn\^`JXPF0!qQ,&6Qm>"].\D
%H+cbK,b%\<k%#(Fd96g9;2if4W\][\]hBH;2UYjMqdD8J"K0-gHPZ0sheSF77BD0$@^PIu2%X`a]-W@MV!DRpV5cdg&J"poYOss2
%HNdDb&aQ?2&]i@g$'%lAcF^)4Nkp.7(2JV8Z;&dN(5GBd!ddLiTL"o9K#$Bf3pCfJOCL.)\/9u*f0fW4o%PYNappeeZ^OiK\&NLJ
%'ufAs<ODt#\BK2gp$M>MS"GZ@30m!O\*;qZ:9?mOr<>8'd`XHqR;GIZmRK""_hUFV+p*\t`;l4fA'f*_<JuZ5(4dI-NSkYmkWDkQ
%*1ct3VZ"oRkUKa3;[!YBICQHVpb5>fD!4<(eR(\1_*lWWh:u">Z4``Z<CC4,58q<m-4H*OThmT_0o>S?,*8QW'-*baSYrKR@rU=[
%fpZiA\F3CJE^2scc=16)A4\o)$?.dsF?r:tgm)mmlWoILLqk4E""\3!hHCesUdB=ZZ:,no%`]tekGbKCkhK`b!hKhLD@oQmV)]gb
%/5Iq16BHef\XT]Cl.?":rGUK38ntTs55"]c@19o;@HD3O9;lD7Tk)=FIC."F5;#<a>t`Aaq3EIQe5rWV76dK<'C78s-'&S#]O1Ui
%@eLJ&N$J,Z]5ajh9'72'8ehq?`(pOj]ih4IOA3N18/<4+>18jK+\(XoWoY)Qf2]s%MJr)+g^WUo)cFVm[WSE8qG"op`ISF/E%c:c
%QGq!^[;KJTjbR+DGC]X#R5]K!9N@dZ,?S&i"Ph8,&0iF"C,n?L&hD3F:[:3ai("Xom%pkb2hf^3;aWj^FgbXePRs5gqO_lA,W18i
%1caP"nXBQth?c%S8h(SL*'%1IR9Lh(51J(;%-B;ep(Hbp]CT&oik9Wc7nZN!hQI\lMAQ/aI:211ToL;&Fp!VeO_5R*XGR;Mq#I7a
%]G,\WN2hWh`585n7s!0"$Sc]c'\2Q?o5:7Ui8'+gSQH1'f6u4_bOiOt,%X461XG+0'0rJEj/sO^TBVbZC\Y"?/"YHLE%3>B\hY$K
%F,kdV3>H$#RB$50TUr&5J+%`2s2n_[@sNUd\($dQ57IM'WW2q(g@*D_P.#H8?-]1^&6f]E;A0)`_s`<#PEUN4i[j$]!$&+`bUXL(
%hpc^:05*!W1ItmB'kr3(rnWQX$%%A&l"S&F=o3!7_\)CH+=b=PC3,\EL/:;A(.$_@H2iV1^BdgCd4M<$kQn,V@hb^0<-?4.\bE$*
%m'5)iW^,C)f;GaD:jhV!lTmlc@A"kE[d?^6[MH,3BaS6@cOh^%\u!.I:#^@UA:om^Xc^g\MM:B!lAT.*?[I`.o<dl0*8k:A=u!;T
%OrBDuEmbOfFuFGq!oe-h<YgGBl=-nG&6K'ZJC:fqNCZmRRolu+a+N?<MhUc*lAVKZ0/:^*=@:=P#5%t-96RV]7h$6Wpo@k5e2HD.
%63$7Dq^!s7c".t?<!BS'#78N_].Pk<C6OOpas)qB2%pt)(nGkNB,lR$3pQ1B=>B$=!p;>iN:pc(Vi[1.MMW^B!<V]4./WcRlaKnp
%+A7$B@-RU;7S-SthIMBq=TefoE/\6nX6PY=F!"&ZT_$WK]3_BBA1J0:&s2=e6s@$S<f@O"<-AC-Yh(EE`T/>9[bMH7R,]o1AN@HM
%f#5qQ[\Gi*7r'>o759*`<@u$0^(-'D^N#lY-P!B!:ic(sZ*95OaQ("eDupUoi%<Jk+XQU?Yg/pj!1<@dg;"P*:![E<ak@MkKi8\\
%hl`nhkH%=K>k(`'SJ=F:E44"-rR'2E<'n0-UDIgLBLkS=n[c-3`(IqLF/=a"/:'N`&MT07CcI/!.In<*Ma3<dRH>@*kWDkQ*/"-_
%Mu;T%.MKk%!mBRnjqn!\Ul&lLV6\<2iX$rS+Q,G!&g>1QTi)U;=S0=:?jTs.7Ysqf43r7b&I>na0oFA(WbOOTG?O^#epPHshX<l6
%36"`qiY,g*csD3]IZsnL8'h:KZ)bfh(E9,8J\WIY1k9.4m-!ISWEMtH=^9C-FGs[NSuPtS_&YaYboL3ONh7qDT/B?iE1a#8iSLU"
%)iJio8_g!hEJMN%3ugoK>?*8qi4eXsV0,0!<.Va]L]2Car/bHWr5Y`bodp.cG@W6r;F=J?KGbH,`t(;%`Yc#^i.rFgISbp9;H$61
%WCfuE>Jo[eq5FEg+M:J"0@eb<]_oLm[#BRoAK.P@&n>]S<U'p+Z0i]S=VlNZW1&Ur11Z;.N_MHd(nIS)Q=FmcW^l`!gILFET^9:-
%Z8EdiSWlcBZ<=[2jp>RK<!,jN%;2\q`hIYg!sb&cjM=g7_P/:5DN9G'Ei,kukhJgeUZn1a\'o>p$J`f$0^I3J-B0/&HMqFr@9BA"
%*'*/\0Z8@YTdBhfHB.SpB.)cg/0l+>2&gYuBT6POKp]InW`k.nI+_#Ro\:B?fsm5%%q8t4"$f1<Mp#Xh_F+e4D``81Tb0d%6B<@q
%#26k=gHH'8]prKpP;N=_D(\\A9W4lJk*.eEf9.5R>:/4XV4d`MOror29NO`iBkmaS7(rI3#^W&l?\R-cHiQ#ai:agI(g*Lg%B`u6
%iM4HX_O_uBF@ocE;2fU%;p-h=:U7ke\?978)3irM3BSH#k$=uSAVX4&FMojN+<Wj?Oa7Y(KXfNBL+5^K,+&Isjd'F+WCjT^F^'S9
%*<C;(/B#VcW`kG!I9RMAf4A*T\miY7Aa-<%m@2U0a=VNYV;oP+mX]oa\t\X\XGfZM/=o1n,An(:!LC]*=_h8q.L?*A.9glsbg!C(
%F$A+'&9Qc?<FjdZgt*QW%kVRIAJoM90&:@.eu#X;%Op)t,Z]Yp7<X9]aapIq'D*@2MP:cr]rJ9J>9QHsY,UM!]WDl8qS>;^cJ(VK
%TU*\J/N?o)%^U!(kk=@*#6Na;HmG]EV5VHI[g1aiV']r`+[e1Z&"\PmcOoYIY<n+_W2Seo]IgA8%JaFSh>fL8.2BcNjN815@bSdp
%"pg%N6'3ENT;e7uM`qr(FJq]G6^<=N[7*TGk,LEW@f)RnQK+*O-'%;/DddoqGZQ(S\Tq(c_Au-PV$*c%lt%)X"31uqBPkV^(oMk`
%+p*\qCb0/!5*ac:gm_DJF9LCD0oFA(W]K/Wh"<A.84lbG.:Z8Y0b!dPCiYJ4)"`IV!>,E!Hl9@D<+aj(XRnIRCH`i$n9u3t9Y[Su
%W]l.t=T\ZPk)p)U'A(]RF3=Ht-Z#n14_8HYa8-E]C'40u2BHC5+p$6@)H&)][e/I]JL;.q2pYC<*1aX9JYBaGTf\KZB;qh@'L\j=
%Yq_+.MZKuHN"lGXS*Lh_i+dHk#p;F-8uY*IXf\0[[O>MlE(:)%C[+"2-ISJ1?p.:W.,8u/BC(6C\o%CKqZ=,/k30_f`h.;[QcX!3
%QF_dn1u,EonW18@%?*c"/\."g=OYD4k1Iff9?g]tF2e;?hrVhHr$<[l]%smNj&T,+jhOc?Ug6XfjrD3qe`e\-`?[(#8uGK##V>!0
%!k;Ic1K;I(-t6W4OeXdo3>Q(GhGp+d%.4c5-7pH,ASaBn]$hgVf#qSe]$oIH.6h.uhr$Z_(+t:d-IaVP.LK^E9(i6FWOjW_^M@gN
%m.nE4g7/KnpY5AJjFX_'ZH>4J6#7<E$%ZZ/=q#(ACc>!YhIQTA7"Bfr(>)MW!^\KCV4p4_&$,et%_h9f]pbf=GJf0K4eAEMPbR3@
%k_u/*QK0%>A!Q]2W<-^;DEJE;G;&\%WgMH*8"FOKi/R%,?%T\U`"49XWWH>__#QX.#ur&%KLI"RCEb`-0fi*1/]ZdeF`(@oNACD3
%9B5EO]f93-U811NLInV^Es18g4TS).)2+hI5#_]k`.J):E"f66\-\'Y^`AG4N6Y@%b;$N1CM,e.;aRAhS.D)/CY!C0)CI+bea_'U
%VC93E40Y&'8P-BsLTDnc-0:s/b$ORJ6.W@&6rhl4q(-h\WA13AW9*3TjikVS_pn*a)_n<OOmNtL0aem:?(aTtMuO`dV)jtVV7SAZ
%e!U[iB$&qk`Vj$Q@@<QYKp&8aSt\.r7#.b=TbVB6>78X18#Y2N:i;jj+0cr91+D_p,!^NJYooQG%"MUsJL*HL:eoi+(J3"tAoC>g
%d4L7'F4\q4$f8Ig,*)'6\iF\ZP9"`]$X5"Ua)^<4/$-e-AUsQW@Z<d\mS$X4=S2@)^bX$8SPb0B1,qj$:DSM33ZOpIFJc)"khP>g
%f:t8Xl].5H_<EXHSlm-'#OPK>X1=`=lfEEs8#iPB;S>_#'+l)"EraCn,PN@7-E/o\.XOF@ejsb<@W\00>)'k@PX/+8ING">^uDOM
%U#aQuhcUoaM,s-L1-g5!l,GoFosPm*<"X[M:^=M_1"W4926g\39b5Z,MU?^LC,lKB]qSe>76`sSi+,h)WRHeQ-D%G_O+%L:Jg;3j
%P8HA6<=tYJK*8$6Xgau;W`CY68/?arX-]#ZFIoL9NkrD^n:p[Di"Y+F[!03,7ujQ`nk.amb8-&LE^5"XD'sjCAbEftY(cnC@mq'(
%Cei`L#pm=($!V*i'J<7A*kS;8Qh)eeL]t\6LId\,)5>.(Zjj&U?C)=c'41IAgBh8Xl'=17aW>k;kole@n1t+)U5+')0VUEI7r&e5
%6o"O4<Ah=[4O"-i2]NSZ`h>u@D%.jb'5UPIX61/j!5NlMk=Wm`"B=F^XSFA$ml<5!*f`l,f1>EKIA2t<9goN#TPPuPjQ^Z_*B7&l
%SDtI58S27H%TZd^DEnC3=>/-"M%+WS-8[^_Hi?K.k,`It,s@/d4X>)65T=$,N1NsJ9@/Mg/a1RNG)X^!G&Kt3,C;>dIR\\=Fdn1r
%UPhtaO\D9Q@LcD67#RHn*M]#!:/)26i!h?N%4A.q)@lYUfZR^d*omb/f%VSZ$2q>/U"_>8U%'i'IFdEYCk8j"A['iA=$Y)@-f\nL
%rrubR6m;>!2)VKYC\Qf05U0>7SgmQ;X1FCX;k3]ZQfql)baK5Ql<=J2B28CL>_nA!dMT!?^`l;OSF%rHUh]V!(bGdiD`C3@3_ra-
%a5F[k[Rfh`D0+us%<ast(tckDXZ5]+ol"=A5^XUL.8,YbJg(G-c!QCV,.;sgNA^>^S)`'t3[]<LPe0XY%6(1i(+L7='Z92B7"V_[
%Yns1ENU4KW`+#X2gc88.SJ3U*Cq&.V&X]T]!;^_iMTUmip6@c`7r''R759,VRTb0VH^lF@Y-dck<.ST]5O:9r@$TRbZ-`crERGs9
%LsM]>&iITSSGEUn6spVN!D5F,2KhC:CgtNGS/to[)Zh`T:K9!ei,/e(oJ-`C%1Z4o-B7KG_lB%oaA!m@Ak9&r-3EU=8/5%ORAQr<
%k^fR]'@-2I'6>)!QZF'eMdkG/VNtXE\!&<T<mB:U%T&23%lR>>E>H*26n_8rD]$dc'F:)0ZE'A2b,TO>.oeuF&_$iIOaQD0NeFDM
%?ZQU5F*`q.;2ie!<Qie#9>//T1%_jH=FLl6$[phT096XWSAd#nVKK7k!]!"picKUXB!E4d7m[q&=N$7)ONUV'RS>>9SC<+4N+-n#
%W`kG!?!YleBH%cN%Zo00AmC!'k=EYo!V`;+#?a_iS$#XX";\foTNjXj)0`$JcRdA`+s!EqSYrKR@rU$lB:3\Yd?uYTPh0?M@<3H4
%Ha1'-ArB*18c(GKQQD]/B#mf,"(hju%H=CA>08q"UP2pXItK>cE>eM;>&$gKe;bAHD`9trP$=>ZVXuM,gplJ?*IR7M@u,-X7o_tJ
%gDpZ,IjM(OY:V?g\!rCTN6Y@%b7WO-/qr,1Z6I(j/kk$mnNif8%ZB2],$-"W#`rO+l7'-2.9[X:Fbi1%f"U&-Lg"S&_VPtQ1\Ahd
%_JrY!`\2Rt94qO=gi2UE^g8Y#*0p9*9K#P')lAF2d/l-I+DqG36``tq<f]gP6t"E;D$)(C\ln(o<Fq'F`[tBt!pXaK`PQn%FiH/G
%c^XkYH=c%aA%c/OW3;(qn4R&;mPr>!STtaaj,$Lj9StF(VPQ36K>M6fACmN.SdF#BKK10J%Bj#qNk;0S?'*o4%m9$/%1]VO>6;aY
%Y4o&?S[F*qMgBZH,9BO;CF-F1"eq83,-V@4!(UgpUe5M\R.kD/#aiLa(CTD3eJUm?hTNB@gD21#%41JcZK7t=Mo\#O[5_V%MQJMN
%-7=u2S7$)RW+)ON@VU#]`AXX[D"O$%0H[A7@$',%7V<48\'RCtPTBAH38hatXDe1G#27pk*@QZMYUbV(]it$4_8b;FR&rS=ab5`3
%L+OMj%@:<Ngic\1m"4o3\&6:?,O;s?"_&O=3t4%V^@*BpN`[4T&W\*H]b6OOlS3)\TMNlGoMd(M<R\5,,6HkJ/LABQF(dVp(VJ@2
%[J&#/cmaP*^Khs)YDM$Z-l6:Vr;gr*j!(>\Ne$jJ#K9#E[BHuk,"H=mLB[k"E0"#<;J!:EYKC[tX,mZHY3:gOnD5`Chq?g/VZ_mh
%M\Z`E9;8>Up'hhFaIo8#+\+eFPCha=-H1Z/_c)gF[-/`eJ\Bl$6<0JC[1kSO&ijDLg9Kj!Z!cXmc8[lZ!GBIWpKCN$eR>QmR<j3I
%Pa%!Gmlb?!_3&52f7]ME+$rsY.(]%Y>5m_@W`gUK>%m1:M1E3!QGgkc<Ln+<maI!kQanVKEM"W;P.=APA9Ss[AU<'GmLW%H'kt2\
%9\`WJ`>p]kGBL"H%Ru;%bqZ`_a]lk/X?OW)'Sl>rQT%BT)KH#J.Z4`R?DQe<#cQ(eQGqpU2)/cbJG+AL(bs!>r<>uYRWX6N^g-h1
%@cZRLc56b,/C_j]3attOT_LUkd8PI%lm5[U*FH16_%@6f+.cr5"pdY[)!KD#.J[BgHFYLK:g51HjqnXP1pi.cpc7dTpUSH5]-<s:
%TX_$Q@X6ap\oM6PMI/\+eO2NkdN>&i&prgQ:K<G%+s$m.$jK["#/`#*3Ed))ihmV2\Z.HG_;-_<OJ&YpEnis#=>/FUQUSW$,,@&"
%U;Mo2!5VX0G;k2B]WbQR9i[5#U(7hVP*h2ull$-9]QE4VMaY?d*D9jP6rbhZi'-PL-gFb..=p2T=t3NGbW@.kj&/"-p8&9Fa&O90
%9.<"F8QCetU9D'8lk'dtLaKU%:WXdmE*()C(`?1Nb;$N]`S0l8a=!ZV#ul]SeV;=c(p-(O/Wl4t7V>UhEbH1so$Ze;:K<G%U(7n>
%!\R]t8!Gpa%I1;k"PhP4,Xt7&eT))dH]Rnuo/`cVguNNep;Z:s>Ii[>lmuCp#S<'"o].[EjK6t]_6,3ef^iOG+8[O&hQ.R4doUFJ
%a:[H15?D<hMn,^NTC\YUE*;5F"\1u`PX=*C?5L:MYRm8b>eZ4O>'Jn\%C]IAacN<O#]0<_Mn,BYEsou_-"r&>p^Z,GV;Q;jdddaZ
%<ZiSrc[\XD!*@s:,Ho1e4aOM&;K9Wi=WG9U@c]-af%JYuOt%Z[kQA_QU"@l'Xt$Q8@?ChoX(+^0c6lUDa5F*jMDal7-)V*7HdroO
%*c1.F5!U:#rop)MS)'*Tq_[R,:GKBkXfk\9JOONZ:`SoCdDBa#V85Z5OU/JO<='fQkEDp3@rU$qIE?E%AQ#E5j=!4GpG@PT?*5P^
%S"+T-!s7oe%C.81ff)'W.O'4c&>2"a$Wa9"__WhV!I+Ff7u5"WUoNMnh"MCHMQW@B'j)AiQa?A6KX)M1:n@$3-akFH"Pbll*E&^k
%`b!GaLqk.3mrgaf[$;X1FA9"hkOtpX4*N33_=aV'Aa%?N4_CKCJn2nt)(RA=Si32$1'q62XB%J75IP,M!+9iPIJJuiOWb'+7.s1!
%4/hW2K&App7FE4]X44kqQ))XqUo9t'X=]:8mrjcVW<,$Foui+eLV`ntmu0e6A25Z"8!91I'MHVRW$8OF#J&LZZt3Q[>2%CV&cm&r
%/;_V(7TD%\i3"03;]O]N:#KVPULM)T,_a`UNbFa!JK.17;"$a#6NlP!V<Q+*@DFW!&ZKl,^(5QY5[:up@dlLZC'b)aX5\'o3l'7u
%XgC<:FusZioQJ0^WOM2RG1G>ue@hFMna,Y!85jG.Mf![qX>DeWGBLXbmkr/D^?q,D2gVCVW<-.+r?e:mb`B@UB#%em&dEm]\dqB0
%N)BIMBd!Of4t%<tLH0QoErEY=A.nN9Ebe(YHJeHJ7B`\h-0M)#fOVG@oJiMD0gN9S@'^ZGf=S9J1KhV'_,@14U,`;3]*=-9-E2R(
%;FL^(I9bP]jrmS1<KXe7McG5\*D9j`SuPtS_-QN]cmd#a0uOhh]V/iRVJ2;u:OMAf\n^BH!)0J?pJ_D-B6o<dRZE?l?KHL3aO<G^
%[ekiWP=mO8SEX2%XF]rLqA?ZbPB-r<f_q^/4QuI?"mPY9Q[\D7?NU>pEEOfs+iL%2#V>h>\GC`RkOr2HcGl,<,%.R6,r%GV<@u8L
%^;pnf[]9L(?%!`kVQ3'2GP*``C94#=3\ku[Wro?53YQu+T28O1ok!L8]=L%(F`f[0\pDUU\Eas9oJc#**LIhcQQq+$_EMX^H*OAI
%*D]s1O^kedV\g6A<0`dDIS![MEmAg,<n:PdO9h5S?V-3j;cU`^M6HWl='\3i5,]-"m';(cg28=lB.Z"WP?=S!E3'iG0#WH+p#MtJ
%jMO$pbpnnBFnC>!)_s[=ejAk`@e?1j>(T&q:)D)OH9elJJ9'u-Aj>A/bODm^c248Y!mAF\3*&[t9)2AVMUL3"holSS'-DK[/Yt11
%$ijDI,tcR%=4EB@dX"38i8`Ir[/lRJ;/Sis,K+D-3hi&O&<EC4>_o3W&#tGeks9pFA5a4ah6[IK=H165U[qI8EX_C0eKYC/H=*!P
%/?_mJ>BH^BC)F>(-Dk;<]Ie\ZoK:HbR+//)Pq!tnHB99@\Q$P<0.d5+G;r&H3_ra-a5F[8FJVpO.7$VN'D;a+i]cL]ftLSLJB,r]
%M0):JOJ3p(f(>>>RiO+QHM5qDSfXY&P_.N:;\KPMG5I'=Z4fD)&`@Ku)JNlP9M>[h)g?hnQoU#"JI\]9/Et!8f]6KQW_+6TQdI+;
%5`XCi9//J'<@p`(^>U+:q(efeZTV=HCaZpE#Vk;p9GpN@n,\[rk9Q<^3bT]=KCsc)io:p+[+PJbA.Qbd)Ls8+f;Y`\(sMCH'DY)n
%fnfg#m;0HG%iU!pHIPdo5trC&n=Y&/OplCJe3_)ij]"QM\%8.?C$75T"J!^]9$q?&C8_<r8[G&;s8B7'!#^4+,VY_bG#bf+UF%e;
%NQ/6UV\jIk.GfntL0n!sT^8%Qe6)ka5%&;)O3oP:d<-jPq$$4Ua1J40"&+,j[=/&(a!$ZD37n#+P9Y".3]W;5P;Bn'Y*i01m,bHR
%pMr6ZH9&oA0<[A?GGH;sqfp#X!bZnq@?OD%cULMkfe/j]B&]05`Sj7g(J/)bRB!6kGc[(>/&'pQWjX^A>I$f?.(5\GC,lLm?0?J2
%(q#,P"Qe2k?!EWHB&%3=)qVp_4(KspJ@j\%SA^fQUadRmk_#TWFXOke1fSIIHAPlUpR/oRMU?^LC,n?Lh6)*fos3ID85.;Hn(#KV
%RV+lBA4]f%QrZ;.)ahaQ.OoH=euDT0q[V-9<CO9\C6.q!"t=bcMAg@u=g)Sh<E&@uActcBcqjB'N,h$Ikh()"A/6m;+MLt)j%ggV
%j*J:57:\t#''*X<<QSf+gQX8k!HU4i0fi*1/]Zd5ob1@M,Ap*aO9,*1$VUpW]bO.%JIIWda[!-,9\%p#"F#CeNK_'%$_e>S6RGg,
%KOY_NcW%:lK=frG.'&.1LQV_/mAke!8p&Y*K74>K>4"pL,+u(T/V_dA;H-$ep3^C-E4'aiTkQ<^A8b,e\Q>#ij&FP!$f6&0V+e@I
%WG[5-N6&u'(q'tr89s4-"B$lhVMI_.p.]9G!.1;+=cg5'F?C:TBD/cEO)@gRT"Ckc?guq6;Zo/Z/0*AoabLU$;qL9u\U?Tm7^p#t
%RL1me<t(DVE$;)pW/$13b6aDtNMN:KV385D*hu@\7'ESfi<IGGV\e3(JC.jN,?C\:DRDF#hfRp!E<j$J+I8uIj/R-fC,VJ<6];=W
%WZhLs4qAL?i(!<7`?!P^;VeUm9#k1q^:U8.@.:UOc")RrEUcVNElTg[KQ5F/nlR4L?!ZLVTgTGbkfmm7CcPG%1`!nI+Hr!g`T/9r
%!Wd@%k$m;^X#f8Xgo#%u!-ON3k#2G(I$0t-2s]$EVI?^N!:a&VVfOH/asbsqPq!u!HB@&ok=1XbN_m(g"Pht'MhUc*lAT4lf1Y"C
%d)@T;JP@k.PaBt4GE5#9/kZ9HioSe:6D`![o9AnZR:D_K(fO@4jPpoUV;4_S"JP>=osEM+niC/XhE0Kn'&\RAV%a$$'s7rlVDF%M
%!!2CSpF8OH3E*=B(;Uqt=q3k6PL3UU-j&OMbf.GE=*;M;\0Gu<Tea?4&>4FKEjMpOB68ikHr<ZdO]`np+MM$JZd<`iB5,T?aeQgm
%@n\=)e@!Y,0">nn>UnNP4_O,OF`1X_e[`]'LBp`%Tjh^%Hd.!L-DpBjaT+>%q'q7V/``pP"tMnDYY7%r+uJG>>)Q$9(ll./3:Elm
%3!T-J-pm>6QaR&Wg=6?f2Qln6a`5SEqL>]VA<-FO8P@>qCiqI6'aQAeN*p%]dId_B:poLu$-Ah@?k0Xg'V;q.1P.o?*,X'QYJH_a
%2VRn5FBGnJS\iG47<aOfW)lTUo$iaO9%b`&<ooC0G>?g8]qR'Z!<?d-jAL*S't)hKo!BX*YfNC5V[=Ee1pPcYB^(ae5%lu\!2u7/
%'Cf(cSP>g1C)>`^W^'t>-\<@3QrjZ`WWf;#_r;;A>/N'2$g1gG)9:Zq_)%-g"FW[qJWZ^nS5\kPAn^3SM.18$.Zcd&V(isB)c^m&
%UW#(&jY7b8>MlGAiu$S'XgA#B%H7@N#*\"cS*Z+ULWRED<=d;7!q+7CY$"FN&OmR'3(ILO)oMkPCcNV'JguLr[$\:t__Hm\FP^#g
%E=D9I?8*_nZEi/7%<b7=NfK=#$@7psa:V4m'_G61Z!g>$d-<s#-]g&(,<"M-V4hR?X[V>?\-/Mpg@_i.SFTKGc>@<bRin2i"/E?#
%`;VrHkN:Wf\lWi]:-h(*gtW$2F$iq7\N.`$F42k$d<RWob;$L;!u>DFNXMuk*:\:o%Zl<7ksSu)5^^+!,V0DOXsb[cijlFA1$H<]
%.8e[^7D3+?a>$ITPbR3@k_rm<*qc+jin5rlFJfK<Gpu3Qq<Gb5D%7F++C:";YrpZKMB`1\opihR<N>'>7#O<jeLX+n+iI())9:ZQ
%CKJUu$m*+pPlFjO4?E=gaF'_3Eo^?al<GkNp*Lje/CnkDZa2+JBBe*R#io+46563dY3LsUE*lZ,;Y4IVV[=ugAZpj3*hQ]-jWo@'
%:AX`>UF[,2ECaPaXB/*sN9N?S-+:HWC1_j50s&Xi@E(Ea6]?JpShk9#ftQ>kpbM@[#<:?@<ciH5Sg8,?9]m#T]8hEKI?BV#1-Bc%
%<Y`]C*[E`@#nEtu)MkZ(#R&*)(rb^OX#f8Xgi[5\pJC:H3)s@Ifi*Vq%1.3M3p.!(MBhdldD]Q2_c6jAM`rR,=C+Fse>'%c`0/(g
%*Xp(;7d"(-)+WjBK5PW+U$H^*3^A^=5$IEhjH6E@7r(VB]r5"R:e]G@/r!5a#V:;md(kn=Jgq71[$XH]_D-qqGuo..0t;!k9)F6:
%l,7sIR!jkK0pBhpM\o9o(*OqjZlM8M4b8tXT+_Y)Xb]g7>7k9r<?$Wj'Vj\fe^+]TQ6L*J*+3N$]th<rEP:GHC@TC6V%uR%0XWkR
%R(:0:ZC+UjO=^s#Fc4/BeDbF2[<TqN\Biu?KD7WICiY%P"J$m/'Go#4Pui4&G$Fkfh$:k7NL&ICZ,d9`W^'ss:*.P0kX1UtoWjpi
%R&Y)A0oFA(WbONupLV9fgJ'Y$+/"D&Z[AWqa"+6hl=DFcQSf=]2NA&h9MAJhj-isO1<+qIQH#@UAN1l-Be@WP+s!EqSYrKR@rPck
%9Op3YT.5r-MgRZc9.4@[3*CW]>oFjDDVo0'=D[+R^*,8-]k2k1BaduM9)@3"ie-2,`TTEa[2ahr4s6a[UAQOG1:ZPm+>QDiKlX(h
%3hb86N<-b*ZnjWPM@CTX'?Iu0!_ZZ\..V,*0UIY0_C:AiEN3d;3GWm\H=YJ%@[mG[)tY$]N/)jgN6sQY/8m:/5^]3N0d,'+FUM2;
%?kEnNF>lRPn%=FpZp>do;2ie!<Qd,,pFGA[c0:fLYd\phR3(]oSS)nQ0%K9`*UtG^ILA'P3d_=$RL$^#c\S'G+Bm/1RcKpXI`VeF
%J3!P%(gX&>Q=2JV17EWq8ao]15(T'71JQHaQmtbddI0(U!p7D1<aqVX\L%AFHB+ZReU*GN9P<Kc=[I@%0ffe5/\>CR/ZX0Eb8n?q
%$LD94Zt%O2B4<oe/st0'nHJM><FVMW;&,3:4\0NSk`n'"M;pB$!Wd<975=Z,RTbH^I.g9uDWoa0!9Lh:2C$r-b4cB'3jS<tOj6VA
%A%>8fk!iWTb2TG73eN;Q\=>1Z4h.__MA!cXMU?LseFF"(=rX8iT%CXZkT+R7\O"7$WOIS4bo_tqCLrAX0hPFpLWd9<]Ra^D2ePdc
%YD1"qBbue,N6Y@%b;$N]@><nb#8lp>%2J[Z\)F-.a4G%;W*XI[B>lA2TROkjl\8JgS^RD*N7Di+HqJ<:gu]P^Esp9ZSSU7fFB9jg
%!anG7&iF5pI:gXu"i<qN5YW+=.;r4g<>`oDh5/%,;Ij#gF2hO0/*eSYAFZW#Hi(=X4?hslR!WIT3cUSs&76UH>oY$=gLlP1.O%6+
%OJ&*^?>Ri=.Q8@`JUf^"UDTQ"Wg7.6[pmf,Z/DS_4_3VqY^'>";l@bti[\P&65F$E@Y6-SI<q!J8"Wa,>B$u=7ul,Q9//J'<@u8L
%DX!W2COf=eb#2Zl'>inTM&A;o,2fUGpe>43G(V7gYZO\QE\g$pgeF%Z$[$GUMiJdXBpW:NSuPtS_-PA7l&-s*j&6,).)@>Z(-V6'
%q%?kC:q\9m&RQp/*WAX3LKLK!d\d<V%ecI&:rVuD>0Ku+F=bAo4B8d/K=fsP=7CM.U)8Ip>3PsU:C<TS6YGItM&^T23lKGd#?<3q
%XVU6%E'SS(-](hS/37gQ-=;YXH)bU>#5<7DbnHZF:)1iAfdDPAC=4a]aHCJq!q6nTI_S(B@ZH'b#@O^'#RfGpRj+^W-=g5"i)n79
%PbR'beC"`Y)[:B>nN(7*dpS[f[b\FF7QmM?^iKUh<u=gib<_6mI<s*lDUu@if[,8Y>\TPf0M&b/<7GkCaq)0drr35NTJ]+1'(d[U
%G/lR2q=Gd_YZ=H@Ctakq+J'O6cb(O.o@]-0%+^W:^YVp);j:L.jB,-o'Q`02W?LJ"^A%iZgNNfs);J&*`49=2n[1Vbn%"5u<H]M'
%L/udMfW->e=\LB1AJL;>(elOi3c_=!@#?OKW`k.nHl*XbOLnk789"/gs6T"*br5_MOO2-27m&jUl[t;i/9>LaVIl0d)e);QjUKST
%RL@imV&=A*`5m_&>)'k@gouV*o9R=*?Io"aAiX*A4f2&]01eeNTq@fpUe2,MQu?Ae.W/sh6-knpNi[]72Ph8qrF0Wr!s%3?'no25
%H5_+GHL?nTeGZOK"uj(YAf]<a;"tHF#HfWRD!D)]\UbgX!b,kuK.9VqYZOVQZ!Z[o@S^p"?/9`Zc!Cr+,H>K=#'[0^darGt^(/M*
%j(C"ug/\m9!5`8sG^;XHfcfK\n5)Pa:Cf3`/r?LV3]f.rq`:h#U*JT6NeQ*u@SkTq%.;27G?2M%b+OD4H<PUfZa/>?3\Ld^9P03'
%0]o]/CcG?N1`#CfH-14Q2*SA_Erd1"$aJee<Qd,,D[THslT0&i1Jlq(rN^K!Z0SrCH&"g^UBj!an&R5]k<mH0&"tI#m.hbi9^btn
%I)UJB"s!_eo..aMa>L@6KDE5h)61(_V[RHLXs(.2ZJ)g*,omUjkfkK8G]mWS/$Ukr/n:a#&[r&.!..]A;:Y(:+>#Wp7-q1[Po(B9
%<Qie#UDCM:%P0EV9Lh]2Vm,Z?ZD0*FasT5"o(f;dIP8V&Wp9sP1T.cWRSt'!S-fuggk)i&GE>MWLi8UmN(M\qXYrE/-kV-U-j%u5
%St$6Ehmj1rgro*5K4A^cpJZi@\K/QKXR$]C!HW<5`5mb7>)pGTc9#!X4$enJIL%,eD&e/+#Br2!0ihbtFpqA=p1dXdL,DG2<u%M(
%*&97Y]43#HcA/Ec@rSnmN+H"oqd,_D&r,]IAXOA-cK7Hehi[<1"0IT.RUke91#LIf<K=RXNs8XWe2o2j9i]^"\]%g#8&mrTN2Wc<
%(u-]9hm>J\eF(L`:[2s.;qFe0bho4>DcMdV`Hnj5[6$<.f^<@VC%l2@-h[.+<Qd,,gGs?^FSr"BJeEVX,du-@$.AHT!st]FO7)qC
%?KUlIbVoU%.;`/q_qB3!UjKX4J5R,kk6Qm5>9QHsY,UM!]^8CuX=F.,(,8S-Md:ZZD7Qd<c1%4Z#4"gF+UKm\"UJ*rb[A+ci#1ak
%d:(M0gIm7>oSQ!'Gj&l*"`$2[//a[\-Z+BS=4Ui%".#Q00(+u)6EbiW`%r[MIiDk2IiGDD^nU95fZ&),HC?=OT8"q%FQ@,<@Ppe5
%G<T!6*1_GEK(L["$*jC\b5f3oF7sr@\(/DRJhS&bSg^#X9$FcG6PY`sHB=Wc.)^();68^lF.k$'$Scih<4*]uHU#crS1VHQ,q.s.
%27k'1gT<In*0M':Zm5dZV!XD$Qu$YX;cZ9hp,j1ZY_cj[oVbBNF6Tu!8&0M>Z]I6iMHYJFHdK5tQ4sG(q$YQQ*K`p5?&d8p+R<MR
%%lrXk+[,E;@WEpV>cAnKM]N5,^;2O3TjXmDcUcNZ,@GDLKpXqDW`kG!h<pjGgoiC@E:^.gkBOa?C0l;Y#3#q54Y@dbBo[ru,("Wt
%o/Cl(>a:E!Dr/m9,KD8XTpRn`W`kG!IDXj^YkY$V=Qq>o^$,=/:gl2^89mr,*e:/DoY/\6RNU^<r84a?0u/hB`+gHRBo/Q0fQ$tN
%c(gAPcd^G5$G(DoN!*5\`23b&VZL@3pQL4cm[PFuAVNO1o/]k`J]2C#O3BGE9WYUCMcHTbR^F=$cA/Ec@rUV>8`n;)RG9M?-LR,?
%gl\s9gfmcWA$Ol98_gj&6LLB!1O%(!M0l;'jVZd^*bf^ZlZfEp5>W"LU7[m=^e+.^N`<Q_&E<mh<CHQQ+=D(f?A\[,1fIo3O^jD6
%6Hku2<@u8LDVrs0L#e2n49P61LLN_X9MD3/]kblT.Q8&NBnD*i,$TATPIHmr7@K&J[Vi@MYYC<?`8(/beT,d"V&N)DVs57@ar':g
%cA@J*'WXp:!I/3Icb5'4RbsfqaAtG0E'LFM/sWGGC4\_VN]HA1.JK?i)LB62+0g3*K+fakV&`n:qcGbi`l5T@$kQ2BNH6E.f>N=l
%,%f23!5k1fG>/^0FFCG"!3FEq$INkYC$5_9qkDJm_u$>=AG"!3:^3?<Q2l*;Pp;r=Q[acmRb4<k#V=Qu5BgO@<CEHsZ)T3IP;^AC
%4B8d/K=cRr<QDdeAk*(S#:0UjErDZ2%bfB`J8Q7E5WgJRDj?\k.tfArYimflf4^gncrENfTNeKIaka35F6>njb;$M&)oc3tXl<<2
%N4h5'0"BCti[1//JTtABG,6UQApL=Iqc*).5piJXXq7=G\*1mfLE@[/kGbKC(u4<!(+*53E6=PTqcXCZH9"]nKX-@g@-L\XNd+Gq
%^.t09js#On+0(-5ks9nPZuB#BB]0^I!HW<5`8#QOC'Y%4[DtNoY&&,d$pZft9%[ru3[S_H4==[/3%gG-GN^2Zf'4*F1sNVcn:plb
%O$VT*Y+AG<[L(>sl=ma3A\4=Z>O>J[;["eYaK[f_2nAi*SSlpRaW(=s^!o9'q+[H+IKKY055uQMB<>8$k"s$2M&(Ym3?1\u(S%D'
%Q=FmkD*jOj?t)@XI?m>JZK!Xc[[<H%9cZP;7B0m#M##`V:dnnf%hdrP/+[M77,4L]7t_k1=,G=MWbOPGq]`"`9_'K%[V7>/1.&0K
%2,,\MVK%gA!3%__+ia>KWebKAK)jAD%[(U6j\Lep*-:%(Z#JQ"ST,)+qOqEt:&IWS!9NLtc+;/m4\?Vl$d0f=dQ["gPnON[<h3&%
%OY&_`MGl&b]>d,S</J6'WgMT?U0.1#9kOle\UAZj'#ZpCC'@]@-bH7nDuD9k#.paBEu?*l&KA_@`N;+78t0m:YhC+UZD,t[6WK9'
%X%I6b/W,8JY3CmR0Xks8aDt`U&R^-#YgI\^Ajed4<!G#ke+h%.g44E;bVn3(`XOr.,-n'Ne%XYPbdJr%<Vr3'4Zu?V>V)Ch<G*;(
%]7&F-6B.Sm*LP_?.<D3n>MH5W)Em?%#_4;@D#;A/\/@e"BmYl$&PHhEmXn4pJ;6--TFIf(/0&k6/\POTl\-<6iGSGM6@^&S8hd&l
%?t#j<"P:^d!^S$%%FYS?`(D:6/X7e0Yim$9#'/alW]9.g+qRS+@qe&Xo<.A;@rPd%jORqXK0MW9R;V`E3Ga/:ZG]Kb!sIClh)l0%
%q9HoTW?SXF#77]UKW8-a6An+E*KI[43:Elm3!OU(DXiJI1J\`6[qq'_ZYb"b8jX7u2+a*(K-s/O2)\3p(b9L&M?kbZ.-*fUfQ<o=
%<m/s$/ukgZ/f)aEW\][OI9SDkk&pusg3m<^I'ML)8lN42I69[%42b%/"0(#q?tsna9'sp`S_WXP/@@R0:[MJ0%.="Eh1<C\D@Wn`
%U]Z(W:2^`/(YR*GDI-!=`7'<aVf7Hsk/LC)!fJ*,/a[Es<3_%"9BA6AqAYI*=?,cLc8[k/q9%?!n)KEa>CjmD[q::"Q@-J,!bQh)
%bQ6#rl3G]b,i;;MZCX>*RR]Y"l>,a-"//9"@^u-b*"^JO;_AiG];h0'YdP)-D/u-$[QA>V^''R[@+Hel\P[7R=WT=`We=c9E@Wdr
%H@We?[5"$^,2C`0&d/u$J3"ZkZ#JQ"ST,)+"6M?:]]LYQ1VW$$!J-gggZ0.G$(2hL!Dm>16ON^PY/gPO>A6kekBXV+Bm7_K'EBhA
%6S:g">u=6Gpl9[dJ`+5j"XI/?Y>^Ga-84>C""LlX18RTMVC3mZ_AZ>fLt\n>+'FCp(*PukG%NC-(?^du`56XueaNstdu$"/9=k:j
%g[KP/dq5^;O`tt:1)%9W5cRdkLiN%6<<]\(g2;Kn,>7p$-mRJ6L(B#K/f)aEW\][Oh*,R,/',\2B`uVRH/<TV0Gg]#ENG'HigIT%
%XMe"5URD6ddm3tc^=u1I4;gD2kl=#Zj^R1/1nF.EhTLM[D+-dG=QuEgD(Pe(ZK%K]Okhf*!1j9tqFX@4csDkZ!jLfA%p!\KVP,&3
%e$ueb<?"-4']!q$/[qCc/tQJhGJ;o6]sl#*n)*i(372:Onbh:W<FUnN;TB$JU^%4K-.PP05SZ@E/Z(;H*2Kf;6d/Q$E=D9i]NCJn
%QgjKDJYfu=h3_i(3Bj`NY%Q3m%nFE`e^#4g=:/S4<?SMJa#dj?+#dDY6<39Sj1&ZY5`Sitj^R2]X#f8Xh"M\u+k)2#rrVhr9?-Tg
%'euLCG:e)Z`06j?(brrGK".gG@'L2e,b=;<l%C%NMC"0b4I@?.'+<u/eJUm?4rh.J[>AepNt;GMj`O8sEfsn@Q_;g6DiT&Xe2Ad^
%/4,G#c#Y+Qp5]afR.depjiQUA$j&Fi;&7.7\uRl%(sKNFWZRut<T%+=ml<.b:Y(L@%ek/E&;]L7V]eW#+QA:L7]b=EK-"ns`3-#/
%K*cnh\.$'FeBf[+ito?54f#^C-eM0/-6Hu,W^$RAEg%nkP$@2O<7t%`aruc/$"T(:dba=K:Xu?*g0._V=H6EULgI]bQ<R0,8#0&V
%F^c^'=9<=k4-C.?YB;=:FtGqE5Z&b88#jKT`?YjH0io(q/:-51U2Mfj%96^[*#;I)EB$EB3q')o3!T+koQ1HG2hGa_6Q"aVQ@t0B
%&?Zr,R$-RhQ9lJuDFF'R7Z`6A<H6N_`HlK5^]H5OcbZaF(u4:_)k0EY+=B$,UcrU/[ZZ/<0<VB'2<I(_WKg=N28l:[,Yr.X3N5jj
%B.I00P8YI:(nKiceoD2e$W^'f/N5)kjK"iNN0i<FWd!743h"pq"l4d6\,k,!^*#)L(E?W0`_uJY_jbnc(G,@VH=p!hFLAG#Z`R\3
%'fa0AB@E'fKuhhT7D<Mk_\(4=>3VB37G/F-Bgc@VA"LLQ&AE5'.P`QYBQ9":__I%rGuo..0t;-b,.)d8J[>D?Kcm`%cs[o`7cTNb
%@j%B3[*;_iMbReq,DaS.6%Z2;8Ggq.+`nm&#e7c,MU?]NFiH/Gml`uU:!fC[&:#Lgrd.%MI5b=S@':?%V`VLRMoD!bB:oOG?G5m@
%g8B;h^+[o([(""qi>0Dr3Ad;sF5GrNdqeMcp#K=J`#,/4l//qgj>$sE"ke*1!I1?f[UgTrS'6iLLmYSba#D.rW/+juc)#IVE/J+H
%gf:cS''g8O@/:mo;[#pO;*T(I(A')6_Pi.5E($`Y*2ta,/gd)^bZ+fJMb`(nWF4PKSAk14'SOF_*Xp(;7d"(-)9:Z!F9lZZ`V3"3
%:+3T<&>2D7VICGjRLBbRnEt'-P;&fM97tB8,',j`TN;YX.^'m#Ms7<.3(>V`:K9!e`-l"dF7'5ZmSenn/\(8*h(n_R+/aj?XX]Ee
%qi5MOEeg[=I7NXi\\k\r]i!=#%.;)nNI8(fmsD'"7V[Pl^5YR_Zgf(l5jCJ8Mac#r>1!D&71]51lq];32!/%d>$o,j&EiHrGn?bB
%<7Q!tmaI+5Spm6O*T0oRPTJeE?;scmg&!)3o"50'-[]2l+tt9Q9b@Dno8%=n@;]3A0k[f*2O`2p"a0T..Jcb5/\Rf?gL6d2lcf=c
%ZiQJ[7*g3P,c$c>D?JJ_&gqJbN?`Sgf>V2HgJnCYMtMh6<tXPbHE/4sMlD:h*2=@AVlH%mE4<$(9/u;rquMhF%ODmZ#CE^;^",L/
%A34E,`07pD.ICTLQ0kUBY'\[f'24m<gu#R#!+@UQ)@4A37d$bNjVZcidmF0gs8#38,Jl[%L$YW)J=oc6As36nkC$Ve[^'1=+L"u:
%Gl&j$o6.fq+u(VM!I$Lm0fi*1/]Ze`FkH^ukFJe;^_&^Zih6B59So:OD$e/P^YPF!+s_503SIDiFU0rsD$s<g2,.0UEbkeSLs^LJ
%C,lKB"AU9$OqP-#"cc^;7Sm((Q4[QMY4lWliYg[Wb@3KK1KB"A@N>`O9fo:'Zdaf&#)ba,<T$HRnOus+dCE$^mAX^QlW7#;Z/"Kk
%T+fdO:4uSj@)OjI5p!lgdNt44mar-P%C]B%Khmr%ZBFG^'MEt0H"N2"Z^`M,o/2/m148MWdlY6`eIbStms*G-Q=;kQ+p*[FaB)Ef
%qF-cJ`JKrtJK1^5P@AX*W`kG!h(kUS981Nf!bE!0n$&%UOO>)F,ZJ+Jf2sA3#E\#D(q8k2.TI7_71]20KX+W>PP=ULF=&Okks7@"
%0fi*1/]Zd5bXaAS4jN0ma:&3(T>AH&K5$G_O?1W\YnYA9RDJHGG`\R7L$"ABVA:STaKZ(-.7WL"WoY)Q8%fd@IZr0S<e>@qi`\c9
%"0u1;9[F;,3`9P#.@"@&BM.q$C9S3D=F^ufqGmY=p<lO2*3);`Y#A9B0UPXZ1p">&K4e["ZLJe3aIU?b<\IKq#c,ai;_3]Fh@E_'
%TGHjlDmo,@k?WMC*=\kYi[Rjt-ALulWFZpjk8misR5r($I*p8AAEIqtXCobTDB!?QF$HfbF!*>]JAE4o&p"nkRDZ5H*52[LRUImW
%3p_@%H9XZLk7Vt2erRFg7L8H<MKlSamQ[LLM8/]VhG?XOMX(-?e&E,%1%(pXFC$(0UDTQ"Wg7.6?TY()EiT:9XcD$][JJTc,0R*K
%PLukb)9T57J^ge30NoKc;QI]Ch<OJ[[5r\r<j*Afk52l`1H.!B8*#l$1IA.0n*=(3V\kg(WL3i^bkLB:5T$Sjo5mPX2r>;?MIA3J
%niKuB%4h<;5V>^*[n(O`_lC\M.j1GOf*r6_V-"4"Lqm%3ntl:(e&6s[&0cuO4h@El*N#!c=7F2W6-&t'JiFuL?8C3/*`c;E9DmPN
%r%id:#dIn`9l3/836[U[/ssmr=U$2ufLokM_PoA-@EAU/2)FDWA)NL6eN]cAT^9&QEt3SDXGpd;?r7XMcgP)k!Q@qV#?=0"Yn$NV
%Aeb\/An6p(=ZUoBRNaR%U?C%T&e*dugtNH08%V\'%N%nblKQ";:Hi;EN.H5&hl7/7Q@_)p+p*[FXN-=$</o:/S<HB&7PQr"<@u8L
%54nGif'!*4UQ7Rp=Z6,L2^VRbc7FH[FGQb_#?!KA5W0BX7AE5GC36s#N=O95UXoX$\/cBJjl2$\H35/Rd%j&m]tN;QUuAT8NTpd_
%gK#)djD*U-lQIsZ`sBg8[VbLf4`\Bl<`oM+dcM4>kdB_j\HV0<%f4_8%59Xt!hRoo#c?n,7W(FJ2PW2h2NYMT!N*kkWb?4)</o/<
%bSqLmVoGkG-K6QLHY<@2>^up8M$<j8O"dlM:p-SbT>GO5&9!o;&n;4s<=sdN-ba%SfqQbgjX2%b@QFc,N_tb\;cV!q\BbO\Uq1_0
%<M7jdfT`VA^%Gf<)TeG`0(]9EkOg:T\!m05Sk$6ti^d9aKr,_\W\?E1#O*&Djtg!h_dL3;QrH_Kd5uE"nq![[<q85ndc4l'/.1`O
%A02&\U>1?0/CL1@,-^8cSemf6X-//bXi5DC.ib<$SYrKR@rSnO<QTfQpiLk5N4^L%>o0<cgXB\5i%gjQbE:m&P[_T925Q0C2<^0o
%JZQ&364QCjZj-`Xi>0Dr3]4;RK=RkH243`2p32$MQ3.a%l'J*Q%Z+Io'Nd3s&C9]Iq$"`>Zp@\[@*t`5004sG$SP2YeON`3dXuY#
%@W\3A>)pGTE]2>bk*Z<6^]=Ij"@C">YI8"mA6E:^e,\KrrI1`a=L:@oWP1bPHL*S82t]mK<cSU)VA*,8E^[9KN_tb\;cV!qESn":
%48P:]""^4rL5sc##gZ!=KWTL)9iE1[IGHEY6>Du?<CC6B\JpnoBq^D1GI.Xo\Sl707d$bNjlkJ9%hqOY?(WUJa-nDc5jSILB5V;E
%7kV6MEgG#][=pZiAUt;UGR_q4,(@<X#H&oUSEX2%XF[8!Z:i[DV_/&kI&F)g*rRLBoNOI>-]<Uk>QXF)N%#.>CmKs7N9RSj:+M<M
%1T)alc`Eu7I,PdYkVs<br.;CZX2R3`)!;qEI@QqP\tEhO0lCMub(EG=EZi\:NcEpLT"27pB/'0M.<h8=)K%idlk!$.C@Y>T4n>*T
%n9*BHQ6h*2#htJf1P9-cG_IUkYZSrUgl"kF2m\gQLIE?+.]T?_SYrKRA)b3IUoLpDR(+BcQatl6;B"t(@Zn6r0I:]D;KHJZ9lTia
%RGbe(,FQ*[Z-7XRVM9H:0t:#&C&D@YmAU.)E&6S@4T(aHf&K<7RF+I=blANZL^`Oa<*4eOpJcOh>+F#n.6</"SYrKR@rSp5XJXeS
%VKTFCWSHp'WS8HJ)6)FhSW_\I8DW\bXC8`IpkJ/GMflYLZ./1Q9C6&,%.7.3.)3l]/"Zn0Z2TTQY;E2,?<%aHRO/$mgDN@[8OWUe
%71R+<($1a9g9@7[4d/Hk[4+8)6;pG&Dea%O"`;22Fcuo$9oaHO2*'^FguR,3857s@)B+NVPae*]W`#$:I*G@qa&8,1W`kF>qh?5:
%)TL^L+],Y[7)[#u5^i42Wr8rX3;7R!`!.$Q.O)+\gc#B$gn08"nqQHFe6rrFF5PP@N6Y@%b;$MF'/oZ/3]U2JNt$AkpZC>"QAEH`
%*E:bnnXUXMYFuekEi:J<&#i!YE[MP5fK>KNFo$Ni/-5ir3(>V`:K9!ei,0k'ZKEqsRK4`W=B_^9YWHg?js&X"BZ;g]'Oh&74[b$L
%N7`qW/JS#CbqPJZG32=1@W\-?)LB\T`=iksFadAB?krW_Lok2Z0ZCeTs$dN\L6.1qnXi/pO"#HAFpX3ce:rr^&YB/(#glH"e$9:G
%<mrZ/LXiFI#g/KFn62cZFYBppDbD+WjG<9ZKEMBP.S6>8g8a2f!D=`g(?,1pgMu:VLY%W^_c5(T8pki!L@"63OKX5k@9[fG\*bT>
%Wr\2(*V#+./Z/o['Xqsq'n,f?3J+*4[gn<XY;=%@[Q.lCSh5_n&>SPjeM7QqHF?Xis0-!`*U]"$'DaR1iM>Wt`=opb`fY$1-H'#=
%6WHN^dCC2UqOs$NB7ppODD@c.Tjo68kGbKC(u-\Z+^7(``ci;.B6QEmbU]4M5"Jfdknf6tWHN2H/4H]4<WTF+a0oO\_a)HjUI@E6
%8:-@:X'hB*o\;=3r.;C`E\Ci8X3q;t\BIl\4IuEXUXBeKHL'ofUtWHfYn:H=MF\ghklJ(,Nr)'mL3&8Q*P=HL@W\3A>)pFI[dQ0J
%kqiIX%YaH^o[Y$5#[%c'GoB3D*_o8&O;44?o][%l_#_YumKW4RKA3G%5GX)L@W\00>)%koo%prZEQVC==%`s<M_Q-:*Ei2T$G^AZ
%HR1Q/,#g%4!7m\5Au';DKR+or=F;ji>6'&pI0qEIRu/,%6.n/\[baagS1:b\@3(3mAnu1P5aYF/m>,];khWus`_pbj,1<@o#r:Q)
%WoD7?*(BGg+T)Qq\kYsO_dI@$`XR!>M7FX/bg]@aTl/sZR6$4c&p5<SFV[]63\$93em_#&*6[+\QFPNdKDX5nN^<E2:DG:C_jaA7
%p)O,VeK^](R<hANpI5OH6B"o7<(-p*4fJ%J.GMFo>,4Kbn$>GQ^tft<0fi*1/]YeX`C>r$ZVD7VFi@f[bk2.J-ss[mMuc]dkJ"$_
%fQa9.Cb.Vk"4NjCWJYhP>BIfoY>ZaUSuHHb#5<P9O<'p=Nc4t[hf/.RGMR7-JZOGmr#1GlHWMAV@s1d>Ue_L6*)O![gL)7D2kWT0
%Nn#V2@W\3A>)pmVZct98ZhtJl":GCo031/D5-CB3ku,T5J5gks+Z>mjRMq)*qANH[XaMlXCkE1!B%*J!i,4R/fQO-ljd<RHa8tV4
%mZbPD6p1TXjarNK7KCRZinX:B'$KgXWFB*BMcJCORqf)U,#Pi5Li[45DIR-E<@u8LhX?7TFYE$E_,tiF#^Ft3CW!TH/.QmW]lBk%
%]*^:7$Oi:M8)0iZr<<bY&DLStHauR8^tft<0f#K'Q=FkUAks01IPHS0&WM)N>Y$"r>Wc!Cda8K\c3gfjd6eX9F',LFIp#]n#[1AP
%el]!`K;<`4@Uql,/]ZdepCmuf<=,Q3MSj`V"f#HKAJL)\bA=.Ghi"O%/-kjFMQqGn*_c6;W/42*B8smq:d>NC9oP%0WoY)QV]KQX
%3,RfN/ALhsElPqL'Mb,LLt9%WfZ^h567QGj..Y`tMkam`TZh<?asC].[4NJ;9@5er8;<R:HAV?Q(gAYW3Fu$!BY4*QU%#YPG$sjX
%Jor22H_%KB%d?\"K6,\G,6'&,K;PR^F*ip,EKAaHMJT5ijVPRBU]NXXoUB>G:2)Xr*5$/9V2I`tF@2"*Fq%5<0rUus`o^QQOC0`\
%eOCK:qQSru#-5?)'X0sIfhbO503BmfL.OlbF&!HPk2g$[:2]f5Y4;lGhm>'T+MODCfAhY=KJRP?MTDB(]H)ro+]fC)6Z0.Y%X5r[
%C^VtrC,lLmeZL@bln6@X#%PpB0sGb/>6Z]$WrmA0qd,,UO<1D=RDWJKq<)TF;\]\d--f,9`>#IBN/X^8jd<P2=JtAj8Z)thT#%SE
%oGDi/E4_9XZJa>2UtWs!YnYVR'dN<&4\/Dp8U%+0>K1c21G!G>4D,#Q+\"q#eT))dRr8@OrhVu6nqQGsH4g<5Mp5:G&$W,NotrtR
%pjSg+jUJID`1Y6b\*/shJNXJX;H4_%EJrB#+*T9SaG?j"NksN]2Dj1u%#;:tf?'R=RChkLAaTukadn]<R6/4&SMb0C%TbI\/Y[Q3
%LKNPBF%kA5c_@>B%Nl!)L@f2]K1nGZfa8paFU76\=N;OKO*(`[do_C-_)0`2`G2JI_)]OsMK,_u3BHo?b1I89l5f;j$JZgd6:`c%
%T%P[%lh$B0Nqe'p7aWBF6@,RS!fL(>+)-&PW%f?7Md&@[_r.%omX1sJ3<o5,`]>F"SR?2VK_0*-eR`d5qkd\UV2uauLu``?H9,uG
%<-*g!Fc/u+1L,^f*b%srEX_C0kn1aU^Fk*\fA-l"<tj$tPC=dr&`;m&9MpVBO<1EXm--fjleGlk<O(t8MiJdX"UN*&q,#U^9\`]c
%/8QQC4>?Ss6"^ehW%601aZ&[CFW1WHnTE,D1[\l^4[dM_dpDc`J(YQ.*:CT5MOa5q#3i896LK![Bt+?.EU)r3?e/Y0c2cs4jP?+a
%PC?rGcro_p)7_;GfE1T6:AlM-Lm9B9)CnfU@*umk#s0rJKf``IVda)^&MQ/a6Hku2<@u8L5)mX\:HdV+aVQ(CG_RBTI!c*%3hrio
%%.MNUEDA8<Sqe(*Auggc-/?jQ(Y9ln,lNmB!BB4QLWd3JTr$]_FCu$S_rc/>4!l&2>)]S3/TR*ZL]o[0q+:W^GK7lkpg-XLeI(p[
%JMiL5]qTK$#7D/HFbg)o[oZRp\lU$Za$WeC/s4_G"1G9?bd@&$JXNt'TN0I\L23NsCf<]JfqriE?;*oD/3"'lb;,X;?M;(+Xe&V,
%.tU(B/f>5U5O02[I!9?k&3OE2[Vo3gdSN_e3)]-[L6s%k#usB$d0'=Z><CkqMAC#kZ7sua<n5[e=GXNZTrR4A\EfD(OsK<_^=`M0
%OO<GtlKjn*m;TgbZK#MgH25m?c.il"m5gE+MTDA1F>0^^>uajZ]#?6C!-?1Ibaf8E/]Ze0(b.=3TLI_l0#))^rI=G3mE2l=\<d,R
%W.-5-N>'Dqn_:[!J&1e=ZE0#as$kFuJ=0ja<O'j%"%b1<OMn3ib/7P&XLKn5(=lCLL'<LCdYt;N`[^4NB;+Zl(7Wl)\%YpgXk9`C
%?*LTS:*pf9k$B*7aN;D3Ht!!5/f<\dYF7)P.];3BfI=e$50kW*2YTl/ib2HdbR_;.>lO2+jXg4+QW_:fadB!ss/_T6(EKF@>K%Q'
%'_=$]^p\JJ=aJ_3EDlj&RsOOD,Y#8Zfd`r2(Jq$FrubL$EFX-$M4C3</N(9$%J*;Ms4P1"e]=#*k.WcZQq1950i(2Qh<p87d>3W7
%Ub;m'd^ZM7h*b-(\8,&3.t3hEVT)D/^NDs#)`:@XHeg'ZeD2;XW4:r7hqu#gk+bMSBZ*:Vd^Oh:4jrVUI>?c_j%nJ_dL_ibDk]F<
%S9:0XJJ9&.==ftM_h4rLb%CLF<BQX@_&b[*MJUJ%P?'oBlAnF-h$*/T?[&Z'g*o28\/j^1_i-L5=&GSNcFQN[C4tU*4':;>N\S%P
%eA/?i%BE>WOhHbTFQMqJ)bYBCRNMd,:>L,1S".[-]!E"gh4\]?%^.c.CYGnR51Nl;?*O[^odT#02I1[nr2)+X>YXU!BEq#6g9n&a
%W[nfo#kViEgU6F8JKu/Ep^1?VVheBdjb79#S"NRUB"\j5IOu]/12Q^gr4(s4j=BZ2VEcddJ1aj!CLbV."G.><[Ol+U\38U-:uJ]p
%;rE/V!6J>T[L2l5gT5GXoEY1&*IH3^324$saLj/bi/R$CX5=WO#mZ8=;Y$Ni8K3/TCD1:#]bE;B?&3&hF'G;P<!5&p_i-L5=&GSN
%/p6>MnU>q*JBJI0pbohY#7"oA`DaP:reorG_Z#`$fme'nbE"9MefS0Srqu%jf_VYdYiTNTlT"3:37UZ=;X=br7Vg7fIO\^%8&&]Q
%qNF_Yd+-g4=-=X!R;r]JD<eqRX<>VH:F:mHbC\7E;5X]"/OgUp)Qof`X#FgRNLG34#IsF"`m=I`]cEWV[q![-l0Z6[lAnF-icW#7
%olf(gC:tXW2tu/]L98/f8(=Gs9AT%\ise5un=L0>,RGH:M?bA8E!\LSXR!3V[=fhM`W.FAK9qT[lK<n",Y:t),$O6FOJ^86o;UEE
%YpPHVZFRTLGnb>f.HQ]2K!tUO[OaL31Fgf9\`'T$9j?[6L1Y^=EnO$A/:m$5s8JWJ8huQ5XC?W.262$.9IB\Ub^VOTiB_C'm4"*O
%"_J-+@[cW0f[X[mMc!02+],\(1<]XugI*Mehj?l%rb%(XN&==28Y6nR29/<(4f%_B's`A4h"iM(/WgVSrVXh32=p-QP@PhoaYDkJ
%`=2'W\B+kV5c*2c6VL/>_'Cg?`V`\O<d+u8q7")ReBmI'cO.jB)gd;#rQh=WLeF$@"5,.4CoOWE=t2)WQ3serLK56m0/_VOVH'Lk
%,nNG'kmdf^J^j\I@fkPDf]YUHr9DnQCRm_4eb'7gXXO^B-3/H4[g5N5AAH(QV5lt(E2QKlS^X!M.;bNVU-:G>C0m%5kP]N&fg'l/
%n<Q("m[\8b\)#H<'t!:0O_qp[d[JT`e3r"k&>3n41K"+GEB23"%9(t;?:B;-39r28+Al7>&#i?$6R[!:q(_24WHL3<e%l'j/N?Op
%D/QapbReI;kiHFfm!#)'B`s%!__@"Wb]jlqWT1(,N#HGn)u#s6XM6rJ;89AOciHPd>e-]RDb)T'<C>J<c9U.NUltRE?_?GoObXgW
%Jj/jkHN12K1]I.Krq0XWhuER\s$aQ]0A7sE2chB<H(+^8p>=ofs8@HI2<Fp"_Nn,bD#S+HR.s+W0L/gE*;U]XNChg<.TfNk,spZ!
%Hj<t+%m#0T0sHcNcTXfLFMNBZR<e]bRQ%MT@hq+**!ORY\p-Cn<TXT5"6eJ!4BahibsUj<8%QGZP6$&6_>(+(NS.jaQGq^f;`pY=
%OEgo\!.'cQ\6PH!Kn:)5IN`*c/Psd9Cij;lP025$._VP61KEQD,Qh57<@F0[A1L>iFD`?k<t(hHR#SQ@TO-\@?8Wgl.e<eK!EEb&
%gh9JNk[M?0@&=Bo73i_6*fQ3K2ZCDIe,VZE,#9?GVu0:1'25:A5a)ZEOZ(@BnX6m'H,S$$Cl.&eIDelg*`45T5ZXLHA)?E9;:anT
%^OslWGIEFTR6;LqMc7\>D.L?7M$]RtO:@j[N7ruskUel%UV;#EkpSB*V0k0Jm7qGq/DY7Vo8*dA-]ef$dW9H&@p/@Fr!3ZE]P5^'
%#Z,!le@T+qF;LFm;h6=c'h*fthP)`XcOdDU6ssKpn1;NWa_^O:$,lDjJd3W5T"l/R7`QK9'+H;?/I'SY8*U'X]C;GX=m5Z9oICR/
%8*&tl<TXU8To6(3)a:(988LPdS`i"r"77=\<p%cJF0^\"q:oV_bS0c/Y!hHYEh]ZE'eM\+TSC';L=^oQ][2DUb]F_@l7+\h?J9%l
%bS/&%gi?J6::G&;,Ce[`j@,Z1kqKn)_jrN'Ou\+[)Gt!-0NI6AHpq*[cSqaOk=XD-](gGn[:F+_o"@_/%^JP/Ypf#p<TXTu!s0r6
%B'M+a9.KD)6f's5H$!qd?q_%l7"<g'\O;69JZl"EOo"3Z&44.)J,HN\1*.PYl,jQQ9R>R0R4_f.5;48P"L8&2G":^0jM2uZ5^TV;
%@r".HN.*\Ig9+:rDBG7-Glh?PlqPOGF/$<oQcSf6$I[0S&Rp_kk?McMHJN\IrP4*1'DRG;IK_mT0tlKY(dSJq(oG<q[*\EG]N!rY
%BaFZi.2%&b<R]#DI``XEA:jAk!@0aRJFUdXC/S=,aNkR+f'("NR4%KhMXmXV*%<kfEU?$C.uuE>Cun%OccR4B*M2i([GlU_5#Z$a
%^fN!)Bg4!(WT3N8^a_*t]b4N&Qmp+14/`r#90Q9cT"oQNm.c0M*9.K"r;%CI2CS,"))KZ50g5Qdb@@Qr'DP12n^F<(@H)$\5aMOQ
%!fNjFSrH<;**]h$\O;69JZmRgG=gsW`f_)`h&4SYak/+CkVD9;*X[@I5SpZ^7j_c<5T%9]7uihF/?0doP-s"V,8Q-KTteWqA;\G1
%p.A!L&VM-ih8+Zf*,qao<7LOF<+b4IXOaD$0NI6AI&3k@k$\aai5C'7JJ-a^kI):kPOp_B7_3<SC;kO]I%lK\JZmQ\Z-+0AI.Vf*
%"H4$Z@Lt8+Uh`p^WtsTHi%nBq$%/SPSAledF>tEE\NLQEPP-kF7QS8QP1C#5MT8\a-P-K$RPbT`1Z]3W!+f$lf=LCEjb4NHU12Zu
%=^7;knkS*n/M4_Z^_:[_4OR4^9YSI\H<+VdZ7,m8C;9&#WA79-.i%0J`5AHTqk4(!PKbc,`h_.\DO(0YR?n\.5T%9s_(g@u%hi0A
%L&p>\S"&`Lo&.o)O*7P#TYlDp'DP0mo*T7CoP>$"T,8<=BV\8hRESm\c(e/9@RB2`I*pBL]:\U$mLO_RFJ1FI/XTTeP7BtDps]7R
%6KST-!RfAZr-m"Bo2&HL%rFE9j%['L*\GY)i*``FF69VEjYdq+S0^Lr:=:dT%n:A.*QKOJ?pWQKH_l0-SWCsF<qtWrO's'ept$u-
%mD9ic]W?DY,!t>sK`4RKmKr'@(A([SXb2SGDs^3;6jsA(.d\-=0J?(_\_o!_*##.oXtJJofmkPT=V@4g[d@^=P"SVMd:S@ejo\On
%Sj4..M<bb6s3j=@C-]B=2-5lPAY55Z5#IreFe^P<5#Z$a^fO^/c]f*gQdW/?%3TpRn=,@RP,pC5>rgnfM(8#u69VO(&t\b_Zq+%i
%/0abA1M=pnjJWCWs1q[&-h*D0:6k\&eYEB%J/]WAQ.FO/Uu%F1o?2V<<TXU@!Har9VHC0nH<Nk7^67!^;&]7U2O7qmSie(4q9Y&W
%=R;`<(f,!<3hf:)*^tPPNV6=`TYtQ75H#:jQn%\1^?_sr@=H"@MFd(-=63KJ@usUqpm!L*E\BYUa&JHSnAVR^IBpqsHno(42(<M)
%F.-,4grnjlB1'udrC^+H-P5S).j+/AR\W)<4htt2jN/D<CGkd7&67ctI&3fP#n6F]6EE?N)a,lj`s"+!\PF;A)HilR;gATVWqgt#
%HnDN\;`m_%3W5V]elr:`PJ/]pCrN9j4f6@aJZgmdV^aL!\-a!A.3ld!RB+VN2OSu]:9[Of^kBoF#Qm]\5+,sg'*dso.hZVRa(4mT
%6G4+UR?2[q@/t3J-c7,sDD2&uR5;lohTKSejlZ^Z1/HgY5PMCRIN#jQaTg*"7Rb%VTW,'8D">ReITaB7rkO32'*n^8hLL!-\U0Ie
%Os<$Nk">8Zgp8`;Vt3&\#84tG^fMF8dM"9egHN2*I"^.$Im7H2^GN.o*gi%7!b$U1gKjI&(9X0%]'=Lu7?M4m2OdRl,u:BYL_+h5
%?YO00YsC>kF_(HXKL/ErM:FUt1>A=I;NRFn#:<uQ5T%:TJPa6P\f(VSn;1*/X#@+TAsGN30Rt6)3A;WJ"N#[i6XsBiZ;*jVW?J5u
%b@9U#XE#'dq>n0$&UD/uq5H+""kh_XlDoM.2HW'\'9@B&gJI,i+nGiRJ.hY#^eRfF:dU;lE]0RFa,HXQ_k<\YZm-5>:EU)($h5(c
%6Y37>I2X@hcuhb&`[l.+'F^YVn3DZJ'DT^gNNX@lkug4\,#W@HRRWoCMJ\:E21R:m1/B#$i6A%1b>mZN?RUb"+,^RO_W-3u`gR%s
%b;4DK%&uDV1@AG.JjOSj;BLA$n!Q9Vk2qUp:EWZ(BCZPb/&-&a+bonW>UZ1]IY<]M;O^a%oJkoC4\7>_#&+;NMD;Whi/KETh$QVS
%S:<G/OZ2NrD/=B`OEgn9J2R[?KEhD/kVcgJC\'QjA8CcYRRoSK001uX!#mW\<+Elf9tjAg%G3_B(,Y0?BCZPb48Ug<AA<:0(k:RS
%rf5_$oC?s<^]2YSg]<&iS+e"K3YA4+bP2LA+bRE8r[^`@c=bb%S550V9Ts`'?Z^%s.u>$s'1Vaj#F;[F4m:mf13kQTc^B+L<=V]d
%GlhD>$!@[p8Ef/.0^>-TD<J5:8UkG8_:_fG0NI07KD(ecN`2hreG3/<\&9ljg-(a>PtC9*J1@o.F,216"MXG*#MPV9AmH4cb8^X1
%Z+QG%=dV=:=UuToC@lcunH;1,k0&6f+%O+[1XtSYalFUg:0M&r^gaWSqh&T<:EU(-]ocOr#6FR2m0YK5O$YI=Dgr">jeq87i.d(g
%L:\E/jE@YE)jO"kkDXG^/*\f_jp?\AI$<TpCIh4#T6D_hQWu]M9HH'@m?dK&_7i$qGJKl?7l\Ah$b*8Lh1a`5TF!>_hh3aVHgLGh
%l[\]fRD]aEp%!c-V[["p<qZ#+auWrZF.6;"5DUZW"MXZR;A%]=hOLe\H&/j/<LKr'?e1u=JcQsjaZP,.J:A'Gq(=9:0[unHn5e[8
%b]bZ,0MU[9KE9kB;^[nL_0o&cd^c5g&fB\<53Xm/QcWg-bS(6ape$'CA\N_E^9G*(dm!tR%p;!/ZgQ16g];clM90R5`Kb&c=b6bl
%>1(Z]8]o:^f*Tl:R`lEN"#:sfmI]+.=8fqUhnp##`%>44qD0.jFdX`MJ3gg&$UufjiJ79La,ii*2"R-Vg,2hHg/7]>1l3ULQ/@t4
%R@sPHONl()LNSd5F;#@5r4D94W>t%cqF`Yr#7S3*SGH9/nfLNWCBWX'o`,6fbM-h#JC'n`3kJ^aITI5Z<H$)ub1r^ZqN?n5PBd4<
%5blRjWRJ/YqHHC<q(Y;'`h^`CncoT=0Bt;9o)ueUbN*:R_*Z!fUKi@-R4=fMgL:qhQp%/M4CHMffBMq?r:X.,2LeX:[g8Bcjd:Ij
%8N_Rmp3gS!Kbisolm/1MoG3CrKW=WJG+"G;!au(a7taZVVrB^mnY+Hebjf3r0arKUi^C?$]NOn.@=SdS8N-B3J&gnH1#0+`D@(uh
%r()II"85=tkO=/o45pIr4T+AcMbJTVrRmS-RF.E'\kL1-JM9@GZ.l;8'O3,!`3o14.Z[5-X7(R8cXD.ZD:l>J^[d4H)Bs*"APCn*
%#lSeBen7>3$%r>LO!&grHVMd=OB?s*l.MGP"u&'Z4F:J5`SGUN(Lmk\5=IQf_T<#G4YS/Tf&=i?h2WuSM"1ca1/B#$i4+>Wq@0-*
%D@bt;jI_FAK[2[=1-M7tB".PEcn6+ooHYRfe/,h1ZPP^'YV9_^4LE;F_*/GT:E]9gIcc%9_g+3>NGmb4VG:XXlS&^j,spZ!KRQ,U
%ao+!Y`-X#EHHX<5rTZ,=nGVT8'/EAA.t(\EM5/t)7190%_=EY8lUI\([+i;P\>C;Z&l0Y"bCd\q0(nZ?QDIX%CeO`kalRJP`hiYE
%#QsjZjW<N'$0\RT6c4'7<oQ0\(V,.5j[%f*KC1fN^9g&=]J_4C[^EeR[d4Xef(L3T`@/W:Z9(2ON[k_L"mnmY859UW)mbBRY6,,=
%pu+"Po)up\a:F@*+9upp!'iU/V'2'XE>TPt^cQ_-_%-:N+:R2a1kb2Z.5E%;$$UD&D#>u!h*r=>&oq@a4"03B0E>$WOK/Il5gAfI
%P3rOH9H41g!LVDB-=i]5(i]'mY<BtT0auu?_;0)hk3?F-5FIUY!ak3[kSlf_Ks:YeG/E4>TGnhK'(tJB^g(?QK4Z_ArTHXXoM),"
%99@sB]*i2oe_+[E\kL1-JM7)[NRGFXJP&`maf>Ef`iP>2eT"=[TZ`#4'*n]e2<Z))4TAH6p-Cf$q/"9djO)1UF.&,8!oIk5]B&'a
%(i]'Kc;ZIo\;`KWB_lT!nE)JLo)ucEoCsLK5.6<W4\M$18c6aiXO0ci')Xf'`HYo[jp?\A0o#DN!Yj6lD6MQ%Xt=V9.FJ<>B`S`t
%!PGUuE:-.K!$Js,=%rb3+tq7*n0X@"bIhH5oKX69Dd<da#La27am8TF7U3962f@"6R3M3P6+^Aph62<MEH,Z1X\,./"o?o.7@)Z$
%*MCRiOTu<KjctNpG:2=.U(S3ZY,5iAQKa%YZ@VL1KZFi%b,6!f?-gp%V>DVDj3jod=dJJO)<Z6T?;($:5T#S8IO^&C;8R*;-#!dn
%3)[cO4KeZ";e;Oc(r2UC$'-*(a=nao\'3NQ+3q2JLB6MF@HA#oMEHI:05mBQAI_=ad<qo\\FO=AD8A]Q,>[DA0W::_q<kQ9%(bnd
%T9S6@HWK:U?@/u/*h^PQR4%K0a4[T^knmSW5>>l;nne2G7/[b-[Wb"#a,>8.fK]Y:cn=u<5AAO:BZ;%gK:Z>C&QJlOO/Xm1+:Leg
%ak\P<c(L[^FJO3!8i)Cf(lbk90]ee#^,-RJ^nA.NIR\[fGUYb?m*u^1:W7T@O3da'p]lHQI)G"D]2Je"pXa6?pIB/<-2mc"57j(=
%R?kP;Hii?;0#IOcomP^Fk"i*Di%*^9-.g+7*Wo%dFT"O[CXi$YUG9CI=2J$\nX];);+7'AkSL_f^6dN-%RYF0$g&^tV?<R!9aT:"
%p_$Tf$&!ai05rRs>o@$#]>JC-e[;4s>TJVR;e;Oc(kD&,ros8;?7FUsQg%\1gUrQA.P=RESj97;/q0#=MT66"6+:2a-1EgZ.c<KR
%O/N*j(j&D8^MheV$K^LLf.p8SPNom+WTa7$;e;Q9(ZRP`RGVNc1@*!ZF&]&hSbL:%CgG*\<#WPnnp)_RJA(91IT(D/7taOcE?:GK
%5MP*<BE!&arZ5!LSj4-SjDr9fS%iAs.T&8+<Nq3rbT:C":SW0V-`5$KJM<b<ZWh91PujuU80bA_9F8T&G^<8CEQQ@L9U0l)@0#`i
%gfm%ZT6^On>G0j?`;F>#%gW8TH&&9=qn"OISt<N-6*]/t/'MFPX^BJ;XtIqbWA76l%-[Uo7[9=bTtbfBWGiJ@H0!KJC_I-r+7Nqn
%mXW"AQ-8L/Rqd8K.]-LK&i\XR:H0GPRs#$iHG8Kqn6WAnXPcDaG/qj3;'pS[VB)"kHT[R<!hiql/fj_hVisd&[sn0<`InS:9j^d@
%+Lg]eGq/7c69-Z5hN\1JKaRIIr5eb4rW/_*PpfQ3/Xo$bYeL%R8u)T8RM0J#=3E]Q6ln$qk>TN><O5H@VgZ*F5mM6Q;Va3m5I@2m
%a+VM9p+A/E9nsOiM65QRs6/:*fh,nMYY8gnM`<haGJN'X@_&O%E!G+umq)Eq1Xqd::&^'M1/Hi?:+SU6!8PP&$JGs)*9&]&%/>?,
%+Q!og?0tYpndVM((1a\08R[R'mo`"hO/Xm1+:P4>*5q'1iALf!>uC/bohks'p9=JI["CK4Qn%\1_>r?o>ia.I(]\OJQ'Jn*eKYiE
%jht,d-P-K(^/k92c/9LTgj&@NiW;:3DbT`%Rn[]^KmFlAa:n?kQd1B2#u>jr9'H]2V%3S>PY%ICDAoaPaCVBq'*n\,kH7\CR1gEF
%rn6qpQ+=L!jY*?c4Ftk?DduHMH7MX^SY9`K&2^2"dgtLQ:HG!08,-YqbS(6an@d4U/o7:9PcmCi%&o^!@;b>hU7[al<1,*F#1UG@
%IHG%pcjpQ:hENNQ]ZV5<`MeoBhmlF:4CHNR+3%;;X\F!Vn8s\C\Bi=Q&uGg]@$diJ:Z/k0F[]WHJ-#U8X'RC4cRR.]`FR80*`HXA
%^iu@;7UHZ%e/kdN*jo`_.f^Uo=-g,?WQjD$]E8AgU%)'SFNb@FB<'epIH*3-B4Z6+?e:-/ML/$^GlhCSgrhhY0"S_phV2r1:FV@9
%Sn/G4HBMX,aub/N%d0#CoXh3dj[K%u>#OJu=&no>4f6@aJM<b(,bK`Mr0>htn=,m4B#N6?)e!/*-XpC%IKtOPIdZAh]3q+%JTfl:
%\p`;8q%nZmKQD4QWVX3q2NB2*)fb.Mb]Ul"@aNE0@M,+`>fB2L^:#;8l-cVN-F:n?!BQDOkV==Q"MU8Z/q*dLa`[Gr5T!moaJ<Lh
%e;/NUTkOj[6qBFk:s[`C&O&6Z<:p6l]Sl>sbeAJI[%&1t9ZT>I0L23r9(LaRoI%/i\`aR+]Y7pD)DI3WGmE]lk#FIMX:IGuSJ^[U
%T.jka1)]IT-=i^`GFM]u]\Wqs!7Hd/fmZ,8pKSYSIhEpq"@Bk^)'`b<p=%4.MmPdV=GIOC]d,-\,kZs;c\J1gk4a$'*:0GuCh8cD
%@?-Yn]U*WG.HiN1o)up\hYEEs>U]dX3kt#<`6JdF1"R//VC<XSRI"Bj(ORs@7XbN'p=C%,p*5l`r%\KuMgRGF/baDO'IrR]\kL1-
%JM840ho^[b4B>>D_QG9rb85%Y)j<0X65SI-?.4oBR3rOMa@Es'5\`$$Wg+,tY4\,7g>hS.s2CY#mj2S9DKg\Q^<;Ra<O;6=hFg=j
%0)]S[JI%)[&F/Y0jA?TUm;p#6cEYL(2lGpoAsssL#JpK:b/[R\EW+b@hpD2p&s6hgh+J+T`Y\%4+RahH2;a%Rkg"MaZ7DJ$%har*
%*='eH],49&2'&*)#2(%'"7Sb!A^HG.e$lT(1?DqFS]1hSM/a$:*r'VoHX(1<UgR>S4_*?lN,'*;bD^M^otYc8gVL4Di82$D&p+@3
%qY"`4A$3QLh8+F[RHlNbJ7sd=34BP;T/.pP[jI]+fbRB?ic:A'Vs!;q0Ha;cK(+$@WZTm_'+;85:1BF-s)_;.#KU2JLcf(l%So42
%QWe0f$Z4Qke=5&:F'Z*8duejAOEgn9J@sf$m,BsE?i[u)8"@\;9>K/W5Q<#rj9^KgH#dM8r]AX-BiGZ<k3!+p&'V0OIkbX"$\8WH
%f4:Sha!R)2$OiYe\ZQio:!:(@a?5$WN&c+oQ];0Kl^JX5bEm%h[Z0Ye`OeNo4FtjDU/uVd\EQ_\6[re5rYE+>jq?e"b^dlibS(6a
%,!WIln=%i1aTFr?T$t2(lSdY@],[6#GlhD>lLM=W1'2&M)`Ye$]+k^[DXJ!AC3s?CAH[+jGB5cr]VPo:b*D'9\2neg:?Dhj1T'0r
%?areN4Fut`FO41mY2pN*<6B!\=S"0]pLJa@f1b3b9ZT>I0VHB3/X'DD:=pu3-*`cDR`mhA>NB>m_1^#G#QsLJkK(^<gslBeOgg"j
%P<!.?RAb(]&:">NT:`&i]Hkr:OEQ[.QC5sj5F[ke9/mP-ncZZ^ia)Hd/%mfX_]WO]08Z(lrO$9JesXR[[(e%2R:-s;*=rE_FJ(5"
%\=TZ8*JS6[0_.o$=kCJ1UQA-%a:ejX(`]\i'Il-NXhfZFf;KoBkVB>Q'QQGUJ-"hr-A2C"e'cmgUs7u>gcUNI0([eGQ4F6'0]7Uq
%+t>W_/4lARXIJfq;3&O&b=puI0E;4#-!)Y8J/XM1QsYt1bOW?#)<EhOa?5#-!/&1V;]>@OetQR-H4ds?5'er)%6=j,9ZT>In)j?1
%/HBan(Vm]fi8V8j]`gUX]/`(,&sX.7f9k!RC\2=)Nm#)DNq!/-c1/?1EN%%W/KDWpP@_sL4_8bV*9OYf6OjA(pfSF4Bf_QP/%tUr
%Msn`*Uco`==]6UoVh?9.1/B#$5bd=CE`,mYI:0<;RfkFg''*0_`arI4-fon5+QY6%<R7aO<KJQ3VuhK$9:Fr%BTVm5?8EtlJP_sh
%*Zr,!DEgBUi)Z#/&)OUd>N:[I*$ur&5cC$jMd?D6gYqDIo+iU.0`/75f0q:^YU%<\Qn%\1_LPel?A$kAdHM82HAPbKW>^m7n20l3
%%[K5`mLWCX$&&.ELJ@U+>J6T"T#GS57^b>4.?f42l1P2MLaqru6N;I(4NeX_UkkUXArp3(B)>^3QFX&l7a3!$9U0l)@6g_X)Z2L?
%:=]EYiVQi+YV=[O4`[c14>Bju$%1]Sh=C2W^%D&spH>>Pbo?t5l`qj_<u@i!4I(-+hTapr+%=W:TC0+sn4be,X.@IG5KEDu>UF!Q
%^isq2W)r%jQ&kS4.X.o)>-6_OPpOmo^6Q`<R3rOMUk[3I?_rMYa@F]3\"WqW8BlWYcfRo#M'il"o,ZqJM*\m?>%-DNA\Pl;R<Q)P
%%682M.nh!_AY).(J5HW6X2'8&cU;]6KJL$(_t$hL;e;Oc(f4o[-,6eBe.$;?m?piW;<N7:;V\DOqT-'+1KEQDKE3jZdC56WXU`)U
%J'#2Y]f9T[H2%&T"T1#Tjp?\A2DEDO([l230:RPn!@(uY,2At=TZ:$"-P-L'@&Hdb_Z1*g@>V4Q8\(22igW/g.e3_VE;+87)0aG-
%R2`?4Ds7ZA\%G5N#jCbWhuSIJ)47@,i`/g(6<coEHLXk]R<?NHX.ojFA#d`dpo^4F^utW>O0@f6hfL\Z<!i%#o.p?6;s,l8jp?\A
%157YiB[\*ff$TM@pf\_K*M,VqVbY#\:Z\._GPZSLFjK_Z+)IWQlOA(+bPS:3%g9:o:-gXA2>o@*b@pOL%lkMkPj:4_EodGrQn%\1
%^8l`Bn9!Pgo3/`dC?E`ST&:IMg?a!%"[/a*4Fo2Z;+TR=V)22ud$UP#S6q7`lO"`iVW6,Jc%hrm12O'EcIT+3[l%DejrRV%5u`so
%&GeIq,WkM'`sG:f;6AE<!7M]O=;:XDWlu.O_Qi.JG5ND-O&"g"1aOuLX#EYHr/RoNPSqDgR1OYZTUjr:+S=sT["hb5U35t6YeK<R
%"c'#X%iBE[o;-f_GBp*-Dbt"_9j`!"d:7&gmsm)7?$%?2i3hJpU.Pq]VtLe(.ru*`Mh3!KAY).ETX+kY^54]>pE7_Qg\g_t8=s2#
%m'jG\hNnP2#7T<4$V-hBNUt%.^!Qa>IOgIC]TR(p7p>E*;gB`eQ1l]A8]]#"*l,L#/!W-EcSQ0'R`Xs4<1,-'>s6>]o0a#i.U>Qb
%6%Mbpk'O7(ac#ccAZErfpoYZL_]+Ui!8nbE0>?V.W>Fafb>alW&-hXYc)K+;KVMh\b;7B_Qg!a]``uSD$asf[6kstKTqC3d-G/X?
%o@aqTh3Hg1C&oc\cdR7'B>T(oauk5.>Y5kIRuAJ#5eH1243*e:jr\5:ac_f.;e;Oc(_G%Mll0WF:TOD8D"+kdTOL`?G[(4J@Si%=
%Of%4Q<4<:M6g/V/PdrC-="Whp<TXU@!A_t"(m$B"C))X=GrG^jWlP#lhuft[1+Lj8rK%'XX9"/802e3KJGmhpMgJ-_GlhE)7.lN\
%FN+b2_Z548R8iSls3Kr-/ckm*WA76l%$7Fe`rLY%=H!2\"!f8Z14K`-J1s7dgK(co&7FBZ/+\GG%hPnFa&JHS&-dqd3ndK(_//2W
%8C,$Bh(eMSf<p#!B-!Sd4((koLNId<q@;K2IA\8UF."'$*8e;[B)\mP<1,*F#/DD<5JS>2mi%edrW/b'a8G`55N"%ZrC(oBV+)[i
%f"0Rk?U>B<Z09Z*`h]7_"e0:(ggdA.'*n]W7E;b@f*SYb"kREfR7gLP47;]sV\2duWop/ZFioY%5Y4+GJkmhXqmHi6qI)!$CKB"t
%Wlu+^"!jkmkRpeB%r=t*oU1,p3>FU:d8*Gl4CHO-kjEnOD>G@>'0jB"8J.HAPt@[_:&dqGHVB]M!b&m3&Bi)oJ@enaIgjE2pXj'V
%)"7Q75`'T%J3(^+m/m?50:>.<;ZCNjCJB"]qb39#!b$U1XgbTp6*uN@,r%;J(1hC,pe?Zn9U0l)eH#-KLHcm@1k;dB?GfhjrkuA:
%X<"$-4Fp<>ca\o@i07fJc"UI4f,;FTo-`*XEK@(S:EU'r[lqS7I?1^3lFtC/3h:M,DHg8fZhBb9o)uo1\Ako!,$GfLoI:-)/]C16
%pu(0KkdP\#'_dtEo)uc_iRld&kRB($+R14+=u^$)0dam:Q;kH'\AqR:-P-L7kWD@d35?pcPC;3*,Qhis\9/_ZQn%\1WW@2l)u#>H
%Cd/faKD`"u7]Vk0W>"!_b$0dN9U0l)@0"=1ocoE:*meiKLtbFEs$9mS64\`q%/IjT@#a0Y.NQ=e(*c_k_e,TH#Bu48OTu<K0oG/A
%VTmV#^i%V^1F@g&Mo58o;e;Oc(f9u:MFQ>`KBhVOH>=KZH$d=Sfc$J3&eC?ZV\9LBhZYGOdOl[0ZL1bbZ#'`j4]<jQU.RP!:g`Z!
%^I^'/o.^*':Keh]2(&:q.@>PmlQ/u9Sj4,8^4'DN5<:+<,ZqNY9o8Msp\*Y64$47&^n;X\INAM>[_9/K@%I;_)APqAGB)ph-=i]5
%(][o-O#B_`ofKoZ6b/A'>HKG+=Mn<8BKJo/4Fq5I^%:mNr1+puq.Wl<rj71Dl,<Mq"[:ip'A^WgPEB8_(T=cqKgtp9Cd9ji?e08o
%T1m<gJM83W*Yd&,&5RJ/^I*afBR\cJp;I.#fTkST+nGiRJB73J&70A09;>F#"_%Sn]u_OD520$Yq-9K:KZk)8"-B(IRmV2E_r.=@
%8Ann-KZRKJ%=KRI*%#3f5W(e^55S+u8bep4[G9.*'E#i)ItA1:"#@U98<5)`In%`MDYW.L\*bI)^cW\!*AFEEo[)JZ![Is$n(O/p
%#XI.1g6&q+!"K8:&8TW&Nb47]O<XVGIQi:1fu.W6L!,.n'*n[Y5GpuaU/YoZ`fFV+_W%"K+.*a;::D.7bCn(QW!5f"Od7O,*=kZY
%Re30:ae[J'AFUuJ$^[8n(<-Gb!29o`\U[,Q7P"<P=Gf:a5+2&n8*g0\/6jN4Sj4-C)(.""85cZef><>lnNjb3/KQVu5)9<Ts&rnA
%qW9X8_&1!#]=.BC0"X)T=Q)"Yo)u&o15jLLhb:f/(NkRBN-OfrNdr`\6ln$qa(.!aJ-Y=C(,'CF@SGpt7li[53D@LVJM=kdL?SnR
%SUm(`hIJ5F5DgonFI?i_K,bF,@*O8R<g2gh"B<BB;ls%c*);!nX8r=49G)Qc<4g?r_sJFlcI>c'+eb4@S'3e^I<3*=AO>McKE3jY
%`$GYWJ^N-TSFSMn4nfLc9Z,>:a,;_Ul<mFokWLJ?\O*O'&$RT@\hWY6pJY$7q(J'@R3rOM?ri*,gn,lYZ/nb.F31dc<2!GHLDcGh
%hZ;7-M04P]XkVG4O:IjMX+DY:Cft6WCE+[3Sj4-C?mdSU&"OuB,uEl+RbFCXHPu$(ZuLqBR=-%dq@T4DiV74rs,BE<Cq'AG+L\h1
%E(2`<'-^3poQPc,Q9UEjqY(@\?ld_4Ctn1R(Gfs(rs)L*ph</;+4U@?_i]BSqh2b#HXJ/s-QO8hS\S<=frMLV;u<<I=smg_[3&7?
%\W=tBp'q?1A?e3KP7ML\P-92W.*>bXC]TpDMp''1`Dh!Cgh@J[<-:jfXiS7@)fonr+m"1b+n>b&5LNu)Cs(?&Yr)9LVFPLIAP^c[
%VfA,dGlhCSEbnT(KE6qB"8N/'>*b,:a[B@3nVD1#PRe&m3@#ISGclaHJ9c,SNS-3+1P^?g6KSSR"8E0dSt2>7(Mq>9)fa+W#@18P
%R;r(/?OYX#&^`4N?2H',9U_1.&s(^4iu1`S9ZT>I0VIteiq0i^COR<EpZ./Cf/*je7+QNjMT>l(m0Ks.'gOp/-<oKXLhh`d$)YF)
%83DI'?372N"BAfSONR,+4<(WPos>T0\P1(,JM9?d3'*ih5Q7/$o5!-]]KO'$q7I4M!Y6,iA't]gfB`>W,=c(^IQT=MinstD?"Va#
%h?R!^A9nVGe>n&7dZQCFij,2.oZLe-1.C7)HY%6:>SNKT[n9WFs(]HN0pg]Y'M$9@k;'q1n2_[#O9mOq<snocF6<;[-uIY\5p&t*
%4q5pMQn"E$.*.dWRKZr;<Q8:M>.,d>1*Q5l_>m8J@2\[;/040#!b8BI"^@12R:.!)*=rE#IX726_A[:A!RdAj*ilS<!4-RGAW#Tj
%KZk+.#"W9KM*n?K#e6`>N4C;O&B)+Qa?5#-5XI2Y%aZkMIZfG1<aJpL\/NA44NKTl:lQmiq?Qb1d'"CPFK+NT)R%H(>&+E,0JE$I
%57gd=VPEN9[jgL1233qe="0,3kOSQ[hcqL=Sj5.uii`s"d(@J9J-KRCM\pH[kPRW!`"NFLM!-I2L7fS1]^ocGQ6i;?d@8=4bS(6a
%DXkTID<SO\2.$TQ>Q+CUW93@bR+F7gHpBQ^n\2#=H@(l6^LcI4=0QFj=LR]6TZb"!?f`)Vp7=;=6n&6)o]Lq?,/),W:J>Ag8%#>I
%Z6@+s6KST%AU6d3o,@$>DNne36;peEY8aglBID'SV*fpW'<(aRTh1"sE4rD,)sk*RA$/t*1m=79'/E?+$p[E`p/aUGYdeoj7P'JD
%@7tVn;a_Z\BTF=2>>R-VopeV.Z@k\PdtpZ*AU?g94FsN(r%D30eLX@WM2`__F7+uiQS]d)WkOKea?5#-!+@2I+i&W(o?L$0(phkV
%D@r\fK>\GucC5:sH9f"&rbpMoIo-1Xk+D\PYQ'K:Y:`WN*o7em,eI[+_j-^F7dr\O#:+@6p4%rBFRHK2!t4*`i34pO*od0il&@ef
%W>u@uX'FfaY`h$gP)\Q)k4('N3nqPC2r.V&-IL5o/h-S:7iFrXm;l$C?u?VA,%^!EOY._cbi;"I!Fsr6R,$`;DgCQ<P`s--a2aYu
%cA_<+:*t71f_uS!(FEG&k;--##p]Udb.8fh(`uI(;L=iOmm&!)pbE729K\c]@$G:?%SXr+JS[UO-^7i8:iPSaUs$$c/X6c>,oDhX
%:'mjCNFITG^h#jp#p]W:>ZW5A[M33f@\d3;C2<`O2e9QKP?^Bn3f:9`9T"0jQ$EGaJ4bkIp4:[;I<+jWUruL^h*E&.?8CXr9Y0[u
%:0is\f5Q(39ZT>IYNWQ9C@/kkFL-<*kt)WDB:/Ll>I:gnkq^R8-5AUOP^$T9bS*MOoH<Ohq5J/:!5Ak(B%p0YHSoatl'2nq978no
%"&id&^fPV8LABdc1dL$sr+WOJ$:Yrq'n5'-<ga%?5#DJ)YSVWLrgoXDg`"&P)hFdTGsk0Vf-g0eqmNh&V7Wl?b[`Yp\DRa#f,,*?
%Si<mn0%ZQS4KhajLs=dMZ=`Zao;Ye,Hpn]Ug6'ETP<6F0M\:st1O6n[&?F#K\*R*.bP0?[9U0l)?dZi:<oq7-GqqNioQ8k7A9.p5
%R4l0ZKZ*l+<1,+q%>]$\m"k!VE#8QLU,QXV?uj"]X>/sY54T`GV4c"bbS0c//lX!Os2YCD\Y+kXl4stQ:1g!K[jrrl1*Q5lZ2q<]
%G1\UJW%gU])h2:O5ESI+N-Zp/d7.04j2[2acss*"'DP12mm+Q7G"HYX!Hb\Yr5td9c((Xcdus[BZJ6hj1KEQDHpuXe`^_a1ITk9b
%&0Y;q+gDgD(mA4'Jiq[c(%dkCo)u?"FS'qhBu>T"7k_R_6!S=`G(dZ0JJ-G;`-(%#\^,rM"85>]GsN`Hl9`Q#"mgjgmVlo0W%etQ
%4ip_R'_dtEo)ud*<F/NG>VB@h=?FWeEWt+>3/Q;bL0CjkkS$DE!ILZ;UH_\&9'pbXcU1a;r\J.dq+2s?bC0rNkq=AoT"oQN.D7`n
%CBm4h,ssG27/^f6V+k]%YtMJE-=i^`=";B8;\!+$X(MMa^kd>aT9U9CfL4_5p(WRe1/HgYQ0"'`n?.hbL*d33(9>d")j:]W#N\<N
%css*"'DP12.D!d_QM]0757TPICBa+Ui5NY3Y>HYSV*(&94((n?.i["!.WK.iQ+uKTDA7J!AgD"2S'+0b"UUg#1/HgYXj$[o1]?04
%$k'GersmgVQbGFf`)4ocn`c&,6tq\gOU(6<Re"&Lka#^@`8*AI/ps[k\5b1]T$/g29VPFT'K@cio)ud*eIdefmulcI+Z9>p-^!'Y
%7Xec$BbN&'nt@Mr1*Q5l^/A*/1m;A0_Ngag+()->(<_d+4r\QfqYK8a\0[2Y?p`u^KE:jZL4>BUpf!.*!t%85nnc6kq5s,#Llci_
%?YO;i5U;D!N1Z,@ogutN:Pq:SZcT6YBNEt+E*u#p$%/SL_g)NH8%nbdAr'Wd\*0q!P??p41fQ!0:mVHE-P5S=#!]u.MDo3X<`#NV
%B-ZF+<2euD7m7Lt:Z..sVSFA(e;PVCYpbq;\b&q!8M&ona%cbP;d,JO0Lb%'H_m=tkLVpqmm2c>=IOQYXg]6CAm)^PI3pQ[1/B#$
%i-VQr2)@L.J:Jfa;j,JLV!hA,eV^kOdUulBg#I[fZo-anSM*#PNP,n.ah'/Np=:1(NCg9EKps*H*!bu$.e<e[!5;Qj%(l3+X^M4e
%W^^HUT"6j-c$4R1=%n)u<TXU8V7$-`L(T\L@ScXRnsUHp>dIcd0uTmnB"@QXB0tY[K6D]+.pqoi/WM!9F&";\D,kZmd$R1KeB8kB
%rema2:Z*`t>ll<+7W=TmFo]0\9l1WpGrK?FjFM0T.Z/RHQ$EF<W@VDM:&#HClRBC=1riI/<@i&+OhP6eJk7%7rTl.6-([B#06DJ(
%iC,]bVG"a0hN34f-IlHV(al5NmWnGm.e<eWdan>f8>blYcU"HODsYlTV0U%6fe!:tbmMg/AkP%n+:R1tQ1>3Vl\-31"gtcKG<n=&
%1"YlorQ0`:'DQH02I.DNMu-:1!kMI%`+Iit3gkDa>3qSuR?2[q@0!l#4a_pH@$F@sOOBE1,hRn"oHY:PZLmMGJI._l&-hV;g4WhE
%6obYU8G?t0R;4SBJSj^jr#X%4#a$M(Q![`r'!<sO7GRd2P.^FnIDqD\Idd52-=i]5(dLlA'-+7lI&OgEQ;$SH?2#'OO"TP-Xfp+[
%F?WL]q9UXOS2b_6dEde.Ga-tqE!1Ht%Qg)CSaH-'nlnoq-=i]5(r1'&ZX(-_N`'S54XnqGf&b`0Ulc?)5e7YOR?2[q?YS[g\%1TN
%%*'1p+Q_5=H3k4R)WL,**+P!M_]-i-ct,Q+$%r?WW$L?2mYjb[X$;ZG@tN7;/X&abJn"q\SC`JPhdJk6$%/SW0=n'BnDPO`pK%O?
%gVEgfaW08?N:q="P]\r>+nGiRJC/r3+nsBL0C=GR0P'FP3G[4JP@lW+)`A,_pTIl"aZP,.i4`mp\C:7OCOhml)'`X<6G0KiWb]ua
%(+K7!<07FPQ/=W#Z9*1Ia:JBL-6NW6C53BmHdo/'Pg/?t[R2m.-P5PNm0+WBgo?k\+A(XJ:^8i.SWW"P\cr!%<1FIb04eUr&]#d[
%$6"4.U?EE=['I]mWdC9MD=44-,``1E54m"dReZB"-RTEXrh`o8bh7C26<->Jh/JU;`^Y9la^ppb'*n[iho3u7.8Cs13`nmdXG`r(
%psI5pLETj9Y+7cbLM.l-i%'e7n^YV]&%W9*%>Q-K>t7;`)uPr2cf*p-UE#oL1mo^&#4RsRGe%heg+XYu+W9Q<F3JM_#,GgP0D`4@
%9Ts`'@6il=X/KTI*HC>/@]o(e4`r]c1AM`bec;)-*289PJZo"(JIdh7&a*H`Jsfr.`t+Xq**HjY_pYq#P++nV[)Y"k-P-Jm^6+3?
%L*a#3Bd@kF@PBSk#pP:#6Si#_kqYuq$%r>=?Zd3qY54=_r&KtnW9[!sA<0;`S5NA6@@GCRpr]ebXdscD=s,6'I`>ZCQh>uLg9;(9
%A=c%'?nHFg*.8k4n,u3iCW2EJAWd'c2k*[rjr7,[VTCrOn'^)"f/YM5bMT[NH:XS_R=,olRIdLq4%pB7^g?i=0>9Z*XQoQ`F-OF2
%W4>XFjQ\\+l)hoFVTCrO0S%1_qH[RKl2M`7@g@FdG=>Msa^30EgN@3*0MU[9KE7'Vp2t[QcL_4NB,=SmO*>APVj0Z:W?Ml*/&1_q
%QNHh(c3p\N/%-\Gj=^$T6lta&;/*JsS"2^>M*-@9T6OFUVdiepl/rQ%'1RL&X%`B@\T>W<7#TMHdq#%8(f2mDrPhEnN51t%<\2rR
%Odj+/lfmc-HUO'B!hm@"aY^jJ&t_O>V_uM3&l[pVh2STj'VB%_:Z*`d/RH4#p>k?erJRJkLkQconoVWgoZ.QhH;#'!^n<j^76^mW
%=E()g1kO+0CH+4EA8`jVq3`7k.e8*U4%?b)@ft4>>+)1+U?UC;1.f0=4nM2-M"Y8GbS0d246(C-4c>6<"r'X#OBD,5-F6KdO1m'W
%Hc9Vajp?\AM3!el/27/68DI-XH_$0F7NAa*O7o7LFI<\c!oNB,UZ[8kp!"3Ad]o&\[\RLJ^nbUX_XEiR1*Q5l_>s#JA/Od2K`UON
%P1UN]]1aP721F:]%FAZugR[Y^YB77ha"7PAR0GRB.S/MU%f/sJ]etg5#GYo85$I2,+nGiRJBWfJ3].N;?cuG8b%5`2!,Tl$2QPIu
%kn,*/"@@O51GXp8lIRMn[t/_nDAgNgSUI(31X,sYMa9@9ap9VA3BOSMX@l>Fk,<YY2Q3n(F'q>s$%/SI"[8tCn/-<?Dj!<CWNtc]
%DG3[.B'[tI>pa*R5SsJk1W`<#"#:rjU#@bB=#]8Y52FT3OhuYTOXC_:3E)DnUlG2I+!@\N"fh[>[`ea3kN(ZZ4qf\I+:Q%=6O2AM
%j(oRJ91/S!DTm75:YGtW-=i^`(Z2h%g/1bHC]L"bTTf&>f!V<dnX9l4qGGG^lL5qb"@>+];[>$YE#?0;Q,S#+iY'bg2bf'W%nmR\
%^u"`GV[!qhX#V2G@?KA<=%p[ue_cGCiBc6"K4[)F6"5);mW@*:)O#UGB4EifD"Vibct,Q+$%29&b@jT89A!sFa4-F7rA/T)AM12Y
%[cjsa1*Q5l_LU.)r$5?F^V;9YS=lZBSh]!DBTS:ja6%arA=c%'J/L@>('=bKlH^)D4r^h""Jt#I+&'a<JM?#ZgQJLHGeZ?L\9#M<
%\OZ_,0"Qpl/i2-$Hl%1,^[^7e_QO=tcEr"kG#Ij(Q#ZM91@*ZKrusej$&&;&GNkS?@'eb;+))f/M4M?4R!%``Z(H9&GQOS1Q[]=&
%&JoAO99s\P:MYc+-ZceCU"D=,ct,Q+$%r>=/j`6Ra<P0fVc-GA8[H]Ld$Rh]4YQl/bCn(Q#QoB%dP=nBNqZsI03NaSW`t<,ZV%m2
%@nUM`,"/$<(ZUM!1)*9qq_(7DV3'>kY_k6)[*LGYkDi-QAO>McI+RoNVWW;FmpHHC^u2m$o.r/HR(E78<1,-'h8UC[3t@1/_gk)*
%gQU8oG>(fpRT!=C(5E3a-P-LOqAHcd<NQFBg@iV5P&@%cbd,009gP*PR4%LCGS<*f1;:DS-0GnP?'Bb@%3R"(/>:(cTZ`#4'*n\b
%,8fH%',GEO@<_Ce-3;>rb_24*Le$SbB0m,^!BDP'3bu[I!-ErF@i1"RRKS.6>4%WpecQL.:E];]S>9r=SkVF7MD8u^$ZJ\=%"B_h
%E[!j2$&!bqT'4p2lAp3EDUl$ADlNaY6kstK?g6rZ:A?^dpAG]jcZ+/<NOUs[Zs&alJYrQF+LK2501_-i1?%$=cn6G$9lP!/81p5h
%]7#2H=[,<>GQORF3X))2;^[5nn4HJZg_aO=%T!+_WA76l%'X&XojS,)\m1N=[a_Ecf)*l9blI'Y%MLTni4BJBF=a^?s#geK?'O\2
%FoA=W=JSncZhXgcR`ABq-h(CH]:0kI5T!D_#Y2pKKtqjP'eQZHL:(B_8j%[n3n2up]VZ&/)#rfb"a%1q:pdHI*S%ktQ$EF>5jJ9I
%aNYZVTKgj$*o*s:PU](9s#TfToU$28^n=s[gX.ZE#I`oahS`paN=sR[UnB5^;d\b='q_H\:EU'ZZu_T$]!2/i$u!">Q[=uT[5'1b
%f6(?/A@J8Y<1,*F#)L0@e)E&6Af(`f$XEThA$-m1oG9Zfauk6YHu-H*PBpgmfQKS/Mb?Z,;i!3<abJ)^Q4m2.Sj4-SG\l1.Vo6FH
%/sV8XlB>`@-LcOOGIdM!k(1S0<I),7?U'4PA-.EUg4KiL#Zj-_MEHI:?gfJ^6L;\`"742FU<Fpg6A+QOT84uf"@>?AfI)%V^Q\`E
%Bm8Qr\[qYpW7"DI5#Z$a^_\4IqF%N3AtH05a<K+HaNC9o=+B?<aJ#TC"88mM/E']V/p-2Hs7IA<kDdJA7":U9H,/9ZLnu0rHgM/G
%!nQGq]R)Q)(lREJ.*p;j@m]5WKD%Xp0G7YqE8eH$WH**9I=r5,J2#TN%Lo:5ggdA.'*n\D\thQFI$k"_,`0J)h'A1UM,RYq_Lq*@
%WA76l%-Ub/_cg'dX")b7k[[A%!=c>J0Kh3ljp?Fs,J.hsPIp(F0qJ-/Jph?MAPs/gS?2?!;e;Oc(_Cc,:SYO]LB2cPDKd.e\[e-n
%,eHa8GlhD>VJ",_AaX:;!5rL7B4]Led%[q`+&%rF!au'iHsK(22SXi(VCT!.3V]NJ&U]EbncV9Dh]Y@3N#I(#"W->nM49isjS4R)
%</Dt6lHqD%-QBLd%JB\2,uVj2>h>>`k:rVO`BC*@4Fo0*q9#n?XnBFD>cOX=Xo<G(90NorqE#hLUT[aJdMgie=4bebM-H((s'e=U
%!IM;l^+?sih?g>_VqIu58ZcpEhZe7bWA76l$lFFt@siU:[#HJ+PV>UNAWd'Pf&XT5.e<e[!4k"@g4^'?5^u._11POtH<>dsr/\LF
%lL7d0!J>.WE6+h]XlnLt8VF$\b8HGJf:'sZ41W:rEJQ+7"MP`8!s^&12TG#D@a6Q?;s"kQQ+r\9o)up\+HMr<AV',fGIcgoVTNqK
%!$RM\Wu6$e%U(k(<T4=<HL^D.h?"0k&+qC![=(!iWhS=^brFY03t3`#E1&3I"Mt/Q0B]hDHo92F[=n<Rs*WGZ'7]<I!MR5>I`dmn
%=B"UPr"F6QXJZr@ch.DJ%g7!BH1o?5#47C:!.o91VOm6Fg79U$Y&7:&@t+_1A=c%'d)cl.r5,VC@6cJ3!X(]ZpMA&"RnqLi"L9Wn
%1/Hhd3Tc')HlA=[W:Z$Dk+Q8Zl0)hNUbd@+c6qmR3D>5kJaYM?d.Q5)$ZtTnq*G2Iin\/=\Z.f*'UK,o-h,sSR;>f/]bIMfQMB-h
%[.3H<UU\N1VnOegm3V:$noPDa<*s<YP?[^O%1)*b8ZiE39ZT>I0VI8km,IX+0VHkG`3!cg94R\7pT?<>G*qk20GfBCI/-:DP<<C\
%!s$muE&ZpJ:<)+>#A0FNUNmsjk`%*NKB"YY2p0NGUgQEq0kku$[j`>jb=l-Lpjb"E)`k,k/TW:U]WZ^,Mi>H^@IKdBC$eSqQ"aim
%iZ;$0Sj4..pQo]k@&:QMU&Bpe``u$M-J&bJR-Q0aJ1psF8!5qW@)2Q"jjTY1>b<+soY9,X#TY7&Sj4-C09-N?+nJ76,3ifC0?n/L
%P9,1[_;2glLBs"i&Gkp:,^I]SqXG;$3@4W?bb>'Bq?(eqBg.[HJ^A>mL(/`C@,+u/immf!%F3heoG_n?Bb#`%m+pecg-8F#kO8?8
%mnMCJboR;U]qcBZC3,f)GlllG^8%SiZ1(pAYek%0T9XTCRI,E/F*J7?^trq*MbDBo\(T-"et4>]?@'=[C+_<fT'q4a+>rDFr/)Wh
%VoB1W`(id,K<4sBoG_<=$9V_C?"hMq>Shc;DX?*:VTE'fX;e]aT:':Vi.3Q^N[ETCNj-:HRoiqtL"c2;H"5:E_/=<D5aMeF-P-Kh
%`bU]67Lg9^B`4=:7U3%,0\[4>NN]#:Ht()U)L3G6kSO-bF;*G@/^X;en4g)8@?dD.[KI>Sgf\f.6KST%jYOYb%g3i+gJ3NNp<P%m
%8pXXmjK7Z_>4`:P@^K?6>nG^%k=$7KTmb.edK=XQR`)WDE<&.2S7Af/6@GSg9DIk'8\r(3.V#p+VsAgfj3mrI&-h2<G$VI%"8t7$
%**l2mTu($c;*$Cl#C-O_W_9l*:D#UJRcLn>NY;#V]#ec/>$kpj!a!6I6KST%\*5cq3KMaGU9pltb`g\FQ(:+p=bdmH%e5Ijg[#jR
%V,h9m>=2!E*'9.iVK$GsFd^&eIs%u>Rp7o>QlL=<2@H_Bs'fm"J$BegCZQ!*61-43oi],D$sU`AlSp_b8e0;r6KAH+rm3A8c-MDV
%l,i2Q@l!3;faS#`]$0iRF$LS(+qI3(kNOtm;!F+4-5!hd/LGJZDpW;MTLX[R'+"7k?hpH\Vd=hKK".l]K=Iu^J5BTVP$W,U*-S4f
%p*l]YTn3&UP=^OfDu9M/Y.FcL1/B#$W&Fs*6&%!/!,r))]ikpJ=Qf[K)'-?5YRH9s#QsFo9R=TZc1C81V!V^DRGFF]Z-.gE'*n\$
%3H=:)drNH*cUs8]d9`$+m]\*?0//`("IdO<FIA59!aj1@nnHOIV3:PP_hY1W"=Ner2<*WNdr\pVOXVIbfXoDt5q_,KqTqQATe52%
%fjr[%8t+5>bCn(Qphk/#=PW?'`EZPL[HSusP?A]7b,06H)4".Q!T3\WaIMTe[,5leW6uTX#e0H.nZ&F2D-lsM&9kq:"FOi2>D?^E
%MVGYMR!fU6k^LP6/lP.Z0PIYT6_%rf!pLcJ9>\UB>oBt"?Q`W698@b?k-]Sf%L<0pjO4:^3,q"gBT9VS?1_,kXG$bBp_sD;FIA59
%!b&lmF!n]gQ@C[JV@AO_@;4kA194^Pc]5u8Nm,\LoQS+f'7SlB8a0!0\gnh`hnh<^Y(9oD.pif\a?5#-+AdCtSosFodP)p'i77KZ
%1a5)7L$4`_p=T4u$'?SHq@Vl=NEt1W5P3!<9?4L%rFFKIk+>cXQO0'-&-ercV-u\!ec5^1-37LWF:Iu=>Xp,OSj4-S/&1o0j^CRp
%T^HiQZYqsHp,/1*mR?7-g1./$'+"8bFtXJGP7V#fc@^(@VA:K7oZB^shSklhOTu<Kq*>7o9(,oZB7h&V+rFm/Yn#W.n<kct"MUqS
%1%:Ek)8P\QYg9Ct$!,ZRVTTB%hr;gYR4%K0*KJ_4(PDfPEis#1eLN5LCQde"c/#kuQn%\1^@4*A/^V)a`68Fm!T)8/e)O7OXe+fi
%%S]lH4I(-mTq5W@+M?o,bOcV_K51mp`%BW[M^0oP-([B#QOH*HV>"4r$FDk2FhPKBR-T@pck"K5Wlu+^"&]M?Q\&.;[;#2oG1k[u
%6'u1JNojUF_,QgM&-h2Wk+D1Ai@XA4>Z'WA![V+upR'\@jFApL`fQf..""8*:VAI9ln)U4d$ORW!ZqsX?u2JTn8Rg+d`XaUil3^Z
%=qtibZ;k1N/n>OaQn%\1WWE#c*c>grrEW[:[1<S0Qd1oXep3U\!Y6,i9:h>`MV)oQC"HE%m;o4'k-C^Sq%Ce_H:/Kn!oMP]+["f5
%PBs876jIE_\hplE01uZ7f6BuSGllmBfbs;GrjP"i9^]Lbl0/o,c>R$K6WAUAls1X&esG1P4hrC]3hpA0M:Qq+HlA'F1/B#$OF0]r
%9lj&%,6nkts09kfbj&pA_1]l3#47i1:)Y-=\4qBH<>&>6dZ7Y$Zu3"4SBl#2a&JHS&-b\*Q#N5kBc#AQ^A=AKPt;1U3R7d!Qn%\1
%_>oG$)VnPLj#4f*>'PPX[</f;j0JKWdCfc.*1/5I"Mt.b0nnOPkE2FP@77@+'!s7=Um#FD98+B?ke/L]#<mV)J;Z<8D4U%Q:!NU0
%19'C4iaUH"%SW.5!b"@WXb?if)0ZP[4-5e>C1^4,R1s.5p0gXG/Y&1Xo)udHZ09F]HM"T/,7Cm]Ud2>&!_&LkA_@l:M'A"[1/B#$
%#eXlW20i"="pd3,7XZQ#R'^bbCl1NUa<R_+'DS_:<bldCl$1O&Md=RJ>GGGEa#k\:*jBj2Z$pG[g(cf:1)F`*4a\uFpf%&#poYYR
%iV)AUFh=gP;(\s'r:\>LF,2=9"@@NNr.&])?PW!SX<$5b4&P.+ALX(Ip6[?$"Mt.AAKj7pWi\l$8jU%<e9g898I]'QoqGT#O/Xm1
%+:Mq*9AH]O!rduZ\/TrTQ,ieWhugiHRk@OrB:$5*rqlnkK^$s.;'mlcRZjL\.[R+i:EU(-0oXtINAtr6%)?g>R\FObY=o;pYARdo
%+&%rF!aiH_'eL):h"f@e^>G5>:u[dQW*7muWl,PVoenL0G\*4Kl/kXW[d:gn#Jca?W#,P@VTM#P0L/)hIWc]P:qIG.bKQ^)D*%c(
%F/D1;LT*%)+:LM/=QSpF(a+GRKh:+#L%-cJH1e1)RmU/3-P5PlbLPn%rQmpQ7G;iA[*Z6]:!&GV//@;7n*8fpA+S&Ope!qh9:Ird
%'-'5`c+j7Ka&JHSn6Q")T2l3,2's<Z^"))`3Q.Ojs+'RthGLTngbCRko>Z1#%JAJ/WZ*paZIG@bGUi0461rKHT+eBD<hj4Tr8oek
%;Wa:sW`n1fWlu+^"$5=c4RdH:qr0Zo>=ZM,RNmYC.CQMl74Y&+OhOMSGlh>4GcAi`OIH`*6,C:rMj8RC-*s[u3L?^#:EU)(d'hnm
%53V2,FfAO:Z!QP>ZEa)$L+(X3WOr<;ebjG;S"u*+[30C[Eg,ce9ua!?lOM6uk>Zl,auk5/+OO1HKEo.Ad-+?C,(\.D:QcWYOt*nn
%d?YpK_h?)5#4;%(.\TqR9KPHOb)$/TUohRP!O8?&_c)*k%(aX$/M\[?LmKs_c$+hor!;>h&kTXa]3H8kI<[72"KHW?ju#3h=7(br
%I&luWXXS=LlSKFA10*HCHrn(gdH94n?X;dJ'&,Q.l^.dcXrj,<kn$kS$%,gXP0Ag2IelO#P]BC3!]]d9_\27&"6hO?jp?\A&m2WK
%IJ%eu&fImF1ICSHqsH%jr\@L9$%+\8ZH2@:0S!M%V>7B'QV"Cm]]<V:h]0]j;e;Q9GOm<-1?h:4QZ1WF>@>.SOC+m-4Fo1/d%.+g
%cY8a.od[_Xc)8S:p5n(@Ic3"]jp?\Ar&?Ij=l31p;8IUjlc.`2:GjZe10*HCKE2o*MbK]r!5i`Ee#Y:g-Wp:.%)3i^AY).(JAHCf
%!8oJ1^`NYhB_@0GqEH+p(V]OUd0^YTqHCf[gh^d]*X29r#i.PM3^a^-!`cjk\$UI:4!$q>7qe8WY[:DGS,./s*j,pR*`HXA5T!=9
%r\S<m(XL42W.XRP0cP1lX`#4b4f6@aJM7'K/fg>0@@5X50a?-*9WTqiJCVuR3<$fpR3rOMgk@u;/Ai;5!8-FaB2%RlG;G!qK<*$l
%R3rOM^sgPd)\<a#F+-%p[=EreE+qJ,8j%[n^K*QXs&3fG4BbX%pid$iN7B/]6sfnW#a$JGq?((9:H6Xe20u\m+uu=dng(B#F]Zq$
%MT>msgA,o,qCZfVlMDmBW@_0gP<M6),'8*5h.Nb3'*n[ah:>/B%<tZt(_CWHkA1p)9Y+#sgO'CUAO>McKE6pJ]l/#j'N`Kg"&_Rs
%1,jA3qr[>k1#Xl2o)uo1aY(paQ?Bsd5m?ZO5gn.qlf)mhk4(j0%m_kS$gF;?0<7(J-#fF!28gMQD>jua5;H"W%&igN);-n'+'Qg]
%.q=@el-pPk['i0T9TH6*/i,0KNs!7L`\2d;_rtm9NE4?"`2IJ?"g]iiG[3V%$(3/;%H,;jrGuJ6RFLu'Yh<]:Hn?l3*`'`M&G.0?
%9*ZDTZBkK-*<BoS<ZOj3cA`6u%sFA&GlhCS]^3;TH:__g/SR#/CNd`<C6t?T=jI-+J$!%#>25^c.8=gck0Co5q),p"qU6K?/Ui`_
%6G4WhW41ed/+jA.M,MAaL<UUU>;e'p0-/5e#C-O_Wf`(hCE>k0^D-fiYPHCOI#*-o59SIRMt8g$UIWS<N"PReo#k6^1RZFX!HOq=
%FIA59!n@8gL;t-,DZZp>!g^f:1Zn2t_Xq:khRcJ&4Fo1O#59B_(A%u(qdHk=+LL`J2SP.1?P[/m0W;r=9Ikj">9miH5hb-:9`RGi
%\n1`aIh3do"@@V"a5ts_.b=#M(NWj6i)<>s79>CGc*,dq9ZT>I0E;3%>l;gIi0#d]bU'Y^rj.RB/i,,OV?<h!4;RBM5l8!id'hMl
%_;:sSD?#M[0g+o11GUPo:bXii^g,m%rW>JO>jp'!o\"J0__WKW;mglKQHbq[]17Om'DT__!md?bR"1c0UiXm).3kEhh1"*$2][+/
%$(3.P#/HdjbB-t,(#Y%(9qoY'ZfM):STgKAR;O$A%1n<o`rPYNJ&HM@eM[O/@/_#4$c2nFou1LhV/07t\Tn[]Bs%fgLcQsJ1?1.R
%3Zni%R9dVLZRkaH>f84aM#np).>?`lkB:Bna9)Y6R:!CtNhHu=;e$"?-o4CJk.QH^QFh.(OEgn9J0]5ufmnOfL/<<ih0=%-]1ejr
%aFh,-VQ/l<=>n8FbT\bq$amLlR.lcQZAcH>N/QldJ2!YECTtRE+5l"P!UcL#/!_f/n,+7=#.31&cgY/WaF.#Fjtci=`E_C`r&Ptm
%hu'Q$iQ:rq/RIM,,W4SM:8NTcq8eLNeG*M"hYHuTT234/a9J^f1mn0<&("nUTDf'p"!jt(Mo/O/biVP9YK^(Z21G>iio5&?i%),R
%VM)2Gri1$8?M\c8F-#Ea."9O=Oi%T#mrq#6+AkQ=(E<4il(S93RPUJ]LM[]/,)@l_nd_%eQH:7?9Wu#2Utt<a$5Kd_DNn^k*%#3f
%5T##.&fib\W]u@oQ']9Hc[=4.pea>D.3]9>Zst]obICL6S23[!4Qi4pmR.4aAm!%n#D<,GT6&Ha$k2(>D2n7*9\R]u+f0"#p5'?+
%!hisJ"PSf]RsMp!B"q_h2Bi(9K=h;`Wp>Wc@9H%#r::G2\O'fWR8kO"'qN9OL*`naJ1ptE!@;,Q4m+;j]l\WVhQfY,B$bS='/S93
%oRW[(Vge?.W2i9G#Jp<ia(4'ZQurpR"E^&?q\DDh)URRnai1i>]+GEHj4hlq#n(*(,`)"7kX=tk88j2_Sd2`X=C/:<p/OTd4_!(?
%rs+4'">cB<Jl'e2VPJ9MVugstK@fc8c$2WI4Fs][As[=c\RaZTeMdZR.F^Z.Qul`Db[?/H$U6<go)uo1">cB<_Cts4-'b`E2OS]*
%L7E7AbCn(QW!:W%6qYeh$g"2!8g7dm#F)]0&X&(n4qRi,(j&8s4,ree%6*D>H4Y_nT.l60[VQJJLkT/hpPFuV!hl4A*UXUNGK/!U
%$p!Y/U)"jjF7'FajOA_dOXEuupT+;cIB3Zj?.t*MhbV[d5&oue%LD__U$c3YB9M-^S]eM*CTd$Ig\^q&#2S'HP*p*c)d$8Z!/t%R
%J0j>&o30o/(P?lVcS"HK:sZlI*Z:31Am8aNjN1XRA=c%D5h=%1#s6[fL0pOYl-IAFdtX2LlrXmER?2[q@/tm-XKKG@J86o`$+JJ>
%!WeM.KZk)8!t[q-ie,&I?B*ubh%mhmJ?,PX#$At-0Hp#jWW=lo+Yg/)n5Fq/ODFP7JiW[XBpZrcV*X#GKQ]aHqlgHI+&2k)"7KU@
%IH:?WY=u268^WFBKaWMiI:0&<B4Z,;CJO&YYkp1Ujp?\A1*?$q+H@sKprkB?Z4F,\Yqg#+^R&n/5`_m":S8UkEtYY]7T5?f'`7"<
%6>PniYcRGf6\IQDJmt..#e$8S/\<-An`*c?gNJg_e"4TZR3rOMV!GTV^HJ29q>Ea9q=E?Nc,jJpr:V4/%H&+\<hdcSNR(h0Ac51&
%A7`%K2^<$e*`HXA5T%;C&oBrA\1N]kM[K"T*#q'KOm@C_9.s59_c)*k%(^"FU('@GleaJ2aGpA'&LO](5s4J_k7CYQ#upSf5boDK
%QINGkGHllnb52LAOAl)J<8Iq7Ef&jjo1/3Ad3H;^9.sX]^:@(2B:eV9<1,*F#"UTFo?6b!g>?6OESpcE>N#3drquO5:^u?-Nq_F9
%p?a"YRrP4BI<jM;Q-VRXG64J.=-VfWiaom<J87&LM-J]jf"E&t8j%Z$cZ[Lo-bRX<$hR;2FjIcP`1I/F5_l9N:S=^8=+Ripok:*1
%cRF3E9US*O1k6WGAY-\=k',K)6$j,bb3@naoCm'"M%[;23(6,o$'>H$g=[2eZtc\m-#7-$--np=9c\?\E(ErWGUi355rUG%b98?0
%W6r/9n=(e%k*f*p]#VZ4WlPjPqJ!tTj&$ir%WG(!.<E\)'hs+&9U0l)@=VlAIgk7Hd9j0"F7'54oU%iIHpAOaELNDo.eX8>8fdr5
%D>o4*jQ*\%eQ<j`LaqruWdaf-J%M>'5MZ\)hZ$]]ci!$Y*tSWqJqS?>gXO\`lRabigOu:p?C%VB!na%%0id?BI-:H]f>%@[pcl>S
%Y)[di[habXFjL4M([[Bi5Q:Oes"u,7\o4tU4"#(J`DMMLNl;Efg;%>'GmV4nBZ47r/ae/,kZBg[%0+WF/4Yt"[ZTHE*94&McN_hR
%D;qNH`EdF7mXSgJh$HPTFu'ZkZ2bj.X>8VXB]-4J<Si^a[c/pL(3`#%!,p=sRY[.I/<:eF%3l=02NSuj(T1mpmXe)O%jV6jgs;O1
%Id/SE!Q/+`!S@OI%3,jEP"947mXf4o#@mr#"hoAj@81bWOcHTR?4D6>/C<-sd]BdZ$dR017`stYL_'ebiu(U;7(Tn9no"^$fg*-n
%6,q!B\-oIY*UjfK.?*_Q/n`CAI<mNDNe,$^B*IO"Q7a-&XL*b"Ktl7j1..a)TuWI^>UU9M3V9A-#sK;qo`<aB["g5e4cn0;]'-bk
%J^^+$?*k+q0ZR_VZXT?[:lujQ$G55"qMVV!]"EB3KUbP?f&SI,f_K*G5/Ck6l-fKi#-m/?\/'9R2LpO@:ftR?!7:Kt3m^s.i3S"+
%GjSDa"kV`Dpe&6pFe,&eD%W2AY98%2.e[]24Q3U\G!RYG@B\1[Q-h"ZcVs3I?;WEGft_>?b$!H9qU-Elm$/LZ6TI0_iZ>H"/-kYR
%Ho<\%`e\7XmXf4o#CKAt=rsO9YZ8=XFAXA6QO,hp8@p7SRsu2t_6pcT^/?VqZ']969AgUl^(SisT+0kCe65:5He;NsMm7<XL-ju@
%>c!A<1`@Th4Y%:d3@F<tKjAXLrP`*B&7*>Fdj7Z/UcdQHU4LVt7QF3A/;5*X/a?`Ie0eNH<[[gVnSW?.7#PL"Jjg#(ObL'W0"@5@
%5ZWqbRB-q/5s%I@2ALQsClDU.60BfcK!Vh:^!`@>g*-''_?E\co)-Be2=T9a\h"IKg+;ZDCN0T,V+is=7sGocRM^R8C#H=K8M8tM
%[c/pL(3dP1bt9K#K^67(Tl:^Gd'H'G7i<bK=k!VA_I)Yp-KT>INYH+N.2Qq]ahVNk_u,p8E>Ml<45_V`>!kp;H4<f$$;D:?%=C)'
%P"14tXgebA`?"H5<b:/KiWa#GJ'5r-".p;:Qunss["iLP^Xt&rb,K#g5JD`3[<IJf%"))0n0;*4P=TBugBp%#.o"0C&2KmH'dr\E
%Oonnm4r[&W77=ep\-jq.4n+^p]i'kqK,S]l0*XG;C>cFL,9YV(HY.76>`*kN%%uETr;5_Wh:.eUJhdG#%4pMH4DSXA>7*IEMr0b^
%he\Ok<Zc$+Cl/mR2@sfF5$N"C>`*mdMdJ?)qb/"uh^a_3#K"8h"7\SPZP@]#[C?=Qd]0s"P,_>/Y)SKfr7&,JnC^(\Aqm'LZa^CG
%`>oKoTOI(sIB3V`>rOouD;_aOf*GB<Kq?7hE%UL.YPb\R',ogqhs?4hmcH@qft]=flV3)>\-oIY*Uo>$Q=&)`r5+YkZ-(>$MENJ5
%d3jl%eI&qH>5F.CH0r*=J@#(Ar2YCp$=8-pBeAb)>B'mqj]CO\NUToO-:U0=#:9dA.sQ'&->KH?i\%_UG<d"\\*hWSf_#<pGg#+Y
%#!OOsI)r0H*3H^YDT*Xc7CT!=]Eun&lp\R:DW%jQ(HkZRr2:?S_6(3L^@KJ<3rjp=]tZ-sMEL&.4tB01[,+Jj`EdF5mXR!AmfK@.
%n^8pMA!^h6%=C'Q%/@Cj3K(N->20-cl!!kh.&=_Zl9oQ\jElL)#*/IMG?rPS0";Vi5T%9QnIqJq/eLh-:[X'&.lKk,?%nf&?#V7[
%JZj/HIL.Z7FMT-gDb`T)V_mnr^bU@T3;^%l$SKC]&-`R#\2)q5$I':GEC9o$%A_V(ObfCD?#V7\JZj/HIWU\]$ePiVk`X*@-MVE8
%pmuWoodoN_95tJq!ALTI-\_YmhYJqqfg'il#7'[/E>Ml;Hf-D;$U;mlNAU0gL=\`cj;I`/+JndoA!t;AE%UL.0VHf^^k>4k7lesC
%m<)maMU?cQ[qS0;(L0Tpi%#fu`k0GlK[nN`P4UQ;9TU#"Yjai7]AQlJ!F^M[!Xq3U+`g9%:e5B[Z[qaN"qFPVi\%_VGJI9@<_0^l
%loX31V,YI<Q21WU%A]nsDXE`<m9sd=#DDr*:[#O^KI*J7-nB/mZ[kJB`p"s'm9seh0D8#1\h5#?F:(XIM<g$4Ho@'e<Ns;g(3dU&
%\-'SJIYi;fI+h7-J!s0<V4"HeLTP,.&B\nuMWsH+fSQ3>Cjr3ufX##(K;c7n6=C[88q4*IH?8.Xi.."<4GTe-R5>#<%D:gk2iG<+
%>20-e5c&\l#`fi@hkB@r2,<Yo^u=X(Cd4E.?#VC`J?O(YM_<uN_(0#L5)lNseiLW[!E5onI'>>!Mn@nRg]:g`7eH4nkWK#8=69(_
%K$OL]Y,&\b[C?V4`>oKogiOn`iB2M*JBmCO"ePrlIJfdcS[Gs8m_p49Q*2[cM_=o.lf:!>6e?E/p+.%p\hEFFd_[WHQ2Y7]qFQa1
%;/[.B>mEB?cN7!3?WXT8M%;d1fO"?25rm_W0Rrs^^*VLrDW%jO<6]N#7n7P8gkpI:.j%cc#IOhU!I%4J)G>CGi3Rs0WtZO0d,H[f
%(&'s1:`Bi/HBmsGFjkbn#!NF95I<W5X2S@`/+.tlo]_8lm*H#Yl]1a6q)6A3/,1Z'l?!>^Zql:3]AQ`F"(;1UqDHt<<sfFC-)<H8
%B)tS*f$1p4g]b1H*XDjOa>1%kh'5=gVj.?WJBn:[Xq9`o`5Q#$/+.tlHs%9CbggD\#5nKpSeUR?;XiATnNA0=fr_al0#]sb#4Ufn
%K6Ynl&>Q%PcN[G7:<utr"de3i#QqU.n20!S)0"%N%L,*)8?G%hC=C/@?#V=^JZjH+eiCX-K+XMlA\Ch-=[:DX7<l4Dg]dH3%L<0h
%Eh:8X-D@,kNAU.X5T8"3iLIkmE%UL.0S"RQ_@)p>J-#Cuhi#<`"7$qLB5n_mM`W$ikiJC7$1#ptP=e&\c3218RVutC.ICPZi@joI
%Qd&k_it8>BR5-8VT&?r+FN+OZNQgB7\/'9R(r-f@\M5dgkDINnR:$bZm+I9.i*+n:hed2I<5o+V0lic@-:gq",/lX%]AQlJ!FPZ.
%KD6)O`XUd$j]s]bi(Cgu"6m9[hK]l\_6pcT_LTjcFbaDfM@X!XNs7'.CuAuaNdV\L\-oIY*=rF^"FPY"oKl3S'7;\l0AYHA]AQlJ
%!FPZ.0oXY4>!XJd=36aGph\joV_5oXZa^CG`>oKoE,\3)40pU`o3!gPT+)dOEjq_S`EdF7mXR!ag_XRIRg4\1I%X'IB*7`\jBHU?
%Ctgf;!FYsi7q>`:EEFA_kSkoCXB:XYin4[Ni*+h8?];*9UTGctF!%D+TBf>Cft]ElrE7nZfA[8G"#tp'GY%+[NXrPI3l,G2kt.j2
%7qX:=Jno?2KE7>Kg!TN'$X46!`SMTr!dlm[8kSI'MS%eMg]:hKkH4)-P[dWWVOQU]2XK,$,WVu>/*qj\kqDbQ^]Ns/R3lV11P1KI
%.n1taCnhUM]AQlH!MLPZj7"6*mbu6rNj\q[%3-+rUWlI\mXf4o#D<-<2d+oQ(i\[1lgPaY`f,hOh^n2ICN0T4!M/[kTjH-s!3@"T
%phV)??bK/MMS%eMg]:b"f:i[)ZrX>i#l0@S9^p`N&JXHr=0oCEY/MCm#%YH%KCB8,Z9su'\-tP?82k3sf<XBg\/'9R(r3s"iHe+<
%W5>_ifX#"+nMmVS$SJ9j(mO&nU$K$eGId@$B'@p@iCmOr[%O?*>2_.,b%MP_&at8uDl?Fi.MI1f0J"el`EdF3mX[&7?^FHb2-SOU
%Pt&#k_h'Fo4^2>2S>@57b%m6E&9J`J:t/ZQ^h3be1;RX<%pKB&(mNp"9-F6W2_I0C@<`?g9^p`NnInEold"KB\.n\Q(K1X4RjHt&
%@J+F"ib^g_4rY>.-bpH"Za^Aq`B=b:b^PjrCOoa64i(b5`ueRhh0\CK?Z7I^JM7)L6s_nSV<Y3I_.NkRji=gh0";Vi5T#$#,n#[Y
%hruV!`L[OV;W>"tG/7>8_,ttqU]p*M.MO&f1r3f,C%q1p6a61>9;/!X(1fPp;^)=%9ni;[j>+Pa""@m1D;%?s(L2iE+:R1f''uJP
%]\-HO'N'i'Hrfb)UUcgcQ-p_^(A:"lkA::e+ZA+@;<T@/qju`PJj\)`=KJN#g]c<h*XDl9>3#5efRP7EB/[fH^miZub\=8T;81uN
%G<"N=fo,<A;a1iu`-D5?Ns=H_:a=3+O,LX.<nm^a!:Nrt]]Z-rA:"4.^h3i8f1t-K5Ul,Q>B'n$!L^)@2EqcXe;V`0SAtqBZ@)@^
%`EdF7mXR!adUcbWe(!%:-b/CY?3?f7Uk<8?ZW_>bgkn09%(Q,IWQft;gB2X#^j\+3@2Ji=rrHJ#Uj)\V"7hi7ipR_Wi:=QcBb/r*
%4!<%nRpKLhZsc>B^bI5!PUH7-i)!Er8$NeQ_6(3L_LR"mBke$_9%L]lB;B&\S^tEZbsG=`"h3J$#QrF,_Y3la3SY9q<q)u-EliEs
%"+&m+g]:g`H3QNoW.PYP7?%t-(2RXkHH*`-]AQ`D!FH`!YIfYs?TWGf%TV_C!1t"=l#Hfo)5OWpD1ruAlHq9K<!nq]$3eC':[hLQ
%C?]&!(HS2oDT*V-##%7a+OMlbeTcd2LbS><rk2qrmXeY_#D<+51(U#M`ZqdC0(%q<K$Ode.QusfV*/WFr5G<KTd.6IH("B_>F=?T
%K(ncjF[NhWGJUDk"2:/UdF!T<]I7mN01)/$7je_XS*YQNQI6h_(&h\22V#"g5.q'sqs=I>5&t]N4E)h<J5DkO0E;%#dsf*^IXXE`
%\"?f]]AQ`F!FYtU9t9LCTI%lR/j?q!US[:1I'OK2_6(3L_LU3pki*W%0VBe2/qD7T%UEj]V76nN`>oKonC_HkGlhU\pcN\ji3S#Z
%S$Ae)GJUDk"26OiKZ#[k,o\%:5eLm"i3S"o?20n+<gM_t\.s3Q(m(n,56gUCVI'E.r6Zh0?1>mb%gW7k0b=3!HLK3\l"$rJcO,i<
%K(P`OGJUDk"2:86EQP@O(slqU2t0td)ok3e^Vg5`iXQ4rDL.V4]dVTu$3N>K.L&'U=QadAV*/WHm!qpi&R"=DIi7*2M92u7_s$)k
%>]4=f4_uSEJR4aBp^#6-k*3%<Wu9Qi`<s68;Yl;;GtJ*p.LmC+:&-DeK$OW29ij,`!6&5_/ae-CTNk4XRUb5<VWedAphX>DL,gdP
%Jno?2KE6/u&&C'qUs&>s4MbY4EQ-/.QM.Pjn/$`Js52YCoic5Q=86(:r.jkf5Q[Z)2T]j"nWO+/JIhnn,R)Sb0T_=8A$fj$g#L`]
%pL/3JY05sr(m>!m&-E^/cY)XF^3:=6DV\!QS@%gIUEkIL_!JLS.]:Y:$+tujN4f1@a'8ADIQrf><!MHT$N3u')=q;=DqN@V7lW)@
%b]qP![%s8-_&?^$4%to<kiDra!OXe%M`S*1lY<X.R,tXngC\QgKjILs*,(t&9#L"bepmQNFKcZcIb`ASgB!*ZFQtB/E@`F5\ZrEj
%h[TcFgL@8q.$$m"VBMkab6`h(\sZ=t-QqTIJ&&+h"t6CECg'fZ.J.W^i;e<B>Bb([9`</mYb*j&(U23=WfU0C_Z9gWfMF.u[rq$s
%'(3,LD@L3128HVLpf<$;676F8(,f-=DaZRh/k7g%"3bYb;)s>*c6+*/f;W]H>Ohh*A9f\/@1=p&WC>n_3]Vh3+<T?M)gF=b8(*&b
%]eVVEFj[dTQpMl-&.%l3SrYi8MB'rLmQ.U=hq_:-TcX@>_LY'LU!W-lF5RI'bFB$m!9GKCUp_DDct=U0]_/[L>'n<:-+M#>O/N%a
%71HD;\K,G)p99#'1Dn`"g0-`6P9FE,/+cQ<EXI6l'*ni/gaZ=,TZ4eM74o$"]>5EDda(.V5u+,;1C+5i1Qq'FZIV6`>C\TH-.Fg5
%'KS7,Dua\.3CP(f;UPh+3idhRR?4cS.)ZggRP5R;6cYSo;Ep46@1@1`$XHJ%Tp%8<#EJWDo>7eni_-"b2-)l(dhf=Xas!Y/W>WAA
%Klq-ugX<NL0]!9d)6=#hNt65ASSB#um1mJ,SG'[BZ__kp>iaS*_A_@l<`t\dki</hJY(/Ep@GpM(]/a1<*(jkXktoOf>&]mXGnFW
%8JHWlYf;tbCrol$3ogQg&b)(%\/OpDDGT#%YQhW0,@>2I;s<9NhSOI,gph"0>$L,D^&Vr!o#P^tU-_VKP;<IL0H*PJ`h5>r@"<f.
%cfB8;anDH79VGB@Gj?mU[(BEAehP$H/7ELHgktKO\sb?,^+pPGGW;IQIB<1d(h8(R5WNUrdU.]u68'\t%P0X5r(Tgb_1=/`KGE&<
%c[L+T\eBjh68'\t%Nq'!q1]DrMVRg:D[(!-B0T(FD1oNk68'\t%[=?pY&8SMaj/2b?k%([>J*[*@0p/X$\SV1.iZ*NDD-DS!0"&9
%eVqHWE6hp>hq-^<auJUaaB]u[10=XKqiOB+a=6b%!cNK5T@2SKa`SToG1oPm3XjR>B/_3;S3ekV&.YM+qHDa%&0+fL]G[dO-9'RW
%:8+!f#RBL?m@3fm$4.^!!3a3Wi9^<Jaslt'!oZDj8$.3k$N%A^]KBR2:_*D!)MiJm@pXOo0V7CjgO8a5'>ch<rID/M+f@"prrp8j
%Z6O9qHOgGA\&2S_0\JY-j:lo#JT(VT3q<Joi/kDJ6ScL9q,?>G*g9OdjTNF$XR"OPO!XO!<'r3TnGK7[MZktJ?;0:ZD_%]J?n(,m
%=-4F+b&4EfR+uGOEXKLM5WF9j2YVici'9B2;IL#2Nk8G9>6Hs??;;U_=QZB&pGRlGJT[SdK/LI*k$+*LkiDra!Mj5N.BY5U"0r'm
%$>Y1TA>5oPQln%.&B;%e@9_Be/&8\hc#'Yu\g^mX>bZ*n%69,K:*:P/VUB6k5)ND@\P+U[COjMN9TrE=jTNF$h:^O&-tao&S&$$$
%jJG#(;s<<G_?&KGQ],!`8f<7%YQcL_$/`c,N-R./\%],`^g-_us"H[8]GmpQb-@hP1PM>c0..;@UgreOh%FpN!/#^-CnAJb%brs&
%KjILs**B*3f$*.)!;V`&:j$Gl;nYdPoO7l1*8?@IT>Lln)!HK-_!)9F-S6b-'RDcjE$2@)IVF9_pTaYt@oG`i@;PrO]\-"%/]?<)
%EZ#*ap>\+4FF@KGN-R./W/'bB];9Zn*6]Ml'UJi9J7k"B6fV[t.J.W^i;b'\`T70^227kCX8u'3p7%R=0.68?G;pLOlk;Rj5&F`T
%!*0W>_c?&b;]+Qu_LWu)a(d^C#F9);O$!Y0D/CTbcZV=&5u&OBQqQ`)mee0ME+$YleQDK\dT'AF"F2;E0Whn!1?%n],'UhgeR/h_
%DK/t4(??0U3Iu,lVAS5VaiF;j;[`b#4c^8"<DHta'*nis+il7(*f&%4[^L%q#-3N"@F7&?;rn\t3Iu-WS+ggD@^5;/S^VJ\HFV)M
%Rp+CGAh8`EKR(dVnm-p/^>i=-A^rT9l#D<IMCJ2_.t_j.%d'A"DV"Qehj?"!X\e;nAF3?%:194tGjCj"WJlSW@i)e=*=$!F;!uCB
%3M3!W/;OUcH-:+GGkY.>XD17=%9PcXgZ!=q3TLkY3Iu-WhU0d=87X]a/gVI<*m0IZH.APSEXIGh5WGtfB^@Q"n\&9W10F3Cmcp:C
%Y.L&fYJ)b/cVs8>EluS0Y*2Y6eO-mIE5a2A.]4uA$%rC,j_i6Whq]V$><R2"I/M<63JBao+<3XkFZP88[G%a&A+H%,$'mlfWcHSH
%]W2nX@KKtEVhN]P0X%gD[H`;0VTc-dMWoo4+=@^1?rMbY:35>5:%AI0bjPtmY%b:Pe`@JL3J"ZRX2E.(Dai\b9=Zc6/Vh1-@Cr?Q
%hls,N_B:3;%U`n1D^+ZXP[)j%Qe>d>:^ZMt_`e/7(;p?m4Q_@I2tAY`#q3@?rIAoYn:klG<DHta'*niI0hIGt2I8X.qRqjqX+t^_
%ofR#3dcD/I3Iu-7o/dk?*<"H[_5_/8NojVO[>QL+l77L,c0b;Wmk="G`c!E:F4W0jfCg!dj-neH-/[GXG-U,!h%d5R.?#RfB>aMl
%dlLE6FPIo&4r^REb0BG)UlF'r+sedrY7/F3a_).&qBgE>m<<g[Kq"S\3#9sdV_DX,#e]idgluj*C?ircg.LHd$s!n8W4L%Z3JCeb
%+<8b8ZI]%iCX2euX&*6'lQN/[ZiGYr5gr?mqGB4kr\k^r*m1mng=(eH68)s_%UbbR0D6]/Joski_<PI@fQP_O!#n6/]pqAJ0VV.r
%#P0i*QTj&1k\a3Q(4+o(_)T<RA1R[<oo#4P<Y%u!r`?_%68)s_%^_.t1ku8?qJ^S&[DCor=UjkTR)4rM,7s"B,F\I/-8<4'dp]J,
%fP^@&:YUVo68)s_%d`TD_n5?gm`N94IN@;<ZnA9GY5;KI*'!*/a$n/k2$`1U@15Cq-Rk9A]iWC2F?,$u)b&\eD^hSqn$Y^Ld4VoJ
%p`%&%1:bjq9cB(90ni@s(lTj'%Hh<X_Cc@7dpfP-.#,b''gp65(D@#5F$%$:Eb=&"jVGl0UPJ15$I:SWT!_+N;s<9N_?#X.gU7P$
%@%'/n05'e05)mJ/9hqCG1C+6^lubGYf(C`?*?*-=.k\Rk[#CFHMI787="JW2#CtWq*&&-@EXH<u0+\VXKHt<URD=As9m9.((bBQb
%;)s=o%mqHZf\41+S%I0l94O-+Q^Si"$V[+]676CW%dYX>Ao^YaJYO@&csR;Z5&dbt'QOPOS3],RaP"e+[V65qA#&4-3<mh!EBc8m
%LR^]'$6jFK0QMI+>$<nI<[;q0?*t06!VCAFb<estP;Ci2csZ]hgWt.]oNX;l@!:#3aslu)&-@Uha3m>4UYtt"Bkpi`@5V-hbl,u1
%)WVSn3J28Ne%0pgK]c^?/^:OX=9CYn40CCq3JC5R+<4MEcm-f+^k'.a]7c'XlpdMf.J3EQ!oX,kp>$0FH)1siV@>nHq/I:]LR=Su
%-YEu#?uk/\.QF&a```f%!4,o!<)0-N1C+4XR<nEj+$IaMp'H!kI@b$>Zo*:Gg+./0#%?5@o.Z-F_SUS.fgRngbLl6Xp,`Dp)Tu?]
%0BXBkg$U=q@B<hW.?'O@JT(VJHupK*F1sU6(i;Q6@<CE/`;thZje2(n*QKaU@]Q&L3+*1LT9E[6BG>Io]pq>IOAONZI]u'*kb?e0
%#3Fr47/<ipb_rY5`\i[b/n=:4LQ\U9#&AaeV/_Q^aXQk&!o^pMbt+UpU=I$@h,s>DhE[P](!so6H8U8kI,@aF?O66am:m9]TH$Y9
%BeTlSKjILs*7/5JD82BcR<8e5%E_nB8]q8tKj2V:>Tb#Bf`X9b):kVt%'KQGh\tPiH9$Oq5bI/Fcj^KK[&`_e_=]?GdEW4^KjILs
%*#LKl/19/fr\;ZU_&?]F[p`G*F\KPOk/CC+j85!F5&XPA[j_$!T#%b4[@SNga@chmnTHFpn90A*1VSn=*j>hsO3M;Xk`Aa,jTIIH
%dTBJC"0%hSIHLU'\#"*P]pq>IJ.:bomidDfF5D(m2*cEjI*nR?S3ekVE&]PW)=*"n0$[hA-5Wlj\6>tJEXKLM5WGDCNHnb_fntFP
%Y<eGieTH#";s<<G_L\Oh\M1<:E$2W**.1Ati&MM6`DRmc:8+!f#R=B=%U0"]TbQ&X(H:(Z2.Ks?AMB-U7D8gdF9HF/S.*sKjic)R
%SK2_X]pq>IJEL$=^P@+pE#>SbSTF:4I2Yuj]pM&%hqF>]Ou8bB*I`@l<eE7pH!bI<1-n[/QP2=uBM1\VTel$WmJ->TCOku0UEq1s
%RP?J01)SVrb.chWPB.b4g*K2jec97j[Wr't$GDrp3+*%-ftP:R1p=p!BC^nOFu!_Ko3)3bED<<pa0algWO@qY%tcaTV,p"nEXKLM
%5WFip0"'VIhmSS/(5"J03H0,l.(H;qoAV9QEU8HRhmgQbAuO^4o@YJ#BfjfWj:lo#JT(TNio7CPq4+6#X.IRa"P+]md&RHmk'J#@
%Zo<,9*E,qb[s*h&n].*c8%Y-TVnOo'n$,9#0kVPkHZ:cQ[M_<U<hisF=:&]!HNrM68m?4ShnCVB!R?*!eKCd:b6`h(R_SCAc?:&)
%%O'S)K9S\U-4n0/7)[N_p#EdYJ?bc/;]&/WJ\qN4`@YDOrO-r#X8trQ+_b*"N.5DFHt>"GDhjh=Re:,G^.heMApchV5u(jYo.CRa
%k[`JWCN*\RI+uLIFpa7$/O<((<tj610:"2(];8qbjAg"(V,22LZ\H8W;s<<G_L[h%Z0cuXdsH98FbOnooiA8.b_rZ@(`rph'rU[Q
%9OSBLG,req<C3@F'*nh"K@I3FE1hn;+a%T4P=Q.'$GDrp31rhgm<`[_[D]&,fhLlaUenJn"@cJ'H!59B_f!*Q_']^%c@*s>5u+,?
%'*ngS[q)u!Qgm2cBC6JZDHU%$KjIO4E8[+0@F#*g)\-[7L.HqS^uQ8SPuHo."Mt2P1_P075*G-4j*)9N35cNNIXco&^TC]nl8#LR
%QUkN$+L09rTtHepEs^?TGqjk(^EZ=s_Lu@rQtCt.^b](3G9NrS0e^6r(dI05,u0qP7)1NsW_bUtRndm`;s<<G%L7=:8j;&O:H,bs
%/h!e%c@,\l5u+,?'A+:D\Z=;kE+!QBj:,2n9Wh]%:8+!f#R=0YhZ:1bS1M+B6JpEFVf3)O>p(+P!-RHi]5QlhJI\G,a=3&X>Tb"g
%g9%H>6cqh<B`G6>#+2ut#!%BD:>g)a#>t'JOkRiBdod,2ok[hA@LA\&b$]TcRP^A*rN@L-bo3Yab"3&Crb,@hk/CC+j&ctVTHDb>
%%@JATY>F(2RPa=53JCd7+<3WT[J%1c""drVYQgKk11#U'68'^*37&Jl[I<A<^mH\mX.H/RmAN=oR+DrVj&f,^!diS>,.$!TU+Ek:
%FLBYd5c;=O(a"HJdE4/W+,drRi7-4\eZ0SZi[]Y$4=tP!hp4^oc`koCA[.=.;]&,Uc\Ctp]K5(64$)C_[g"p()(%$U^LPN5mRq,@
%?o/Xh]s!;#COf@@3n,:Md)u`K"!_+'k*'4\Z>U(cJCC:]WeZra0>0-.em)K"&?q-o"gA1jonfFJ3JCd7i,E'LlWR='%Nq;3WD\H@
%.dj"LJt,.\-P-b1G$FeF8N;g0A?:)8ou):g@LBf;5aYmlEoJ[#1<^PFcRi)!E,s&?PuHo."N#`h&SUNY-'rE1!t7>pM[>93n"(!;
%UR5m?"l%coD[(!-;h(RF#!%BD:*:NAedGX>iP8m#3eVE#C62?W`<=%;11&@Q9>B;P#E6)6V_C/NJ]!%Va]=nE^C_:rAcoJcE].c4
%&JGkS(BhYPE2Z4Hc1KBsc7qaOT\,Z6/S(2H(uth:JbJH8nVkf&`uBI7X+t/">-sr.:194tfGl;fV.uF'Z,\mH;^mU(6h2:e:8C6L
%Tbh(h0YJJiCi&u%fPV!$L"/P9"Ya_`YH&NK@KKsZYJe^LGm!YoUB%?Mj3u!4jV.nZJT(Ssd@CC,G/8M1)SEE,jV6Q3E.PoXOfE6D
%$fHO^nEe,e!Tb%e:#HI@KgAHV*7/MuKpP;VihEM8-C-KK*+B8-RR!7lUA>AP;Qog8Yf#,HZq`7?XohuQbkJM9c32ERoWY\'<Y(+Y
%!1^Dm:!HcO?eI-i(S]Sop2Kk\_Wmi-#+mL'f&[SM3Iu-7T*Vj`0c\h#<c'!#Ye>`SCR==,$A4j631pf(FJk0Q$pqsO0WF<D=Lthq
%.J2mU)obCdg?)sK5N[&)X<,Ms&EV7oFZG.A:*:Mnq9nt%B\;2s9^O:VJF29F8On&)1D[o1#3/gEOI?jKnl=:"ZDAdQVblZ(.GE$h
%e[r\[mNZ[1E*uXYn`@ZkFhK;V_RlOc3JDYlE.Q8bD$47G5ELI!#jRR9V,Gs+Xr(l3+fE]1)2&):3MOoeQtl@D%p1u2+!P8j\26'Q
%?;0!*INW:N?;6.HQ@)\74d<.Sp10JXS3elA&.Z(FX.#E/"78a[OKDJAc:t9E:16\:&dS_GU;-5DeIg/7YZ"XePY^60.FO;VkiE3_
%#PO:dPLLitBO<ZQI&01*#k>.QmW&Y%\s#B=T_Vbu".I:&2:1;f@Cr&H],J1E31q-n?2_gq]aCfqdbIuHSmBU.(Ge%ppIBu&ESM6X
%LHr"X;H>rEK!(SDC)9h4e:bY_aiN&B[pripDg1IU=?Vo;?Zi%]EXKLM5raBK3a$2tCi,24a4_?63mbI(0s>/-(e5r,]@K+$fl5&B
%L$d*_<Cc\):_`KE(NetU'n6/$f-u.BoT-Hls8))Wl/D4u]Qni"cW<?EIeX`Wcf[MWIJrH/Vget3pC3aEqtB]P?^7-H`*^0'qso#\
%q>BsWeI04.HhPk_f+3@\2Ea_EhuE?8U[morV[q\bfDF8pmpkegD,%d9XlHlH[==:;l/>FdN\BH8hg]_@UNu0l4IlM+N3qGE(!<5d
%j/-"J$+@/@3?7V4Ie/5B(>I`&fmf38r:N@i3beQW2g+08I[K:D?>u\+VnNn4^LA8_r!ne%'cUMn:VkQ#`I\&YNH^WI]c?lu:da\7
%-#W01^AduuiNm"h^`iXk`n#5j[['>lo/jENX#uCk#QbFW-,4KIj0Ckoq\e?"Ba:i5opTDM4i!+&_[Q\@8*TS+l-<P_.?p;R,YM^`
%[)nqcEud**qDA1"?[h1PF?d2LJ$5lu^O9n$+5#;qd#ZZOT-ZYAJLcY+ZR,VYp@%SPU]'<2T;=ZOE[0InO-l`sjFH2hcC<[qNO-CD
%O8F0;8=H\KqNq!%GJW$\f$!X=DFNDtkOYig-uqN+@<MTGRUMHlI$'?7B#r(Hj4:u0$b-T(IVf;cQfC$^"lHd,hJ7o?iQ^k#Rkut>
%IMVdM&`eWB,8Jf9Zo-,_8ZkNI@ifpTdNaBc]%KhnY^3h#LT+iA7TVA]_uuZKE@sa's7#h#Dr,s9o#J3m?b^pdk#\OZO+6r#q`7HD
%8r^KG@Xmt1QXB[cj55=bk4RKlo!b5`7=>$NB.9sD90UWqk;Q2_lbb)WI!n,)rUV\Ghn4C4o(CmHrH*D]j3sXXiifhjh+4$lrQ!g.
%I.8$OlW([:bl>jnJ+rdUr9^ceP<]$:p"QsZJ&Yjq:AuCuAMi3b^HB=K?frM[s6?LH56(<?c"EZ>i8ai^ro31S2pYj^V`2pcH?"<2
%hbOd/?bMU0Gl$P"^E-^oH+KRFjltatQe-^'+sIbLr:07UoS7'$r=@oReQr~>
%AI9_PrivateDataEnd
