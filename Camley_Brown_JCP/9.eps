%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 9.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: APS Workgroup
%%CreationDate: 11/2/2011
%%BoundingBox: 0 0 192 147
%%HiResBoundingBox: 0 0 192 146.2022
%%CropBox: 0 0 192 146.2022
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 7028 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFD94FFA8A8FD7DFFA87D7DFD78FFA8FFA8A8A87D527DFD77
%FFA852A87D52FFFFFFA8FD78FF52FD047DFD05FF7DFD75FF7DA87D53FD05
%FFA8FD76FFA8FFA8FD06FFA8A8FD7EFFA8FD7FFFA8A8FD7EFFA8FD80FFA8
%FD7EFFA8FD7FFFA8A8FD39FF7DA87DA884A87DA884A87DA884A87DA884A8
%7DA884A87DA884A87DA8FD29FFA8FD39FFA8FD1BFFA8FD29FFA8A8FD39FF
%A8FD07FFA8FD05FFA8A8A87D7DFD07FFA8A8FD29FFA8FD21FFA8FD17FFA8
%FFFFFF527DA8FF7D7DFFA8A8FFFF7D52A852FFFFA87DFD05FFA8FD29FFA8
%A8FD1FFF7C76527DA8FD14FFA8A8FF7D52277DFFA852FF52527DFFA87DA8
%7D52FF7D527DFFFFFFA8A8FD29FFA8FD1FFF527C5277537EFD14FFA8FFFF
%FF527DFFFFA87DFFA87DFFFFFF7DFF7D7DFFA852A8FD04FFA8FD2AFFA8FD
%1DFFA876575328532EA8FD13FFA8A8FD19FFA8A8FD29FFA8FD1EFFCF5253
%7DA8525983FD13FFA8FD1BFFA8FD29FFA8A8FD1BFFCAA857532F7EFF832D
%5984FD12FFA8A8FD19FFA8A8FD29FFA8FD1BFFA87D759F587EA8FF7D532E
%A8FD12FFA8FD0EFFA87DA97DA8FFA87DFD05FFA8FD29FFA8A8FD1AFF522D
%7652A7FD04FF535353A9FD12FFA8FFFFCFCAFFFFA852FFA8FFFFFF7D7D27
%A852FF537DA8FFA87DA8A8FD29FFA8FD1BFF837C535AA8FD04FF7D2E5353
%FD11FFA8FFFFFF99BBFFFF7D7DFF7D52A8FFA87DA97DA8FF7E7D7DFF7D52
%7DA8FD29FFA8A8FD18FFA8769F7C5953FD05FF7D52287EFD11FFA8A8FFFF
%C9A1FFFFA852FF7D7DA8FF527D52527DA87D7D7DFF7D527DA8FD29FFA8FD
%19FF52537682A7FD07FF7C7D53A9FD10FFA8FD0FFFA8FFA8FFA8FFA8FFFF
%FFA8FFA8FD2AFFA8FD17FFC95228537EFD08FF7D525353FD10FFA8A8FD19
%FFA8A8FD17FFA8FD0EFF7D7DFFA8FD17FFCAB57B7E78FD0AFF7D2E7EFD10
%FFA8FD1BFFA8FD16FF7D527D7DA8FD09FFA87D277DFFA8A8FD15FF7D5275
%8282FD0BFF525757AEFD0FFFA8A8FD19FFA8A8FD16FFA87D7E27FD06FF7D
%A87D7DFFA8A87DFFA8FD16FF52527D82ADFD0BFF7D52597DFD0FFFA8FFFF
%FFA7ADFFFFA8A8FD05FF7D7DA859A8FD08FFA8FD16FFA8A8FFA8A8A8FFFF
%FFA827A87D7DA8FD04FFA87DFD15FF7D52A8AEAEFD0BFFA8532E59AEFD0F
%FFA8FFA88282AEFF7D52FF7DA8A8FF7D7D27A852FF7D52A8FFFFFFA8A8FD
%19FF7D7D527D7DFFFFFD047DA8FD04FFA8A8FD12FFCAC2827E7EFD0FFF7E
%532FA8FD0EFFA8FFFFFF8283CFFF847DFF7D52A8FFA87D52A87DFF842E84
%FD04FFA8FD18FFA87D7DFF7DA8FFFF7DFF7D7DFD05FFA8A8FD12FFCA7558
%2F54A8FD0EFF7D4C2F53FD0EFFA8A8FFFFAEA8FFFFFF7DFFA8A8A8FF7D7D
%7E7D7DFF7D7DA8FFFFFFA8A8FD19FF7D52527DFD0CFFA8FD14FFAD587E7E
%FD0FFF7D532E54A8FD0DFFA8FD1BFFA8FD18FF84A8A8FFA87EFD0CFFA8FD
%11FF5252A8A7CFFD11FF52532E7EFD0DFFA8A8FD19FFA8A8FD19FFFD047D
%A8FD0BFFA8FD0FFF7EA9A85252A8FD13FF7D52532FA9FD0CFFA8FD1BFFA8
%FD18FFA87D527D52FD0CFFA8A8FD0AFF7D7DCF525453FF597DA8FD14FF7D
%2E2F29FD0CFFA8A8FFFFA9A8FFFFFFA8FD06FF7DA87D7DFD07FFA8A8FD18
%FF7D7DA852FD0DFFA8FD0AFF84277C827D537EFD18FFA85329547EFD0BFF
%A8FFFFFF547EA8FF7D53FFFFA8FFFFA827A852FFFFA853FD05FFA8FD18FF
%7DA87E7DFD0DFFA8A8FD09FFA8526F9F5EA8A8FD19FF52532953A8FD0BFF
%A8FFA87E53A9FFA87DFF52527EFF52527D7D52FF7D527DFFFFFFA8A8FD18
%FFA85252527DFD0CFFA8FD0BFFA8CAA1AEFD1CFF7D2F2954FD0AFFA8FFFF
%FFA8A9FFFFA87DFFA87DFFFFA852A87D7DFFA852A8FD04FFA8FD1CFFA8FD
%0CFFA8A8FD2BFF522F297EFD09FFA8A8FD19FFA8A8FD29FFA8FD2CFF832F
%5429A9FD08FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A8A8FD18FF847D7DA8FD0EFFA8FD2BFFA87D292F53FD09FFA8FFA8
%A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8A9A8FFA8FD1AFFA8A87D
%7DFD0CFFA8FD2DFF52522953A8FD4DFFA8A8FD2CFFA82753295AFD3EFFA8
%7EFD0DFFA8FD2EFF7D525429A9FD3BFFA87D7D7D597DFD0BFFA8A8FD2DFF
%A852292F53FD3CFF7D7DA87DA8FD0BFFA8FD2FFF5252292F7EFD3BFF7D52
%7D7DFD0CFFA8A8FD2EFFA8762F2954FD3EFFA8A8FD0BFFA8FD30FFA85254
%29A9FD3BFF7D7D527DFD0CFFA8FD2FFFA87D292F29FD3AFFA852A8527DFD
%0BFFA8FD31FFA85329537EFD3AFF527D52FD0CFFA8A8FD31FF7D2F292FA8
%FD38FFA8FF84FFA8FD09FFA8A8A8FD33FF5253297EFD37FFA87D527D537D
%FD08FF7D7D527DA8FD32FF7D282F2984FD38FFA87DFD04FF7DFF7D7DA87D
%A87D7D7DFD34FF7D29532FA9FD35FFA87DA8527DFFFFA827A87D7D84FFFF
%FFA8A8A8FD33FFA853292953FD35FF7DA87DA87DA8FFFFFD047DAFFD04FF
%A8A8FD34FFA75329537EFD34FF7D5252A852FFFFFF7DFF7D7DFD06FFA8FD
%35FF7D2F292F7EFD34FF84FFA8A8FD0CFFA8FD37FF535329537EFD43FFA8
%A8FD37FF292F29537DFD42FFA8FD39FF2F53295383FD41FFA8A8FD38FFA8
%292F29537DFD40FFA8FD3AFF7E295329537DFD3FFFA8A8FD3AFF7E292F29
%537DFD3EFFA8FD3CFF7E295429537DFD3EFFA8FD3CFF7E292F292F7DFD3C
%FFA8FD3EFFA8295329537DFD3BFFA8A8FD3EFFA9292F292F7DFD3AFFA8FD
%40FFA92F5329537EFD39FFA8A8FD40FFA9292F292F7EFD38FFA8FD43FF2F
%2F29537EFD37FFA8A8FD42FFA92929292F84FD36FFA8FD44FFA92F542953
%A8FD36FFA8FD44FFA8292F2953A8FD34FFA8FD46FFA929542954FD34FFA8
%A8FD46FF7E292F2954FD33FFA8FD48FF7E2953297EFD32FFA8A8FD48FF7E
%292F29A8FD31FFA8FD4AFF7E292F29FD2EFF7D7D527DA8FD49FFA8542929
%A8FD29FFA8A8FF84A8537D7DFD4BFFA97E7EFD27FFA827A8527D7EA8A87D
%52A8A8FD05FFA8FD07FFA8FFFFFFA8FFFFFFA8FFA8FD05FFA8FD07FFA8FF
%FFFFA8FFFFFFA8FFA8FD05FFA8FD07FFA8FFFFFFA8FFFFFFA8FFA8FFA9FF
%FFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFA8FD14FFA97D7DA87DA8FD04FFFD
%08A87DA8A8A87DFD07A87DA8A8A87DFD07A87DA8A8A87DFD07A87DA8A8A8
%7DFD07A87DA8A8A87DFD07A87DA8A8A87DFD07A87DA8A8A87DFD07A87DA8
%A8A87DFD16FF52A8527DA8FD09FFA8FD15FFA8FD17FFA8FD17FFA8FD17FF
%A8FD16FFA8FD09FF52FD15FFA85284FD16FF7DA8FD16FF7DA8FD15FFA852
%A8FD18FFA8A8FF7D7D7D847DA8FD10FFA87EFF52A852A8FD11FFA87EFF52
%FF7DA8FD11FFA87EFF52A852A8FD11FFA87EFF52A852A8FD18FF7D7DA87D
%7DA8FFA8FD11FF52FD047DFD13FF52FD047DFD13FF527D7D7E52A8FD12FF
%527D7D7D52A8FD19FF7D7D7DA852A8FD13FFA8FD047DFD13FFA8FD047DFD
%13FFA8FD047DFD13FFA8FD047DFD1AFFA87DFF53A8FD14FFA8A8A87DA8FD
%13FFA8A8FF7DA8FD13FFA8A8A87DA8FD13FFA8A8A87DA8FD4CFF527D53FF
%A8A8FFA8A8FD73FFA8A8FFA852FF7E7D7E7D7D7DA8FD71FFA87D5253FFFF
%52A8527D7DA827A852FD72FF52FF52FFFF52FD047DA87DFF7DFD72FF7D52
%52FFFF52FFA87D7DA8527D7DFD73FFA87DFD06FFA8A8FF7DFDB5FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2011-11-02T07:18:55+05:30</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>196</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAxAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FULY6rpd+1&#xA;yljeQXb2crW92sEiSGKZPtRSBCeDr3U74qisVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVYz5j8132k+ZfL+lpYmSx1WS5W6vyUon1ezmuFjjQOHMjG&#xA;HqV409zsqkXlXzL5i82qLS6vW0aaewsddsrjSkhZhaah6ypbT/XY7tC6GKrMqrXtTeqqceR/Jr+U&#xA;bW/WfUzfxTP6kbujK0cSciA7PJMzH4jXjxT+VFqaqsls7uG7to7mHl6UoqhdHjYjx4yBWH0jFVbF&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhLvSrC7u&#xA;7G8uIvUudNkeaykqw9OSSJ4GNAQDWOVl3r18cVQmg+VdA0D6z+iLQWv1pg03xyPsteCL6jNwjTke&#xA;KLRVqaAYqjdU/wCObd/8YZP+IHFXaX/xzbT/AIwx/wDEBiqJxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KobVP8Ajm3f/GGT/iBxV2l/8c20/wCM&#xA;Mf8AxAYqicVdirsVdirsVdirsVdirsVdirsVdirsVQd5q9laTrBL6rTOpcJDBNOeINKn0kem/jiq&#xA;j/iCw/31ef8ASDef9UsVd/iCw/31ef8ASDef9UsVd/iCw/31ef8ASDef9UsVd/iCw/31ef8ASDef&#xA;9UsVd/iCw/31ef8ASDef9UsVd/iCw/31ef8ASDef9UsVRNjqNrfLK1uX/cv6UqyxyQsr8VehWVUb&#xA;7Lg9MVROKuxV2KuxV2KuxV2KuxV2KobVP+Obd/8AGGT/AIgcVdpf/HNtP+MMf/EBiqJxV2KuxV2K&#xA;uxV2KrZZYoo2lldY40BZ3YgKAOpJPTFXn0v56eSYtSms5BdCOFwn10JG0Lgkj1IwshlZBSteHTDE&#xA;EiwDQ61t82U48NXXq5b393L4vQlZWUMpBUioI3BBwMW8VdirsVdiqW/9NL/0Zf8AM3FWDzfm/LH+&#xA;ZQ8pDTozbC8j05pDcD66ZZLf6wJ1teO9uPsl+Xv7Yqyi51/V4/zBsPL8cFu2l3OmXN9NcM7i4EsE&#xA;8MQCqFKcf346mprWo40dVDeU/wAx9G8zalNYWMXCWGIzMfrul3Pwqyp9ixvLuUbv1ZAvvWgKrGtR&#xA;81+emXzFZhlh1C112w0+zj09rZ5FtLiG3ndYXv1hheZ4pG/vFoGO2wxVMrn8xhpvkvS9XtILrWZb&#xA;yWW3IuzHHc1t/V9ZpEsIZuZQwlf3ELL0YkLV8VZppOow6lpdnqMIpDewR3EQqG+GVA67qSDs3bFU&#xA;PpX+9+s/8xif9QdviqZYq7FXYq7FXYq7FXYq7FXYqhtU/wCObd/8YZP+IHFXaX/xzbT/AIwx/wDE&#xA;BiqJxV2KuxV2KuxV2KvL/wA5/Negv5bvdD5/Wrg+lLNGvxQ0V+axykVDc+H2fkT2rUZcc44galM/&#xA;LzTx8BBMTIb/AC5XfkSGB2H5ffpzy3q+uQ6hATpNyyGOMiSzlhtokmLKxSJuISSlNum+ZRgdNEAD&#xA;i9Mv6M/Vz3si9r5OLASETXLax318Wffkj5i099Kfy0svO7sTLcJxVljMUktWCV6cHkp175CcssyZ&#xA;TiYjarIJ5da69finBMkURT07IuQ7FXYq7FUt/wCml/6Mv+ZuKov9H2H10X31aL66F9MXXBfV4fy8&#xA;6cqe1cVblsbKW6hu5beOS6tgwt7hkUyRiQUfg5HJeQ6064qrYqgrrRNFu4buC7sLa4hvyrX0UsMb&#xA;rOyKqKZVYEOQqKBy7AeGKrbry9oF3psel3WmWlxpkXH0rGWCN4F4fY4xMpQce222Ko6OOOONY41C&#xA;RoAqIooABsAAOgGKpdpX+9+s/wDMYn/UHb4qmWKuxV2KuxV2KuxV2KuxV2KobVP+Obd/8YZP+IHF&#xA;XaX/AMc20/4wx/8AEBiqJxV2KuxV2KuxVgv5mecfLMGkan5Zn1Mwaxf2jQpFb7zRC5UxrIxqqrTr&#xA;QsCR0yvLk4ImVW24sRyGo86J99C6eceR/IUo8zW0tpp7/ocTW4nNuI/qPoi3LuHLH1DKJeANAf2q&#xA;nxOnx6fPhE50cg/rbG+Xdy5uONRPJjGORBhGV8uvvri7h8OT324t4Lm3lt50EsEyNHLGwqrIwoyk&#xA;eBBybN842g1/yf8AmPLZ2Il09PrJtoI5eDxyWEl2SrK0hb4GhUEsOj1G1My4ZYSFT4RcvMH6aj7z&#xA;e2/Rp4CDY/Hff2PpLMRudirsVdiqW/8ATS/9GX/M3FUC0vnL/GSxrFF/hb0qvMQnretwb4R8fLjy&#xA;pvx9um+UXk8T+i7AR035a7Pj3y6V8ufx/Uhr6LW1/MrSpluLwaG+l3kc1vGvKzN2s0LRmWiNxdoy&#xA;/FmYfZop3YNe69b5T1Hz7c6lNH5hsvq1ksRMUn1S3t6yclAHOHVdTY/DXYxL/rdiq8qFhaeo2oDy&#xA;9qRQkW40WbTdVZbw+oW+u61MLNluOPURxI+x41I6FU81TSJJPJnl3SVgur+10m6+u3ZvNDvbq3kE&#xA;qXaxW/1B2guGjidgqrvwHps225Csh8zan52s/IOhzaNp76VqRSAX2n2MHrC2UW5/cIscF6UUSBV+&#xA;G3cU2qn2wqyXyjPez211PfRGG+lkt3uoWAUpK1hbF1IBYCjVFKnFU+xV2KuxV2KuxVgmq/m9oml/&#xA;pOW8sbuOysDdxW96RD6V1cWAJuLeIepzVxwbj6iryAJWoGKs7xVTlubeKSKOWVI5LhjHAjMAZHCl&#xA;yqA/aIRGag7AnFUruPN2gRW8lxFcNqEcM5tZ10yGbUXimUElJI7JJ3Qim/ICn0jFWMeQ/PN/5r0H&#xA;Xnv4oYrmxkkiVLcfCI2iqFf95N+8VwwYNwelC0aVpirNtL/45tp/xhj/AOIDFUTirsVdirsVY55x&#xA;88ab5YW1jntru9vb4TG1s7GITTFLdOc0pUsg4RqRy3ruAATiUh45beSrj8xNRh1e/wBTS3utXiVv&#xA;UgiMiMLaJTE7RCSNoy0birV4sdqU60dndpThMxmOvQ19PO/Ip12XDLOY4QfD5b876nyHd9vN7/YW&#xA;cVlZw2sSqqRKF+FQoJ7tQeJ3y+h0FMQFfFXjP556DYjVdM1BFZbrVCLeeRxztyLJXliRkqvxMJpO&#xA;h3pkJ5zhBn6qqvSaO9bjY8mrLyvn5e/z8mb/AJUXFtJ5G063hfk9opimFOJDEl+lT2cZP8x4xM6I&#xA;36soWNjzia+TL8WbsVdiqW/9NL/0Zf8AM3FUf60PrCHmvrFeYjqOXEGnKnWlcHELrqi+i/Cl2KpU&#xA;fNvlQJeOdasQmnEDUG+sw0tyTQCY8v3e+3xUxVMoJ4LiGOe3kWaCVQ8UsbBkZWFQysNiCMVX4qlu&#xA;lf736z/zGJ/1B2+KplirsVdirsVdirD/AD1pWhWeg6leNpWkNHeSRyatcamoS2ogIW4n4o7Ssuyq&#xA;Njv9oDFWJ+W/zN1XU7+xh0zzNovmS61EFxo0Vpc2EyKsTSuBL6t1woqEfvU+1QVFcVZh5q8r3Wo+&#xA;bPK2sWok5abNdrdTCZgsUM9jcRK4hLhGb1nQclXl70xVKvyv8qa7o00kmpWi2C2+l6fpAjSSOQXU&#xA;1gZjJe/uyaCX1hx50frUDFWcap/xzbv/AIwyf8QOKqeiRvFpFmjyvOwhSskgUMarXfgqLt06Yqjc&#xA;VdirsVUruSWO1mkhXnKkbNGlCasASBQbmpyMiQDTPGAZAHlbw/z35vt9XtobbzXoVjI9tHPPFDLd&#xA;3NtKjoFilgR4KOWkDkcTxVgDXJ9lxOoEjLapVt8efc158kBkkIG4DkTzPvHTy8ntNho2lafx+pWs&#xA;dvwhjtk9NaUhhHGNB7KNvu8MrGOIkZVuUcIu+qMybJ2KsY/MzTLDUPI2sC9EhjtLaW9QwbyB7ZDK&#xA;vEbcq8ace4NMMTRB7leU/kL5lgtdbuNNeSAW+qrzgdJEQc4CEQemAatIH+Gjb++ZueBlES9WwHPc&#xA;er1bS68PJx4VGZiOX3vfcwXIdirsVS3/AKaX/oy/5m4ql7+XL0+ahqYlH1eol9Xf1hxQp9XH7PpG&#xA;vLp1+/ME6aXjcd7fb7vc4/gnxOL8e73KF9oF4/5laV5gSKSSyh0u8sZpEmKpHLJNDLGXhLqGVlRx&#xA;8Kt8XGv2VK5zkLfKenefbbUppPMN79ZsmiIij+t29xSTkpB4Q6VpjD4a7mVv9XuFWBf4F84DzPo2&#xA;sx6O8Vh5dCKNIWazKyUYhlsGDxloySJ/9MYPzGxG+FU41Lyt55tvy803TdK9aLUo7u4ubm3tJxGy&#xA;R3Ek80UHJZ7LmsJmRTwuEHw9HX4CFeiaMuoLo9iupU/SK28QvKMHHrBB6nxAKD8Vd6DFVHSv979Z&#xA;/wCYxP8AqDt8VTLFXYq7FXYq7FWMfmDqY0/SLZ47jUIb+a6SLTk0pI5bia44O/pelN+6dDGjswcg&#xA;UFaggHFWDeUtW82a5qK6D9b1Oz0u0c2999V0m10sWhjj9QW0kxurogsvD+4j6MCGHYq9gwK7FUNq&#xA;n/HNu/8AjDJ/xA4q7S/+Obaf8YY/+IDFUTiqU+Z/NGk+WtM/SOptJ6TSx28MUEbTTSzStxSOONAW&#xA;Zm8BirGdQ/N3RV0rTtQ0mIXkeoSLEWupDYxW5YutLiR0f02DRMOJXtX5y04GTIYb2I3sLapZQDTH&#xA;vOdr56886FoOseXFlgt5oLr1rK31FrMw3L0S2ujMiL6yRFWJSnfpk82PgmY9zYDYenaRpn1O3jku&#xA;OEmpyQxJf3aLx9aSNApf6TU5jjHEEkDcoEQDaPybJ2KuxVxAIodwcVfLvm/y9q3kDzJbAzrd+k6X&#xA;umXTxKS0dvPzjVgCCDGzKj06jj40zO0MRImHLnXqr6hvtW9VY5uPliAQR+P7fc+gfIvnCz81+X4N&#xA;SgKpPul5bggmOVSQQQC1A1OS79CMo1GA45UW6MrFshyhk7FUt/6aX/oy/wCZuKqEnnHy5Hrv6Be8&#xA;pqvNYvq/py05vH6qrz4+nUxnl9rLhgnw8VelFhES+YtEi1+Dy/JeRprNzbvdwWRJ5tDGwVnG1Op2&#xA;FamhI2U0pSmOKsTv/wAy9Atb/VdOgiuL++0iawtZ7e1WIl7jU5GjgijaSSNOQK/GWZQvj1oqnUmv&#xA;2FnpcWo60y6HFIQrJqM1vGUdjRUZ0kkh5N24ucVTFWVlDKQysKgjcEHFUu0r/e/Wf+YxP+oO3xVM&#xA;sVdirsVdirsVY95z8tanrkWlvpmpJpV/pV8L6C5kt/raEi3mtyhj9SHtcE15dumKpX5U8m+ctF1q&#xA;7vb3zLb6hZ6jcteahZppv1dnlNulupSX6zLwAEKGnE1ofHFWa4q7FUNqn/HNu/8AjDJ/xA4q7S/+&#xA;Obaf8YY/+IDFUTiqVeZvLGk+ZNM/R2po5hWRJ4ZYZHhmimiNY5YpEIZHU9CMVSLy/wDlZ5f0SVPS&#xA;lnuraNi6W10yyJzqSjE8QW4hv2q77nfMSOkiMnHZtt1WTxjEkVwgDa96FAm+o/ZyAZjHHHGgSNQi&#xA;LsqqKAfIDMslqbxV2KuxV2KuxVjXnzyLpnnDSktLtmhuLdjJaXMdKozLxIYEEMrDqKeBG4ByUJmJ&#xA;BjzH4/tRIWKfP/5d+bLnyN5u9K9cpps7+hqMZ5/ClaerxCs3KM9QFqdxm9yRjqsXFEer9Pc40JcJ&#xA;ovqKCeC4gjuLeRZoJlWSKWNgyOjCqsrCoIINQRmhIINFyl+BUomubeDzIDPKkQaz+EuwWv73tXFU&#xA;sl8t+VpPMf6ebUX+teul0bcXK/VzNHB9XV/S6chHtXMgaiQhw7V9vO2PCLtE3Nnp0vmyx8wJqcCN&#xA;a2dzYS2zFWDx3MkUvJXDrwZXt16hqivTrmOySvyn5L8p+WdSmv7HUIXlmiMLD6tpFt8LMr/bsbS0&#xA;lO6dGcr7VoQrbHofym0S2a/9LzGl7BeC2Is9Vt7G8gaW2nmnL3Cotu03Jrh+jK1SSzNtxVTC/wDI&#xA;GmXHk3TPL0GvQwy6ZJJLFd04rWYSh1jWCe3mhRVnKxqkwAWityWoJVmWkSaZpuk2WnC/imFnBFbi&#xA;ZnjUv6SBORC0UE0rQYFdos0M15rDxOsiG8UckIYf7x2/cYqmmKuxV2KuxV2KoDWtD03WbVba/R2j&#xA;jcSxPFLLBIkgBUOksLRyKwDHcNiqV6NpN/Z6jxtfMkuoadESLnT7wRXMqEqQAlwnpSr8VD+959x3&#xA;2VZHirsVQ2qf8c27/wCMMn/EDirtL/45tp/xhj/4gMVROKuxV2KuxV2KuxV2KuxV2KuxV8+/n/5e&#xA;vLbzHBrCwMdLvYQhuI1oI7qOvNZWFaerFTiSOq/fmaHKYZKHKX4BasmIHfqzD8hfOFtqPlz/AA/K&#xA;5+vaVyMfIluds7lkIY/yFuFKbClMs7QwSjPj6SRhlYp6lmvblKa1tZyDPCkpX7PNQ1K+FRiqn+i9&#xA;N/5ZIf8AkWn9MVd+i9N/5ZIf+Raf0xV36L03/lkh/wCRaf0xV36L03/lkh/5Fp/TFXfovTf+WSH/&#xA;AJFp/TFXfovTf+WSH/kWn9MVVoYIIFKQxrEpNSqKFFfGgxVfirsVdirsVdiqS+b9Fl1jRJbSGNZ5&#xA;gQ8drNcT2sExFRwnktw0hj3qVoQSBXbFXl2neVf0Vc+Xz5p0nyz5VaeqNeaTLPbai8whYhI3hjiR&#xA;SJOLvWV1oCNwcKva8CuxVDap/wAc27/4wyf8QOKu0v8A45tp/wAYY/8AiAxVE4q7FXYq7FXYq7FX&#xA;Yq7FXYq7FUk87eWl8zeVtQ0QyCF7pFMExBISaJ1lhcgEEhZY1JGKh8y6fdan5E86w3HIo9lcendx&#xA;xn4ZI0fjcRVIPwniQDTwbN7psv5nCYy+obH39D8Rv9jin0z2fV9le2l9aRXdnMlxazqHhmjIZWU9&#xA;wRmjlExNHm5StgV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVTluLeFo1llSNpn9OEOwUu9C3Fa9TRSa&#xA;DwxV4zonk7zQ1xp0Wu3fmLTYNPEreZNUuNdlFlOBGwjNoUuWlAMnFquq0Sob4sVe1Yq7FUp1fW9F&#xA;jgns5L+2S8mWaCK2aaMSPKkPqNGqE8i6owYqN6EHFUbpf/HNtP8AjDH/AMQGKonFXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXjn59eRFurT/FFmKTQBY72NV3fkVjjk279EO38vQA5maLU+FPf6Tz/W1ZY2LQv/&#xA;ADj754eRZPKd69fTVp9MZjvSvKWIePUuPpzM7T0/8Y+KMUuj23NO3OxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KsY/MC6sk0uzsLnSItcm1a8js7KwnZY4jNwefm0pWT0/TSF2DBSajbfFWB+WLXytc+aLRm&#xA;8uiTQ7+/vLHRL271C7vma600SO831S5MkMcbfV5PTZTyBXcCooqzjzTr3mDTvNfliztI4jpWozXa&#xA;XvxE3Ejw2NxPHEqFCqryiBLB+VdqUrVVjfkbW/NHmhTbXGvzwmbTtO1k3djDZBreS+9dZNPImt50&#xA;KR+kpBZfU8WxVF6t+VduNRm1iC+WGNbi5v57VbdRzMq2kjBXRkCO0+nh3cL8QdgR+1hVm+iTetpF&#xA;nJweOsKDhIOLCgpuPowKjcVdirsVdirsVdirsVdirsVdirsVUru0try1mtLqJZra4Rop4XFVdHHF&#xA;lYeBBxV8t+e/KWr+QvNi3Nk0q2qyifS7+hFaUbiWFQWU/CR360oc3+izxyw4JcwHGyR4TYfQf5e+&#xA;dLTzb5dhv0dPr0YEeo26VHpzU3+Ekni3VTX8Qc1GpwHFMjp0b4ysMmzHZOxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxVL9d8v6Rr1j9R1SD17cOsqcXeJ0kT7LxyRMkiMKndWBxVA6b5G8s6be2N3Z2rRvplubX&#xA;TojLK8UCOSXaONmZBI/KjyU5MOpxVOZbS1mlgmmhSSW2YvbSOoZo3ZShZCRVSUYqSOxIxVSsNK0v&#xA;T/X+oWcFp9ZkM9z6EaRepK32pH4AcmPdjvireqf8c27/AOMMn/EDirtL/wCObaf8YY/+IDFUTirs&#xA;VdirsVdirsVdirsVdirsVdirsVSTzl5S0/zVoM2kXrGMORJBOu7RSrXg4G1etCO48OuW4cpxyEh0&#xA;YyjYp80Wt15p/LXzk6E+ldWzBZ4wS0NxC242+HkrDcdwfA5v5xhqce39hccExL6T8neddF81aat3&#xA;p8oEygfWrQn44mI9wvJa9GAofnUDnpwMDUubkRkCE/yDJ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxVDap/xzbv/jDJ/wAQOKu0v/jm2n/GGP8A4gMVROKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsO/&#xA;Mf8ALjTfOWnDkRb6tbKwsbvoKnfhLQEshP3dR3rl6XVHEf6PVhOFvnXT9Q81+QfMtSj2WoW20sEg&#xA;BV426qf5kbY7HsO4GbnNgx6iNjn0Lj7xL6W8ieetJ83aSl3assd4gAvLLlV4n6e1VPUH+O2c/lxS&#xA;xyqQcmMgWS5WydirsVdirsVdirsVdirsVdirsVdirsVdiqG1T/jm3f8Axhk/4gcVdpf/ABzbT/jD&#xA;H/xAYqicVdirsVdirsVdirsVdirsVdirsVdirsVdirFvPn5eaH5wsfTvFMV/CjCzvo9nQncBuzJX&#xA;qp+ih3zJ02qliO3JjKAL5yP+Lvy4810Nba9tzXY1hnhJ/wCGRqfR7EZvJRx6nHf4DjbxL6Q8h+fN&#xA;J84aT9btD6V3DRb2zY/FE5/WrU+E5oM+CWKVFyYyBZNlLJ2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;Dap/xzbv/jDJ/wAQOKu0v/jm2n/GGP8A4gMVROKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksf&#xA;87eStJ83aO2n344SKedrdqAZIX2qVr2alGHf50OX6fUSxSsMZRBfNciecPy1817FrW9i6MKmG5gJ&#xA;r8nRqfQfBhm//d6mH4sOPvEvpLyP540jzdpC31i3CdKLeWbH44ZCKkf5Sn9lu/zqBoNRp5YpUXIj&#xA;KwyLKGTsVdirsVdirsVdirsVdirsVdirsVQ2qf8AHNu/+MMn/EDirtL/AOObaf8AGGP/AIgMVROK&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjnnvyPpfm/RXsLsCO5jq9jdgfHDLT8Ubo69/mA&#xA;Rfp9RLFKwxlGw+btL1HzR+W/m8+pGYrq3IS7tGP7ueFt6VXYgjdW7HOglGGox/jZxwTEvqHy35i0&#xA;zzDo1vq2nSc7e4X7J+0jjZkcdmU/50znMuI45GJckG0zytLsVdirsVdirsVdirsVdiqEu9W060vb&#xA;GyuZ1ju9SkeKxhNS0rxRNM4AH8scZJJ2+kjFUmg/MPypc281xZT3F9HbyrDKtnZXty4LhijiOGGR&#xA;2if024ygcDTZsVYlqn5lar/iGTy876ZbSveXNsbOR5RcSWYtoJYpUaQwqsh9Z+S8WPIBFUgNICr0&#xA;jS/+Obaf8YY/+IDAqJxV2KuxV2KuJAFTsBirgQRUbg4q7FXYq7FXYq4kAVOwGKuBBFRuDirsVdir&#xA;sVdiriQBU7AYqwv8zvy9tfOGjfuuMer2oLWFwe9dzE5/lb8DvmXpNScUv6J5sJwsMf8AyT8leb/K&#xA;8uqR61D9XtLlYmgjEySKZFLBm4ozUPGm+ZHaGox5K4ebHHEjm9UzWNrsVdiriQBU7AYq4EEVG4OK&#xA;uxV2KuxV2Ksa8x+UI9W8yeX9YRIEl0qW5F1cFaXDW9xZzwCONwpNPUmVuJIHfriqX/l95J1bQJmm&#xA;1Sa3ka206y0WxFqXo9rp5lKTTc1WksnrfEoqBT7RrirJ7/VdEgsryW+vbeCztv3V/LLMkaRF1U8Z&#xA;XJAQlZFO5GxHjirENY17yXo2j3p0y/fVr3TLX61+iLbWZWuPQ4q/qEPclhGEcPyofh+yDsCqyp/L&#xA;mnOKNJeEAhv97rwbqajpN4jFXP5c051KtJeFT1/068H6pcVcfLmnFlYyXnJa0/0687/89cVWjyzp&#xA;g40kvPhYuv8Ap979pq1/3d/lHFUPL5d8vLIltLcXIlMLMsL6jecjDEODtxM9Sq+sAx9xXtirG77z&#xA;F5btdS0Gx0p5dTsNWLr9ettWuWjiSOeC1HphJJBKfVulDAMOKgknsSrLn8uac4o0l4QCG/3uvBup&#xA;qOk3iMCufy5pzqVaS8Knr/p14P1S4q4+XNOLKxkvOS1p/p153/564qtHlnTBxpJefCxdf9PvftNW&#xA;v+7v8o4qh5fLvl5ZEtpbi5EphZlhfUbzkYYhwduJnqVX1gGPuK9sVSoXvl43eg22lPcajp2sSz20&#xA;epWuqTSW8RtoHl41Wdi7N6RUcRQUNSDQFVP38uac4o0l4QCG/wB7rwbqajpN4jFXP5c051KtJeFT&#xA;1/068H6pcVcfLmnFlYyXnJa0/wBOvO//AD1xVaPLOmDjSS8+Fi6/6fe/aatf93f5RxVDy+XfLyyJ&#xA;bS3FyJTCzLC+o3nIwxDg7cTPUqvrAMfcV7YqkU+q6Kt9oVpoZk1ew1RpIzdWmr3D+kkJVC6JHJJ6&#xA;irU8zVVWlK8iqsVZO/lzTnFGkvCAQ3+914N1NR0m8RgVz+XNOdSrSXhU9f8ATrwfqlxVx8uacWVj&#xA;JeclrT/Trzv/AM9cVWjyzpg40kvPhYuv+n3v2mrX/d3+UcVQ8vl3y8siW0txciUwsywvqN5yMMQ4&#xA;O3Ez1Kr6wDH3Fe2KoB/PWnRaroljpiwX+i6ifq41a2uRLHE9HWJaRrIpDPF6dXkX4iAvM8gFWWYq&#xA;7FXYq7FXYq7FXmUfkfWdMa9ns7OW5hg81LrkFmbhZZrq2NhHA1JLmWnNZyzqJXX7HbbFWVeS/L01&#xA;j5Pg0nV4I3aRrl7izbjLGkd1cSTC3PVWEaSiPw28MVZHirsVdirsVee+dvIWp6x5g1G804tE2peW&#xA;9Q0l7t53KJcTS25gQRFzwVlR+RjX570xVHeSvKzLcahq+r6PBYXFxfC70uwcQTvZAWkNq7RyRl0R&#xA;pTCWPBuhFd6jFWaYq7FXYq7FXlX5n6Rp8fmC8vLjVrXRm1ry3qWkxXd/fLAhuHltjEkcU0g4rxDc&#xA;zEvf4tyMVTj8vE097a91+5SztLbV9SSfSLWOe2uEgcWkVlSKaB5IvUmMb7Rt0anWoxVnKXVtJPLb&#xA;pMjzwBTNCrAugepQso3XlQ0r1xVUxV2KuxV57528hanrHmDUbzTi0Tal5b1DSXu3ncolxNLbmBBE&#xA;XPBWVH5GNfnvTFUR5M8lWo1DUfMGs6Ba2Wo3V4lxpttIlvPNZJFbQwfBNH6ioXeFn+Bu/jXFWdYq&#xA;7FXYq7FXnvnbyFqeseYNRvNOLRNqXlvUNJe7edyiXE0tuYEERc8FZUfkY1+e9MVRfkryhGt9qGva&#xA;vodvYX1zeC40u0dYJ5bJFtIbZ/Tlj5qhlaEseDdCK71xVm+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KvI/P3nnzBpXmG/gj1v8ARb215pcOk6QYIXF/bXUkIupuciPJ8JkkjqrALx8SDiqc&#xA;efxq5/MXyaNJtbW8u/qmsfub6V4YeP8AodSXjiuGqO3wYqxTyjHqE3nRbC+CWN0dZ12e4it+MkNv&#xA;f/UbRbZ7b1V+P/R5pXBeMVPLamFUR+UNxOZ/JjRXj308/l+9j1lnKloxbXcP1eNyoHxRSSyoA3xf&#xA;arir2fArsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVS&#xA;fzb/AId/Qjf4ip+i/rFpzr6lPW+tRfVq+l8X+9Hp+383w1xVOMVSrXf0B6ul/pWnr/XU/RX2/U+t&#xA;8Hpw9P4v7vny7cOXL4a4q3bfoL/Ed96VP059Wt/rfLnz+rcpPQ4cvh4c/U+xtyrXfFU0xV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>49.606689</stDim:w>
            <stDim:h>70.157511</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Helvetica</stFnt:fontName>
                  <stFnt:fontFamily>Helvetica</stFnt:fontFamily>
                  <stFnt:fontFace>Medium</stFnt:fontFace>
                  <stFnt:fontType>Type 1</stFnt:fontType>
                  <stFnt:versionString>003.001</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>hv______.PFB; hv______.PFM</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -146.202 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 146.202 li
192 146.202 li
192 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 0 mo
192 0 li
192 146.202 li
0 146.202 li
0 0 li
cp
clp
grestore
30.0659 127.342 mo
30.0659 10.9189 li
173.983 10.9189 li
173.983 127.342 li
30.0659 127.342 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
.39 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
30.0659 127.342 mo
30.0659 10.9189 li
173.983 10.9189 li
173.983 127.342 li
30.0659 127.342 li
@
30.0659 127.342 mo
30.0659 125.891 li
30.0659 127.342 mo
30.0659 126.604 li
30.0659 127.342 mo
30.0659 10.9189 li
30.0659 127.342 mo
173.983 127.342 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Helvetica def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990, 1997, 1998, 1999 Adobe Systems Incorporated.  All Rights Reserved.Helvetica is a trademark of Linotype-Hell AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 127 /minus put
def
/UniqueID 44701 def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 0 718 737 523 538 688 703] def
/OtherBlues [270 281 -220 -207] def
/FamilyBlues [-19 0 718 737 523 538 688 703] def
/FamilyOtherBlues [270 281 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/zero <1C60D8A8C9B7EF326C968E306016D52B972317960D8F5FD9CF1940741
2ACDAB79CA610AF5680AA7B72207450A6242E2E0D68A5786F14263E889E5C8F2
E3B1F3B57C131555AFBBA2F2574AAA6D70E3BCBA1C3BCCEEE066DF7> |-
/one <1C60D8A8C9B7EF322B88E7B3B83FEFDBAEDBDBF34DA8137760E7130B21
E4AD345C85AC723F334BEB61938BD65CFC89B4FB9FF8> |-
/minus <1C60D8A8C9B7F374CC52CC6AFA414A834D96E3500AE21BFB98508788
FC7E> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SYHDPG+Helvetica /Helvetica findfont ct_VMDictPut
/SYHDPG+Helvetica*1 
[48{/.notdef}rp /zero /one 77{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPG+Helvetica nf
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
23.6675 136.615 mo
(10)
[3.80859 0 ]xsh
SYHDPG+Helvetica*1 [4.56652 0 0 -4.56652 0 0 ]msf
31.2778 132.383 mo
(\1771)
[2.66699 0 ]xsh
66.0273 127.342 mo
66.0273 125.891 li
66.0273 127.342 mo
66.0273 126.604 li
64.3862 127.342 mo
64.3862 126.604 li
62.5547 127.342 mo
62.5547 126.604 li
60.4619 127.342 mo
60.4619 126.604 li
58.0596 127.342 mo
58.0596 126.604 li
55.2056 127.342 mo
55.2056 126.604 li
51.7095 127.342 mo
51.7095 126.604 li
47.2139 127.342 mo
47.2139 126.604 li
40.8877 127.342 mo
40.8877 126.604 li
@
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
60.9624 136.615 mo
(10)
[3.80859 0 ]xsh
SYHDPG+Helvetica*1 [4.56652 0 0 -4.56652 0 0 ]msf
68.5723 132.383 mo
(0)sh
102.012 127.342 mo
102.012 125.891 li
102.012 127.342 mo
102.012 126.604 li
100.371 127.342 mo
100.371 126.604 li
98.5156 127.342 mo
98.5156 126.604 li
96.4468 127.342 mo
96.4468 126.604 li
94.021 127.342 mo
94.021 126.604 li
91.1904 127.342 mo
91.1904 126.604 li
87.6943 127.342 mo
87.6943 126.604 li
83.1997 127.342 mo
83.1997 126.604 li
76.873 127.342 mo
76.873 126.604 li
@
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
96.9492 136.615 mo
(10)
[3.80859 0 ]xsh
SYHDPG+Helvetica*1 [4.56652 0 0 -4.56652 0 0 ]msf
104.559 132.383 mo
(1)sh
137.998 127.342 mo
137.998 125.891 li
137.998 127.342 mo
137.998 126.604 li
136.357 127.342 mo
136.357 126.604 li
134.502 127.342 mo
134.502 126.604 li
132.408 127.342 mo
132.408 126.604 li
130.007 127.342 mo
130.007 126.604 li
127.152 127.342 mo
127.152 126.604 li
123.68 127.342 mo
123.68 126.604 li
119.185 127.342 mo
119.185 126.604 li
112.834 127.342 mo
112.834 126.604 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPG+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7EF326B521ECF54C8B5A1823FE69FA06387976EF15912CA
2CDA2533C9465BA7A26890CB14E00D5302DA30754A8D882285488F566A848DB1
47F35FB324475F64975761151E92421F0A87A071DBDCE313F43B7ED0EE45382A
201B4EE4186F1FFE753A5DFF15AB1D98FE235181891E842EE4EC730EB3A21CE3
8A847AF33F417CDE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPG+Helvetica /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/SYHDPG+Helvetica*1 
[48{/.notdef}rp /zero /one /two 76{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPG+Helvetica nf
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
132.933 136.615 mo
(10)
[3.80859 0 ]xsh
SYHDPG+Helvetica*1 [4.56652 0 0 -4.56652 0 0 ]msf
140.544 132.383 mo
(2)sh
173.983 127.342 mo
173.983 125.891 li
173.983 127.342 mo
173.983 126.604 li
172.318 127.342 mo
172.318 126.604 li
170.486 127.342 mo
170.486 126.604 li
168.394 127.342 mo
168.394 126.604 li
165.991 127.342 mo
165.991 126.604 li
163.137 127.342 mo
163.137 126.604 li
159.665 127.342 mo
159.665 126.604 li
155.17 127.342 mo
155.17 126.604 li
148.819 127.342 mo
148.819 126.604 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPG+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7EF32628E1261785C20D980324E75073C191110FF1DF4
F419F448F462DDCBF01F49514B54CF7F0EB797563420F11FA9B2A870CA2FAFCA
7BF082E8CA0E2FF35D921F9F1AC34584712B0A0077B0C704E6D603F8AD41559F
54EB34B872207887B41FB66A1203507BC16DAB327994FA639B9001AE05899646
700CF8E1B6168C5B7CF545795406B8E1F23BB3C2F5D73EC7968D39A5B597FC2B
C81D1DC416629EB76E1C99970D381D679CD5A57691EAF8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPG+Helvetica /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/SYHDPG+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three 75{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPG+Helvetica nf
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
168.92 136.615 mo
(10)
[3.80859 0 ]xsh
SYHDPG+Helvetica*1 [4.56652 0 0 -4.56652 0 0 ]msf
176.528 132.383 mo
(3)sh
30.0659 127.342 mo
31.4927 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
@
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
13.894 129.886 mo
(10)
[3.80859 0 ]xsh
SYHDPG+Helvetica*1 [4.56652 0 0 -4.56652 0 0 ]msf
21.5044 125.654 mo
(\177)sh
24.1714 125.654 mo
(12)
[2.53906 0 ]xsh
30.0659 88.5254 mo
31.4927 88.5254 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
@
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
13.894 91.0723 mo
(10)
[3.80859 0 ]xsh
SYHDPG+Helvetica*1 [4.56652 0 0 -4.56652 0 0 ]msf
21.5044 86.8359 mo
(\177)sh
24.1714 86.8359 mo
(10)
[2.53906 0 ]xsh
30.0659 49.7104 mo
31.4927 49.7104 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPG+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7EF3215BE57159D4F4BFA3C872F39ADA92BFE9288487A
97C6EFD98F578BBC2816F32D04509AD26EEA95F04BA1945FA81AF290563239CF
0739378BE51FE126D55A1BC75807D245336424C9214BC46BA6D4CEC05163B30F
75014D6052F2FC7397D286353B5ED17ABCA76ED3D83B8303060D3490C1FF5CCC
7BE6E338C40F50110AC16AF7E8E791FB357412BEC619138DE3107B599DC60AB8
D303142F26A30837419BF59F47881153A58F64FE59AE91D9C7C833E81BE56AAE
FBE2F7B6282D006375F76B8AD9A83CFA32DAD6A43E42C103A582803691A9856C
CFF6D9043F2C28AC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPG+Helvetica /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/SYHDPG+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three 4{/.notdef}rp /eight 70{/.notdef}rp 
/minus 128{/.notdef}rp]
SYHDPG+Helvetica nf
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
13.894 52.2573 mo
(10)
[3.80859 0 ]xsh
SYHDPG+Helvetica*1 [4.56652 0 0 -4.56652 0 0 ]msf
21.5044 48.0229 mo
(\177)sh
24.1714 48.0229 mo
(8)sh
30.0659 10.9189 mo
31.4927 10.9189 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPG+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7EF326DA8A82F3E3A701BDBF87B0445B24BB4A9441F8832
C322D1BC33CF817D969D30356F5A9C7B6A3BC04BCB60307EEA3C8DBDCAEDF63B
B0D16D5E88C603BCDDAF740BE4D413C23FF83ABB568EDD80EC21C6080EFCCE97
BC5B698D120BBDD3ACB1C21306A55CFC0AF870A681C2F910A278AFB09345386F
B78FE3E94B4F156D6934F4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPG+Helvetica /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/SYHDPG+Helvetica*1 
[48{/.notdef}rp /zero /one /two /three 2{/.notdef}rp /six /.notdef 
/eight 70{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPG+Helvetica nf
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
13.894 13.4644 mo
(10)
[3.80859 0 ]xsh
SYHDPG+Helvetica*1 [4.56652 0 0 -4.56652 0 0 ]msf
21.5044 9.22998 mo
(\177)sh
24.1714 9.22998 mo
(6)sh
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
30.0659 127.342 mo
30.0659 127.342 li
@
gsave
44.0508 120.634 mo
143.657 120.634 li
143.657 25.8789 li
44.0508 25.8789 li
44.0508 120.634 li
cp
clp
.856223 lw
132.019 105.933 mo
132.019 106.719 131.379 107.358 130.592 107.358 cv
129.804 107.358 129.164 106.719 129.164 105.933 cv
129.164 105.145 129.804 104.505 130.592 104.505 cv
131.379 104.505 132.019 105.145 132.019 105.933 cv
131.949 105.727 mo
131.949 106.515 131.311 107.154 130.522 107.154 cv
129.734 107.154 129.096 106.515 129.096 105.727 cv
129.096 104.938 129.734 104.3 130.522 104.3 cv
131.311 104.3 131.949 104.938 131.949 105.727 cv
131.882 105.761 mo
131.882 106.549 131.242 107.188 130.454 107.188 cv
129.667 107.188 129.027 106.549 129.027 105.761 cv
129.027 104.973 129.667 104.334 130.454 104.334 cv
131.242 104.334 131.882 104.973 131.882 105.761 cv
131.779 105.795 mo
131.779 106.582 131.14 107.222 130.352 107.222 cv
129.563 107.222 128.925 106.582 128.925 105.795 cv
128.925 105.007 129.563 104.367 130.352 104.367 cv
131.14 104.367 131.779 105.007 131.779 105.795 cv
131.676 105.761 mo
131.676 106.549 131.036 107.188 130.249 107.188 cv
129.461 107.188 128.821 106.549 128.821 105.761 cv
128.821 104.973 129.461 104.334 130.249 104.334 cv
131.036 104.334 131.676 104.973 131.676 105.761 cv
131.607 105.624 mo
131.607 106.411 130.968 107.051 130.18 107.051 cv
129.393 107.051 128.753 106.411 128.753 105.624 cv
128.753 104.836 129.393 104.197 130.18 104.197 cv
130.968 104.197 131.607 104.836 131.607 105.624 cv
131.539 105.658 mo
131.539 106.445 130.899 107.085 130.112 107.085 cv
129.324 107.085 128.685 106.445 128.685 105.658 cv
128.685 104.87 129.324 104.23 130.112 104.23 cv
130.899 104.23 131.539 104.87 131.539 105.658 cv
131.471 105.385 mo
131.471 106.172 130.831 106.812 130.043 106.812 cv
129.255 106.812 128.616 106.172 128.616 105.385 cv
128.616 104.597 129.255 103.957 130.043 103.957 cv
130.831 103.957 131.471 104.597 131.471 105.385 cv
131.401 105.315 mo
131.401 106.104 130.762 106.742 129.975 106.742 cv
129.187 106.742 128.547 106.104 128.547 105.315 cv
128.547 104.527 129.187 103.889 129.975 103.889 cv
130.762 103.889 131.401 104.527 131.401 105.315 cv
131.3 105.452 mo
131.3 106.24 130.659 106.879 129.872 106.879 cv
129.085 106.879 128.445 106.24 128.445 105.452 cv
128.445 104.664 129.085 104.025 129.872 104.025 cv
130.659 104.025 131.3 104.664 131.3 105.452 cv
131.196 105.385 mo
131.196 106.172 130.558 106.812 129.77 106.812 cv
128.981 106.812 128.343 106.172 128.343 105.385 cv
128.343 104.597 128.981 103.957 129.77 103.957 cv
130.558 103.957 131.196 104.597 131.196 105.385 cv
131.128 105.385 mo
131.128 106.172 130.488 106.812 129.701 106.812 cv
128.913 106.812 128.273 106.172 128.273 105.385 cv
128.273 104.597 128.913 103.957 129.701 103.957 cv
130.488 103.957 131.128 104.597 131.128 105.385 cv
131.059 105.315 mo
131.059 106.104 130.42 106.742 129.632 106.742 cv
128.844 106.742 128.206 106.104 128.206 105.315 cv
128.206 104.527 128.844 103.889 129.632 103.889 cv
130.42 103.889 131.059 104.527 131.059 105.315 cv
130.991 105.076 mo
130.991 105.863 130.352 106.503 129.563 106.503 cv
128.776 106.503 128.137 105.863 128.137 105.076 cv
128.137 104.288 128.776 103.648 129.563 103.648 cv
130.352 103.648 130.991 104.288 130.991 105.076 cv
130.889 104.768 mo
130.889 105.555 130.249 106.194 129.461 106.194 cv
128.673 106.194 128.034 105.555 128.034 104.768 cv
128.034 103.979 128.673 103.34 129.461 103.34 cv
130.249 103.34 130.889 103.979 130.889 104.768 cv
130.819 104.699 mo
130.819 105.487 130.18 106.126 129.393 106.126 cv
128.604 106.126 127.965 105.487 127.965 104.699 cv
127.965 103.911 128.604 103.272 129.393 103.272 cv
130.18 103.272 130.819 103.911 130.819 104.699 cv
130.717 104.801 mo
130.717 105.589 130.077 106.229 129.289 106.229 cv
128.502 106.229 127.862 105.589 127.862 104.801 cv
127.862 104.015 128.502 103.375 129.289 103.375 cv
130.077 103.375 130.717 104.015 130.717 104.801 cv
130.613 104.562 mo
130.613 105.35 129.975 105.988 129.187 105.988 cv
128.399 105.988 127.761 105.35 127.761 104.562 cv
127.761 103.773 128.399 103.135 129.187 103.135 cv
129.975 103.135 130.613 103.773 130.613 104.562 cv
130.546 104.562 mo
130.546 105.35 129.906 105.988 129.118 105.988 cv
128.331 105.988 127.691 105.35 127.691 104.562 cv
127.691 103.773 128.331 103.135 129.118 103.135 cv
129.906 103.135 130.546 103.773 130.546 104.562 cv
130.442 104.425 mo
130.442 105.213 129.804 105.852 129.016 105.852 cv
128.228 105.852 127.589 105.213 127.589 104.425 cv
127.589 103.637 128.228 102.998 129.016 102.998 cv
129.804 102.998 130.442 103.637 130.442 104.425 cv
130.374 104.356 mo
130.374 105.145 129.734 105.784 128.946 105.784 cv
128.159 105.784 127.52 105.145 127.52 104.356 cv
127.52 103.569 128.159 102.93 128.946 102.93 cv
129.734 102.93 130.374 103.569 130.374 104.356 cv
130.306 104.356 mo
130.306 105.145 129.667 105.784 128.879 105.784 cv
128.091 105.784 127.452 105.145 127.452 104.356 cv
127.452 103.569 128.091 102.93 128.879 102.93 cv
129.667 102.93 130.306 103.569 130.306 104.356 cv
130.203 104.219 mo
130.203 105.007 129.563 105.646 128.776 105.646 cv
127.988 105.646 127.349 105.007 127.349 104.219 cv
127.349 103.432 127.988 102.792 128.776 102.792 cv
129.563 102.792 130.203 103.432 130.203 104.219 cv
130.101 104.219 mo
130.101 105.007 129.461 105.646 128.673 105.646 cv
127.886 105.646 127.246 105.007 127.246 104.219 cv
127.246 103.432 127.886 102.792 128.673 102.792 cv
129.461 102.792 130.101 103.432 130.101 104.219 cv
130.031 104.151 mo
130.031 104.938 129.393 105.578 128.604 105.578 cv
127.816 105.578 127.178 104.938 127.178 104.151 cv
127.178 103.363 127.816 102.724 128.604 102.724 cv
129.393 102.724 130.031 103.363 130.031 104.151 cv
129.929 103.877 mo
129.929 104.664 129.289 105.304 128.502 105.304 cv
127.714 105.304 127.074 104.664 127.074 103.877 cv
127.074 103.089 127.714 102.449 128.502 102.449 cv
129.289 102.449 129.929 103.089 129.929 103.877 cv
129.827 103.706 mo
129.827 104.494 129.187 105.133 128.399 105.133 cv
127.612 105.133 126.973 104.494 126.973 103.706 cv
126.973 102.918 127.612 102.279 128.399 102.279 cv
129.187 102.279 129.827 102.918 129.827 103.706 cv
129.758 103.809 mo
129.758 104.597 129.118 105.235 128.331 105.235 cv
127.543 105.235 126.904 104.597 126.904 103.809 cv
126.904 103.021 127.543 102.382 128.331 102.382 cv
129.118 102.382 129.758 103.021 129.758 103.809 cv
129.689 103.809 mo
129.689 104.597 129.05 105.235 128.262 105.235 cv
127.475 105.235 126.835 104.597 126.835 103.809 cv
126.835 103.021 127.475 102.382 128.262 102.382 cv
129.05 102.382 129.689 103.021 129.689 103.809 cv
129.586 103.604 mo
129.586 104.391 128.946 105.03 128.159 105.03 cv
127.371 105.03 126.732 104.391 126.732 103.604 cv
126.732 102.815 127.371 102.176 128.159 102.176 cv
128.946 102.176 129.586 102.815 129.586 103.604 cv
129.483 103.397 mo
129.483 104.186 128.844 104.824 128.058 104.824 cv
127.27 104.824 126.63 104.186 126.63 103.397 cv
126.63 102.609 127.27 101.971 128.058 101.971 cv
128.844 101.971 129.483 102.609 129.483 103.397 cv
129.382 103.158 mo
129.382 103.945 128.742 104.585 127.954 104.585 cv
127.167 104.585 126.527 103.945 126.527 103.158 cv
126.527 102.37 127.167 101.73 127.954 101.73 cv
128.742 101.73 129.382 102.37 129.382 103.158 cv
129.278 103.328 mo
129.278 104.116 128.64 104.756 127.852 104.756 cv
127.063 104.756 126.425 104.116 126.425 103.328 cv
126.425 102.542 127.063 101.902 127.852 101.902 cv
128.64 101.902 129.278 102.542 129.278 103.328 cv
129.21 103.158 mo
129.21 103.945 128.57 104.585 127.783 104.585 cv
126.995 104.585 126.355 103.945 126.355 103.158 cv
126.355 102.37 126.995 101.73 127.783 101.73 cv
128.57 101.73 129.21 102.37 129.21 103.158 cv
129.107 102.815 mo
129.107 103.604 128.468 104.242 127.68 104.242 cv
126.893 104.242 126.253 103.604 126.253 102.815 cv
126.253 102.027 126.893 101.389 127.68 101.389 cv
128.468 101.389 129.107 102.027 129.107 102.815 cv
129.004 102.952 mo
129.004 103.74 128.365 104.379 127.577 104.379 cv
126.789 104.379 126.149 103.74 126.149 102.952 cv
126.149 102.164 126.789 101.525 127.577 101.525 cv
128.365 101.525 129.004 102.164 129.004 102.952 cv
128.901 102.85 mo
128.901 103.637 128.262 104.276 127.475 104.276 cv
126.687 104.276 126.047 103.637 126.047 102.85 cv
126.047 102.062 126.687 101.422 127.475 101.422 cv
128.262 101.422 128.901 102.062 128.901 102.85 cv
128.799 102.85 mo
128.799 103.637 128.159 104.276 127.371 104.276 cv
126.585 104.276 125.944 103.637 125.944 102.85 cv
125.944 102.062 126.585 101.422 127.371 101.422 cv
128.159 101.422 128.799 102.062 128.799 102.85 cv
128.73 102.885 mo
128.73 103.672 128.091 104.312 127.304 104.312 cv
126.516 104.312 125.876 103.672 125.876 102.885 cv
125.876 102.097 126.516 101.457 127.304 101.457 cv
128.091 101.457 128.73 102.097 128.73 102.885 cv
128.628 102.679 mo
128.628 103.467 127.988 104.105 127.201 104.105 cv
126.413 104.105 125.773 103.467 125.773 102.679 cv
125.773 101.891 126.413 101.251 127.201 101.251 cv
127.988 101.251 128.628 101.891 128.628 102.679 cv
128.524 102.746 mo
128.524 103.534 127.886 104.174 127.098 104.174 cv
126.311 104.174 125.671 103.534 125.671 102.746 cv
125.671 101.959 126.311 101.319 127.098 101.319 cv
127.886 101.319 128.524 101.959 128.524 102.746 cv
128.456 102.644 mo
128.456 103.432 127.816 104.07 127.029 104.07 cv
126.241 104.07 125.602 103.432 125.602 102.644 cv
125.602 101.855 126.241 101.217 127.029 101.217 cv
127.816 101.217 128.456 101.855 128.456 102.644 cv
128.319 102.233 mo
128.319 103.021 127.68 103.66 126.893 103.66 cv
126.104 103.66 125.465 103.021 125.465 102.233 cv
125.465 101.445 126.104 100.807 126.893 100.807 cv
127.68 100.807 128.319 101.445 128.319 102.233 cv
128.251 102.164 mo
128.251 102.952 127.612 103.592 126.824 103.592 cv
126.036 103.592 125.397 102.952 125.397 102.164 cv
125.397 101.377 126.036 100.737 126.824 100.737 cv
127.612 100.737 128.251 101.377 128.251 102.164 cv
128.148 102.233 mo
128.148 103.021 127.509 103.66 126.722 103.66 cv
125.934 103.66 125.294 103.021 125.294 102.233 cv
125.294 101.445 125.934 100.807 126.722 100.807 cv
127.509 100.807 128.148 101.445 128.148 102.233 cv
128.046 102.164 mo
128.046 102.952 127.406 103.592 126.618 103.592 cv
125.831 103.592 125.191 102.952 125.191 102.164 cv
125.191 101.377 125.831 100.737 126.618 100.737 cv
127.406 100.737 128.046 101.377 128.046 102.164 cv
127.942 101.891 mo
127.942 102.679 127.304 103.317 126.516 103.317 cv
125.728 103.317 125.089 102.679 125.089 101.891 cv
125.089 101.104 125.728 100.464 126.516 100.464 cv
127.304 100.464 127.942 101.104 127.942 101.891 cv
127.84 101.925 mo
127.84 102.713 127.201 103.352 126.413 103.352 cv
125.625 103.352 124.985 102.713 124.985 101.925 cv
124.985 101.137 125.625 100.498 126.413 100.498 cv
127.201 100.498 127.84 101.137 127.84 101.925 cv
127.703 102.062 mo
127.703 102.85 127.063 103.488 126.276 103.488 cv
125.488 103.488 124.849 102.85 124.849 102.062 cv
124.849 101.273 125.488 100.635 126.276 100.635 cv
127.063 100.635 127.703 101.273 127.703 102.062 cv
127.634 101.686 mo
127.634 102.473 126.995 103.112 126.207 103.112 cv
125.42 103.112 124.78 102.473 124.78 101.686 cv
124.78 100.897 125.42 100.258 126.207 100.258 cv
126.995 100.258 127.634 100.897 127.634 101.686 cv
127.531 101.514 mo
127.531 102.301 126.893 102.94 126.104 102.94 cv
125.316 102.94 124.677 102.301 124.677 101.514 cv
124.677 100.726 125.316 100.086 126.104 100.086 cv
126.893 100.086 127.531 100.726 127.531 101.514 cv
127.429 101.41 mo
127.429 102.199 126.789 102.838 126.002 102.838 cv
125.214 102.838 124.574 102.199 124.574 101.41 cv
124.574 100.624 125.214 99.9844 126.002 99.9844 cv
126.789 99.9844 127.429 100.624 127.429 101.41 cv
127.326 101.206 mo
127.326 101.994 126.687 102.633 125.898 102.633 cv
125.111 102.633 124.472 101.994 124.472 101.206 cv
124.472 100.418 125.111 99.7783 125.898 99.7783 cv
126.687 99.7783 127.326 100.418 127.326 101.206 cv
127.189 101.069 mo
127.189 101.855 126.55 102.495 125.762 102.495 cv
124.974 102.495 124.335 101.855 124.335 101.069 cv
124.335 100.281 124.974 99.6416 125.762 99.6416 cv
126.55 99.6416 127.189 100.281 127.189 101.069 cv
127.086 100.863 mo
127.086 101.651 126.446 102.291 125.659 102.291 cv
124.871 102.291 124.232 101.651 124.232 100.863 cv
124.232 100.075 124.871 99.4365 125.659 99.4365 cv
126.446 99.4365 127.086 100.075 127.086 100.863 cv
126.983 100.795 mo
126.983 101.582 126.344 102.222 125.556 102.222 cv
124.769 102.222 124.129 101.582 124.129 100.795 cv
124.129 100.007 124.769 99.3672 125.556 99.3672 cv
126.344 99.3672 126.983 100.007 126.983 100.795 cv
126.881 101.034 mo
126.881 101.822 126.241 102.461 125.453 102.461 cv
124.665 102.461 124.027 101.822 124.027 101.034 cv
124.027 100.246 124.665 99.6074 125.453 99.6074 cv
126.241 99.6074 126.881 100.246 126.881 101.034 cv
126.778 100.932 mo
126.778 101.719 126.14 102.358 125.352 102.358 cv
124.563 102.358 123.925 101.719 123.925 100.932 cv
123.925 100.144 124.563 99.5039 125.352 99.5039 cv
126.14 99.5039 126.778 100.144 126.778 100.932 cv
126.676 100.521 mo
126.676 101.309 126.036 101.948 125.249 101.948 cv
124.461 101.948 123.821 101.309 123.821 100.521 cv
123.821 99.7334 124.461 99.0938 125.249 99.0938 cv
126.036 99.0938 126.676 99.7334 126.676 100.521 cv
126.538 100.726 mo
126.538 101.514 125.898 102.152 125.111 102.152 cv
124.323 102.152 123.684 101.514 123.684 100.726 cv
123.684 99.9375 124.323 99.2998 125.111 99.2998 cv
125.898 99.2998 126.538 99.9375 126.538 100.726 cv
126.437 100.486 mo
126.437 101.273 125.796 101.913 125.009 101.913 cv
124.222 101.913 123.582 101.273 123.582 100.486 cv
123.582 99.6982 124.222 99.0586 125.009 99.0586 cv
125.796 99.0586 126.437 99.6982 126.437 100.486 cv
126.333 100.144 mo
126.333 100.932 125.694 101.57 124.906 101.57 cv
124.118 101.57 123.479 100.932 123.479 100.144 cv
123.479 99.3555 124.118 98.7168 124.906 98.7168 cv
125.694 98.7168 126.333 99.3555 126.333 100.144 cv
126.23 100.075 mo
126.23 100.863 125.591 101.503 124.804 101.503 cv
124.016 101.503 123.376 100.863 123.376 100.075 cv
123.376 99.2881 124.016 98.6484 124.804 98.6484 cv
125.591 98.6484 126.23 99.2881 126.23 100.075 cv
126.128 100.041 mo
126.128 100.828 125.488 101.468 124.7 101.468 cv
123.913 101.468 123.273 100.828 123.273 100.041 cv
123.273 99.2529 123.913 98.6133 124.7 98.6133 cv
125.488 98.6133 126.128 99.2529 126.128 100.041 cv
125.991 100.075 mo
125.991 100.863 125.352 101.503 124.563 101.503 cv
123.776 101.503 123.137 100.863 123.137 100.075 cv
123.137 99.2881 123.776 98.6484 124.563 98.6484 cv
125.352 98.6484 125.991 99.2881 125.991 100.075 cv
125.888 99.6982 mo
125.888 100.486 125.249 101.125 124.461 101.125 cv
123.673 101.125 123.034 100.486 123.034 99.6982 cv
123.034 98.9102 123.673 98.2715 124.461 98.2715 cv
125.249 98.2715 125.888 98.9102 125.888 99.6982 cv
125.785 99.6982 mo
125.785 100.486 125.146 101.125 124.358 101.125 cv
123.57 101.125 122.931 100.486 122.931 99.6982 cv
122.931 98.9102 123.57 98.2715 124.358 98.2715 cv
125.146 98.2715 125.785 98.9102 125.785 99.6982 cv
125.648 99.6982 mo
125.648 100.486 125.009 101.125 124.222 101.125 cv
123.434 101.125 122.794 100.486 122.794 99.6982 cv
122.794 98.9102 123.434 98.2715 124.222 98.2715 cv
125.009 98.2715 125.648 98.9102 125.648 99.6982 cv
125.546 99.4932 mo
125.546 100.281 124.906 100.921 124.118 100.921 cv
123.331 100.921 122.691 100.281 122.691 99.4932 cv
122.691 98.7061 123.331 98.0664 124.118 98.0664 cv
124.906 98.0664 125.546 98.7061 125.546 99.4932 cv
125.408 99.6299 mo
125.408 100.418 124.769 101.058 123.98 101.058 cv
123.194 101.058 122.554 100.418 122.554 99.6299 cv
122.554 98.8428 123.194 98.2031 123.98 98.2031 cv
124.769 98.2031 125.408 98.8428 125.408 99.6299 cv
125.305 99.4248 mo
125.305 100.213 124.665 100.852 123.879 100.852 cv
123.091 100.852 122.452 100.213 122.452 99.4248 cv
122.452 98.6367 123.091 97.998 123.879 97.998 cv
124.665 97.998 125.305 98.6367 125.305 99.4248 cv
125.168 99.2881 mo
125.168 100.075 124.529 100.715 123.741 100.715 cv
122.953 100.715 122.314 100.075 122.314 99.2881 cv
122.314 98.5 122.953 97.8604 123.741 97.8604 cv
124.529 97.8604 125.168 98.5 125.168 99.2881 cv
125.065 99.4248 mo
125.065 100.213 124.426 100.852 123.639 100.852 cv
122.851 100.852 122.211 100.213 122.211 99.4248 cv
122.211 98.6367 122.851 97.998 123.639 97.998 cv
124.426 97.998 125.065 98.6367 125.065 99.4248 cv
124.895 99.2881 mo
124.895 100.075 124.255 100.715 123.468 100.715 cv
122.68 100.715 122.04 100.075 122.04 99.2881 cv
122.04 98.5 122.68 97.8604 123.468 97.8604 cv
124.255 97.8604 124.895 98.5 124.895 99.2881 cv
124.792 98.8428 mo
124.792 99.6299 124.152 100.27 123.364 100.27 cv
122.577 100.27 121.938 99.6299 121.938 98.8428 cv
121.938 98.0547 122.577 97.416 123.364 97.416 cv
124.152 97.416 124.792 98.0547 124.792 98.8428 cv
124.688 98.9453 mo
124.688 99.7334 124.05 100.372 123.262 100.372 cv
122.474 100.372 121.835 99.7334 121.835 98.9453 cv
121.835 98.1572 122.474 97.5186 123.262 97.5186 cv
124.05 97.5186 124.688 98.1572 124.688 98.9453 cv
124.552 98.7734 mo
124.552 99.5615 123.913 100.201 123.125 100.201 cv
122.337 100.201 121.698 99.5615 121.698 98.7734 cv
121.698 97.9863 122.337 97.3467 123.125 97.3467 cv
123.913 97.3467 124.552 97.9863 124.552 98.7734 cv
124.415 98.6035 mo
124.415 99.3906 123.776 100.03 122.988 100.03 cv
122.2 100.03 121.562 99.3906 121.562 98.6035 cv
121.562 97.8154 122.2 97.1758 122.988 97.1758 cv
123.776 97.1758 124.415 97.8154 124.415 98.6035 cv
124.277 98.6709 mo
124.277 99.459 123.639 100.098 122.851 100.098 cv
122.063 100.098 121.425 99.459 121.425 98.6709 cv
121.425 97.8828 122.063 97.2441 122.851 97.2441 cv
123.639 97.2441 124.277 97.8828 124.277 98.6709 cv
124.175 98.5342 mo
124.175 99.3223 123.536 99.9609 122.749 99.9609 cv
121.961 99.9609 121.321 99.3223 121.321 98.5342 cv
121.321 97.7461 121.961 97.1074 122.749 97.1074 cv
123.536 97.1074 124.175 97.7461 124.175 98.5342 cv
124.038 98.2607 mo
124.038 99.0479 123.398 99.6875 122.611 99.6875 cv
121.823 99.6875 121.184 99.0479 121.184 98.2607 cv
121.184 97.4727 121.823 96.833 122.611 96.833 cv
123.398 96.833 124.038 97.4727 124.038 98.2607 cv
123.936 97.9863 mo
123.936 98.7734 123.296 99.4131 122.508 99.4131 cv
121.721 99.4131 121.081 98.7734 121.081 97.9863 cv
121.081 97.1982 121.721 96.5586 122.508 96.5586 cv
123.296 96.5586 123.936 97.1982 123.936 97.9863 cv
123.765 97.8828 mo
123.765 98.6709 123.125 99.3105 122.337 99.3105 cv
121.55 99.3105 120.91 98.6709 120.91 97.8828 cv
120.91 97.0957 121.55 96.4561 122.337 96.4561 cv
123.125 96.4561 123.765 97.0957 123.765 97.8828 cv
123.661 97.7129 mo
123.661 98.5 123.022 99.1396 122.234 99.1396 cv
121.446 99.1396 120.808 98.5 120.808 97.7129 cv
120.808 96.9248 121.446 96.2852 122.234 96.2852 cv
123.022 96.2852 123.661 96.9248 123.661 97.7129 cv
123.524 97.3701 mo
123.524 98.1572 122.886 98.7969 122.098 98.7969 cv
121.31 98.7969 120.671 98.1572 120.671 97.3701 cv
120.671 96.582 121.31 95.9424 122.098 95.9424 cv
122.886 95.9424 123.524 96.582 123.524 97.3701 cv
123.388 97.3008 mo
123.388 98.0889 122.749 98.7285 121.961 98.7285 cv
121.173 98.7285 120.534 98.0889 120.534 97.3008 cv
120.534 96.5137 121.173 95.874 121.961 95.874 cv
122.749 95.874 123.388 96.5137 123.388 97.3008 cv
123.217 97.4727 mo
123.217 98.2607 122.577 98.9004 121.789 98.9004 cv
121.001 98.9004 120.362 98.2607 120.362 97.4727 cv
120.362 96.6846 121.001 96.0459 121.789 96.0459 cv
122.577 96.0459 123.217 96.6846 123.217 97.4727 cv
123.113 97.5068 mo
123.113 98.2949 122.474 98.9336 121.687 98.9336 cv
120.898 98.9336 120.259 98.2949 120.259 97.5068 cv
120.259 96.7188 120.898 96.0791 121.687 96.0791 cv
122.474 96.0791 123.113 96.7188 123.113 97.5068 cv
122.977 97.1641 mo
122.977 97.9521 122.337 98.5918 121.55 98.5918 cv
120.762 98.5918 120.122 97.9521 120.122 97.1641 cv
120.122 96.376 120.762 95.7373 121.55 95.7373 cv
122.337 95.7373 122.977 96.376 122.977 97.1641 cv
122.84 96.958 mo
122.84 97.7461 122.2 98.3857 121.413 98.3857 cv
120.625 98.3857 119.985 97.7461 119.985 96.958 cv
119.985 96.1709 120.625 95.5313 121.413 95.5313 cv
122.2 95.5313 122.84 96.1709 122.84 96.958 cv
122.702 96.9922 mo
122.702 97.7803 122.063 98.4199 121.274 98.4199 cv
120.488 98.4199 119.849 97.7803 119.849 96.9922 cv
119.849 96.2061 120.488 95.5664 121.274 95.5664 cv
122.063 95.5664 122.702 96.2061 122.702 96.9922 cv
122.531 96.7881 mo
122.531 97.5752 121.892 98.2148 121.104 98.2148 cv
120.316 98.2148 119.677 97.5752 119.677 96.7881 cv
119.677 96 120.316 95.3604 121.104 95.3604 cv
121.892 95.3604 122.531 96 122.531 96.7881 cv
122.395 96.5469 mo
122.395 97.3359 121.755 97.9746 120.968 97.9746 cv
120.18 97.9746 119.54 97.3359 119.54 96.5469 cv
119.54 95.7607 120.18 95.1211 120.968 95.1211 cv
121.755 95.1211 122.395 95.7607 122.395 96.5469 cv
122.258 96.2061 mo
122.258 96.9922 121.618 97.6318 120.831 97.6318 cv
120.043 97.6318 119.403 96.9922 119.403 96.2061 cv
119.403 95.418 120.043 94.7783 120.831 94.7783 cv
121.618 94.7783 122.258 95.418 122.258 96.2061 cv
122.12 96.2061 mo
122.12 96.9922 121.48 97.6318 120.692 97.6318 cv
119.905 97.6318 119.266 96.9922 119.266 96.2061 cv
119.266 95.418 119.905 94.7783 120.692 94.7783 cv
121.48 94.7783 122.12 95.418 122.12 96.2061 cv
121.949 96.3076 mo
121.949 97.0957 121.31 97.7344 120.522 97.7344 cv
119.734 97.7344 119.095 97.0957 119.095 96.3076 cv
119.095 95.5195 119.734 94.8809 120.522 94.8809 cv
121.31 94.8809 121.949 95.5195 121.949 96.3076 cv
121.813 96.3428 mo
121.813 97.1299 121.173 97.7695 120.385 97.7695 cv
119.598 97.7695 118.958 97.1299 118.958 96.3428 cv
118.958 95.5547 119.598 94.916 120.385 94.916 cv
121.173 94.916 121.813 95.5547 121.813 96.3428 cv
121.675 96.2393 mo
121.675 97.0273 121.035 97.667 120.248 97.667 cv
119.46 97.667 118.82 97.0273 118.82 96.2393 cv
118.82 95.4521 119.46 94.8125 120.248 94.8125 cv
121.035 94.8125 121.675 95.4521 121.675 96.2393 cv
121.47 96 mo
121.47 96.7881 120.831 97.4268 120.043 97.4268 cv
119.255 97.4268 118.616 96.7881 118.616 96 cv
118.616 95.2119 119.255 94.5732 120.043 94.5732 cv
120.831 94.5732 121.47 95.2119 121.47 96 cv
121.332 96 mo
121.332 96.7881 120.692 97.4268 119.905 97.4268 cv
119.117 97.4268 118.478 96.7881 118.478 96 cv
118.478 95.2119 119.117 94.5732 119.905 94.5732 cv
120.692 94.5732 121.332 95.2119 121.332 96 cv
121.195 95.7607 mo
121.195 96.5469 120.556 97.1875 119.769 97.1875 cv
118.98 97.1875 118.342 96.5469 118.342 95.7607 cv
118.342 94.9727 118.98 94.333 119.769 94.333 cv
120.556 94.333 121.195 94.9727 121.195 95.7607 cv
121.059 95.5195 mo
121.059 96.3076 120.419 96.9473 119.632 96.9473 cv
118.844 96.9473 118.204 96.3076 118.204 95.5195 cv
118.204 94.7324 118.844 94.0938 119.632 94.0938 cv
120.419 94.0938 121.059 94.7324 121.059 95.5195 cv
120.853 95.6572 mo
120.853 96.4453 120.214 97.085 119.426 97.085 cv
118.639 97.085 117.999 96.4453 117.999 95.6572 cv
117.999 94.8701 118.639 94.2305 119.426 94.2305 cv
120.214 94.2305 120.853 94.8701 120.853 95.6572 cv
120.716 95.6572 mo
120.716 96.4453 120.077 97.085 119.289 97.085 cv
118.501 97.085 117.862 96.4453 117.862 95.6572 cv
117.862 94.8701 118.501 94.2305 119.289 94.2305 cv
120.077 94.2305 120.716 94.8701 120.716 95.6572 cv
120.579 94.835 mo
120.579 95.623 119.94 96.2617 119.152 96.2617 cv
118.364 96.2617 117.726 95.623 117.726 94.835 cv
117.726 94.0469 118.364 93.4082 119.152 93.4082 cv
119.94 93.4082 120.579 94.0469 120.579 94.835 cv
120.407 94.6299 mo
120.407 95.418 119.769 96.0576 118.98 96.0576 cv
118.192 96.0576 117.554 95.418 117.554 94.6299 cv
117.554 93.8428 118.192 93.2031 118.98 93.2031 cv
119.769 93.2031 120.407 93.8428 120.407 94.6299 cv
120.237 94.4922 mo
120.237 95.2803 119.598 95.9199 118.81 95.9199 cv
118.022 95.9199 117.383 95.2803 117.383 94.4922 cv
117.383 93.7051 118.022 93.0654 118.81 93.0654 cv
119.598 93.0654 120.237 93.7051 120.237 94.4922 cv
120.065 94.2881 mo
120.065 95.0742 119.426 95.7148 118.639 95.7148 cv
117.851 95.7148 117.211 95.0742 117.211 94.2881 cv
117.211 93.5 117.851 92.8604 118.639 92.8604 cv
119.426 92.8604 120.065 93.5 120.065 94.2881 cv
119.895 94.2188 mo
119.895 95.0068 119.255 95.6455 118.468 95.6455 cv
117.68 95.6455 117.04 95.0068 117.04 94.2188 cv
117.04 93.4316 117.68 92.792 118.468 92.792 cv
119.255 92.792 119.895 93.4316 119.895 94.2188 cv
119.688 94.2188 mo
119.688 95.0068 119.05 95.6455 118.262 95.6455 cv
117.474 95.6455 116.835 95.0068 116.835 94.2188 cv
116.835 93.4316 117.474 92.792 118.262 92.792 cv
119.05 92.792 119.688 93.4316 119.688 94.2188 cv
119.552 94.1504 mo
119.552 94.9375 118.913 95.5771 118.125 95.5771 cv
117.337 95.5771 116.697 94.9375 116.697 94.1504 cv
116.697 93.3623 117.337 92.7227 118.125 92.7227 cv
118.913 92.7227 119.552 93.3623 119.552 94.1504 cv
119.38 94.2188 mo
119.38 95.0068 118.741 95.6455 117.953 95.6455 cv
117.165 95.6455 116.526 95.0068 116.526 94.2188 cv
116.526 93.4316 117.165 92.792 117.953 92.792 cv
118.741 92.792 119.38 93.4316 119.38 94.2188 cv
119.175 94.2881 mo
119.175 95.0742 118.535 95.7148 117.748 95.7148 cv
116.96 95.7148 116.32 95.0742 116.32 94.2881 cv
116.32 93.5 116.96 92.8604 117.748 92.8604 cv
118.535 92.8604 119.175 93.5 119.175 94.2881 cv
119.004 93.8076 mo
119.004 94.5957 118.364 95.2344 117.577 95.2344 cv
116.789 95.2344 116.149 94.5957 116.149 93.8076 cv
116.149 93.0195 116.789 92.3799 117.577 92.3799 cv
118.364 92.3799 119.004 93.0195 119.004 93.8076 cv
118.832 93.1914 mo
118.832 93.9795 118.192 94.6191 117.405 94.6191 cv
116.617 94.6191 115.978 93.9795 115.978 93.1914 cv
115.978 92.4033 116.617 91.7646 117.405 91.7646 cv
118.192 91.7646 118.832 92.4033 118.832 93.1914 cv
118.661 92.8486 mo
118.661 93.6367 118.022 94.2764 117.234 94.2764 cv
116.446 94.2764 115.808 93.6367 115.808 92.8486 cv
115.808 92.0615 116.446 91.4219 117.234 91.4219 cv
118.022 91.4219 118.661 92.0615 118.661 92.8486 cv
118.456 92.8486 mo
118.456 93.6367 117.816 94.2764 117.028 94.2764 cv
116.241 94.2764 115.602 93.6367 115.602 92.8486 cv
115.602 92.0615 116.241 91.4219 117.028 91.4219 cv
117.816 91.4219 118.456 92.0615 118.456 92.8486 cv
118.284 92.917 mo
118.284 93.7051 117.645 94.3438 116.857 94.3438 cv
116.069 94.3438 115.43 93.7051 115.43 92.917 cv
115.43 92.1289 116.069 91.4902 116.857 91.4902 cv
117.645 91.4902 118.284 92.1289 118.284 92.917 cv
118.079 92.5068 mo
118.079 93.2939 117.44 93.9336 116.652 93.9336 cv
115.864 93.9336 115.226 93.2939 115.226 92.5068 cv
115.226 91.7188 115.864 91.0791 116.652 91.0791 cv
117.44 91.0791 118.079 91.7188 118.079 92.5068 cv
117.907 92.2324 mo
117.907 93.0195 117.269 93.6592 116.48 93.6592 cv
115.692 93.6592 115.054 93.0195 115.054 92.2324 cv
115.054 91.4443 115.692 90.8047 116.48 90.8047 cv
117.269 90.8047 117.907 91.4443 117.907 92.2324 cv
117.702 92.2666 mo
117.702 93.0547 117.063 93.6943 116.274 93.6943 cv
115.487 93.6943 114.848 93.0547 114.848 92.2666 cv
114.848 91.4795 115.487 90.8398 116.274 90.8398 cv
117.063 90.8398 117.702 91.4795 117.702 92.2666 cv
117.496 92.1641 mo
117.496 92.9521 116.857 93.5908 116.069 93.5908 cv
115.282 93.5908 114.644 92.9521 114.644 92.1641 cv
114.644 91.376 115.282 90.7373 116.069 90.7373 cv
116.857 90.7373 117.496 91.376 117.496 92.1641 cv
117.291 91.7529 mo
117.291 92.541 116.652 93.1797 115.864 93.1797 cv
115.077 93.1797 114.438 92.541 114.438 91.7529 cv
114.438 90.9648 115.077 90.3262 115.864 90.3262 cv
116.652 90.3262 117.291 90.9648 117.291 91.7529 cv
117.12 91.6162 mo
117.12 92.4033 116.48 93.043 115.692 93.043 cv
114.905 93.043 114.266 92.4033 114.266 91.6162 cv
114.266 90.8281 114.905 90.1885 115.692 90.1885 cv
116.48 90.1885 117.12 90.8281 117.12 91.6162 cv
116.88 91.3418 mo
116.88 92.1289 116.241 92.7686 115.453 92.7686 cv
114.665 92.7686 114.026 92.1289 114.026 91.3418 cv
114.026 90.5547 114.665 89.9141 115.453 89.9141 cv
116.241 89.9141 116.88 90.5547 116.88 91.3418 cv
116.675 91.2393 mo
116.675 92.0273 116.035 92.667 115.247 92.667 cv
114.46 92.667 113.82 92.0273 113.82 91.2393 cv
113.82 90.4521 114.46 89.8125 115.247 89.8125 cv
116.035 89.8125 116.675 90.4521 116.675 91.2393 cv
116.504 90.7598 mo
116.504 91.5469 115.864 92.1865 115.077 92.1865 cv
114.289 92.1865 113.649 91.5469 113.649 90.7598 cv
113.649 89.9717 114.289 89.332 115.077 89.332 cv
115.864 89.332 116.504 89.9717 116.504 90.7598 cv
116.265 90.5889 mo
116.265 91.376 115.625 92.0156 114.837 92.0156 cv
114.05 92.0156 113.41 91.376 113.41 90.5889 cv
113.41 89.8008 114.05 89.1611 114.837 89.1611 cv
115.625 89.1611 116.265 89.8008 116.265 90.5889 cv
116.059 90.8623 mo
116.059 91.6504 115.419 92.2891 114.632 92.2891 cv
113.844 92.2891 113.204 91.6504 113.204 90.8623 cv
113.204 90.0742 113.844 89.4355 114.632 89.4355 cv
115.419 89.4355 116.059 90.0742 116.059 90.8623 cv
115.853 90.623 mo
115.853 91.4102 115.214 92.0498 114.426 92.0498 cv
113.638 92.0498 112.999 91.4102 112.999 90.623 cv
112.999 89.835 113.638 89.1953 114.426 89.1953 cv
115.214 89.1953 115.853 89.835 115.853 90.623 cv
115.613 90.1094 mo
115.613 90.8975 114.974 91.5361 114.187 91.5361 cv
113.398 91.5361 112.759 90.8975 112.759 90.1094 cv
112.759 89.3213 113.398 88.6826 114.187 88.6826 cv
114.974 88.6826 115.613 89.3213 115.613 90.1094 cv
115.407 90.0742 mo
115.407 90.8623 114.769 91.501 113.98 91.501 cv
113.192 91.501 112.554 90.8623 112.554 90.0742 cv
112.554 89.2861 113.192 88.6475 113.98 88.6475 cv
114.769 88.6475 115.407 89.2861 115.407 90.0742 cv
115.168 89.9717 mo
115.168 90.7598 114.528 91.3984 113.741 91.3984 cv
112.953 91.3984 112.313 90.7598 112.313 89.9717 cv
112.313 89.1836 112.953 88.5449 113.741 88.5449 cv
114.528 88.5449 115.168 89.1836 115.168 89.9717 cv
114.929 89.3896 mo
114.929 90.1768 114.289 90.8164 113.501 90.8164 cv
112.713 90.8164 112.074 90.1768 112.074 89.3896 cv
112.074 88.6016 112.713 87.9629 113.501 87.9629 cv
114.289 87.9629 114.929 88.6016 114.929 89.3896 cv
114.688 88.876 mo
114.688 89.6641 114.05 90.3037 113.262 90.3037 cv
112.474 90.3037 111.834 89.6641 111.834 88.876 cv
111.834 88.0889 112.474 87.4492 113.262 87.4492 cv
114.05 87.4492 114.688 88.0889 114.688 88.876 cv
114.448 88.3281 mo
114.448 89.1162 113.809 89.7549 113.021 89.7549 cv
112.234 89.7549 111.595 89.1162 111.595 88.3281 cv
111.595 87.54 112.234 86.9014 113.021 86.9014 cv
113.809 86.9014 114.448 87.54 114.448 88.3281 cv
114.208 87.9854 mo
114.208 88.7734 113.569 89.4131 112.781 89.4131 cv
111.993 89.4131 111.354 88.7734 111.354 87.9854 cv
111.354 87.1982 111.993 86.5586 112.781 86.5586 cv
113.569 86.5586 114.208 87.1982 114.208 87.9854 cv
113.969 87.7803 mo
113.969 88.5674 113.329 89.207 112.542 89.207 cv
111.754 89.207 111.114 88.5674 111.114 87.7803 cv
111.114 86.9922 111.754 86.3535 112.542 86.3535 cv
113.329 86.3535 113.969 86.9922 113.969 87.7803 cv
113.729 87.5059 mo
113.729 88.293 113.09 88.9336 112.302 88.9336 cv
111.515 88.9336 110.875 88.293 110.875 87.5059 cv
110.875 86.7188 111.515 86.0791 112.302 86.0791 cv
113.09 86.0791 113.729 86.7188 113.729 87.5059 cv
113.456 87.2656 mo
113.456 88.0537 112.816 88.6924 112.028 88.6924 cv
111.241 88.6924 110.602 88.0537 110.602 87.2656 cv
110.602 86.4785 111.241 85.8398 112.028 85.8398 cv
112.816 85.8398 113.456 86.4785 113.456 87.2656 cv
113.216 87.0947 mo
113.216 87.8828 112.577 88.5225 111.789 88.5225 cv
111.001 88.5225 110.362 87.8828 110.362 87.0947 cv
110.362 86.3076 111.001 85.668 111.789 85.668 cv
112.577 85.668 113.216 86.3076 113.216 87.0947 cv
112.941 87.3691 mo
112.941 88.1563 112.302 88.7959 111.515 88.7959 cv
110.727 88.7959 110.087 88.1563 110.087 87.3691 cv
110.087 86.5811 110.727 85.9414 111.515 85.9414 cv
112.302 85.9414 112.941 86.5811 112.941 87.3691 cv
112.668 86.7188 mo
112.668 87.5059 112.028 88.1455 111.241 88.1455 cv
110.453 88.1455 109.813 87.5059 109.813 86.7188 cv
109.813 85.9307 110.453 85.292 111.241 85.292 cv
112.028 85.292 112.668 85.9307 112.668 86.7188 cv
112.428 86.1709 mo
112.428 86.958 111.789 87.5977 111.001 87.5977 cv
110.213 87.5977 109.574 86.958 109.574 86.1709 cv
109.574 85.3828 110.213 84.7432 111.001 84.7432 cv
111.789 84.7432 112.428 85.3828 112.428 86.1709 cv
112.119 85.793 mo
112.119 86.5811 111.48 87.2197 110.692 87.2197 cv
109.905 87.2197 109.266 86.5811 109.266 85.793 cv
109.266 85.0049 109.905 84.3662 110.692 84.3662 cv
111.48 84.3662 112.119 85.0049 112.119 85.793 cv
111.88 85.5195 mo
111.88 86.3076 111.241 86.9463 110.453 86.9463 cv
109.665 86.9463 109.025 86.3076 109.025 85.5195 cv
109.025 84.7314 109.665 84.0928 110.453 84.0928 cv
111.241 84.0928 111.88 84.7314 111.88 85.5195 cv
111.571 85.2109 mo
111.571 85.999 110.933 86.6387 110.145 86.6387 cv
109.356 86.6387 108.718 85.999 108.718 85.2109 cv
108.718 84.4229 109.356 83.7842 110.145 83.7842 cv
110.933 83.7842 111.571 84.4229 111.571 85.2109 cv
111.263 84.5615 mo
111.263 85.3477 110.624 85.9873 109.836 85.9873 cv
109.048 85.9873 108.409 85.3477 108.409 84.5615 cv
108.409 83.7734 109.048 83.1338 109.836 83.1338 cv
110.624 83.1338 111.263 83.7734 111.263 84.5615 cv
110.989 84.2861 mo
110.989 85.0742 110.351 85.7139 109.563 85.7139 cv
108.774 85.7139 108.135 85.0742 108.135 84.2861 cv
108.135 83.499 108.774 82.8594 109.563 82.8594 cv
110.351 82.8594 110.989 83.499 110.989 84.2861 cv
110.647 83.7734 mo
110.647 84.5615 110.008 85.1992 109.22 85.1992 cv
108.432 85.1992 107.793 84.5615 107.793 83.7734 cv
107.793 82.9854 108.432 82.3467 109.22 82.3467 cv
110.008 82.3467 110.647 82.9854 110.647 83.7734 cv
110.373 83.1221 mo
110.373 83.9102 109.733 84.5498 108.945 84.5498 cv
108.157 84.5498 107.52 83.9102 107.52 83.1221 cv
107.52 82.335 108.157 81.6953 108.945 81.6953 cv
109.733 81.6953 110.373 82.335 110.373 83.1221 cv
110.03 82.917 mo
110.03 83.7041 109.391 84.3438 108.603 84.3438 cv
107.815 84.3438 107.177 83.7041 107.177 82.917 cv
107.177 82.1289 107.815 81.4893 108.603 81.4893 cv
109.391 81.4893 110.03 82.1289 110.03 82.917 cv
109.723 82.3682 mo
109.723 83.1563 109.083 83.7959 108.296 83.7959 cv
107.508 83.7959 106.868 83.1563 106.868 82.3682 cv
106.868 81.5811 107.508 80.9414 108.296 80.9414 cv
109.083 80.9414 109.723 81.5811 109.723 82.3682 cv
109.38 81.5127 mo
109.38 82.3008 108.74 82.9385 107.953 82.9385 cv
107.165 82.9385 106.525 82.3008 106.525 81.5127 cv
106.525 80.7246 107.165 80.0859 107.953 80.0859 cv
108.74 80.0859 109.38 80.7246 109.38 81.5127 cv
109.071 80.9297 mo
109.071 81.7178 108.432 82.3574 107.645 82.3574 cv
106.856 82.3574 106.218 81.7178 106.218 80.9297 cv
106.218 80.1416 106.856 79.5029 107.645 79.5029 cv
108.432 79.5029 109.071 80.1416 109.071 80.9297 cv
108.729 80.3828 mo
108.729 81.1709 108.09 81.8086 107.302 81.8086 cv
106.515 81.8086 105.875 81.1709 105.875 80.3828 cv
105.875 79.5947 106.515 78.9551 107.302 78.9551 cv
108.09 78.9551 108.729 79.5947 108.729 80.3828 cv
108.353 79.9717 mo
108.353 80.7588 107.713 81.3984 106.926 81.3984 cv
106.138 81.3984 105.499 80.7588 105.499 79.9717 cv
105.499 79.1836 106.138 78.5439 106.926 78.5439 cv
107.713 78.5439 108.353 79.1836 108.353 79.9717 cv
108.009 79.5947 mo
108.009 80.3828 107.371 81.0215 106.583 81.0215 cv
105.796 81.0215 105.156 80.3828 105.156 79.5947 cv
105.156 78.8076 105.796 78.168 106.583 78.168 cv
107.371 78.168 108.009 78.8076 108.009 79.5947 cv
107.633 78.8076 mo
107.633 79.5947 106.993 80.2344 106.206 80.2344 cv
105.418 80.2344 104.778 79.5947 104.778 78.8076 cv
104.778 78.0195 105.418 77.3799 106.206 77.3799 cv
106.993 77.3799 107.633 78.0195 107.633 78.8076 cv
107.29 78.3271 mo
107.29 79.1143 106.651 79.7539 105.863 79.7539 cv
105.075 79.7539 104.437 79.1143 104.437 78.3271 cv
104.437 77.5391 105.075 76.9004 105.863 76.9004 cv
106.651 76.9004 107.29 77.5391 107.29 78.3271 cv
106.88 77.6416 mo
106.88 78.4297 106.24 79.0693 105.453 79.0693 cv
104.665 79.0693 104.025 78.4297 104.025 77.6416 cv
104.025 76.8545 104.665 76.2148 105.453 76.2148 cv
106.24 76.2148 106.88 76.8545 106.88 77.6416 cv
106.469 76.8545 mo
106.469 77.6416 105.829 78.2813 105.041 78.2813 cv
104.254 78.2813 103.614 77.6416 103.614 76.8545 cv
103.614 76.0664 104.254 75.4268 105.041 75.4268 cv
105.829 75.4268 106.469 76.0664 106.469 76.8545 cv
106.058 76.5117 mo
106.058 77.2998 105.418 77.9385 104.63 77.9385 cv
103.843 77.9385 103.203 77.2998 103.203 76.5117 cv
103.203 75.7236 103.843 75.085 104.63 75.085 cv
105.418 75.085 106.058 75.7236 106.058 76.5117 cv
105.646 75.1084 mo
105.646 75.8955 105.008 76.5352 104.22 76.5352 cv
103.432 76.5352 102.793 75.8955 102.793 75.1084 cv
102.793 74.3203 103.432 73.6812 104.22 73.6812 cv
105.008 73.6812 105.646 74.3203 105.646 75.1084 cv
105.235 74.0811 mo
105.235 74.8682 104.597 75.5078 103.809 75.5078 cv
103.021 75.5078 102.382 74.8682 102.382 74.0811 cv
102.382 73.293 103.021 72.6533 103.809 72.6533 cv
104.597 72.6533 105.235 73.293 105.235 74.0811 cv
104.79 73.9434 mo
104.79 74.7314 104.15 75.3711 103.363 75.3711 cv
102.575 75.3711 101.937 74.7314 101.937 73.9434 cv
101.937 73.1558 102.575 72.5161 103.363 72.5161 cv
104.15 72.5161 104.79 73.1558 104.79 73.9434 cv
104.345 73.875 mo
104.345 74.6621 103.706 75.3018 102.918 75.3018 cv
102.13 75.3018 101.491 74.6621 101.491 73.875 cv
101.491 73.0874 102.13 72.4478 102.918 72.4478 cv
103.706 72.4478 104.345 73.0874 104.345 73.875 cv
103.865 72.7793 mo
103.865 73.5669 103.227 74.2061 102.438 74.2061 cv
101.65 74.2061 101.012 73.5669 101.012 72.7793 cv
101.012 71.9917 101.65 71.3521 102.438 71.3521 cv
103.227 71.3521 103.865 71.9917 103.865 72.7793 cv
103.387 70.9297 mo
103.387 71.7173 102.747 72.3564 101.959 72.3564 cv
101.172 72.3564 100.532 71.7173 100.532 70.9297 cv
100.532 70.1421 101.172 69.5024 101.959 69.5024 cv
102.747 69.5024 103.387 70.1421 103.387 70.9297 cv
102.906 70.1074 mo
102.906 70.895 102.267 71.5347 101.479 71.5347 cv
100.691 71.5347 100.052 70.895 100.052 70.1074 cv
100.052 69.3203 100.691 68.6807 101.479 68.6807 cv
102.267 68.6807 102.906 69.3203 102.906 70.1074 cv
102.359 69.7651 mo
102.359 70.5527 101.72 71.1919 100.932 71.1919 cv
100.145 71.1919 99.5049 70.5527 99.5049 69.7651 cv
99.5049 68.9771 100.145 68.3379 100.932 68.3379 cv
101.72 68.3379 102.359 68.9771 102.359 69.7651 cv
101.845 69.2173 mo
101.845 70.0049 101.206 70.6445 100.418 70.6445 cv
99.6299 70.6445 98.9902 70.0049 98.9902 69.2173 cv
98.9902 68.4297 99.6299 67.79 100.418 67.79 cv
101.206 67.79 101.845 68.4297 101.845 69.2173 cv
101.297 67.916 mo
101.297 68.7036 100.657 69.3428 99.8691 69.3428 cv
99.082 69.3428 98.4424 68.7036 98.4424 67.916 cv
98.4424 67.1279 99.082 66.4888 99.8691 66.4888 cv
100.657 66.4888 101.297 67.1279 101.297 67.916 cv
100.715 65.7578 mo
100.715 66.5454 100.075 67.1846 99.2871 67.1846 cv
98.5 67.1846 97.8604 66.5454 97.8604 65.7578 cv
97.8604 64.9707 98.5 64.3311 99.2871 64.3311 cv
100.075 64.3311 100.715 64.9707 100.715 65.7578 cv
100.133 64.9707 mo
100.133 65.7578 99.4932 66.397 98.7051 66.397 cv
97.918 66.397 97.2783 65.7578 97.2783 64.9707 cv
97.2783 64.1826 97.918 63.5435 98.7051 63.5435 cv
99.4932 63.5435 100.133 64.1826 100.133 64.9707 cv
99.5508 64.4224 mo
99.5508 65.21 98.9111 65.8496 98.123 65.8496 cv
97.3359 65.8496 96.6963 65.21 96.6963 64.4224 cv
96.6963 63.6348 97.3359 62.9951 98.123 62.9951 cv
98.9111 62.9951 99.5508 63.6348 99.5508 64.4224 cv
98.8994 62.2305 mo
98.8994 63.0181 98.2598 63.6572 97.4727 63.6572 cv
96.6846 63.6572 96.0454 63.0181 96.0454 62.2305 cv
96.0454 61.4424 96.6846 60.8032 97.4727 60.8032 cv
98.2598 60.8032 98.8994 61.4424 98.8994 62.2305 cv
98.249 60.9287 mo
98.249 61.7168 97.6094 62.356 96.8213 62.356 cv
96.0342 62.356 95.395 61.7168 95.395 60.9287 cv
95.395 60.1411 96.0342 59.502 96.8213 59.502 cv
97.6094 59.502 98.249 60.1411 98.249 60.9287 cv
97.5303 60.8604 mo
97.5303 61.6484 96.8906 62.2876 96.1025 62.2876 cv
95.3149 62.2876 94.6758 61.6484 94.6758 60.8604 cv
94.6758 60.0728 95.3149 59.4336 96.1025 59.4336 cv
96.8906 59.4336 97.5303 60.0728 97.5303 60.8604 cv
96.8096 60.3809 mo
96.8096 61.1685 96.1709 61.8076 95.3833 61.8076 cv
94.5957 61.8076 93.9561 61.1685 93.9561 60.3809 cv
93.9561 59.5928 94.5957 58.9536 95.3833 58.9536 cv
96.1709 58.9536 96.8096 59.5928 96.8096 60.3809 cv
96.0571 58.9771 mo
96.0571 59.7642 95.418 60.4033 94.6299 60.4033 cv
93.8423 60.4033 93.2026 59.7642 93.2026 58.9771 cv
93.2026 58.189 93.8423 57.5498 94.6299 57.5498 cv
95.418 57.5498 96.0571 58.189 96.0571 58.9771 cv
95.2349 57.3672 mo
95.2349 58.1548 94.5957 58.7939 93.8076 58.7939 cv
93.02 58.7939 92.3809 58.1548 92.3809 57.3672 cv
92.3809 56.5791 93.02 55.9399 93.8076 55.9399 cv
94.5957 55.9399 95.2349 56.5791 95.2349 57.3672 cv
94.4131 56.1338 mo
94.4131 56.9219 93.7739 57.561 92.9858 57.561 cv
92.1982 57.561 91.5591 56.9219 91.5591 56.1338 cv
91.5591 55.3462 92.1982 54.707 92.9858 54.707 cv
93.7739 54.707 94.4131 55.3462 94.4131 56.1338 cv
93.4883 55.5176 mo
93.4883 56.3052 92.8486 56.9443 92.061 56.9443 cv
91.2734 56.9443 90.6338 56.3052 90.6338 55.5176 cv
90.6338 54.7295 91.2734 54.0903 92.061 54.0903 cv
92.8486 54.0903 93.4883 54.7295 93.4883 55.5176 cv
92.5635 52.6748 mo
92.5635 53.4629 91.9243 54.1021 91.1367 54.1021 cv
90.3486 54.1021 89.7095 53.4629 89.7095 52.6748 cv
89.7095 51.8872 90.3486 51.2476 91.1367 51.2476 cv
91.9243 51.2476 92.5635 51.8872 92.5635 52.6748 cv
91.5361 48.5308 mo
91.5361 49.3184 90.897 49.958 90.1089 49.958 cv
89.3213 49.958 88.6821 49.3184 88.6821 48.5308 cv
88.6821 47.7432 89.3213 47.104 90.1089 47.104 cv
90.897 47.104 91.5361 47.7432 91.5361 48.5308 cv
90.4746 46.2705 mo
90.4746 47.0581 89.835 47.6978 89.0474 47.6978 cv
88.2593 47.6978 87.6201 47.0581 87.6201 46.2705 cv
87.6201 45.4824 88.2593 44.8433 89.0474 44.8433 cv
89.835 44.8433 90.4746 45.4824 90.4746 46.2705 cv
89.3096 42.606 mo
89.3096 43.3936 88.6704 44.0327 87.8828 44.0327 cv
87.0947 44.0327 86.4561 43.3936 86.4561 42.606 cv
86.4561 41.8179 87.0947 41.1787 87.8828 41.1787 cv
88.6704 41.1787 89.3096 41.8179 89.3096 42.606 cv
88.043 39.3862 mo
88.043 40.1743 87.4033 40.8135 86.6157 40.8135 cv
85.8276 40.8135 85.1885 40.1743 85.1885 39.3862 cv
85.1885 38.5986 85.8276 37.959 86.6157 37.959 cv
87.4033 37.959 88.043 38.5986 88.043 39.3862 cv
86.6729 35.7217 mo
86.6729 36.5093 86.0337 37.1489 85.2456 37.1489 cv
84.458 37.1489 83.8188 36.5093 83.8188 35.7217 cv
83.8188 34.9336 84.458 34.2944 85.2456 34.2944 cv
86.0337 34.2944 86.6729 34.9336 86.6729 35.7217 cv
85.2339 31.6807 mo
85.2339 32.4683 84.5947 33.1074 83.8071 33.1074 cv
83.0195 33.1074 82.3799 32.4683 82.3799 31.6807 cv
82.3799 30.8926 83.0195 30.2534 83.8071 30.2534 cv
84.5947 30.2534 85.2339 30.8926 85.2339 31.6807 cv
83.5562 29.8652 mo
83.5562 30.6523 82.917 31.2925 82.1294 31.2925 cv
81.3413 31.2925 80.7021 30.6523 80.7021 29.8652 cv
80.7021 29.0776 81.3413 28.4385 82.1294 28.4385 cv
82.917 28.4385 83.5562 29.0776 83.5562 29.8652 cv
81.7407 29.625 mo
81.7407 30.4131 81.1011 31.0522 80.3135 31.0522 cv
79.5264 31.0522 78.8872 30.4131 78.8872 29.625 cv
78.8872 28.8374 79.5264 28.1982 80.3135 28.1982 cv
81.1011 28.1982 81.7407 28.8374 81.7407 29.625 cv
79.6177 31.4746 mo
79.6177 32.2627 78.978 32.9019 78.1904 32.9019 cv
77.4028 32.9019 76.7632 32.2627 76.7632 31.4746 cv
76.7632 30.687 77.4028 30.0479 78.1904 30.0479 cv
78.978 30.0479 79.6177 30.687 79.6177 31.4746 cv
77.2197 35.9619 mo
77.2197 36.749 76.5811 37.3882 75.793 37.3882 cv
75.0054 37.3882 74.3662 36.749 74.3662 35.9619 cv
74.3662 35.1738 75.0054 34.5347 75.793 34.5347 cv
76.5811 34.5347 77.2197 35.1738 77.2197 35.9619 cv
74.377 37.6396 mo
74.377 38.4272 73.7378 39.0664 72.9502 39.0664 cv
72.1626 39.0664 71.5229 38.4272 71.5229 37.6396 cv
71.5229 36.8521 72.1626 36.2124 72.9502 36.2124 cv
73.7378 36.2124 74.377 36.8521 74.377 37.6396 cv
70.9185 42.5713 mo
70.9185 43.3589 70.2788 43.9985 69.4912 43.9985 cv
68.7031 43.9985 68.064 43.3589 68.064 42.5713 cv
68.064 41.7837 68.7031 41.144 69.4912 41.144 cv
70.2788 41.144 70.9185 41.7837 70.9185 42.5713 cv
66.3975 47.6401 mo
66.3975 48.4282 65.7578 49.0674 64.9702 49.0674 cv
64.1826 49.0674 63.543 48.4282 63.543 47.6401 cv
63.543 46.8525 64.1826 46.2134 64.9702 46.2134 cv
65.7578 46.2134 66.3975 46.8525 66.3975 47.6401 cv
60.0615 56.4082 mo
60.0615 57.1958 59.4219 57.835 58.6343 57.835 cv
57.8462 57.835 57.207 57.1958 57.207 56.4082 cv
57.207 55.6201 57.8462 54.981 58.6343 54.981 cv
59.4219 54.981 60.0615 55.6201 60.0615 56.4082 cv
49.2388 59.9355 mo
49.2388 60.7231 48.5996 61.3623 47.812 61.3623 cv
47.0239 61.3623 46.3848 60.7231 46.3848 59.9355 cv
46.3848 59.1484 47.0239 58.5088 47.812 58.5088 cv
48.5996 58.5088 49.2388 59.1484 49.2388 59.9355 cv
@
141.3 116.857 mo
141.3 117.645 140.66 118.284 139.873 118.284 cv
139.085 118.284 138.445 117.645 138.445 116.857 cv
138.445 116.069 139.085 115.431 139.873 115.431 cv
140.66 115.431 141.3 116.069 141.3 116.857 cv
141.266 116.617 mo
141.266 117.405 140.627 118.045 139.839 118.045 cv
139.051 118.045 138.411 117.405 138.411 116.617 cv
138.411 115.83 139.051 115.19 139.839 115.19 cv
140.627 115.19 141.266 115.83 141.266 116.617 cv
141.197 116.549 mo
141.197 117.337 140.558 117.976 139.77 117.976 cv
138.982 117.976 138.343 117.337 138.343 116.549 cv
138.343 115.761 138.982 115.123 139.77 115.123 cv
140.558 115.123 141.197 115.761 141.197 116.549 cv
141.163 116.515 mo
141.163 117.303 140.523 117.941 139.736 117.941 cv
138.948 117.941 138.309 117.303 138.309 116.515 cv
138.309 115.728 138.948 115.088 139.736 115.088 cv
140.523 115.088 141.163 115.728 141.163 116.515 cv
141.128 116.412 mo
141.128 117.199 140.488 117.839 139.701 117.839 cv
138.913 117.839 138.273 117.199 138.273 116.412 cv
138.273 115.624 138.913 114.984 139.701 114.984 cv
140.488 114.984 141.128 115.624 141.128 116.412 cv
141.061 116.378 mo
141.061 117.166 140.421 117.805 139.633 117.805 cv
138.846 117.805 138.206 117.166 138.206 116.378 cv
138.206 115.59 138.846 114.951 139.633 114.951 cv
140.421 114.951 141.061 115.59 141.061 116.378 cv
141.061 116.275 mo
141.061 117.063 140.421 117.702 139.633 117.702 cv
138.846 117.702 138.206 117.063 138.206 116.275 cv
138.206 115.487 138.846 114.848 139.633 114.848 cv
140.421 114.848 141.061 115.487 141.061 116.275 cv
140.991 116.275 mo
140.991 117.063 140.352 117.702 139.564 117.702 cv
138.776 117.702 138.137 117.063 138.137 116.275 cv
138.137 115.487 138.776 114.848 139.564 114.848 cv
140.352 114.848 140.991 115.487 140.991 116.275 cv
140.957 116.275 mo
140.957 117.063 140.318 117.702 139.53 117.702 cv
138.742 117.702 138.103 117.063 138.103 116.275 cv
138.103 115.487 138.742 114.848 139.53 114.848 cv
140.318 114.848 140.957 115.487 140.957 116.275 cv
140.889 116.241 mo
140.889 117.029 140.249 117.668 139.461 117.668 cv
138.674 117.668 138.034 117.029 138.034 116.241 cv
138.034 115.453 138.674 114.814 139.461 114.814 cv
140.249 114.814 140.889 115.453 140.889 116.241 cv
140.854 116.206 mo
140.854 116.994 140.215 117.634 139.428 117.634 cv
138.64 117.634 138 116.994 138 116.206 cv
138 115.419 138.64 114.779 139.428 114.779 cv
140.215 114.779 140.854 115.419 140.854 116.206 cv
140.785 116.069 mo
140.785 116.857 140.146 117.496 139.358 117.496 cv
138.57 117.496 137.933 116.857 137.933 116.069 cv
137.933 115.281 138.57 114.643 139.358 114.643 cv
140.146 114.643 140.785 115.281 140.785 116.069 cv
140.752 116.002 mo
140.752 116.789 140.112 117.429 139.324 117.429 cv
138.537 117.429 137.897 116.789 137.897 116.002 cv
137.897 115.214 138.537 114.574 139.324 114.574 cv
140.112 114.574 140.752 115.214 140.752 116.002 cv
140.718 116.002 mo
140.718 116.789 140.078 117.429 139.29 117.429 cv
138.503 117.429 137.863 116.789 137.863 116.002 cv
137.863 115.214 138.503 114.574 139.29 114.574 cv
140.078 114.574 140.718 115.214 140.718 116.002 cv
140.683 116.002 mo
140.683 116.789 140.045 117.429 139.257 117.429 cv
138.469 117.429 137.829 116.789 137.829 116.002 cv
137.829 115.214 138.469 114.574 139.257 114.574 cv
140.045 114.574 140.683 115.214 140.683 116.002 cv
140.648 115.933 mo
140.648 116.721 140.01 117.359 139.222 117.359 cv
138.434 117.359 137.795 116.721 137.795 115.933 cv
137.795 115.145 138.434 114.506 139.222 114.506 cv
140.01 114.506 140.648 115.145 140.648 115.933 cv
140.581 115.728 mo
140.581 116.515 139.941 117.154 139.154 117.154 cv
138.366 117.154 137.727 116.515 137.727 115.728 cv
137.727 114.939 138.366 114.3 139.154 114.3 cv
139.941 114.3 140.581 114.939 140.581 115.728 cv
140.546 115.59 mo
140.546 116.378 139.906 117.018 139.119 117.018 cv
138.331 117.018 137.691 116.378 137.691 115.59 cv
137.691 114.803 138.331 114.163 139.119 114.163 cv
139.906 114.163 140.546 114.803 140.546 115.59 cv
140.512 115.659 mo
140.512 116.447 139.873 117.085 139.085 117.085 cv
138.297 117.085 137.658 116.447 137.658 115.659 cv
137.658 114.871 138.297 114.232 139.085 114.232 cv
139.873 114.232 140.512 114.871 140.512 115.659 cv
140.443 115.693 mo
140.443 116.48 139.804 117.12 139.016 117.12 cv
138.229 117.12 137.589 116.48 137.589 115.693 cv
137.589 114.905 138.229 114.266 139.016 114.266 cv
139.804 114.266 140.443 114.905 140.443 115.693 cv
140.409 115.59 mo
140.409 116.378 139.77 117.018 138.982 117.018 cv
138.194 117.018 137.555 116.378 137.555 115.59 cv
137.555 114.803 138.194 114.163 138.982 114.163 cv
139.77 114.163 140.409 114.803 140.409 115.59 cv
140.341 115.487 mo
140.341 116.275 139.701 116.914 138.913 116.914 cv
138.126 116.914 137.487 116.275 137.487 115.487 cv
137.487 114.699 138.126 114.061 138.913 114.061 cv
139.701 114.061 140.341 114.699 140.341 115.487 cv
140.307 115.385 mo
140.307 116.172 139.667 116.812 138.879 116.812 cv
138.092 116.812 137.452 116.172 137.452 115.385 cv
137.452 114.597 138.092 113.957 138.879 113.957 cv
139.667 113.957 140.307 114.597 140.307 115.385 cv
140.238 115.453 mo
140.238 116.241 139.599 116.881 138.812 116.881 cv
138.023 116.881 137.384 116.241 137.384 115.453 cv
137.384 114.666 138.023 114.026 138.812 114.026 cv
139.599 114.026 140.238 114.666 140.238 115.453 cv
140.203 115.385 mo
140.203 116.172 139.564 116.812 138.776 116.812 cv
137.988 116.812 137.35 116.172 137.35 115.385 cv
137.35 114.597 137.988 113.957 138.776 113.957 cv
139.564 113.957 140.203 114.597 140.203 115.385 cv
140.17 115.316 mo
140.17 116.104 139.53 116.744 138.742 116.744 cv
137.955 116.744 137.315 116.104 137.315 115.316 cv
137.315 114.529 137.955 113.89 138.742 113.89 cv
139.53 113.89 140.17 114.529 140.17 115.316 cv
140.136 115.248 mo
140.136 116.035 139.496 116.675 138.708 116.675 cv
137.921 116.675 137.281 116.035 137.281 115.248 cv
137.281 114.46 137.921 113.82 138.708 113.82 cv
139.496 113.82 140.136 114.46 140.136 115.248 cv
140.101 115.179 mo
140.101 115.967 139.461 116.606 138.674 116.606 cv
137.886 116.606 137.246 115.967 137.246 115.179 cv
137.246 114.391 137.886 113.752 138.674 113.752 cv
139.461 113.752 140.101 114.391 140.101 115.179 cv
140.033 115.145 mo
140.033 115.933 139.394 116.572 138.605 116.572 cv
137.817 116.572 137.179 115.933 137.179 115.145 cv
137.179 114.357 137.817 113.718 138.605 113.718 cv
139.394 113.718 140.033 114.357 140.033 115.145 cv
139.998 114.939 mo
139.998 115.728 139.358 116.366 138.57 116.366 cv
137.784 116.366 137.144 115.728 137.144 114.939 cv
137.144 114.151 137.784 113.512 138.57 113.512 cv
139.358 113.512 139.998 114.151 139.998 114.939 cv
139.964 114.769 mo
139.964 115.557 139.324 116.195 138.537 116.195 cv
137.749 116.195 137.109 115.557 137.109 114.769 cv
137.109 113.98 137.749 113.342 138.537 113.342 cv
139.324 113.342 139.964 113.98 139.964 114.769 cv
139.895 114.769 mo
139.895 115.557 139.257 116.195 138.469 116.195 cv
137.681 116.195 137.042 115.557 137.042 114.769 cv
137.042 113.98 137.681 113.342 138.469 113.342 cv
139.257 113.342 139.895 113.98 139.895 114.769 cv
139.861 114.837 mo
139.861 115.624 139.222 116.264 138.434 116.264 cv
137.646 116.264 137.007 115.624 137.007 114.837 cv
137.007 114.049 137.646 113.409 138.434 113.409 cv
139.222 113.409 139.861 114.049 139.861 114.837 cv
139.827 114.769 mo
139.827 115.557 139.188 116.195 138.399 116.195 cv
137.612 116.195 136.973 115.557 136.973 114.769 cv
136.973 113.98 137.612 113.342 138.399 113.342 cv
139.188 113.342 139.827 113.98 139.827 114.769 cv
139.758 114.631 mo
139.758 115.419 139.119 116.058 138.331 116.058 cv
137.543 116.058 136.904 115.419 136.904 114.631 cv
136.904 113.843 137.543 113.203 138.331 113.203 cv
139.119 113.203 139.758 113.843 139.758 114.631 cv
139.69 114.529 mo
139.69 115.316 139.051 115.955 138.264 115.955 cv
137.476 115.955 136.836 115.316 136.836 114.529 cv
136.836 113.741 137.476 113.102 138.264 113.102 cv
139.051 113.102 139.69 113.741 139.69 114.529 cv
139.655 114.597 mo
139.655 115.385 139.016 116.024 138.229 116.024 cv
137.44 116.024 136.801 115.385 136.801 114.597 cv
136.801 113.809 137.44 113.17 138.229 113.17 cv
139.016 113.17 139.655 113.809 139.655 114.597 cv
139.621 114.494 mo
139.621 115.281 138.982 115.921 138.194 115.921 cv
137.406 115.921 136.768 115.281 136.768 114.494 cv
136.768 113.706 137.406 113.066 138.194 113.066 cv
138.982 113.066 139.621 113.706 139.621 114.494 cv
139.554 114.494 mo
139.554 115.281 138.913 115.921 138.126 115.921 cv
137.339 115.921 136.699 115.281 136.699 114.494 cv
136.699 113.706 137.339 113.066 138.126 113.066 cv
138.913 113.066 139.554 113.706 139.554 114.494 cv
139.519 114.46 mo
139.519 115.248 138.879 115.887 138.092 115.887 cv
137.304 115.887 136.664 115.248 136.664 114.46 cv
136.664 113.672 137.304 113.033 138.092 113.033 cv
138.879 113.033 139.519 113.672 139.519 114.46 cv
139.484 114.357 mo
139.484 115.145 138.846 115.784 138.058 115.784 cv
137.27 115.784 136.631 115.145 136.631 114.357 cv
136.631 113.569 137.27 112.93 138.058 112.93 cv
138.846 112.93 139.484 113.569 139.484 114.357 cv
139.416 114.46 mo
139.416 115.248 138.776 115.887 137.988 115.887 cv
137.201 115.887 136.562 115.248 136.562 114.46 cv
136.562 113.672 137.201 113.033 137.988 113.033 cv
138.776 113.033 139.416 113.672 139.416 114.46 cv
139.382 114.187 mo
139.382 114.973 138.742 115.612 137.955 115.612 cv
137.167 115.612 136.527 114.973 136.527 114.187 cv
136.527 113.398 137.167 112.76 137.955 112.76 cv
138.742 112.76 139.382 113.398 139.382 114.187 cv
139.313 113.98 mo
139.313 114.769 138.674 115.408 137.886 115.408 cv
137.098 115.408 136.459 114.769 136.459 113.98 cv
136.459 113.192 137.098 112.554 137.886 112.554 cv
138.674 112.554 139.313 113.192 139.313 113.98 cv
139.279 114.015 mo
139.279 114.803 138.64 115.441 137.852 115.441 cv
137.064 115.441 136.425 114.803 136.425 114.015 cv
136.425 113.227 137.064 112.588 137.852 112.588 cv
138.64 112.588 139.279 113.227 139.279 114.015 cv
139.21 114.083 mo
139.21 114.871 138.57 115.511 137.784 115.511 cv
136.996 115.511 136.357 114.871 136.357 114.083 cv
136.357 113.296 136.996 112.656 137.784 112.656 cv
138.57 112.656 139.21 113.296 139.21 114.083 cv
139.143 114.015 mo
139.143 114.803 138.503 115.441 137.715 115.441 cv
136.928 115.441 136.288 114.803 136.288 114.015 cv
136.288 113.227 136.928 112.588 137.715 112.588 cv
138.503 112.588 139.143 113.227 139.143 114.015 cv
139.108 113.843 mo
139.108 114.631 138.469 115.27 137.681 115.27 cv
136.894 115.27 136.254 114.631 136.254 113.843 cv
136.254 113.057 136.894 112.417 137.681 112.417 cv
138.469 112.417 139.108 113.057 139.108 113.843 cv
139.073 113.672 mo
139.073 114.46 138.434 115.1 137.646 115.1 cv
136.858 115.1 136.219 114.46 136.219 113.672 cv
136.219 112.885 136.858 112.245 137.646 112.245 cv
138.434 112.245 139.073 112.885 139.073 113.672 cv
139.005 113.672 mo
139.005 114.46 138.366 115.1 137.578 115.1 cv
136.79 115.1 136.151 114.46 136.151 113.672 cv
136.151 112.885 136.79 112.245 137.578 112.245 cv
138.366 112.245 139.005 112.885 139.005 113.672 cv
138.971 113.809 mo
138.971 114.597 138.331 115.236 137.543 115.236 cv
136.756 115.236 136.116 114.597 136.116 113.809 cv
136.116 113.021 136.756 112.382 137.543 112.382 cv
138.331 112.382 138.971 113.021 138.971 113.809 cv
138.937 113.946 mo
138.937 114.733 138.297 115.373 137.509 115.373 cv
136.722 115.373 136.082 114.733 136.082 113.946 cv
136.082 113.158 136.722 112.519 137.509 112.519 cv
138.297 112.519 138.937 113.158 138.937 113.946 cv
138.867 113.706 mo
138.867 114.494 138.229 115.134 137.44 115.134 cv
136.652 115.134 136.015 114.494 136.015 113.706 cv
136.015 112.918 136.652 112.279 137.44 112.279 cv
138.229 112.279 138.867 112.918 138.867 113.706 cv
138.834 113.433 mo
138.834 114.221 138.194 114.859 137.406 114.859 cv
136.619 114.859 135.979 114.221 135.979 113.433 cv
135.979 112.645 136.619 112.006 137.406 112.006 cv
138.194 112.006 138.834 112.645 138.834 113.433 cv
138.765 113.296 mo
138.765 114.083 138.126 114.723 137.339 114.723 cv
136.551 114.723 135.911 114.083 135.911 113.296 cv
135.911 112.508 136.551 111.869 137.339 111.869 cv
138.126 111.869 138.765 112.508 138.765 113.296 cv
138.73 113.296 mo
138.73 114.083 138.092 114.723 137.304 114.723 cv
136.516 114.723 135.877 114.083 135.877 113.296 cv
135.877 112.508 136.516 111.869 137.304 111.869 cv
138.092 111.869 138.73 112.508 138.73 113.296 cv
138.663 113.296 mo
138.663 114.083 138.023 114.723 137.235 114.723 cv
136.448 114.723 135.809 114.083 135.809 113.296 cv
135.809 112.508 136.448 111.869 137.235 111.869 cv
138.023 111.869 138.663 112.508 138.663 113.296 cv
138.594 113.33 mo
138.594 114.117 137.955 114.757 137.167 114.757 cv
136.379 114.757 135.74 114.117 135.74 113.33 cv
135.74 112.542 136.379 111.902 137.167 111.902 cv
137.955 111.902 138.594 112.542 138.594 113.33 cv
138.561 113.33 mo
138.561 114.117 137.921 114.757 137.133 114.757 cv
136.346 114.757 135.706 114.117 135.706 113.33 cv
135.706 112.542 136.346 111.902 137.133 111.902 cv
137.921 111.902 138.561 112.542 138.561 113.33 cv
138.525 113.124 mo
138.525 113.912 137.886 114.551 137.098 114.551 cv
136.312 114.551 135.671 113.912 135.671 113.124 cv
135.671 112.336 136.312 111.697 137.098 111.697 cv
137.886 111.697 138.525 112.336 138.525 113.124 cv
138.457 113.057 mo
138.457 113.843 137.817 114.482 137.03 114.482 cv
136.242 114.482 135.603 113.843 135.603 113.057 cv
135.603 112.269 136.242 111.629 137.03 111.629 cv
137.817 111.629 138.457 112.269 138.457 113.057 cv
138.389 113.158 mo
138.389 113.946 137.749 114.585 136.961 114.585 cv
136.174 114.585 135.534 113.946 135.534 113.158 cv
135.534 112.37 136.174 111.732 136.961 111.732 cv
137.749 111.732 138.389 112.37 138.389 113.158 cv
138.354 113.057 mo
138.354 113.843 137.715 114.482 136.928 114.482 cv
136.14 114.482 135.5 113.843 135.5 113.057 cv
135.5 112.269 136.14 111.629 136.928 111.629 cv
137.715 111.629 138.354 112.269 138.354 113.057 cv
138.32 112.851 mo
138.32 113.639 137.681 114.277 136.894 114.277 cv
136.105 114.277 135.467 113.639 135.467 112.851 cv
135.467 112.063 136.105 111.424 136.894 111.424 cv
137.681 111.424 138.32 112.063 138.32 112.851 cv
138.252 112.781 mo
138.252 113.569 137.612 114.209 136.824 114.209 cv
136.037 114.209 135.397 113.569 135.397 112.781 cv
135.397 111.994 136.037 111.354 136.824 111.354 cv
137.612 111.354 138.252 111.994 138.252 112.781 cv
138.218 112.713 mo
138.218 113.5 137.578 114.14 136.79 114.14 cv
136.003 114.14 135.363 113.5 135.363 112.713 cv
135.363 111.926 136.003 111.285 136.79 111.285 cv
137.578 111.285 138.218 111.926 138.218 112.713 cv
138.148 112.713 mo
138.148 113.5 137.509 114.14 136.722 114.14 cv
135.934 114.14 135.295 113.5 135.295 112.713 cv
135.295 111.926 135.934 111.285 136.722 111.285 cv
137.509 111.285 138.148 111.926 138.148 112.713 cv
138.114 112.713 mo
138.114 113.5 137.476 114.14 136.688 114.14 cv
135.899 114.14 135.261 113.5 135.261 112.713 cv
135.261 111.926 135.899 111.285 136.688 111.285 cv
137.476 111.285 138.114 111.926 138.114 112.713 cv
138.046 112.645 mo
138.046 113.433 137.406 114.072 136.619 114.072 cv
135.831 114.072 135.191 113.433 135.191 112.645 cv
135.191 111.857 135.831 111.218 136.619 111.218 cv
137.406 111.218 138.046 111.857 138.046 112.645 cv
137.978 112.473 mo
137.978 113.261 137.339 113.9 136.551 113.9 cv
135.764 113.9 135.124 113.261 135.124 112.473 cv
135.124 111.686 135.764 111.046 136.551 111.046 cv
137.339 111.046 137.978 111.686 137.978 112.473 cv
137.909 112.508 mo
137.909 113.296 137.27 113.936 136.482 113.936 cv
135.694 113.936 135.055 113.296 135.055 112.508 cv
135.055 111.721 135.694 111.081 136.482 111.081 cv
137.27 111.081 137.909 111.721 137.909 112.508 cv
137.875 112.508 mo
137.875 113.296 137.235 113.936 136.448 113.936 cv
135.66 113.936 135.021 113.296 135.021 112.508 cv
135.021 111.721 135.66 111.081 136.448 111.081 cv
137.235 111.081 137.875 111.721 137.875 112.508 cv
137.84 112.37 mo
137.84 113.158 137.201 113.797 136.413 113.797 cv
135.625 113.797 134.986 113.158 134.986 112.37 cv
134.986 111.582 135.625 110.944 136.413 110.944 cv
137.201 110.944 137.84 111.582 137.84 112.37 cv
137.772 112.303 mo
137.772 113.09 137.133 113.729 136.346 113.729 cv
135.558 113.729 134.918 113.09 134.918 112.303 cv
134.918 111.515 135.558 110.875 136.346 110.875 cv
137.133 110.875 137.772 111.515 137.772 112.303 cv
137.703 112.199 mo
137.703 112.987 137.064 113.627 136.276 113.627 cv
135.488 113.627 134.85 112.987 134.85 112.199 cv
134.85 111.412 135.488 110.772 136.276 110.772 cv
137.064 110.772 137.703 111.412 137.703 112.199 cv
137.67 112.028 mo
137.67 112.815 137.03 113.455 136.242 113.455 cv
135.455 113.455 134.815 112.815 134.815 112.028 cv
134.815 111.24 135.455 110.601 136.242 110.601 cv
137.03 110.601 137.67 111.24 137.67 112.028 cv
137.636 112.028 mo
137.636 112.815 136.996 113.455 136.208 113.455 cv
135.421 113.455 134.781 112.815 134.781 112.028 cv
134.781 111.24 135.421 110.601 136.208 110.601 cv
136.996 110.601 137.636 111.24 137.636 112.028 cv
137.566 111.823 mo
137.566 112.611 136.928 113.25 136.14 113.25 cv
135.352 113.25 134.712 112.611 134.712 111.823 cv
134.712 111.035 135.352 110.396 136.14 110.396 cv
136.928 110.396 137.566 111.035 137.566 111.823 cv
137.498 111.823 mo
137.498 112.611 136.858 113.25 136.07 113.25 cv
135.283 113.25 134.644 112.611 134.644 111.823 cv
134.644 111.035 135.283 110.396 136.07 110.396 cv
136.858 110.396 137.498 111.035 137.498 111.823 cv
137.43 112.131 mo
137.43 112.918 136.79 113.558 136.003 113.558 cv
135.215 113.558 134.576 112.918 134.576 112.131 cv
134.576 111.343 135.215 110.703 136.003 110.703 cv
136.79 110.703 137.43 111.343 137.43 112.131 cv
137.361 112.028 mo
137.361 112.815 136.722 113.455 135.934 113.455 cv
135.146 113.455 134.507 112.815 134.507 112.028 cv
134.507 111.24 135.146 110.601 135.934 110.601 cv
136.722 110.601 137.361 111.24 137.361 112.028 cv
137.327 111.721 mo
137.327 112.508 136.688 113.147 135.899 113.147 cv
135.112 113.147 134.473 112.508 134.473 111.721 cv
134.473 110.933 135.112 110.293 135.899 110.293 cv
136.688 110.293 137.327 110.933 137.327 111.721 cv
137.292 111.549 mo
137.292 112.336 136.652 112.976 135.866 112.976 cv
135.078 112.976 134.438 112.336 134.438 111.549 cv
134.438 110.761 135.078 110.121 135.866 110.121 cv
136.652 110.121 137.292 110.761 137.292 111.549 cv
137.224 111.651 mo
137.224 112.439 136.585 113.078 135.797 113.078 cv
135.009 113.078 134.37 112.439 134.37 111.651 cv
134.37 110.863 135.009 110.225 135.797 110.225 cv
136.585 110.225 137.224 110.863 137.224 111.651 cv
137.155 111.48 mo
137.155 112.269 136.516 112.906 135.729 112.906 cv
134.94 112.906 134.301 112.269 134.301 111.48 cv
134.301 110.692 134.94 110.054 135.729 110.054 cv
136.516 110.054 137.155 110.692 137.155 111.48 cv
137.121 111.378 mo
137.121 112.166 136.482 112.805 135.694 112.805 cv
134.906 112.805 134.268 112.166 134.268 111.378 cv
134.268 110.59 134.906 109.951 135.694 109.951 cv
136.482 109.951 137.121 110.59 137.121 111.378 cv
137.053 111.104 mo
137.053 111.891 136.413 112.53 135.625 112.53 cv
134.838 112.53 134.198 111.891 134.198 111.104 cv
134.198 110.315 134.838 109.676 135.625 109.676 cv
136.413 109.676 137.053 110.315 137.053 111.104 cv
137.019 110.897 mo
137.019 111.686 136.379 112.325 135.592 112.325 cv
134.804 112.325 134.164 111.686 134.164 110.897 cv
134.164 110.109 134.804 109.471 135.592 109.471 cv
136.379 109.471 137.019 110.109 137.019 110.897 cv
136.949 111.275 mo
136.949 112.063 136.312 112.702 135.522 112.702 cv
134.735 112.702 134.097 112.063 134.097 111.275 cv
134.097 110.487 134.735 109.848 135.522 109.848 cv
136.312 109.848 136.949 110.487 136.949 111.275 cv
136.882 111.378 mo
136.882 112.166 136.242 112.805 135.455 112.805 cv
134.667 112.805 134.027 112.166 134.027 111.378 cv
134.027 110.59 134.667 109.951 135.455 109.951 cv
136.242 109.951 136.882 110.59 136.882 111.378 cv
136.813 111.24 mo
136.813 112.028 136.174 112.667 135.386 112.667 cv
134.598 112.667 133.959 112.028 133.959 111.24 cv
133.959 110.453 134.598 109.813 135.386 109.813 cv
136.174 109.813 136.813 110.453 136.813 111.24 cv
136.745 111.069 mo
136.745 111.857 136.105 112.496 135.317 112.496 cv
134.53 112.496 133.891 111.857 133.891 111.069 cv
133.891 110.281 134.53 109.643 135.317 109.643 cv
136.105 109.643 136.745 110.281 136.745 111.069 cv
136.71 111.069 mo
136.71 111.857 136.07 112.496 135.283 112.496 cv
134.495 112.496 133.855 111.857 133.855 111.069 cv
133.855 110.281 134.495 109.643 135.283 109.643 cv
136.07 109.643 136.71 110.281 136.71 111.069 cv
136.643 111.035 mo
136.643 111.823 136.003 112.463 135.215 112.463 cv
134.427 112.463 133.788 111.823 133.788 111.035 cv
133.788 110.248 134.427 109.608 135.215 109.608 cv
136.003 109.608 136.643 110.248 136.643 111.035 cv
136.607 110.933 mo
136.607 111.721 135.968 112.359 135.18 112.359 cv
134.394 112.359 133.754 111.721 133.754 110.933 cv
133.754 110.145 134.394 109.505 135.18 109.505 cv
135.968 109.505 136.607 110.145 136.607 110.933 cv
136.539 110.863 mo
136.539 111.651 135.899 112.291 135.112 112.291 cv
134.324 112.291 133.686 111.651 133.686 110.863 cv
133.686 110.076 134.324 109.437 135.112 109.437 cv
135.899 109.437 136.539 110.076 136.539 110.863 cv
136.471 110.933 mo
136.471 111.721 135.831 112.359 135.043 112.359 cv
134.256 112.359 133.616 111.721 133.616 110.933 cv
133.616 110.145 134.256 109.505 135.043 109.505 cv
135.831 109.505 136.471 110.145 136.471 110.933 cv
136.437 110.796 mo
136.437 111.582 135.797 112.222 135.009 112.222 cv
134.222 112.222 133.582 111.582 133.582 110.796 cv
133.582 110.008 134.222 109.369 135.009 109.369 cv
135.797 109.369 136.437 110.008 136.437 110.796 cv
136.334 110.59 mo
136.334 111.378 135.694 112.018 134.906 112.018 cv
134.118 112.018 133.479 111.378 133.479 110.59 cv
133.479 109.802 134.118 109.163 134.906 109.163 cv
135.694 109.163 136.334 109.802 136.334 110.59 cv
136.3 110.658 mo
136.3 111.446 135.66 112.085 134.873 112.085 cv
134.085 112.085 133.445 111.446 133.445 110.658 cv
133.445 109.87 134.085 109.23 134.873 109.23 cv
135.66 109.23 136.3 109.87 136.3 110.658 cv
136.23 110.761 mo
136.23 111.549 135.592 112.188 134.804 112.188 cv
134.016 112.188 133.377 111.549 133.377 110.761 cv
133.377 109.973 134.016 109.334 134.804 109.334 cv
135.592 109.334 136.23 109.973 136.23 110.761 cv
136.196 110.692 mo
136.196 111.48 135.558 112.12 134.77 112.12 cv
133.982 112.12 133.343 111.48 133.343 110.692 cv
133.343 109.905 133.982 109.266 134.77 109.266 cv
135.558 109.266 136.196 109.905 136.196 110.692 cv
136.128 110.453 mo
136.128 111.24 135.488 111.879 134.701 111.879 cv
133.913 111.879 133.273 111.24 133.273 110.453 cv
133.273 109.666 133.913 109.026 134.701 109.026 cv
135.488 109.026 136.128 109.666 136.128 110.453 cv
136.061 110.385 mo
136.061 111.172 135.421 111.812 134.633 111.812 cv
133.845 111.812 133.206 111.172 133.206 110.385 cv
133.206 109.597 133.845 108.957 134.633 108.957 cv
135.421 108.957 136.061 109.597 136.061 110.385 cv
135.991 110.418 mo
135.991 111.206 135.352 111.846 134.564 111.846 cv
133.776 111.846 133.137 111.206 133.137 110.418 cv
133.137 109.631 133.776 108.991 134.564 108.991 cv
135.352 108.991 135.991 109.631 135.991 110.418 cv
135.922 110.453 mo
135.922 111.24 135.283 111.879 134.495 111.879 cv
133.707 111.879 133.069 111.24 133.069 110.453 cv
133.069 109.666 133.707 109.026 134.495 109.026 cv
135.283 109.026 135.922 109.666 135.922 110.453 cv
135.889 110.315 mo
135.889 111.104 135.249 111.743 134.461 111.743 cv
133.674 111.743 133.034 111.104 133.034 110.315 cv
133.034 109.527 133.674 108.889 134.461 108.889 cv
135.249 108.889 135.889 109.527 135.889 110.315 cv
135.819 110.179 mo
135.819 110.967 135.18 111.605 134.394 111.605 cv
133.605 111.605 132.966 110.967 132.966 110.179 cv
132.966 109.391 133.605 108.752 134.394 108.752 cv
135.18 108.752 135.819 109.391 135.819 110.179 cv
135.752 110.179 mo
135.752 110.967 135.112 111.605 134.324 111.605 cv
133.536 111.605 132.897 110.967 132.897 110.179 cv
132.897 109.391 133.536 108.752 134.324 108.752 cv
135.112 108.752 135.752 109.391 135.752 110.179 cv
135.683 109.939 mo
135.683 110.727 135.043 111.366 134.256 111.366 cv
133.468 111.366 132.828 110.727 132.828 109.939 cv
132.828 109.151 133.468 108.512 134.256 108.512 cv
135.043 108.512 135.683 109.151 135.683 109.939 cv
135.648 109.768 mo
135.648 110.556 135.009 111.194 134.222 111.194 cv
133.434 111.194 132.795 110.556 132.795 109.768 cv
132.795 108.979 133.434 108.34 134.222 108.34 cv
135.009 108.34 135.648 108.979 135.648 109.768 cv
135.58 109.802 mo
135.58 110.59 134.94 111.229 134.152 111.229 cv
133.365 111.229 132.726 110.59 132.726 109.802 cv
132.726 109.015 133.365 108.375 134.152 108.375 cv
134.94 108.375 135.58 109.015 135.58 109.802 cv
135.512 109.597 mo
135.512 110.385 134.873 111.023 134.085 111.023 cv
133.297 111.023 132.657 110.385 132.657 109.597 cv
132.657 108.809 133.297 108.17 134.085 108.17 cv
134.873 108.17 135.512 108.809 135.512 109.597 cv
135.443 109.46 mo
135.443 110.248 134.804 110.887 134.016 110.887 cv
133.228 110.887 132.589 110.248 132.589 109.46 cv
132.589 108.672 133.228 108.033 134.016 108.033 cv
134.804 108.033 135.443 108.672 135.443 109.46 cv
135.375 109.46 mo
135.375 110.248 134.735 110.887 133.948 110.887 cv
133.16 110.887 132.521 110.248 132.521 109.46 cv
132.521 108.672 133.16 108.033 133.948 108.033 cv
134.735 108.033 135.375 108.672 135.375 109.46 cv
135.306 109.527 mo
135.306 110.315 134.667 110.955 133.879 110.955 cv
133.092 110.955 132.452 110.315 132.452 109.527 cv
132.452 108.74 133.092 108.101 133.879 108.101 cv
134.667 108.101 135.306 108.74 135.306 109.527 cv
135.272 109.46 mo
135.272 110.248 134.633 110.887 133.845 110.887 cv
133.058 110.887 132.418 110.248 132.418 109.46 cv
132.418 108.672 133.058 108.033 133.845 108.033 cv
134.633 108.033 135.272 108.672 135.272 109.46 cv
135.17 109.494 mo
135.17 110.281 134.53 110.921 133.742 110.921 cv
132.954 110.921 132.315 110.281 132.315 109.494 cv
132.315 108.706 132.954 108.066 133.742 108.066 cv
134.53 108.066 135.17 108.706 135.17 109.494 cv
135.101 109.563 mo
135.101 110.351 134.461 110.989 133.674 110.989 cv
132.886 110.989 132.246 110.351 132.246 109.563 cv
132.246 108.775 132.886 108.136 133.674 108.136 cv
134.461 108.136 135.101 108.775 135.101 109.563 cv
135.066 109.186 mo
135.066 109.973 134.427 110.612 133.64 110.612 cv
132.852 110.612 132.212 109.973 132.212 109.186 cv
132.212 108.397 132.852 107.759 133.64 107.759 cv
134.427 107.759 135.066 108.397 135.066 109.186 cv
134.998 108.945 mo
134.998 109.733 134.358 110.373 133.57 110.373 cv
132.783 110.373 132.144 109.733 132.144 108.945 cv
132.144 108.158 132.783 107.519 133.57 107.519 cv
134.358 107.519 134.998 108.158 134.998 108.945 cv
134.93 109.082 mo
134.93 109.87 134.29 110.51 133.503 110.51 cv
132.715 110.51 132.076 109.87 132.076 109.082 cv
132.076 108.295 132.715 107.655 133.503 107.655 cv
134.29 107.655 134.93 108.295 134.93 109.082 cv
134.895 109.186 mo
134.895 109.973 134.256 110.612 133.468 110.612 cv
132.68 110.612 132.041 109.973 132.041 109.186 cv
132.041 108.397 132.68 107.759 133.468 107.759 cv
134.256 107.759 134.895 108.397 134.895 109.186 cv
134.827 109.117 mo
134.827 109.905 134.188 110.545 133.399 110.545 cv
132.612 110.545 131.973 109.905 131.973 109.117 cv
131.973 108.33 132.612 107.69 133.399 107.69 cv
134.188 107.69 134.827 108.33 134.827 109.117 cv
134.758 108.843 mo
134.758 109.631 134.118 110.27 133.331 110.27 cv
132.543 110.27 131.904 109.631 131.904 108.843 cv
131.904 108.055 132.543 107.416 133.331 107.416 cv
134.118 107.416 134.758 108.055 134.758 108.843 cv
134.69 108.5 mo
134.69 109.288 134.05 109.928 133.263 109.928 cv
132.476 109.928 131.836 109.288 131.836 108.5 cv
131.836 107.713 132.476 107.073 133.263 107.073 cv
134.05 107.073 134.69 107.713 134.69 108.5 cv
134.587 108.604 mo
134.587 109.391 133.948 110.03 133.16 110.03 cv
132.372 110.03 131.733 109.391 131.733 108.604 cv
131.733 107.815 132.372 107.176 133.16 107.176 cv
133.948 107.176 134.587 107.815 134.587 108.604 cv
134.553 108.706 mo
134.553 109.494 133.913 110.133 133.125 110.133 cv
132.338 110.133 131.698 109.494 131.698 108.706 cv
131.698 107.918 132.338 107.279 133.125 107.279 cv
133.913 107.279 134.553 107.918 134.553 108.706 cv
134.484 108.535 mo
134.484 109.322 133.845 109.963 133.058 109.963 cv
132.27 109.963 131.63 109.322 131.63 108.535 cv
131.63 107.748 132.27 107.108 133.058 107.108 cv
133.845 107.108 134.484 107.748 134.484 108.535 cv
134.415 108.467 mo
134.415 109.254 133.776 109.894 132.988 109.894 cv
132.201 109.894 131.562 109.254 131.562 108.467 cv
131.562 107.679 132.201 107.039 132.988 107.039 cv
133.776 107.039 134.415 107.679 134.415 108.467 cv
134.347 108.467 mo
134.347 109.254 133.707 109.894 132.921 109.894 cv
132.133 109.894 131.493 109.254 131.493 108.467 cv
131.493 107.679 132.133 107.039 132.921 107.039 cv
133.707 107.039 134.347 107.679 134.347 108.467 cv
134.279 108.433 mo
134.279 109.22 133.64 109.859 132.852 109.859 cv
132.064 109.859 131.425 109.22 131.425 108.433 cv
131.425 107.645 132.064 107.005 132.852 107.005 cv
133.64 107.005 134.279 107.645 134.279 108.433 cv
134.21 108.295 mo
134.21 109.082 133.57 109.722 132.783 109.722 cv
131.995 109.722 131.355 109.082 131.355 108.295 cv
131.355 107.507 131.995 106.869 132.783 106.869 cv
133.57 106.869 134.21 107.507 134.21 108.295 cv
134.142 108.191 mo
134.142 108.979 133.503 109.619 132.715 109.619 cv
131.927 109.619 131.288 108.979 131.288 108.191 cv
131.288 107.405 131.927 106.766 132.715 106.766 cv
133.503 106.766 134.142 107.405 134.142 108.191 cv
134.073 108.33 mo
134.073 109.117 133.434 109.757 132.646 109.757 cv
131.858 109.757 131.219 109.117 131.219 108.33 cv
131.219 107.542 131.858 106.902 132.646 106.902 cv
133.434 106.902 134.073 107.542 134.073 108.33 cv
134.004 108.295 mo
134.004 109.082 133.365 109.722 132.577 109.722 cv
131.789 109.722 131.151 109.082 131.151 108.295 cv
131.151 107.507 131.789 106.869 132.577 106.869 cv
133.365 106.869 134.004 107.507 134.004 108.295 cv
133.937 107.952 mo
133.937 108.74 133.297 109.379 132.509 109.379 cv
131.722 109.379 131.082 108.74 131.082 107.952 cv
131.082 107.165 131.722 106.525 132.509 106.525 cv
133.297 106.525 133.937 107.165 133.937 107.952 cv
133.867 107.918 mo
133.867 108.706 133.228 109.346 132.44 109.346 cv
131.652 109.346 131.014 108.706 131.014 107.918 cv
131.014 107.131 131.652 106.491 132.44 106.491 cv
133.228 106.491 133.867 107.131 133.867 107.918 cv
133.8 107.815 mo
133.8 108.604 133.16 109.242 132.372 109.242 cv
131.585 109.242 130.945 108.604 130.945 107.815 cv
130.945 107.027 131.585 106.389 132.372 106.389 cv
133.16 106.389 133.8 107.027 133.8 107.815 cv
133.73 107.507 mo
133.73 108.295 133.092 108.934 132.304 108.934 cv
131.516 108.934 130.877 108.295 130.877 107.507 cv
130.877 106.719 131.516 106.08 132.304 106.08 cv
133.092 106.08 133.73 106.719 133.73 107.507 cv
133.662 107.645 mo
133.662 108.433 133.022 109.072 132.234 109.072 cv
131.448 109.072 130.808 108.433 130.808 107.645 cv
130.808 106.857 131.448 106.218 132.234 106.218 cv
133.022 106.218 133.662 106.857 133.662 107.645 cv
133.594 107.781 mo
133.594 108.569 132.954 109.208 132.167 109.208 cv
131.379 109.208 130.739 108.569 130.739 107.781 cv
130.739 106.994 131.379 106.354 132.167 106.354 cv
132.954 106.354 133.594 106.994 133.594 107.781 cv
133.491 107.645 mo
133.491 108.433 132.852 109.072 132.064 109.072 cv
131.276 109.072 130.637 108.433 130.637 107.645 cv
130.637 106.857 131.276 106.218 132.064 106.218 cv
132.852 106.218 133.491 106.857 133.491 107.645 cv
133.422 107.507 mo
133.422 108.295 132.783 108.934 131.995 108.934 cv
131.207 108.934 130.568 108.295 130.568 107.507 cv
130.568 106.719 131.207 106.08 131.995 106.08 cv
132.783 106.08 133.422 106.719 133.422 107.507 cv
133.354 107.439 mo
133.354 108.227 132.715 108.866 131.927 108.866 cv
131.14 108.866 130.5 108.227 130.5 107.439 cv
130.5 106.651 131.14 106.012 131.927 106.012 cv
132.715 106.012 133.354 106.651 133.354 107.439 cv
133.285 107.37 mo
133.285 108.158 132.646 108.797 131.858 108.797 cv
131.07 108.797 130.431 108.158 130.431 107.37 cv
130.431 106.582 131.07 105.943 131.858 105.943 cv
132.646 105.943 133.285 106.582 133.285 107.37 cv
133.217 107.233 mo
133.217 108.021 132.577 108.66 131.789 108.66 cv
131.003 108.66 130.363 108.021 130.363 107.233 cv
130.363 106.445 131.003 105.807 131.789 105.807 cv
132.577 105.807 133.217 106.445 133.217 107.233 cv
133.148 107.268 mo
133.148 108.055 132.509 108.694 131.722 108.694 cv
130.934 108.694 130.295 108.055 130.295 107.268 cv
130.295 106.479 130.934 105.84 131.722 105.84 cv
132.509 105.84 133.148 106.479 133.148 107.268 cv
133.08 107.268 mo
133.08 108.055 132.44 108.694 131.652 108.694 cv
130.865 108.694 130.226 108.055 130.226 107.268 cv
130.226 106.479 130.865 105.84 131.652 105.84 cv
132.44 105.84 133.08 106.479 133.08 107.268 cv
133.012 106.891 mo
133.012 107.679 132.372 108.318 131.585 108.318 cv
130.797 108.318 130.157 107.679 130.157 106.891 cv
130.157 106.104 130.797 105.464 131.585 105.464 cv
132.372 105.464 133.012 106.104 133.012 106.891 cv
132.909 106.891 mo
132.909 107.679 132.27 108.318 131.482 108.318 cv
130.694 108.318 130.055 107.679 130.055 106.891 cv
130.055 106.104 130.694 105.464 131.482 105.464 cv
132.27 105.464 132.909 106.104 132.909 106.891 cv
132.84 107.027 mo
132.84 107.815 132.201 108.455 131.413 108.455 cv
130.625 108.455 129.986 107.815 129.986 107.027 cv
129.986 106.24 130.625 105.601 131.413 105.601 cv
132.201 105.601 132.84 106.24 132.84 107.027 cv
132.772 106.788 mo
132.772 107.576 132.133 108.215 131.345 108.215 cv
130.558 108.215 129.918 107.576 129.918 106.788 cv
129.918 106 130.558 105.361 131.345 105.361 cv
132.133 105.361 132.772 106 132.772 106.788 cv
132.703 106.754 mo
132.703 107.542 132.064 108.182 131.276 108.182 cv
130.488 108.182 129.849 107.542 129.849 106.754 cv
129.849 105.967 130.488 105.327 131.276 105.327 cv
132.064 105.327 132.703 105.967 132.703 106.754 cv
132.635 106.754 mo
132.635 107.542 131.995 108.182 131.207 108.182 cv
130.42 108.182 129.78 107.542 129.78 106.754 cv
129.78 105.967 130.42 105.327 131.207 105.327 cv
131.995 105.327 132.635 105.967 132.635 106.754 cv
132.566 106.686 mo
132.566 107.473 131.927 108.112 131.14 108.112 cv
130.352 108.112 129.712 107.473 129.712 106.686 cv
129.712 105.897 130.352 105.258 131.14 105.258 cv
131.927 105.258 132.566 105.897 132.566 106.686 cv
132.498 106.549 mo
132.498 107.336 131.858 107.976 131.07 107.976 cv
130.283 107.976 129.644 107.336 129.644 106.549 cv
129.644 105.761 130.283 105.121 131.07 105.121 cv
131.858 105.121 132.498 105.761 132.498 106.549 cv
132.429 106.479 mo
132.429 107.268 131.789 107.906 131.003 107.906 cv
130.215 107.906 129.575 107.268 129.575 106.479 cv
129.575 105.691 130.215 105.053 131.003 105.053 cv
131.789 105.053 132.429 105.691 132.429 106.479 cv
132.327 106.479 mo
132.327 107.268 131.688 107.906 130.899 107.906 cv
130.112 107.906 129.473 107.268 129.473 106.479 cv
129.473 105.691 130.112 105.053 130.899 105.053 cv
131.688 105.053 132.327 105.691 132.327 106.479 cv
132.258 106.411 mo
132.258 107.199 131.618 107.839 130.831 107.839 cv
130.043 107.839 129.404 107.199 129.404 106.411 cv
129.404 105.624 130.043 104.984 130.831 104.984 cv
131.618 104.984 132.258 105.624 132.258 106.411 cv
132.155 106.309 mo
132.155 107.097 131.516 107.736 130.728 107.736 cv
129.94 107.736 129.301 107.097 129.301 106.309 cv
129.301 105.521 129.94 104.882 130.728 104.882 cv
131.516 104.882 132.155 105.521 132.155 106.309 cv
132.086 106.137 mo
132.086 106.925 131.448 107.564 130.659 107.564 cv
129.872 107.564 129.233 106.925 129.233 106.137 cv
129.233 105.35 129.872 104.71 130.659 104.71 cv
131.448 104.71 132.086 105.35 132.086 106.137 cv
@
grestore
gsave
46.168 122.847 mo
145.751 122.847 li
145.751 25.855 li
46.168 25.855 li
46.168 122.847 li
cp
clp
.856223 lw
122.871 96.8506 mo
120.874 98.8477 li
120.874 96.8506 mo
122.871 98.8477 li
122.729 96.8975 mo
120.73 98.8955 li
120.73 96.8975 mo
122.729 98.8955 li
122.562 96.8027 mo
120.564 98.8008 li
120.564 96.8027 mo
122.562 98.8008 li
122.396 96.4697 mo
120.396 98.4678 li
120.396 96.4697 mo
122.396 98.4678 li
122.229 96.4463 mo
120.23 98.4443 li
120.23 96.4463 mo
122.229 98.4443 li
122.062 96.3271 mo
120.064 98.3252 li
120.064 96.3271 mo
122.062 98.3252 li
121.92 95.8516 mo
119.921 97.8486 li
119.921 95.8516 mo
121.92 97.8486 li
121.754 95.6143 mo
119.755 97.6113 li
119.755 95.6143 mo
121.754 97.6113 li
121.563 95.3994 mo
119.565 97.3975 li
119.565 95.3994 mo
121.563 97.3975 li
121.396 95.2568 mo
119.398 97.2549 li
119.398 95.2568 mo
121.396 97.2549 li
121.229 95.2568 mo
119.232 97.2549 li
119.232 95.2568 mo
121.229 97.2549 li
121.063 95.0664 mo
119.065 97.0645 li
119.065 95.0664 mo
121.063 97.0645 li
120.874 94.8291 mo
118.875 96.8262 li
118.875 94.8291 mo
120.874 96.8262 li
120.706 94.9238 mo
118.709 96.9219 li
118.709 94.9238 mo
120.706 96.9219 li
120.516 94.6377 mo
118.519 96.6357 li
118.519 94.6377 mo
120.516 96.6357 li
120.326 94.21 mo
118.328 96.208 li
118.328 94.21 mo
120.326 96.208 li
120.159 94.4248 mo
118.162 96.4219 li
118.162 94.4248 mo
120.159 96.4219 li
119.97 94.377 mo
117.971 96.375 li
117.971 94.377 mo
119.97 96.375 li
119.779 94.0674 mo
117.781 96.0654 li
117.781 94.0674 mo
119.779 96.0654 li
119.589 93.6865 mo
117.591 95.6855 li
117.591 93.6865 mo
119.589 95.6855 li
119.398 93.4961 mo
117.4 95.4951 li
117.4 93.4961 mo
119.398 95.4951 li
119.185 93.6396 mo
117.187 95.6367 li
117.187 93.6396 mo
119.185 95.6367 li
118.994 93.2109 mo
116.996 95.21 li
116.996 93.2109 mo
118.994 95.21 li
118.78 92.7354 mo
116.782 94.7344 li
116.782 92.7354 mo
118.78 94.7344 li
118.59 92.5938 mo
116.593 94.5908 li
116.593 92.5938 mo
118.59 94.5908 li
118.376 92.4971 mo
116.378 94.4961 li
116.378 92.4971 mo
118.376 94.4961 li
118.162 92.6406 mo
116.164 94.6377 li
116.164 92.6406 mo
118.162 94.6377 li
117.948 92.3076 mo
115.949 94.3057 li
115.949 92.3076 mo
117.948 94.3057 li
117.733 92.0225 mo
115.735 94.0205 li
115.735 92.0225 mo
117.733 94.0205 li
117.52 91.999 mo
115.522 93.9961 li
115.522 91.999 mo
117.52 93.9961 li
117.306 91.6182 mo
115.308 93.6152 li
115.308 91.6182 mo
117.306 93.6152 li
117.068 90.9043 mo
115.069 92.9014 li
115.069 90.9043 mo
117.068 92.9014 li
116.854 90.7852 mo
114.855 92.7832 li
114.855 90.7852 mo
116.854 92.7832 li
116.615 90.8799 mo
114.618 92.8789 li
114.618 90.8799 mo
116.615 92.8789 li
116.378 90.5 mo
114.38 92.4971 li
114.38 90.5 mo
116.378 92.4971 li
116.14 90.0244 mo
114.143 92.0225 li
114.143 90.0244 mo
116.14 92.0225 li
115.902 90.2852 mo
113.904 92.2842 li
113.904 90.2852 mo
115.902 92.2842 li
115.664 89.9297 mo
113.667 91.9268 li
113.667 89.9297 mo
115.664 91.9268 li
115.403 89.5957 mo
113.404 91.5938 li
113.404 89.5957 mo
115.403 91.5938 li
115.141 89.2861 mo
113.144 91.2852 li
113.144 89.2861 mo
115.141 91.2852 li
114.903 88.7637 mo
112.905 90.7607 li
112.905 88.7637 mo
114.903 90.7607 li
114.642 88.5498 mo
112.644 90.5479 li
112.644 88.5498 mo
114.642 90.5479 li
114.355 88.5498 mo
112.358 90.5479 li
112.358 88.5498 mo
114.355 90.5479 li
114.095 88.0498 mo
112.097 90.0488 li
112.097 88.0498 mo
114.095 90.0488 li
113.809 87.0273 mo
111.812 89.0254 li
111.812 87.0273 mo
113.809 89.0254 li
113.523 86.9795 mo
111.526 88.9785 li
111.526 86.9795 mo
113.523 88.9785 li
113.238 87.0273 mo
111.24 89.0254 li
111.24 87.0273 mo
113.238 89.0254 li
112.953 86.5283 mo
110.956 88.5254 li
110.956 86.5283 mo
112.953 88.5254 li
112.668 85.624 mo
110.67 87.6221 li
110.67 85.624 mo
112.668 87.6221 li
112.358 85.1484 mo
110.361 87.1455 li
110.361 85.1484 mo
112.358 87.1455 li
112.049 85.1729 mo
110.052 87.1699 li
110.052 85.1729 mo
112.049 87.1699 li
111.74 84.8164 mo
109.742 86.8135 li
109.742 84.8164 mo
111.74 86.8135 li
111.407 83.9834 mo
109.409 85.9814 li
109.409 83.9834 mo
111.407 85.9814 li
111.074 83.3418 mo
109.076 85.3389 li
109.076 83.3418 mo
111.074 85.3389 li
110.741 82.9609 mo
108.743 84.958 li
108.743 82.9609 mo
110.741 84.958 li
110.408 81.9375 mo
108.411 83.9346 li
108.411 81.9375 mo
110.408 83.9346 li
110.052 81.4863 mo
108.053 83.4834 li
108.053 81.4863 mo
110.052 83.4834 li
109.694 81.4141 mo
107.696 83.4121 li
107.696 81.4141 mo
109.694 83.4121 li
109.313 80.3682 mo
107.316 82.3662 li
107.316 80.3682 mo
109.313 82.3662 li
108.934 79.6064 mo
106.936 81.6055 li
106.936 79.6064 mo
108.934 81.6055 li
108.553 79.5361 mo
106.556 81.5332 li
106.556 79.5361 mo
108.553 81.5332 li
108.172 78.9883 mo
106.175 80.9863 li
106.175 78.9883 mo
108.172 80.9863 li
107.768 77.8945 mo
105.771 79.8926 li
105.771 77.8945 mo
107.768 79.8926 li
107.341 77.3242 mo
105.342 79.3213 li
105.342 77.3242 mo
107.341 79.3213 li
106.912 76.7295 mo
104.914 78.7266 li
104.914 76.7295 mo
106.912 78.7266 li
106.46 75.8721 mo
104.462 77.8711 li
104.462 75.8721 mo
106.46 77.8711 li
106.008 75.54 mo
104.011 77.5371 li
104.011 75.54 mo
106.008 77.5371 li
105.557 75.0166 mo
103.559 77.0146 li
103.559 75.0166 mo
105.557 77.0146 li
105.081 74.1846 mo
103.082 76.1816 li
103.082 74.1846 mo
105.081 76.1816 li
104.581 73.1611 mo
102.583 75.1592 li
102.583 73.1611 mo
104.581 75.1592 li
104.058 71.7578 mo
102.06 73.7563 li
102.06 71.7578 mo
104.058 73.7563 li
103.535 70.5928 mo
101.536 72.5903 li
101.536 70.5928 mo
103.535 72.5903 li
102.987 69.0234 mo
100.989 71.0205 li
100.989 69.0234 mo
102.987 71.0205 li
102.416 68.0957 mo
100.419 70.0938 li
100.419 68.0957 mo
102.416 70.0938 li
101.821 67.4058 mo
99.8242 69.4038 li
99.8242 67.4058 mo
101.821 69.4038 li
101.204 65.6221 mo
99.2061 67.6196 li
99.2061 65.6221 mo
101.204 67.6196 li
100.585 64.6704 mo
98.5879 66.6685 li
98.5879 64.6704 mo
100.585 66.6685 li
99.9199 63.8145 mo
97.9209 65.8125 li
97.9209 63.8145 mo
99.9199 65.8125 li
99.2061 63.0771 mo
97.208 65.0752 li
97.208 63.0771 mo
99.2061 65.0752 li
98.4932 62.4111 mo
96.4941 64.4087 li
96.4941 62.4111 mo
98.4932 64.4087 li
97.7305 60.1753 mo
95.7334 62.1729 li
95.7334 60.1753 mo
97.7305 62.1729 li
96.9229 58.7485 mo
94.9248 60.7461 li
94.9248 58.7485 mo
96.9229 60.7461 li
96.0898 58.0825 mo
94.0928 60.0806 li
94.0928 58.0825 mo
96.0898 60.0806 li
95.1865 56.8696 mo
93.1885 58.8672 li
93.1885 56.8696 mo
95.1865 58.8672 li
94.2354 55.4424 mo
92.2373 57.4404 li
92.2373 55.4424 mo
94.2354 57.4404 li
93.2358 52.7314 mo
91.2383 54.729 li
91.2383 52.7314 mo
93.2358 54.729 li
92.1421 49.877 mo
90.1445 51.8745 li
90.1445 49.877 mo
92.1421 51.8745 li
91.0005 46.7378 mo
89.0024 48.7354 li
89.0024 46.7378 mo
91.0005 48.7354 li
89.7397 43.3599 mo
87.7417 45.3579 li
87.7417 43.3599 mo
89.7397 45.3579 li
88.3843 39.1982 mo
86.3862 41.1958 li
86.3862 39.1982 mo
88.3843 41.1958 li
86.8857 35.416 mo
84.8882 37.4141 li
84.8882 35.416 mo
86.8857 37.4141 li
85.2446 31.8726 mo
83.2466 33.8701 li
83.2466 31.8726 mo
85.2446 33.8701 li
83.4131 29.7559 mo
81.4155 31.7539 li
81.4155 29.7559 mo
83.4131 31.7539 li
81.3203 28.6138 mo
79.3223 30.6118 li
79.3223 28.6138 mo
81.3203 30.6118 li
78.9185 31.2778 mo
76.9204 33.2754 li
76.9204 31.2778 mo
78.9185 33.2754 li
76.064 35.5352 mo
74.0659 37.5332 li
74.0659 35.5352 mo
76.064 37.5332 li
72.5679 39.959 mo
70.5698 41.957 li
70.5698 39.959 mo
72.5679 41.957 li
68.0723 44.0977 mo
66.0752 46.0952 li
66.0752 44.0977 mo
68.0723 46.0952 li
61.7466 50.7568 mo
59.7485 52.7549 li
59.7485 50.7568 mo
61.7466 52.7549 li
50.9243 60.1519 mo
48.9268 62.1494 li
48.9268 60.1519 mo
50.9243 62.1494 li
3.05176e-5 .993988 1 3.05176e-5 cmyk
@
grestore
.856223 lw
133.717 107.244 mo
131.719 109.241 li
131.719 107.244 mo
133.717 109.241 li
133.621 107.244 mo
131.623 109.241 li
131.623 107.244 mo
133.621 109.241 li
133.55 107.148 mo
131.553 109.147 li
131.553 107.148 mo
133.55 109.147 li
133.479 107.078 mo
131.48 109.075 li
131.48 107.078 mo
133.479 109.075 li
133.384 107.125 mo
131.386 109.123 li
131.386 107.125 mo
133.384 109.123 li
133.313 106.888 mo
131.313 108.885 li
131.313 106.888 mo
133.313 108.885 li
133.24 106.673 mo
131.243 108.671 li
131.243 106.673 mo
133.24 108.671 li
133.146 106.721 mo
131.147 108.719 li
131.147 106.721 mo
133.146 108.719 li
133.074 106.697 mo
131.077 108.694 li
131.077 106.697 mo
133.074 108.694 li
132.979 106.697 mo
130.981 108.694 li
130.981 106.697 mo
132.979 108.694 li
132.908 106.554 mo
130.909 108.552 li
130.909 106.554 mo
132.908 108.552 li
132.813 106.411 mo
130.814 108.409 li
130.814 106.411 mo
132.813 108.409 li
132.741 106.293 mo
130.743 108.29 li
130.743 106.293 mo
132.741 108.29 li
132.646 106.008 mo
130.648 108.005 li
130.648 106.008 mo
132.646 108.005 li
132.574 106.078 mo
130.577 108.077 li
130.577 106.078 mo
132.574 108.077 li
132.479 106.269 mo
130.482 108.266 li
130.482 106.269 mo
132.479 108.266 li
132.408 106.149 mo
130.41 108.148 li
130.41 106.149 mo
132.408 108.148 li
132.313 105.84 mo
130.315 107.839 li
130.315 105.84 mo
132.313 107.839 li
132.242 105.84 mo
130.244 107.839 li
130.244 105.84 mo
132.242 107.839 li
132.147 106.008 mo
130.148 108.005 li
130.148 106.008 mo
132.147 108.005 li
132.052 105.912 mo
130.054 107.91 li
130.054 105.912 mo
132.052 107.91 li
131.979 105.603 mo
129.982 107.601 li
129.982 105.603 mo
131.979 107.601 li
131.885 105.413 mo
129.888 107.41 li
129.888 105.413 mo
131.885 107.41 li
131.789 105.364 mo
129.792 107.363 li
129.792 105.364 mo
131.789 107.363 li
131.719 105.127 mo
129.721 107.125 li
129.721 105.127 mo
131.719 107.125 li
131.623 105.151 mo
129.626 107.148 li
129.626 105.151 mo
131.623 107.148 li
131.528 105.413 mo
129.531 107.41 li
129.531 105.413 mo
131.528 107.41 li
131.433 105.246 mo
129.436 107.244 li
129.436 105.246 mo
131.433 107.244 li
131.338 105.079 mo
129.34 107.078 li
129.34 105.079 mo
131.338 107.078 li
131.267 105.151 mo
129.269 107.148 li
129.269 105.151 mo
131.267 107.148 li
131.172 105.008 mo
129.174 107.007 li
129.174 105.008 mo
131.172 107.007 li
131.077 104.938 mo
129.078 106.935 li
129.078 104.938 mo
131.077 106.935 li
130.981 104.842 mo
128.983 106.84 li
128.983 104.842 mo
130.981 106.84 li
130.887 104.604 mo
128.888 106.603 li
128.888 104.604 mo
130.887 106.603 li
130.791 104.318 mo
128.793 106.316 li
128.793 104.318 mo
130.791 106.316 li
130.696 104.247 mo
128.698 106.245 li
128.698 104.247 mo
130.696 106.245 li
130.602 104.366 mo
128.603 106.364 li
128.603 104.366 mo
130.602 106.364 li
130.506 104.247 mo
128.508 106.245 li
128.508 104.247 mo
130.506 106.245 li
130.41 104.104 mo
128.412 106.103 li
128.412 104.104 mo
130.41 106.103 li
130.315 104.104 mo
128.317 106.103 li
128.317 104.104 mo
130.315 106.103 li
130.221 103.89 mo
128.223 105.889 li
128.223 103.89 mo
130.221 105.889 li
130.125 103.699 mo
128.127 105.698 li
128.127 103.699 mo
130.125 105.698 li
130.029 103.604 mo
128.032 105.603 li
128.032 103.604 mo
130.029 105.603 li
129.936 103.581 mo
127.937 105.579 li
127.937 103.581 mo
129.936 105.579 li
129.816 103.51 mo
127.817 105.508 li
127.817 103.51 mo
129.816 105.508 li
129.721 103.319 mo
127.723 105.317 li
127.723 103.319 mo
129.721 105.317 li
129.626 103.272 mo
127.628 105.27 li
127.628 103.272 mo
129.626 105.27 li
129.531 103.272 mo
127.532 105.27 li
127.532 103.272 mo
129.531 105.27 li
129.412 102.938 mo
127.413 104.938 li
127.413 102.938 mo
129.412 104.938 li
129.316 102.678 mo
127.318 104.675 li
127.318 102.678 mo
129.316 104.675 li
129.222 102.844 mo
127.223 104.842 li
127.223 102.844 mo
129.222 104.842 li
129.103 102.726 mo
127.104 104.723 li
127.104 102.726 mo
129.103 104.723 li
129.007 102.534 mo
127.01 104.532 li
127.01 102.534 mo
129.007 104.532 li
128.888 102.321 mo
126.891 104.318 li
126.891 102.321 mo
128.888 104.318 li
128.793 102.321 mo
126.796 104.318 li
126.796 102.321 mo
128.793 104.318 li
128.674 102.344 mo
126.677 104.343 li
126.677 102.344 mo
128.674 104.343 li
128.579 102.321 mo
126.581 104.318 li
126.581 102.321 mo
128.579 104.318 li
128.461 102.273 mo
126.462 104.271 li
126.462 102.273 mo
128.461 104.271 li
128.365 102.012 mo
126.367 104.009 li
126.367 102.012 mo
128.365 104.009 li
128.246 102.036 mo
126.248 104.033 li
126.248 102.036 mo
128.246 104.033 li
128.127 101.868 mo
126.129 103.867 li
126.129 101.868 mo
128.127 103.867 li
128.032 101.773 mo
126.035 103.771 li
126.035 101.773 mo
128.032 103.771 li
127.913 101.631 mo
125.915 103.629 li
125.915 101.631 mo
127.913 103.629 li
127.795 101.346 mo
125.796 103.343 li
125.796 101.346 mo
127.795 103.343 li
127.676 101.393 mo
125.677 103.392 li
125.677 101.393 mo
127.676 103.392 li
127.557 101.441 mo
125.558 103.438 li
125.558 101.441 mo
127.557 103.438 li
127.438 101.084 mo
125.44 103.082 li
125.44 101.084 mo
127.438 103.082 li
127.342 100.941 mo
125.345 102.938 li
125.345 100.941 mo
127.342 102.938 li
127.223 100.966 mo
125.226 102.963 li
125.226 100.966 mo
127.223 102.963 li
127.104 100.822 mo
125.106 102.819 li
125.106 100.822 mo
127.104 102.819 li
126.985 100.917 mo
124.987 102.915 li
124.987 100.917 mo
126.985 102.915 li
126.843 100.774 mo
124.846 102.772 li
124.846 100.774 mo
126.843 102.772 li
126.725 100.561 mo
124.727 102.559 li
124.727 100.561 mo
126.725 102.559 li
126.605 100.418 mo
124.607 102.416 li
124.607 100.418 mo
126.605 102.416 li
126.486 100.299 mo
124.487 102.297 li
124.487 100.299 mo
126.486 102.297 li
126.367 100.441 mo
124.37 102.439 li
124.37 100.441 mo
126.367 102.439 li
126.248 100.181 mo
124.251 102.178 li
124.251 100.181 mo
126.248 102.178 li
126.105 99.7998 mo
124.107 101.797 li
124.107 99.7998 mo
126.105 101.797 li
125.986 99.6084 mo
123.988 101.607 li
123.988 99.6084 mo
125.986 101.607 li
125.844 99.4189 mo
123.846 101.417 li
123.846 99.4189 mo
125.844 101.417 li
125.726 99.7041 mo
123.727 101.702 li
123.727 99.7041 mo
125.726 101.702 li
125.582 99.5859 mo
123.585 101.583 li
123.585 99.5859 mo
125.582 101.583 li
125.463 99.1816 mo
123.466 101.179 li
123.466 99.1816 mo
125.463 101.179 li
125.321 99.1328 mo
123.322 101.132 li
123.322 99.1328 mo
125.321 101.132 li
125.202 99.1572 mo
123.204 101.155 li
123.204 99.1572 mo
125.202 101.155 li
125.059 98.9912 mo
123.062 100.988 li
123.062 98.9912 mo
125.059 100.988 li
124.916 99.1104 mo
122.918 101.107 li
122.918 99.1104 mo
124.916 101.107 li
124.773 98.9668 mo
122.775 100.966 li
122.775 98.9668 mo
124.773 100.966 li
124.655 98.5869 mo
122.656 100.585 li
122.656 98.5869 mo
124.655 100.585 li
124.512 98.4443 mo
122.515 100.441 li
122.515 98.4443 mo
124.512 100.441 li
124.37 98.3486 mo
122.371 100.347 li
122.371 98.3486 mo
124.37 100.347 li
124.227 98.3252 mo
122.229 100.322 li
122.229 98.3252 mo
124.227 100.322 li
124.084 98.2061 mo
122.086 100.203 li
122.086 98.2061 mo
124.084 100.203 li
123.941 98.1582 mo
121.943 100.156 li
121.943 98.1582 mo
123.941 100.156 li
123.775 98.0625 mo
121.776 100.062 li
121.776 98.0625 mo
123.775 100.062 li
123.632 97.6826 mo
121.635 99.6807 li
121.635 97.6826 mo
123.632 99.6807 li
123.489 97.3496 mo
121.491 99.3477 li
121.491 97.3496 mo
123.489 99.3477 li
123.347 97.2783 mo
121.349 99.2764 li
121.349 97.2783 mo
123.347 99.2764 li
123.181 97.1826 mo
121.182 99.1816 li
121.182 97.1826 mo
123.181 99.1816 li
123.037 97.1113 mo
121.04 99.1104 li
121.04 97.1113 mo
123.037 99.1104 li
3.05176e-5 .993988 1 3.05176e-5 cmyk
@
140.042 114.38 mo
138.045 116.377 li
138.045 114.38 mo
140.042 116.377 li
139.995 114.427 mo
137.998 116.425 li
137.998 114.427 mo
139.995 116.425 li
139.948 114.308 mo
137.95 116.306 li
137.95 114.308 mo
139.948 116.306 li
139.876 114.26 mo
137.879 116.258 li
137.879 114.26 mo
139.876 116.258 li
139.829 114.189 mo
137.831 116.187 li
137.831 114.189 mo
139.829 116.187 li
139.781 113.999 mo
137.784 115.996 li
137.784 113.999 mo
139.781 115.996 li
139.734 113.999 mo
137.735 115.996 li
137.735 113.999 mo
139.734 115.996 li
139.662 113.902 mo
137.665 115.901 li
137.665 113.902 mo
139.662 115.901 li
139.615 113.714 mo
137.616 115.711 li
137.616 113.714 mo
139.615 115.711 li
139.567 113.617 mo
137.569 115.616 li
137.569 113.617 mo
139.567 115.616 li
139.52 113.57 mo
137.521 115.568 li
137.521 113.57 mo
139.52 115.568 li
139.448 113.429 mo
137.45 115.426 li
137.45 113.429 mo
139.448 115.426 li
139.4 113.595 mo
137.403 115.592 li
137.403 113.595 mo
139.4 115.592 li
139.354 113.476 mo
137.355 115.473 li
137.355 113.476 mo
139.354 115.473 li
139.306 113.356 mo
137.309 115.354 li
137.309 113.356 mo
139.306 115.354 li
139.234 113.429 mo
137.236 115.426 li
137.236 113.429 mo
139.234 115.426 li
139.187 113.214 mo
137.189 115.211 li
137.189 113.214 mo
139.187 115.211 li
139.14 113.19 mo
137.141 115.188 li
137.141 113.19 mo
139.14 115.188 li
139.068 113.166 mo
137.07 115.164 li
137.07 113.166 mo
139.068 115.164 li
139.021 113.119 mo
137.022 115.116 li
137.022 113.119 mo
139.021 115.116 li
138.972 113.047 mo
136.975 115.045 li
136.975 113.047 mo
138.972 115.045 li
138.901 113.214 mo
136.903 115.211 li
136.903 113.214 mo
138.901 115.211 li
138.854 113.166 mo
136.855 115.164 li
136.855 113.166 mo
138.854 115.164 li
138.806 112.856 mo
136.809 114.855 li
136.809 112.856 mo
138.806 114.855 li
138.734 112.69 mo
136.737 114.688 li
136.737 112.69 mo
138.734 114.688 li
138.687 112.715 mo
136.689 114.712 li
136.689 112.715 mo
138.687 114.712 li
138.615 112.785 mo
136.618 114.784 li
136.618 112.785 mo
138.615 114.784 li
138.568 112.666 mo
136.57 114.665 li
136.57 112.666 mo
138.568 114.665 li
138.521 112.666 mo
136.523 114.665 li
136.523 112.666 mo
138.521 114.665 li
138.449 112.477 mo
136.451 114.475 li
136.451 112.477 mo
138.449 114.475 li
138.401 112.31 mo
136.404 114.308 li
136.404 112.31 mo
138.401 114.308 li
138.33 112.31 mo
136.333 114.308 li
136.333 112.31 mo
138.33 114.308 li
138.283 112.358 mo
136.285 114.355 li
136.285 112.358 mo
138.283 114.355 li
138.211 112.262 mo
136.214 114.26 li
136.214 112.262 mo
138.211 114.26 li
138.164 112.144 mo
136.166 114.141 li
136.166 112.144 mo
138.164 114.141 li
138.093 112.049 mo
136.095 114.046 li
136.095 112.049 mo
138.093 114.046 li
138.045 112.001 mo
136.048 113.999 li
136.048 112.001 mo
138.045 113.999 li
137.974 112.12 mo
135.976 114.117 li
135.976 112.12 mo
137.974 114.117 li
137.926 111.953 mo
135.929 113.951 li
135.929 111.953 mo
137.926 113.951 li
137.854 111.691 mo
135.857 113.689 li
135.857 111.691 mo
137.854 113.689 li
137.808 111.739 mo
135.81 113.736 li
135.81 111.739 mo
137.808 113.736 li
137.735 111.62 mo
135.738 113.617 li
135.738 111.62 mo
137.735 113.617 li
137.688 111.501 mo
135.69 113.499 li
135.69 111.501 mo
137.688 113.499 li
137.616 111.668 mo
135.619 113.666 li
135.619 111.668 mo
137.616 113.666 li
137.569 111.525 mo
135.572 113.522 li
135.572 111.525 mo
137.569 113.522 li
137.498 111.264 mo
135.5 113.261 li
135.5 111.264 mo
137.498 113.261 li
137.45 111.358 mo
135.453 113.356 li
135.453 111.358 mo
137.45 113.356 li
137.379 111.406 mo
135.381 113.404 li
135.381 111.406 mo
137.379 113.404 li
137.309 111.264 mo
135.31 113.261 li
135.31 111.264 mo
137.309 113.261 li
137.26 111.169 mo
135.263 113.166 li
135.263 111.169 mo
137.26 113.166 li
137.189 111.073 mo
135.19 113.071 li
135.19 111.073 mo
137.189 113.071 li
137.141 110.859 mo
135.144 112.856 li
135.144 110.859 mo
137.141 112.856 li
137.07 110.859 mo
135.072 112.856 li
135.072 110.859 mo
137.07 112.856 li
136.999 110.883 mo
135 112.881 li
135 110.883 mo
136.999 112.881 li
136.95 110.74 mo
134.953 112.738 li
134.953 110.74 mo
136.95 112.738 li
136.88 110.574 mo
134.882 112.571 li
134.882 110.574 mo
136.88 112.571 li
136.809 110.55 mo
134.811 112.547 li
134.811 110.55 mo
136.809 112.547 li
136.761 110.645 mo
134.763 112.644 li
134.763 110.645 mo
136.761 112.644 li
136.689 110.525 mo
134.691 112.524 li
134.691 110.525 mo
136.689 112.524 li
136.618 110.406 mo
134.62 112.405 li
134.62 110.406 mo
136.618 112.405 li
136.546 110.455 mo
134.549 112.452 li
134.549 110.455 mo
136.546 112.452 li
136.499 110.455 mo
134.502 112.452 li
134.502 110.455 mo
136.499 112.452 li
136.428 110.265 mo
134.43 112.262 li
134.43 110.265 mo
136.428 112.262 li
136.357 110.003 mo
134.358 112.001 li
134.358 110.003 mo
136.357 112.001 li
136.285 110.026 mo
134.287 112.024 li
134.287 110.026 mo
136.285 112.024 li
136.238 110.003 mo
134.239 112.001 li
134.239 110.003 mo
136.238 112.001 li
136.166 109.86 mo
134.168 111.858 li
134.168 109.86 mo
136.166 111.858 li
136.095 109.813 mo
134.098 111.811 li
134.098 109.813 mo
136.095 111.811 li
136.023 109.86 mo
134.025 111.858 li
134.025 109.86 mo
136.023 111.858 li
135.952 109.765 mo
133.954 111.763 li
133.954 109.765 mo
135.952 111.763 li
135.881 109.646 mo
133.883 111.645 li
133.883 109.646 mo
135.881 111.645 li
135.833 109.622 mo
133.835 111.62 li
133.835 109.622 mo
135.833 111.62 li
135.762 109.599 mo
133.764 111.596 li
133.764 109.599 mo
135.762 111.596 li
135.69 109.36 mo
133.692 111.358 li
133.692 109.36 mo
135.69 111.358 li
135.619 109.194 mo
133.621 111.191 li
133.621 109.194 mo
135.619 111.191 li
135.548 109.36 mo
133.55 111.358 li
133.55 109.36 mo
135.548 111.358 li
135.476 109.36 mo
133.479 111.358 li
133.479 109.36 mo
135.476 111.358 li
135.405 109.241 mo
133.407 111.239 li
133.407 109.241 mo
135.405 111.239 li
135.334 109.147 mo
133.335 111.145 li
133.335 109.147 mo
135.334 111.145 li
135.263 108.86 mo
133.265 110.859 li
133.265 108.86 mo
135.263 110.859 li
135.19 108.742 mo
133.193 110.74 li
133.193 108.742 mo
135.19 110.74 li
135.119 108.956 mo
133.122 110.954 li
133.122 108.956 mo
135.119 110.954 li
135.049 108.909 mo
133.05 110.906 li
133.05 108.909 mo
135.049 110.906 li
134.978 108.719 mo
132.979 110.716 li
132.979 108.719 mo
134.978 110.716 li
134.905 108.671 mo
132.908 110.669 li
132.908 108.671 mo
134.905 110.669 li
134.834 108.623 mo
132.837 110.621 li
132.837 108.623 mo
134.834 110.621 li
134.763 108.457 mo
132.765 110.455 li
132.765 108.457 mo
134.763 110.455 li
134.691 108.219 mo
132.693 110.218 li
132.693 108.219 mo
134.691 110.218 li
134.62 108.29 mo
132.622 110.288 li
132.622 108.29 mo
134.62 110.288 li
134.549 108.314 mo
132.551 110.312 li
132.551 108.314 mo
134.549 110.312 li
134.478 108.124 mo
132.479 110.121 li
132.479 108.124 mo
134.478 110.121 li
134.383 108.005 mo
132.384 110.003 li
132.384 108.005 mo
134.383 110.003 li
134.311 108.077 mo
132.313 110.074 li
132.313 108.077 mo
134.311 110.074 li
134.239 107.958 mo
132.242 109.955 li
132.242 107.958 mo
134.239 109.955 li
134.168 107.768 mo
132.17 109.765 li
132.17 107.768 mo
134.168 109.765 li
134.098 107.577 mo
132.099 109.574 li
132.099 107.577 mo
134.098 109.574 li
134.025 107.695 mo
132.028 109.693 li
132.028 107.695 mo
134.025 109.693 li
133.93 107.791 mo
131.933 109.789 li
131.933 107.791 mo
133.93 109.789 li
133.859 107.505 mo
131.861 109.504 li
131.861 107.505 mo
133.859 109.504 li
133.788 107.339 mo
131.789 109.336 li
131.789 107.339 mo
133.788 109.336 li
@
gsave
46.168 122.847 mo
145.751 122.847 li
145.751 25.855 li
46.168 25.855 li
46.168 122.847 li
cp
clp
142.968 117.923 mo
140.971 119.921 li
140.971 117.923 mo
142.968 119.921 li
142.945 117.898 mo
140.946 119.897 li
140.946 117.898 mo
142.945 119.897 li
142.896 118.065 mo
140.899 120.063 li
140.899 118.065 mo
142.896 120.063 li
142.85 117.946 mo
140.852 119.944 li
140.852 117.946 mo
142.85 119.944 li
142.802 117.709 mo
140.805 119.707 li
140.805 117.709 mo
142.802 119.707 li
142.755 117.732 mo
140.756 119.73 li
140.756 117.732 mo
142.755 119.73 li
142.707 117.686 mo
140.709 119.683 li
140.709 117.686 mo
142.707 119.683 li
142.683 117.542 mo
140.686 119.541 li
140.686 117.542 mo
142.683 119.541 li
142.636 117.59 mo
140.637 119.588 li
140.637 117.59 mo
142.636 119.588 li
142.588 117.566 mo
140.59 119.563 li
140.59 117.566 mo
142.588 119.563 li
142.54 117.423 mo
140.542 119.422 li
140.542 117.423 mo
142.54 119.422 li
142.492 117.328 mo
140.495 119.326 li
140.495 117.328 mo
142.492 119.326 li
142.445 117.281 mo
140.447 119.278 li
140.447 117.281 mo
142.445 119.278 li
142.397 117.257 mo
140.399 119.254 li
140.399 117.257 mo
142.397 119.254 li
142.351 117.162 mo
140.352 119.16 li
140.352 117.162 mo
142.351 119.16 li
142.326 117.162 mo
140.329 119.16 li
140.329 117.162 mo
142.326 119.16 li
142.279 117.138 mo
140.28 119.136 li
140.28 117.138 mo
142.279 119.136 li
142.231 117.02 mo
140.233 119.017 li
140.233 117.02 mo
142.231 119.017 li
142.183 116.995 mo
140.186 118.993 li
140.186 116.995 mo
142.183 118.993 li
142.136 116.781 mo
140.139 118.779 li
140.139 116.781 mo
142.136 118.779 li
142.089 116.733 mo
140.091 118.731 li
140.091 116.733 mo
142.089 118.731 li
142.041 116.853 mo
140.042 118.851 li
140.042 116.853 mo
142.041 118.851 li
141.994 116.733 mo
139.995 118.731 li
139.995 116.733 mo
141.994 118.731 li
141.945 116.615 mo
139.948 118.612 li
139.948 116.615 mo
141.945 118.612 li
141.897 116.472 mo
139.9 118.471 li
139.9 116.472 mo
141.897 118.471 li
141.851 116.425 mo
139.854 118.422 li
139.854 116.425 mo
141.851 118.422 li
141.803 116.472 mo
139.805 118.471 li
139.805 116.472 mo
141.803 118.471 li
141.756 116.52 mo
139.757 118.518 li
139.757 116.52 mo
141.756 118.518 li
141.707 116.377 mo
139.71 118.375 li
139.71 116.377 mo
141.707 118.375 li
141.685 116.14 mo
139.686 118.137 li
139.686 116.14 mo
141.685 118.137 li
141.637 116.043 mo
139.639 118.042 li
139.639 116.043 mo
141.637 118.042 li
141.589 116.043 mo
139.591 118.042 li
139.591 116.043 mo
141.589 118.042 li
141.541 115.973 mo
139.544 117.971 li
139.544 115.973 mo
141.541 117.971 li
141.493 116.021 mo
139.496 118.018 li
139.496 116.021 mo
141.493 118.018 li
141.446 116.021 mo
139.448 118.018 li
139.448 116.021 mo
141.446 118.018 li
141.399 116.067 mo
139.4 118.065 li
139.4 116.067 mo
141.399 118.065 li
141.351 115.854 mo
139.354 117.852 li
139.354 115.854 mo
141.351 117.852 li
141.304 115.616 mo
139.306 117.613 li
139.306 115.616 mo
141.304 117.613 li
141.256 115.735 mo
139.259 117.732 li
139.259 115.735 mo
141.256 117.732 li
141.185 115.782 mo
139.187 117.78 li
139.187 115.782 mo
141.185 117.78 li
141.137 115.711 mo
139.14 117.709 li
139.14 115.711 mo
141.137 117.709 li
141.09 115.473 mo
139.091 117.471 li
139.091 115.473 mo
141.09 117.471 li
141.042 115.354 mo
139.044 117.352 li
139.044 115.354 mo
141.042 117.352 li
140.994 115.378 mo
138.996 117.376 li
138.996 115.378 mo
140.994 117.376 li
140.946 115.378 mo
138.949 117.376 li
138.949 115.378 mo
140.946 117.376 li
140.899 115.282 mo
138.901 117.281 li
138.901 115.282 mo
140.899 117.281 li
140.852 115.235 mo
138.854 117.232 li
138.854 115.235 mo
140.852 117.232 li
140.805 115.092 mo
138.806 117.091 li
138.806 115.092 mo
140.805 117.091 li
140.756 115.069 mo
138.759 117.066 li
138.759 115.069 mo
140.756 117.066 li
140.709 115.282 mo
138.711 117.281 li
138.711 115.282 mo
140.709 117.281 li
140.661 115.211 mo
138.664 117.21 li
138.664 115.211 mo
140.661 117.21 li
140.614 114.95 mo
138.615 116.947 li
138.615 114.95 mo
140.614 116.947 li
140.542 114.831 mo
138.545 116.828 li
138.545 114.831 mo
140.542 116.828 li
140.495 114.926 mo
138.498 116.925 li
138.498 114.926 mo
140.495 116.925 li
140.447 114.902 mo
138.449 116.9 li
138.449 114.902 mo
140.447 116.9 li
140.399 114.736 mo
138.401 116.733 li
138.401 114.736 mo
140.399 116.733 li
140.352 114.688 mo
138.354 116.687 li
138.354 114.688 mo
140.352 116.687 li
140.305 114.616 mo
138.307 116.615 li
138.307 114.616 mo
140.305 116.615 li
140.257 114.521 mo
138.259 116.52 li
138.259 114.521 mo
140.257 116.52 li
140.186 114.475 mo
138.188 116.472 li
138.188 114.475 mo
140.186 116.472 li
140.139 114.284 mo
138.14 116.281 li
138.14 114.284 mo
140.139 116.281 li
140.091 114.236 mo
138.093 116.234 li
138.093 114.236 mo
140.091 116.234 li
@
grestore
gsave
47.666 124.273 mo
147.249 124.273 li
147.249 26.9253 li
47.666 26.9253 li
47.666 124.273 li
cp
clp
0 lj
134.217 112.049 mo
135.644 110.169 li
134.217 108.29 li
132.789 110.169 li
134.217 112.049 li
134.217 112.049 li
cp
134.12 111.834 mo
135.548 109.955 li
134.12 108.077 li
132.693 109.955 li
134.12 111.834 li
134.12 111.834 li
cp
134.049 111.62 mo
135.476 109.741 li
134.049 107.862 li
132.622 109.741 li
134.049 111.62 li
134.049 111.62 li
cp
133.979 111.596 mo
135.405 109.718 li
133.979 107.839 li
132.551 109.718 li
133.979 111.596 li
133.979 111.596 li
cp
133.883 111.645 mo
135.31 109.765 li
133.883 107.886 li
132.456 109.765 li
133.883 111.645 li
133.883 111.645 li
cp
133.812 111.43 mo
135.238 109.551 li
133.812 107.673 li
132.384 109.551 li
133.812 111.43 li
133.812 111.43 li
cp
133.74 111.239 mo
135.168 109.36 li
133.74 107.481 li
132.313 109.36 li
133.74 111.239 li
133.74 111.239 li
cp
133.645 111.12 mo
135.072 109.241 li
133.645 107.363 li
132.218 109.241 li
133.645 111.12 li
133.645 111.12 li
cp
133.573 111.025 mo
135 109.147 li
133.573 107.268 li
132.147 109.147 li
133.573 111.025 li
133.573 111.025 li
cp
133.479 111.073 mo
134.905 109.194 li
133.479 107.314 li
132.052 109.194 li
133.479 111.073 li
133.479 111.073 li
cp
133.407 111.05 mo
134.834 109.17 li
133.407 107.292 li
131.979 109.17 li
133.407 111.05 li
133.407 111.05 li
cp
133.313 110.788 mo
134.739 108.909 li
133.313 107.029 li
131.885 108.909 li
133.313 110.788 li
133.313 110.788 li
cp
133.24 110.55 mo
134.668 108.671 li
133.24 106.792 li
131.813 108.671 li
133.24 110.55 li
133.24 110.55 li
cp
133.146 110.669 mo
134.573 108.79 li
133.146 106.91 li
131.719 108.79 li
133.146 110.669 li
133.146 110.669 li
cp
133.074 110.716 mo
134.502 108.838 li
133.074 106.959 li
131.647 108.838 li
133.074 110.716 li
133.074 110.716 li
cp
132.979 110.621 mo
134.405 108.742 li
132.979 106.863 li
131.553 108.742 li
132.979 110.621 li
132.979 110.621 li
cp
132.908 110.503 mo
134.335 108.623 li
132.908 106.744 li
131.48 108.623 li
132.908 110.503 li
132.908 110.503 li
cp
132.813 110.359 mo
134.239 108.48 li
132.813 106.603 li
131.386 108.48 li
132.813 110.359 li
132.813 110.359 li
cp
132.741 110.121 mo
134.168 108.243 li
132.741 106.364 li
131.313 108.243 li
132.741 110.121 li
132.741 110.121 li
cp
132.646 110.05 mo
134.073 108.171 li
132.646 106.293 li
131.219 108.171 li
132.646 110.05 li
132.646 110.05 li
cp
132.551 110.121 mo
133.979 108.243 li
132.551 106.364 li
131.124 108.243 li
132.551 110.121 li
132.551 110.121 li
cp
132.479 110.24 mo
133.907 108.362 li
132.479 106.483 li
131.053 108.362 li
132.479 110.24 li
132.479 110.24 li
cp
132.384 110.121 mo
133.812 108.243 li
132.384 106.364 li
130.958 108.243 li
132.384 110.121 li
132.384 110.121 li
cp
132.289 109.741 mo
133.717 107.862 li
132.289 105.983 li
130.862 107.862 li
132.289 109.741 li
132.289 109.741 li
cp
132.218 109.67 mo
133.645 107.791 li
132.218 105.912 li
130.791 107.791 li
132.218 109.67 li
132.218 109.67 li
cp
132.123 109.765 mo
133.55 107.886 li
132.123 106.008 li
130.696 107.886 li
132.123 109.765 li
132.123 109.765 li
cp
132.028 109.813 mo
133.454 107.934 li
132.028 106.055 li
130.602 107.934 li
132.028 109.813 li
132.028 109.813 li
cp
131.933 109.574 mo
133.359 107.695 li
131.933 105.817 li
130.506 107.695 li
131.933 109.574 li
131.933 109.574 li
cp
131.838 109.433 mo
133.265 107.554 li
131.838 105.674 li
130.41 107.554 li
131.838 109.433 li
131.838 109.433 li
cp
131.767 109.433 mo
133.193 107.554 li
131.767 105.674 li
130.339 107.554 li
131.767 109.433 li
131.767 109.433 li
cp
131.672 109.219 mo
133.098 107.339 li
131.672 105.46 li
130.244 107.339 li
131.672 109.219 li
131.672 109.219 li
cp
131.576 109.147 mo
133.003 107.268 li
131.576 105.389 li
130.148 107.268 li
131.576 109.147 li
131.576 109.147 li
cp
131.48 109.17 mo
132.908 107.292 li
131.48 105.413 li
130.054 107.292 li
131.48 109.17 li
131.48 109.17 li
cp
131.386 109.075 mo
132.813 107.195 li
131.386 105.317 li
129.958 107.195 li
131.386 109.075 li
131.386 109.075 li
cp
131.291 108.719 mo
132.718 106.84 li
131.291 104.96 li
129.863 106.84 li
131.291 108.719 li
131.291 108.719 li
cp
131.194 108.647 mo
132.622 106.769 li
131.194 104.889 li
129.769 106.769 li
131.194 108.647 li
131.194 108.647 li
cp
131.1 108.79 mo
132.527 106.91 li
131.1 105.032 li
129.673 106.91 li
131.1 108.79 li
131.1 108.79 li
cp
131.006 108.623 mo
132.433 106.744 li
131.006 104.866 li
129.578 106.744 li
131.006 108.623 li
131.006 108.623 li
cp
130.909 108.457 mo
132.337 106.578 li
130.909 104.699 li
129.482 106.578 li
130.909 108.457 li
130.909 108.457 li
cp
130.814 108.266 mo
132.242 106.388 li
130.814 104.509 li
129.388 106.388 li
130.814 108.266 li
130.814 108.266 li
cp
130.72 108.243 mo
132.147 106.364 li
130.72 104.484 li
129.293 106.364 li
130.72 108.243 li
130.72 108.243 li
cp
130.624 108.195 mo
132.052 106.316 li
130.624 104.438 li
129.197 106.316 li
130.624 108.195 li
130.624 108.195 li
cp
130.529 108.219 mo
131.957 106.34 li
130.529 104.462 li
129.103 106.34 li
130.529 108.219 li
130.529 108.219 li
cp
130.434 108.148 mo
131.861 106.269 li
130.434 104.39 li
129.007 106.269 li
130.434 108.148 li
130.434 108.148 li
cp
130.315 107.743 mo
131.742 105.864 li
130.315 103.985 li
128.888 105.864 li
130.315 107.743 li
130.315 107.743 li
cp
130.221 107.814 mo
131.647 105.937 li
130.221 104.057 li
128.793 105.937 li
130.221 107.814 li
130.221 107.814 li
cp
130.125 107.814 mo
131.553 105.937 li
130.125 104.057 li
128.698 105.937 li
130.125 107.814 li
130.125 107.814 li
cp
130.029 107.363 mo
131.457 105.483 li
130.029 103.604 li
128.603 105.483 li
130.029 107.363 li
130.029 107.363 li
cp
129.911 107.292 mo
131.338 105.413 li
129.911 103.533 li
128.483 105.413 li
129.911 107.292 li
129.911 107.292 li
cp
129.816 107.505 mo
131.243 105.627 li
129.816 103.748 li
128.389 105.627 li
129.816 107.505 li
129.816 107.505 li
cp
129.721 107.72 mo
131.147 105.84 li
129.721 103.962 li
128.293 105.84 li
129.721 107.72 li
129.721 107.72 li
cp
129.602 107.314 mo
131.028 105.437 li
129.602 103.558 li
128.175 105.437 li
129.602 107.314 li
129.602 107.314 li
cp
129.507 107.148 mo
130.934 105.27 li
129.507 103.392 li
128.08 105.27 li
129.507 107.148 li
129.507 107.148 li
cp
129.388 106.982 mo
130.814 105.104 li
129.388 103.224 li
127.961 105.104 li
129.388 106.982 li
129.388 106.982 li
cp
129.293 106.982 mo
130.72 105.104 li
129.293 103.224 li
127.866 105.104 li
129.293 106.982 li
129.293 106.982 li
cp
129.174 106.84 mo
130.602 104.96 li
129.174 103.082 li
127.747 104.96 li
129.174 106.84 li
129.174 106.84 li
cp
129.078 106.483 mo
130.506 104.604 li
129.078 102.726 li
127.651 104.604 li
129.078 106.483 li
129.078 106.483 li
cp
128.959 106.53 mo
130.387 104.651 li
128.959 102.772 li
127.532 104.651 li
128.959 106.53 li
128.959 106.53 li
cp
128.865 106.411 mo
130.292 104.532 li
128.865 102.653 li
127.438 104.532 li
128.865 106.411 li
128.865 106.411 li
cp
128.746 106.269 mo
130.173 104.39 li
128.746 102.512 li
127.318 104.39 li
128.746 106.269 li
128.746 106.269 li
cp
128.627 106.149 mo
130.054 104.271 li
128.627 102.393 li
127.199 104.271 li
128.627 106.149 li
128.627 106.149 li
cp
128.531 106.174 mo
129.958 104.294 li
128.531 102.416 li
127.104 104.294 li
128.531 106.174 li
128.531 106.174 li
cp
128.412 106.008 mo
129.839 104.128 li
128.412 102.249 li
126.985 104.128 li
128.412 106.008 li
128.412 106.008 li
cp
128.293 105.937 mo
129.721 104.057 li
128.293 102.178 li
126.866 104.057 li
128.293 105.937 li
128.293 105.937 li
cp
128.175 105.889 mo
129.602 104.009 li
128.175 102.13 li
126.747 104.009 li
128.175 105.889 li
128.175 105.889 li
cp
128.056 105.745 mo
129.482 103.867 li
128.056 101.987 li
126.628 103.867 li
128.056 105.745 li
128.056 105.745 li
cp
127.937 105.912 mo
129.363 104.033 li
127.937 102.153 li
126.511 104.033 li
127.937 105.912 li
127.937 105.912 li
cp
127.842 105.674 mo
129.269 103.796 li
127.842 101.917 li
126.415 103.796 li
127.842 105.674 li
127.842 105.674 li
cp
127.723 105.413 mo
129.15 103.533 li
127.723 101.655 li
126.296 103.533 li
127.723 105.413 li
127.723 105.413 li
cp
127.604 105.246 mo
129.031 103.367 li
127.604 101.488 li
126.177 103.367 li
127.604 105.246 li
127.604 105.246 li
cp
127.485 105.223 mo
128.912 103.343 li
127.485 101.464 li
126.058 103.343 li
127.485 105.223 li
127.485 105.223 li
cp
127.342 104.96 mo
128.769 103.082 li
127.342 101.203 li
125.915 103.082 li
127.342 104.96 li
127.342 104.96 li
cp
127.223 104.77 mo
128.65 102.892 li
127.223 101.013 li
125.796 102.892 li
127.223 104.77 li
127.223 104.77 li
cp
127.104 105.151 mo
128.531 103.272 li
127.104 101.393 li
125.677 103.272 li
127.104 105.151 li
127.104 105.151 li
cp
126.985 105.317 mo
128.412 103.438 li
126.985 101.559 li
125.558 103.438 li
126.985 105.317 li
126.985 105.317 li
cp
126.866 104.938 mo
128.293 103.058 li
126.866 101.179 li
125.44 103.058 li
126.866 104.938 li
126.866 104.938 li
cp
126.747 104.675 mo
128.175 102.797 li
126.747 100.917 li
125.321 102.797 li
126.747 104.675 li
126.747 104.675 li
cp
126.605 104.532 mo
128.032 102.653 li
126.605 100.774 li
125.178 102.653 li
126.605 104.532 li
126.605 104.532 li
cp
126.486 104.343 mo
127.913 102.463 li
126.486 100.585 li
125.059 102.463 li
126.486 104.343 li
126.486 104.343 li
cp
126.343 104.532 mo
127.771 102.653 li
126.343 100.774 li
124.916 102.653 li
126.343 104.532 li
126.343 104.532 li
cp
126.225 104.271 mo
127.651 102.393 li
126.225 100.513 li
124.797 102.393 li
126.225 104.271 li
126.225 104.271 li
cp
126.082 103.914 mo
127.509 102.036 li
126.082 100.156 li
124.655 102.036 li
126.082 103.914 li
126.082 103.914 li
cp
125.963 103.914 mo
127.391 102.036 li
125.963 100.156 li
124.536 102.036 li
125.963 103.914 li
125.963 103.914 li
cp
125.82 103.796 mo
127.247 101.917 li
125.82 100.037 li
124.393 101.917 li
125.82 103.796 li
125.82 103.796 li
cp
125.701 103.652 mo
127.128 101.773 li
125.701 99.8955 li
124.274 101.773 li
125.701 103.652 li
125.701 103.652 li
cp
125.558 103.629 mo
126.985 101.749 li
125.558 99.8711 li
124.132 101.749 li
125.558 103.629 li
125.558 103.629 li
cp
125.416 103.367 mo
126.843 101.488 li
125.416 99.6084 li
123.988 101.488 li
125.416 103.367 li
125.416 103.367 li
cp
125.272 103.153 mo
126.7 101.273 li
125.272 99.3955 li
123.846 101.273 li
125.272 103.153 li
125.272 103.153 li
cp
125.154 103.058 mo
126.581 101.179 li
125.154 99.3008 li
123.727 101.179 li
125.154 103.058 li
125.154 103.058 li
cp
125.012 102.678 mo
126.438 100.798 li
125.012 98.9189 li
123.585 100.798 li
125.012 102.678 li
125.012 102.678 li
cp
124.869 102.582 mo
126.296 100.703 li
124.869 98.8252 li
123.441 100.703 li
124.869 102.582 li
124.869 102.582 li
cp
124.727 102.439 mo
126.152 100.561 li
124.727 98.6816 li
123.3 100.561 li
124.727 102.439 li
124.727 102.439 li
cp
124.584 102.487 mo
126.011 100.608 li
124.584 98.7295 li
123.156 100.608 li
124.584 102.487 li
124.584 102.487 li
cp
124.44 102.416 mo
125.867 100.537 li
124.44 98.6572 li
123.014 100.537 li
124.44 102.416 li
124.44 102.416 li
cp
124.274 101.845 mo
125.701 99.9658 li
124.274 98.0869 li
122.847 99.9658 li
124.274 101.845 li
124.274 101.845 li
cp
124.132 101.702 mo
125.558 99.8232 li
124.132 97.9443 li
122.705 99.8232 li
124.132 101.702 li
124.132 101.702 li
cp
123.988 101.868 mo
125.416 99.9893 li
123.988 98.1113 li
122.562 99.9893 li
123.988 101.868 li
123.988 101.868 li
cp
123.846 101.868 mo
125.272 99.9893 li
123.846 98.1113 li
122.419 99.9893 li
123.846 101.868 li
123.846 101.868 li
cp
123.68 101.583 mo
125.106 99.7041 li
123.68 97.8252 li
122.252 99.7041 li
123.68 101.583 li
123.68 101.583 li
cp
123.537 101.488 mo
124.965 99.6084 li
123.537 97.7305 li
122.11 99.6084 li
123.537 101.488 li
123.537 101.488 li
cp
123.37 101.607 mo
124.797 99.7275 li
123.37 97.8486 li
121.943 99.7275 li
123.37 101.607 li
123.37 101.607 li
cp
123.228 101.203 mo
124.655 99.3232 li
123.228 97.4453 li
121.801 99.3232 li
123.228 101.203 li
123.228 101.203 li
cp
123.062 100.798 mo
124.487 98.9189 li
123.062 97.041 li
121.635 98.9189 li
123.062 100.798 li
123.062 100.798 li
cp
122.895 100.847 mo
124.321 98.9668 li
122.895 97.0879 li
121.467 98.9668 li
122.895 100.847 li
122.895 100.847 li
cp
122.729 100.941 mo
124.155 99.0625 li
122.729 97.1826 li
121.301 99.0625 li
122.729 100.941 li
122.729 100.941 li
cp
122.562 100.728 mo
123.988 98.8477 li
122.562 96.9697 li
121.135 98.8477 li
122.562 100.728 li
122.562 100.728 li
cp
122.419 100.513 mo
123.846 98.6338 li
122.419 96.7559 li
120.991 98.6338 li
122.419 100.513 li
122.419 100.513 li
cp
122.252 100.108 mo
123.68 98.2305 li
122.252 96.3506 li
120.825 98.2305 li
122.252 100.108 li
122.252 100.108 li
cp
122.062 100.203 mo
123.489 98.3252 li
122.062 96.4463 li
120.635 98.3252 li
122.062 100.203 li
122.062 100.203 li
cp
121.896 100.037 mo
123.322 98.1582 li
121.896 96.2793 li
120.469 98.1582 li
121.896 100.037 li
121.896 100.037 li
cp
121.729 99.9424 mo
123.156 98.0625 li
121.729 96.1846 li
120.303 98.0625 li
121.729 99.9424 li
121.729 99.9424 li
cp
121.563 99.8232 mo
122.99 97.9443 li
121.563 96.0654 li
120.136 97.9443 li
121.563 99.8232 li
121.563 99.8232 li
cp
121.373 99.3008 mo
122.8 97.4209 li
121.373 95.542 li
119.945 97.4209 li
121.373 99.3008 li
121.373 99.3008 li
cp
121.206 99.1328 mo
122.633 97.2549 li
121.206 95.376 li
119.779 97.2549 li
121.206 99.1328 li
121.206 99.1328 li
cp
121.016 99.2285 mo
122.443 97.3496 li
121.016 95.4707 li
119.589 97.3496 li
121.016 99.2285 li
121.016 99.2285 li
cp
120.825 99.252 mo
122.252 97.374 li
120.825 95.4951 li
119.398 97.374 li
120.825 99.252 li
120.825 99.252 li
cp
120.659 98.9668 mo
122.086 97.0879 li
120.659 95.21 li
119.232 97.0879 li
120.659 98.9668 li
120.659 98.9668 li
cp
120.469 98.5625 mo
121.896 96.6846 li
120.469 94.8047 li
119.041 96.6846 li
120.469 98.5625 li
120.469 98.5625 li
cp
120.278 98.2529 mo
121.705 96.375 li
120.278 94.4961 li
118.851 96.375 li
120.278 98.2529 li
120.278 98.2529 li
cp
120.089 98.3008 mo
121.516 96.4219 li
120.089 94.5439 li
118.661 96.4219 li
120.089 98.3008 li
120.089 98.3008 li
cp
119.898 97.8252 mo
121.325 95.9463 li
119.898 94.0674 li
118.471 95.9463 li
119.898 97.8252 li
119.898 97.8252 li
cp
119.685 97.4678 mo
121.11 95.5898 li
119.685 93.7109 li
118.257 95.5898 li
119.685 97.4678 li
119.685 97.4678 li
cp
119.494 97.4453 mo
120.921 95.5664 li
119.494 93.6865 li
118.066 95.5664 li
119.494 97.4453 li
119.494 97.4453 li
cp
119.279 97.4453 mo
120.706 95.5664 li
119.279 93.6865 li
117.853 95.5664 li
119.279 97.4453 li
119.279 97.4453 li
cp
119.09 97.1826 mo
120.516 95.3047 li
119.09 93.4258 li
117.663 95.3047 li
119.09 97.1826 li
119.09 97.1826 li
cp
118.875 97.2305 mo
120.303 95.3516 li
118.875 93.4736 li
117.448 95.3516 li
118.875 97.2305 li
118.875 97.2305 li
cp
118.661 97.4209 mo
120.089 95.542 li
118.661 93.6641 li
117.234 95.542 li
118.661 97.4209 li
118.661 97.4209 li
cp
118.447 96.9219 mo
119.874 95.042 li
118.447 93.1641 li
117.02 95.042 li
118.447 96.9219 li
118.447 96.9219 li
cp
118.233 96.8262 mo
119.66 94.9473 li
118.233 93.0693 li
116.806 94.9473 li
118.233 96.8262 li
118.233 96.8262 li
cp
118.02 96.6357 mo
119.446 94.7568 li
118.02 92.8789 li
116.593 94.7568 li
118.02 96.6357 li
118.02 96.6357 li
cp
117.805 96.3271 mo
119.232 94.4482 li
117.805 92.5693 li
116.378 94.4482 li
117.805 96.3271 li
117.805 96.3271 li
cp
117.566 96.4932 mo
118.994 94.6152 li
117.566 92.7354 li
116.14 94.6152 li
117.566 96.4932 li
117.566 96.4932 li
cp
117.354 96.041 mo
118.78 94.1631 li
117.354 92.2842 li
115.926 94.1631 li
117.354 96.041 li
117.354 96.041 li
cp
117.115 95.3281 mo
118.543 93.4492 li
117.115 91.5703 li
115.688 93.4492 li
117.115 95.3281 li
117.115 95.3281 li
cp
116.878 95.542 mo
118.305 93.6641 li
116.878 91.7842 li
115.45 93.6641 li
116.878 95.542 li
116.878 95.542 li
cp
116.64 95.376 mo
118.066 93.4961 li
116.64 91.6182 li
115.213 93.4961 li
116.64 95.376 li
116.64 95.376 li
cp
116.402 94.876 mo
117.829 92.9971 li
116.402 91.1182 li
114.975 92.9971 li
116.402 94.876 li
116.402 94.876 li
cp
116.164 94.3291 mo
117.591 92.4502 li
116.164 90.5713 li
114.737 92.4502 li
116.164 94.3291 li
116.164 94.3291 li
cp
115.902 93.8057 mo
117.329 91.9268 li
115.902 90.0488 li
114.475 91.9268 li
115.902 93.8057 li
115.902 93.8057 li
cp
115.641 93.4014 mo
117.068 91.5234 li
115.641 89.6436 li
114.214 91.5234 li
115.641 93.4014 li
115.641 93.4014 li
cp
115.403 93.0449 mo
116.83 91.166 li
115.403 89.2861 li
113.976 91.166 li
115.403 93.0449 li
115.403 93.0449 li
cp
115.141 92.8545 mo
116.568 90.9756 li
115.141 89.0977 li
113.714 90.9756 li
115.141 92.8545 li
115.141 92.8545 li
cp
114.855 92.7354 mo
116.283 90.8564 li
114.855 88.9785 li
113.429 90.8564 li
114.855 92.7354 li
114.855 92.7354 li
cp
114.594 92.4746 mo
116.021 90.5947 li
114.594 88.7158 li
113.167 90.5947 li
114.594 92.4746 li
114.594 92.4746 li
cp
114.309 92.2598 mo
115.735 90.3809 li
114.309 88.5029 li
112.882 90.3809 li
114.309 92.2598 li
114.309 92.2598 li
cp
114.023 92.3311 mo
115.45 90.4531 li
114.023 88.5732 li
112.597 90.4531 li
114.023 92.3311 li
114.023 92.3311 li
cp
113.738 91.9746 mo
115.165 90.0957 li
113.738 88.2158 li
112.312 90.0957 li
113.738 91.9746 li
113.738 91.9746 li
cp
113.452 90.9287 mo
114.879 89.0488 li
113.452 87.1699 li
112.026 89.0488 li
113.452 90.9287 li
113.452 90.9287 li
cp
113.167 90.2383 mo
114.594 88.3594 li
113.167 86.4805 li
111.74 88.3594 li
113.167 90.2383 li
113.167 90.2383 li
cp
112.858 90.5 mo
114.284 88.6211 li
112.858 86.7422 li
111.432 88.6211 li
112.858 90.5 li
112.858 90.5 li
cp
112.549 90 mo
113.976 88.1221 li
112.549 86.2432 li
111.122 88.1221 li
112.549 90 li
112.549 90 li
cp
112.239 89.1445 mo
113.667 87.2646 li
112.239 85.3867 li
110.813 87.2646 li
112.239 89.1445 li
112.239 89.1445 li
cp
111.907 88.6445 mo
113.333 86.7656 li
111.907 84.8867 li
110.479 86.7656 li
111.907 88.6445 li
111.907 88.6445 li
cp
111.573 88.2402 mo
113 86.3623 li
111.573 84.4824 li
110.146 86.3623 li
111.573 88.2402 li
111.573 88.2402 li
cp
111.24 87.9082 mo
112.668 86.0283 li
111.24 84.1494 li
109.813 86.0283 li
111.24 87.9082 li
111.24 87.9082 li
cp
110.907 86.6943 mo
112.334 84.8164 li
110.907 82.9365 li
109.48 84.8164 li
110.907 86.6943 li
110.907 86.6943 li
cp
110.551 86.2432 mo
111.978 84.3633 li
110.551 82.4844 li
109.123 84.3633 li
110.551 86.2432 li
110.551 86.2432 li
cp
110.193 86.124 mo
111.621 84.2441 li
110.193 82.3662 li
108.767 84.2441 li
110.193 86.124 li
110.193 86.124 li
cp
109.813 85.6006 mo
111.241 83.7217 li
109.813 81.8428 li
108.387 83.7217 li
109.813 85.6006 li
109.813 85.6006 li
cp
109.433 85.2432 mo
110.859 83.3643 li
109.433 81.4863 li
108.006 83.3643 li
109.433 85.2432 li
109.433 85.2432 li
cp
109.053 84.4346 mo
110.479 82.5566 li
109.053 80.6768 li
107.626 82.5566 li
109.053 84.4346 li
109.053 84.4346 li
cp
108.672 83.4834 mo
110.099 81.6055 li
108.672 79.7256 li
107.245 81.6055 li
108.672 83.4834 li
108.672 83.4834 li
cp
108.268 83.0078 mo
109.694 81.1289 li
108.268 79.25 li
106.841 81.1289 li
108.268 83.0078 li
108.268 83.0078 li
cp
107.84 82.9365 mo
109.267 81.0576 li
107.84 79.1797 li
106.412 81.0576 li
107.84 82.9365 li
107.84 82.9365 li
cp
107.411 81.9854 mo
108.838 80.1064 li
107.411 78.2275 li
105.984 80.1064 li
107.411 81.9854 li
107.411 81.9854 li
cp
106.96 81.0332 mo
108.387 79.1553 li
106.96 77.2764 li
105.532 79.1553 li
106.96 81.0332 li
106.96 81.0332 li
cp
106.507 80.7246 mo
107.934 78.8457 li
106.507 76.9668 li
105.081 78.8457 li
106.507 80.7246 li
106.507 80.7246 li
cp
106.056 79.583 mo
107.482 77.7051 li
106.056 75.8252 li
104.629 77.7051 li
106.056 79.583 li
106.056 79.583 li
cp
105.58 78.8223 mo
107.007 76.9424 li
105.58 75.0645 li
104.152 76.9424 li
105.58 78.8223 li
105.58 78.8223 li
cp
105.081 78.2754 mo
106.507 76.3965 li
105.081 74.5166 li
103.653 76.3965 li
105.081 78.2754 li
105.081 78.2754 li
cp
104.557 76.7051 mo
105.984 74.8262 li
104.557 72.9473 li
103.13 74.8262 li
104.557 76.7051 li
104.557 76.7051 li
cp
104.034 75.207 mo
105.461 73.3276 li
104.034 71.4492 li
102.606 73.3276 li
104.034 75.207 li
104.034 75.207 li
cp
103.486 74.1602 mo
104.914 72.2817 li
103.486 70.4023 li
102.06 72.2817 li
103.486 74.1602 li
103.486 74.1602 li
cp
102.916 72.5669 mo
104.343 70.6875 li
102.916 68.8091 li
101.489 70.6875 li
102.916 72.5669 li
102.916 72.5669 li
cp
102.321 71.1875 mo
103.749 69.3086 li
102.321 67.4292 li
100.895 69.3086 li
102.321 71.1875 li
102.321 71.1875 li
cp
101.704 70.5928 mo
103.13 68.7139 li
101.704 66.835 li
100.276 68.7139 li
101.704 70.5928 li
101.704 70.5928 li
cp
101.085 69.6172 mo
102.512 67.7388 li
101.085 65.8599 li
99.6582 67.7388 li
101.085 69.6172 li
101.085 69.6172 li
cp
100.419 68.5947 mo
101.846 66.7158 li
100.419 64.8374 li
98.9912 66.7158 li
100.419 68.5947 li
100.419 68.5947 li
cp
99.7051 67.9766 mo
101.132 66.0977 li
99.7051 64.2183 li
98.2783 66.0977 li
99.7051 67.9766 li
99.7051 67.9766 li
cp
98.9912 67.144 mo
100.419 65.2651 li
98.9912 63.3857 li
97.5645 65.2651 li
98.9912 67.144 li
98.9912 67.144 li
cp
98.2305 65.7173 mo
99.6582 63.8379 li
98.2305 61.9595 li
96.8037 63.8379 li
98.2305 65.7173 li
98.2305 65.7173 li
cp
97.4229 64.623 mo
98.8496 62.7441 li
97.4229 60.8647 li
95.9951 62.7441 li
97.4229 64.623 li
97.4229 64.623 li
cp
96.5894 62.8154 mo
98.0166 60.9365 li
96.5894 59.0571 li
95.1626 60.9365 li
96.5894 62.8154 li
96.5894 62.8154 li
cp
95.686 61.2935 mo
97.1133 59.4141 li
95.686 57.5356 li
94.2588 59.4141 li
95.686 61.2935 li
95.686 61.2935 li
cp
94.7344 59.9141 mo
96.1616 58.0347 li
94.7344 56.1558 li
93.3076 58.0347 li
94.7344 59.9141 li
94.7344 59.9141 li
cp
93.7354 57.8921 mo
95.1626 56.0132 li
93.7354 54.1343 li
92.3086 56.0132 li
93.7354 57.8921 li
93.7354 57.8921 li
cp
92.6655 56.0605 mo
94.0928 54.1821 li
92.6655 52.3027 li
91.2383 54.1821 li
92.6655 56.0605 li
92.6655 56.0605 li
cp
91.5 51.9224 mo
92.9272 50.0435 li
91.5 48.1641 li
90.0728 50.0435 li
91.5 51.9224 li
91.5 51.9224 li
cp
90.2393 48.7354 mo
91.666 46.8564 li
90.2393 44.9775 li
88.812 46.8564 li
90.2393 48.7354 li
90.2393 48.7354 li
cp
88.8838 45.7861 mo
90.3105 43.9072 li
88.8838 42.0283 li
87.4565 43.9072 li
88.8838 45.7861 li
88.8838 45.7861 li
cp
87.3848 40.9341 mo
88.812 39.0557 li
87.3848 37.1763 li
85.9585 39.0557 li
87.3848 40.9341 li
87.3848 40.9341 li
cp
85.7441 36.8906 mo
87.1714 35.0122 li
85.7441 33.1328 li
84.3169 35.0122 li
85.7441 36.8906 li
85.7441 36.8906 li
cp
83.9131 34.4409 mo
85.3398 32.562 li
83.9131 30.6836 li
82.4858 32.562 li
83.9131 34.4409 li
83.9131 34.4409 li
cp
81.8198 32.562 mo
83.2466 30.6836 li
81.8198 28.8042 li
80.3926 30.6836 li
81.8198 32.562 li
81.8198 32.562 li
cp
79.4175 33.7749 mo
80.8447 31.8965 li
79.4175 30.0171 li
77.9907 31.8965 li
79.4175 33.7749 li
79.4175 33.7749 li
cp
76.5635 37.2002 mo
77.9907 35.3208 li
76.5635 33.4424 li
75.1362 35.3208 li
76.5635 37.2002 li
76.5635 37.2002 li
cp
73.0674 42.0762 mo
74.4941 40.1968 li
73.0674 38.3179 li
71.6401 40.1968 li
73.0674 42.0762 li
73.0674 42.0762 li
cp
68.5723 48.688 mo
69.999 46.8086 li
68.5723 44.9302 li
67.1455 46.8086 li
68.5723 48.688 li
68.5723 48.688 li
cp
62.2456 54.6577 mo
63.6729 52.7788 li
62.2456 50.8994 li
60.8188 52.7788 li
62.2456 54.6577 li
62.2456 54.6577 li
cp
51.4238 61.9829 mo
52.8506 60.104 li
51.4238 58.2256 li
49.9971 60.104 li
51.4238 61.9829 li
51.4238 61.9829 li
cp
.627649 3.05176e-5 1 3.05176e-5 cmyk
@
143.468 122.371 mo
144.896 120.492 li
143.468 118.612 li
142.041 120.492 li
143.468 122.371 li
143.468 122.371 li
cp
143.444 122.299 mo
144.871 120.421 li
143.444 118.541 li
142.017 120.421 li
143.444 122.299 li
143.444 122.299 li
cp
143.396 122.323 mo
144.823 120.443 li
143.396 118.565 li
141.97 120.443 li
143.396 122.323 li
143.396 122.323 li
cp
143.35 122.275 mo
144.776 120.396 li
143.35 118.518 li
141.922 120.396 li
143.35 122.275 li
143.35 122.275 li
cp
143.302 122.204 mo
144.728 120.324 li
143.302 118.446 li
141.875 120.324 li
143.302 122.204 li
143.302 122.204 li
cp
143.253 122.18 mo
144.681 120.302 li
143.253 118.422 li
141.826 120.302 li
143.253 122.18 li
143.253 122.18 li
cp
143.206 122.156 mo
144.633 120.277 li
143.206 118.398 li
141.779 120.277 li
143.206 122.156 li
143.206 122.156 li
cp
143.183 122.062 mo
144.61 120.183 li
143.183 118.303 li
141.756 120.183 li
143.183 122.062 li
143.183 122.062 li
cp
143.135 121.918 mo
144.562 120.039 li
143.135 118.161 li
141.708 120.039 li
143.135 121.918 li
143.135 121.918 li
cp
143.087 121.871 mo
144.515 119.992 li
143.087 118.113 li
141.66 119.992 li
143.087 121.871 li
143.087 121.871 li
cp
143.04 121.918 mo
144.467 120.039 li
143.04 118.161 li
141.612 120.039 li
143.04 121.918 li
143.04 121.918 li
cp
142.992 121.871 mo
144.419 119.992 li
142.992 118.113 li
141.565 119.992 li
142.992 121.871 li
142.992 121.871 li
cp
142.945 121.895 mo
144.372 120.017 li
142.945 118.137 li
141.518 120.017 li
142.945 121.895 li
142.945 121.895 li
cp
142.896 121.752 mo
144.323 119.873 li
142.896 117.995 li
141.47 119.873 li
142.896 121.752 li
142.896 121.752 li
cp
142.85 121.467 mo
144.276 119.588 li
142.85 117.709 li
141.422 119.588 li
142.85 121.467 li
142.85 121.467 li
cp
142.826 121.372 mo
144.252 119.492 li
142.826 117.613 li
141.399 119.492 li
142.826 121.372 li
142.826 121.372 li
cp
142.778 121.467 mo
144.205 119.588 li
142.778 117.709 li
141.351 119.588 li
142.778 121.467 li
142.778 121.467 li
cp
142.73 121.467 mo
144.157 119.588 li
142.73 117.709 li
141.304 119.588 li
142.73 121.467 li
142.73 121.467 li
cp
142.683 121.562 mo
144.11 119.683 li
142.683 117.804 li
141.256 119.683 li
142.683 121.562 li
142.683 121.562 li
cp
142.636 121.562 mo
144.063 119.683 li
142.636 117.804 li
141.209 119.683 li
142.636 121.562 li
142.636 121.562 li
cp
142.588 121.276 mo
144.016 119.397 li
142.588 117.519 li
141.161 119.397 li
142.588 121.276 li
142.588 121.276 li
cp
142.54 121.157 mo
143.967 119.278 li
142.54 117.4 li
141.112 119.278 li
142.54 121.157 li
142.54 121.157 li
cp
142.492 121.038 mo
143.92 119.16 li
142.492 117.281 li
141.065 119.16 li
142.492 121.038 li
142.492 121.038 li
cp
142.445 121.182 mo
143.872 119.303 li
142.445 117.423 li
141.019 119.303 li
142.445 121.182 li
142.445 121.182 li
cp
142.397 121.109 mo
143.825 119.231 li
142.397 117.352 li
140.971 119.231 li
142.397 121.109 li
142.397 121.109 li
cp
142.351 120.943 mo
143.776 119.065 li
142.351 117.186 li
140.924 119.065 li
142.351 120.943 li
142.351 120.943 li
cp
142.302 121.063 mo
143.729 119.184 li
142.302 117.305 li
140.875 119.184 li
142.302 121.063 li
142.302 121.063 li
cp
142.255 120.896 mo
143.682 119.017 li
142.255 117.138 li
140.827 119.017 li
142.255 120.896 li
142.255 120.896 li
cp
142.207 120.848 mo
143.635 118.969 li
142.207 117.091 li
140.78 118.969 li
142.207 120.848 li
142.207 120.848 li
cp
142.183 120.991 mo
143.61 119.112 li
142.183 117.232 li
140.756 119.112 li
142.183 120.991 li
142.183 120.991 li
cp
142.136 120.824 mo
143.563 118.946 li
142.136 117.066 li
140.709 118.946 li
142.136 120.824 li
142.136 120.824 li
cp
142.089 120.634 mo
143.516 118.756 li
142.089 116.876 li
140.661 118.756 li
142.089 120.634 li
142.089 120.634 li
cp
142.041 120.611 mo
143.468 118.731 li
142.041 116.853 li
140.614 118.731 li
142.041 120.611 li
142.041 120.611 li
cp
141.994 120.396 mo
143.421 118.518 li
141.994 116.639 li
140.566 118.518 li
141.994 120.396 li
141.994 120.396 li
cp
141.945 120.443 mo
143.372 118.565 li
141.945 116.687 li
140.519 118.565 li
141.945 120.443 li
141.945 120.443 li
cp
141.897 120.516 mo
143.325 118.637 li
141.897 116.757 li
140.471 118.637 li
141.897 120.516 li
141.897 120.516 li
cp
141.851 120.302 mo
143.277 118.422 li
141.851 116.543 li
140.424 118.422 li
141.851 120.302 li
141.851 120.302 li
cp
141.803 120.23 mo
143.23 118.352 li
141.803 116.472 li
140.376 118.352 li
141.803 120.23 li
141.803 120.23 li
cp
141.756 120.302 mo
143.183 118.422 li
141.756 116.543 li
140.329 118.422 li
141.756 120.302 li
141.756 120.302 li
cp
141.685 120.23 mo
143.111 118.352 li
141.685 116.472 li
140.257 118.352 li
141.685 120.23 li
141.685 120.23 li
cp
141.637 120.039 mo
143.064 118.161 li
141.637 116.281 li
140.21 118.161 li
141.637 120.039 li
141.637 120.039 li
cp
141.589 120.017 mo
143.016 118.137 li
141.589 116.258 li
140.161 118.137 li
141.589 120.017 li
141.589 120.017 li
cp
141.541 120.111 mo
142.968 118.232 li
141.541 116.353 li
140.114 118.232 li
141.541 120.111 li
141.541 120.111 li
cp
141.493 120.111 mo
142.921 118.232 li
141.493 116.353 li
140.066 118.232 li
141.493 120.111 li
141.493 120.111 li
cp
141.446 119.944 mo
142.873 118.065 li
141.446 116.187 li
140.02 118.065 li
141.446 119.944 li
141.446 119.944 li
cp
141.399 119.897 mo
142.826 118.018 li
141.399 116.14 li
139.972 118.018 li
141.399 119.897 li
141.399 119.897 li
cp
141.351 119.826 mo
142.778 117.946 li
141.351 116.067 li
139.924 117.946 li
141.351 119.826 li
141.351 119.826 li
cp
141.304 119.611 mo
142.73 117.732 li
141.304 115.854 li
139.876 117.732 li
141.304 119.611 li
141.304 119.611 li
cp
141.256 119.445 mo
142.683 117.566 li
141.256 115.687 li
139.829 117.566 li
141.256 119.445 li
141.256 119.445 li
cp
141.209 119.492 mo
142.636 117.613 li
141.209 115.735 li
139.781 117.613 li
141.209 119.492 li
141.209 119.492 li
cp
141.161 119.492 mo
142.588 117.613 li
141.161 115.735 li
139.734 117.613 li
141.161 119.492 li
141.161 119.492 li
cp
141.112 119.397 mo
142.54 117.519 li
141.112 115.64 li
139.686 117.519 li
141.112 119.397 li
141.112 119.397 li
cp
141.065 119.351 mo
142.492 117.471 li
141.065 115.592 li
139.639 117.471 li
141.065 119.351 li
141.065 119.351 li
cp
140.994 119.278 mo
142.421 117.4 li
140.994 115.521 li
139.567 117.4 li
140.994 119.278 li
140.994 119.278 li
cp
140.946 119.278 mo
142.374 117.4 li
140.946 115.521 li
139.52 117.4 li
140.946 119.278 li
140.946 119.278 li
cp
140.899 119.326 mo
142.326 117.447 li
140.899 115.568 li
139.472 117.447 li
140.899 119.326 li
140.899 119.326 li
cp
140.852 119.278 mo
142.278 117.4 li
140.852 115.521 li
139.425 117.4 li
140.852 119.278 li
140.852 119.278 li
cp
140.805 119.041 mo
142.231 117.162 li
140.805 115.282 li
139.377 117.162 li
140.805 119.041 li
140.805 119.041 li
cp
140.756 119.065 mo
142.183 117.186 li
140.756 115.307 li
139.329 117.186 li
140.756 119.065 li
140.756 119.065 li
cp
140.686 119.136 mo
142.112 117.257 li
140.686 115.378 li
139.259 117.257 li
140.686 119.136 li
140.686 119.136 li
cp
140.637 119.017 mo
142.064 117.138 li
140.637 115.26 li
139.21 117.138 li
140.637 119.017 li
140.637 119.017 li
cp
140.59 118.874 mo
142.017 116.995 li
140.59 115.116 li
139.163 116.995 li
140.59 118.874 li
140.59 118.874 li
cp
140.542 118.66 mo
141.97 116.781 li
140.542 114.902 li
139.115 116.781 li
140.542 118.66 li
140.542 118.66 li
cp
140.495 118.708 mo
141.922 116.828 li
140.495 114.95 li
139.068 116.828 li
140.495 118.708 li
140.495 118.708 li
cp
140.447 118.684 mo
141.875 116.806 li
140.447 114.926 li
139.021 116.806 li
140.447 118.684 li
140.447 118.684 li
cp
140.376 118.731 mo
141.803 116.853 li
140.376 114.973 li
138.949 116.853 li
140.376 118.731 li
140.376 118.731 li
cp
140.329 118.684 mo
141.756 116.806 li
140.329 114.926 li
138.901 116.806 li
140.329 118.684 li
140.329 118.684 li
cp
140.28 118.589 mo
141.708 116.71 li
140.28 114.831 li
138.854 116.71 li
140.28 118.589 li
140.28 118.589 li
cp
140.233 118.493 mo
141.66 116.615 li
140.233 114.736 li
138.806 116.615 li
140.233 118.493 li
140.233 118.493 li
cp
140.161 118.232 mo
141.589 116.353 li
140.161 114.475 li
138.734 116.353 li
140.161 118.232 li
140.161 118.232 li
cp
140.114 118.327 mo
141.541 116.448 li
140.114 114.569 li
138.687 116.448 li
140.114 118.327 li
140.114 118.327 li
cp
140.066 118.352 mo
141.494 116.472 li
140.066 114.593 li
138.64 116.472 li
140.066 118.352 li
140.066 118.352 li
cp
140.02 118.184 mo
141.446 116.306 li
140.02 114.427 li
138.592 116.306 li
140.02 118.184 li
140.02 118.184 li
cp
139.948 118.065 mo
141.375 116.187 li
139.948 114.308 li
138.521 116.187 li
139.948 118.065 li
139.948 118.065 li
cp
139.9 117.946 mo
141.327 116.067 li
139.9 114.189 li
138.474 116.067 li
139.9 117.946 li
139.9 117.946 li
cp
139.854 117.876 mo
141.28 115.996 li
139.854 114.117 li
138.426 115.996 li
139.854 117.876 li
139.854 117.876 li
cp
139.805 117.804 mo
141.231 115.925 li
139.805 114.046 li
138.378 115.925 li
139.805 117.804 li
139.805 117.804 li
cp
139.734 117.638 mo
141.161 115.758 li
139.734 113.88 li
138.307 115.758 li
139.734 117.638 li
139.734 117.638 li
cp
139.686 117.519 mo
141.112 115.64 li
139.686 113.761 li
138.259 115.64 li
139.686 117.519 li
139.686 117.519 li
cp
139.639 117.661 mo
141.065 115.782 li
139.639 113.902 li
138.211 115.782 li
139.639 117.661 li
139.639 117.661 li
cp
139.567 117.709 mo
140.994 115.83 li
139.567 113.951 li
138.14 115.83 li
139.567 117.709 li
139.567 117.709 li
cp
139.52 117.757 mo
140.946 115.877 li
139.52 113.999 li
138.093 115.877 li
139.52 117.757 li
139.52 117.757 li
cp
139.472 117.78 mo
140.899 115.901 li
139.472 114.021 li
138.045 115.901 li
139.472 117.78 li
139.472 117.78 li
cp
139.4 117.519 mo
140.827 115.64 li
139.4 113.761 li
137.974 115.64 li
139.4 117.519 li
139.4 117.519 li
cp
139.354 117.4 mo
140.78 115.521 li
139.354 113.642 li
137.926 115.521 li
139.354 117.4 li
139.354 117.4 li
cp
139.306 117.352 mo
140.732 115.473 li
139.306 113.595 li
137.879 115.473 li
139.306 117.352 li
139.306 117.352 li
cp
139.234 117.257 mo
140.661 115.378 li
139.234 113.499 li
137.808 115.378 li
139.234 117.257 li
139.234 117.257 li
cp
139.187 117.066 mo
140.614 115.188 li
139.187 113.31 li
137.76 115.188 li
139.187 117.066 li
139.187 117.066 li
cp
139.115 116.925 mo
140.542 115.045 li
139.115 113.166 li
137.688 115.045 li
139.115 116.925 li
139.115 116.925 li
cp
139.068 117.02 mo
140.495 115.141 li
139.067 113.261 li
137.641 115.141 li
139.067 117.02 li
139.068 117.02 li
cp
139.021 116.876 mo
140.447 114.997 li
139.021 113.119 li
137.594 114.997 li
139.021 116.876 li
139.021 116.876 li
cp
138.949 116.781 mo
140.376 114.902 li
138.949 113.023 li
137.521 114.902 li
138.949 116.781 li
138.949 116.781 li
cp
138.901 116.876 mo
140.329 114.997 li
138.901 113.119 li
137.475 114.997 li
138.901 116.876 li
138.901 116.876 li
cp
138.83 116.687 mo
140.257 114.807 li
138.83 112.929 li
137.403 114.807 li
138.83 116.687 li
138.83 116.687 li
cp
138.783 116.4 mo
140.21 114.521 li
138.783 112.644 li
137.355 114.521 li
138.783 116.4 li
138.783 116.4 li
cp
138.711 116.496 mo
140.139 114.616 li
138.711 112.738 li
137.284 114.616 li
138.711 116.496 li
138.711 116.496 li
cp
138.664 116.733 mo
140.091 114.855 li
138.664 112.976 li
137.236 114.855 li
138.664 116.733 li
138.664 116.733 li
cp
138.592 116.591 mo
140.02 114.712 li
138.592 112.832 li
137.165 114.712 li
138.592 116.591 li
138.592 116.591 li
cp
138.545 116.377 mo
139.972 114.499 li
138.545 112.619 li
137.118 114.499 li
138.545 116.377 li
138.545 116.377 li
cp
138.474 116.4 mo
139.9 114.521 li
138.474 112.644 li
137.046 114.521 li
138.474 116.4 li
138.474 116.4 li
cp
138.426 116.33 mo
139.854 114.45 li
138.426 112.571 li
136.999 114.45 li
138.426 116.33 li
138.426 116.33 li
cp
138.354 116.14 mo
139.781 114.26 li
138.354 112.381 li
136.928 114.26 li
138.354 116.14 li
138.354 116.14 li
cp
138.307 115.996 mo
139.734 114.117 li
138.307 112.239 li
136.88 114.117 li
138.307 115.996 li
138.307 115.996 li
cp
138.235 115.973 mo
139.662 114.094 li
138.235 112.215 li
136.809 114.094 li
138.235 115.973 li
138.235 115.973 li
cp
138.188 116.043 mo
139.615 114.165 li
138.188 112.286 li
136.761 114.165 li
138.188 116.043 li
138.188 116.043 li
cp
138.116 116.092 mo
139.544 114.212 li
138.116 112.334 li
136.689 114.212 li
138.116 116.092 li
138.116 116.092 li
cp
138.069 116.043 mo
139.496 114.165 li
138.069 112.286 li
136.643 114.165 li
138.069 116.043 li
138.069 116.043 li
cp
137.998 115.83 mo
139.425 113.951 li
137.998 112.071 li
136.57 113.951 li
137.998 115.83 li
137.998 115.83 li
cp
137.95 115.711 mo
139.377 113.832 li
137.95 111.953 li
136.523 113.832 li
137.95 115.711 li
137.95 115.711 li
cp
137.879 115.83 mo
139.306 113.951 li
137.879 112.071 li
136.451 113.951 li
137.879 115.83 li
137.879 115.83 li
cp
137.808 115.83 mo
139.234 113.951 li
137.808 112.071 li
136.38 113.951 li
137.808 115.83 li
137.808 115.83 li
cp
137.76 115.545 mo
139.187 113.666 li
137.76 111.786 li
136.333 113.666 li
137.76 115.545 li
137.76 115.545 li
cp
137.688 115.378 mo
139.115 113.499 li
137.688 111.62 li
136.261 113.499 li
137.688 115.378 li
137.688 115.378 li
cp
137.641 115.449 mo
139.068 113.57 li
137.641 111.691 li
136.214 113.57 li
137.641 115.449 li
137.641 115.449 li
cp
137.569 115.33 mo
138.996 113.451 li
137.569 111.573 li
136.143 113.451 li
137.569 115.33 li
137.569 115.33 li
cp
137.498 115.26 mo
138.925 113.38 li
137.498 111.501 li
136.07 113.38 li
137.498 115.26 li
137.498 115.26 li
cp
137.45 115.235 mo
138.878 113.356 li
137.45 111.477 li
136.023 113.356 li
137.45 115.235 li
137.45 115.235 li
cp
137.379 115.164 mo
138.806 113.285 li
137.379 111.406 li
135.952 113.285 li
137.379 115.164 li
137.379 115.164 li
cp
137.309 115.164 mo
138.734 113.285 li
137.309 111.406 li
135.881 113.285 li
137.309 115.164 li
137.309 115.164 li
cp
137.26 115.188 mo
138.687 113.31 li
137.26 111.43 li
135.833 113.31 li
137.26 115.188 li
137.26 115.188 li
cp
137.189 115.116 mo
138.615 113.237 li
137.189 111.358 li
135.762 113.237 li
137.189 115.116 li
137.189 115.116 li
cp
137.118 115.069 mo
138.545 113.19 li
137.118 111.311 li
135.69 113.19 li
137.118 115.069 li
137.118 115.069 li
cp
137.046 114.902 mo
138.474 113.023 li
137.046 111.145 li
135.619 113.023 li
137.046 114.902 li
137.046 114.902 li
cp
136.999 114.499 mo
138.426 112.619 li
136.999 110.74 li
135.572 112.619 li
136.999 114.499 li
136.999 114.499 li
cp
136.928 114.499 mo
138.354 112.619 li
136.928 110.74 li
135.5 112.619 li
136.928 114.499 li
136.928 114.499 li
cp
136.855 114.831 mo
138.283 112.952 li
136.855 111.073 li
135.429 112.952 li
136.855 114.831 li
136.855 114.831 li
cp
136.784 114.76 mo
138.211 112.881 li
136.784 111.001 li
135.357 112.881 li
136.784 114.76 li
136.784 114.76 li
cp
136.737 114.212 mo
138.164 112.334 li
136.737 110.455 li
135.31 112.334 li
136.737 114.212 li
136.737 114.212 li
cp
136.665 114.165 mo
138.093 112.286 li
136.665 110.406 li
135.238 112.286 li
136.665 114.165 li
136.665 114.165 li
cp
136.595 114.331 mo
138.021 112.452 li
136.595 110.574 li
135.168 112.452 li
136.595 114.331 li
136.595 114.331 li
cp
136.523 114.308 mo
137.95 112.429 li
136.523 110.55 li
135.096 112.429 li
136.523 114.308 li
136.523 114.308 li
cp
136.451 114.236 mo
137.879 112.358 li
136.451 110.479 li
135.024 112.358 li
136.451 114.236 li
136.451 114.236 li
cp
136.38 114.021 mo
137.808 112.144 li
136.38 110.265 li
134.953 112.144 li
136.38 114.021 li
136.38 114.021 li
cp
136.333 113.951 mo
137.76 112.071 li
136.333 110.193 li
134.905 112.071 li
136.333 113.951 li
136.333 113.951 li
cp
136.261 114.07 mo
137.688 112.19 li
136.261 110.312 li
134.834 112.19 li
136.261 114.07 li
136.261 114.07 li
cp
136.189 113.902 mo
137.616 112.024 li
136.189 110.146 li
134.763 112.024 li
136.189 113.902 li
136.189 113.902 li
cp
136.119 113.714 mo
137.546 111.834 li
136.119 109.955 li
134.691 111.834 li
136.119 113.714 li
136.119 113.714 li
cp
136.048 113.642 mo
137.475 111.763 li
136.048 109.884 li
134.62 111.763 li
136.048 113.642 li
136.048 113.642 li
cp
135.976 113.761 mo
137.403 111.882 li
135.976 110.003 li
134.549 111.882 li
135.976 113.761 li
135.976 113.761 li
cp
135.904 113.736 mo
137.331 111.858 li
135.904 109.979 li
134.478 111.858 li
135.904 113.736 li
135.904 113.736 li
cp
135.833 113.499 mo
137.26 111.62 li
135.833 109.741 li
134.405 111.62 li
135.833 113.499 li
135.833 113.499 li
cp
135.762 113.522 mo
137.189 111.645 li
135.762 109.765 li
134.335 111.645 li
135.762 113.522 li
135.762 113.522 li
cp
135.69 113.499 mo
137.118 111.62 li
135.69 109.741 li
134.264 111.62 li
135.69 113.499 li
135.69 113.499 li
cp
135.619 113.31 mo
137.046 111.43 li
135.619 109.551 li
134.192 111.43 li
135.619 113.31 li
135.619 113.31 li
cp
135.548 113.285 mo
136.975 111.406 li
135.548 109.527 li
134.12 111.406 li
135.548 113.285 li
135.548 113.285 li
cp
135.476 113.237 mo
136.903 111.358 li
135.476 109.479 li
134.049 111.358 li
135.476 113.237 li
135.476 113.237 li
cp
135.405 112.929 mo
136.831 111.05 li
135.405 109.17 li
133.979 111.05 li
135.405 112.929 li
135.405 112.929 li
cp
135.334 113.119 mo
136.761 111.239 li
135.334 109.36 li
133.907 111.239 li
135.334 113.119 li
135.334 113.119 li
cp
135.263 113.285 mo
136.689 111.406 li
135.263 109.527 li
133.835 111.406 li
135.263 113.285 li
135.263 113.285 li
cp
135.19 112.881 mo
136.618 111.001 li
135.19 109.123 li
133.764 111.001 li
135.19 112.881 li
135.19 112.881 li
cp
135.119 112.715 mo
136.546 110.835 li
135.119 108.956 li
133.692 110.835 li
135.119 112.715 li
135.119 112.715 li
cp
135.049 112.69 mo
136.476 110.812 li
135.049 108.933 li
133.621 110.812 li
135.049 112.69 li
135.049 112.69 li
cp
134.978 112.762 mo
136.404 110.883 li
134.978 109.004 li
133.55 110.883 li
134.978 112.762 li
134.978 112.762 li
cp
134.882 112.81 mo
136.309 110.931 li
134.882 109.051 li
133.454 110.931 li
134.882 112.81 li
134.882 112.81 li
cp
134.811 112.524 mo
136.238 110.645 li
134.811 108.766 li
133.384 110.645 li
134.811 112.524 li
134.811 112.524 li
cp
134.739 112.286 mo
136.166 110.406 li
134.739 108.528 li
133.313 110.406 li
134.739 112.286 li
134.739 112.286 li
cp
134.668 112.215 mo
136.095 110.336 li
134.668 108.457 li
133.24 110.336 li
134.668 112.215 li
134.668 112.215 li
cp
134.597 112.381 mo
136.023 110.503 li
134.597 108.623 li
133.169 110.503 li
134.597 112.381 li
134.597 112.381 li
cp
134.524 112.239 mo
135.952 110.359 li
134.524 108.48 li
133.098 110.359 li
134.524 112.239 li
134.524 112.239 li
cp
134.43 112.167 mo
135.857 110.288 li
134.43 108.409 li
133.003 110.288 li
134.43 112.167 li
134.43 112.167 li
cp
134.358 112.096 mo
135.785 110.218 li
134.358 108.338 li
132.932 110.218 li
134.358 112.096 li
134.358 112.096 li
cp
134.287 111.977 mo
135.714 110.099 li
134.287 108.219 li
132.859 110.099 li
134.287 111.977 li
134.287 111.977 li
cp
@
grestore
gsave
49.7827 126.557 mo
149.366 126.557 li
149.366 26.854 li
49.7827 26.854 li
49.7827 126.557 li
cp
clp
0 lj
135.19 111.145 mo
137.428 111.145 li
137.428 113.38 li
135.19 113.38 li
135.19 111.145 li
135.19 111.145 li
cp
135.119 110.931 mo
137.355 110.931 li
137.355 113.166 li
135.119 113.166 li
135.119 110.931 li
135.119 110.931 li
cp
135.049 110.764 mo
137.284 110.764 li
137.284 113 li
135.049 113 li
135.049 110.764 li
135.049 110.764 li
cp
134.953 110.716 mo
137.189 110.716 li
137.189 112.952 li
134.953 112.952 li
134.953 110.716 li
134.953 110.716 li
cp
134.882 110.669 mo
137.118 110.669 li
137.118 112.904 li
134.882 112.904 li
134.882 110.669 li
134.882 110.669 li
cp
134.811 110.74 mo
137.046 110.74 li
137.046 112.976 li
134.811 112.976 li
134.811 110.74 li
134.811 110.74 li
cp
134.715 110.669 mo
136.95 110.669 li
136.95 112.904 li
134.715 112.904 li
134.715 110.669 li
134.715 110.669 li
cp
134.644 110.431 mo
136.88 110.431 li
136.88 112.666 li
134.644 112.666 li
134.644 110.431 li
134.644 110.431 li
cp
134.573 110.455 mo
136.809 110.455 li
136.809 112.69 li
134.573 112.69 li
134.573 110.455 li
134.573 110.455 li
cp
134.478 110.359 mo
136.714 110.359 li
136.714 112.596 li
134.478 112.596 li
134.478 110.359 li
134.478 110.359 li
cp
134.405 110.431 mo
136.643 110.431 li
136.643 112.666 li
134.405 112.666 li
134.405 110.431 li
134.405 110.431 li
cp
134.311 110.455 mo
136.546 110.455 li
136.546 112.69 li
134.311 112.69 li
134.311 110.455 li
134.311 110.455 li
cp
134.239 110.146 mo
136.476 110.146 li
136.476 112.381 li
134.239 112.381 li
134.239 110.146 li
134.239 110.146 li
cp
134.145 109.955 mo
136.38 109.955 li
136.38 112.19 li
134.145 112.19 li
134.145 109.955 li
134.145 109.955 li
cp
134.073 110.05 mo
136.309 110.05 li
136.309 112.286 li
134.073 112.286 li
134.073 110.05 li
134.073 110.05 li
cp
133.979 110.003 mo
136.214 110.003 li
136.214 112.239 li
133.979 112.239 li
133.979 110.003 li
133.979 110.003 li
cp
133.907 109.908 mo
136.143 109.908 li
136.143 112.144 li
133.907 112.144 li
133.907 109.908 li
133.907 109.908 li
cp
133.812 109.86 mo
136.048 109.86 li
136.048 112.096 li
133.812 112.096 li
133.812 109.86 li
133.812 109.86 li
cp
133.717 109.741 mo
135.952 109.741 li
135.952 111.977 li
133.717 111.977 li
133.717 109.741 li
133.717 109.741 li
cp
133.645 109.693 mo
135.881 109.693 li
135.881 111.93 li
133.645 111.93 li
133.645 109.693 li
133.645 109.693 li
cp
133.55 109.551 mo
135.785 109.551 li
135.785 111.786 li
133.55 111.786 li
133.55 109.551 li
133.55 109.551 li
cp
133.479 109.219 mo
135.714 109.219 li
135.714 111.454 li
133.479 111.454 li
133.479 109.219 li
133.479 109.219 li
cp
133.384 109.219 mo
135.619 109.219 li
135.619 111.454 li
133.384 111.454 li
133.384 109.219 li
133.384 109.219 li
cp
133.288 109.36 mo
135.524 109.36 li
135.524 111.596 li
133.288 111.596 li
133.288 109.36 li
133.288 109.36 li
cp
133.193 109.336 mo
135.429 109.336 li
135.429 111.573 li
133.193 111.573 li
133.193 109.336 li
133.193 109.336 li
cp
133.122 109.241 mo
135.357 109.241 li
135.357 111.477 li
133.122 111.477 li
133.122 109.241 li
133.122 109.241 li
cp
133.027 109.075 mo
135.263 109.075 li
135.263 111.311 li
133.027 111.311 li
133.027 109.075 li
133.027 109.075 li
cp
132.932 109.194 mo
135.168 109.194 li
135.168 111.43 li
132.932 111.43 li
132.932 109.194 li
132.932 109.194 li
cp
132.837 109.075 mo
135.072 109.075 li
135.072 111.311 li
132.837 111.311 li
132.837 109.075 li
132.837 109.075 li
cp
132.741 108.909 mo
134.978 108.909 li
134.978 111.145 li
132.741 111.145 li
132.741 108.909 li
132.741 108.909 li
cp
132.67 108.552 mo
134.905 108.552 li
134.905 110.788 li
132.67 110.788 li
132.67 108.552 li
132.67 108.552 li
cp
132.574 108.195 mo
134.811 108.195 li
134.811 110.431 li
132.574 110.431 li
132.574 108.195 li
132.574 108.195 li
cp
132.479 108.195 mo
134.715 108.195 li
134.715 110.431 li
132.479 110.431 li
132.479 108.195 li
132.479 108.195 li
cp
132.384 108.1 mo
134.62 108.1 li
134.62 110.336 li
132.384 110.336 li
132.384 108.1 li
132.384 108.1 li
cp
132.289 108.219 mo
134.524 108.219 li
134.524 110.455 li
132.289 110.455 li
132.289 108.219 li
132.289 108.219 li
cp
132.194 108.171 mo
134.43 108.171 li
134.43 110.406 li
132.194 110.406 li
132.194 108.171 li
132.194 108.171 li
cp
132.099 108.053 mo
134.335 108.053 li
134.335 110.288 li
132.099 110.288 li
132.099 108.053 li
132.099 108.053 li
cp
132.004 108.029 mo
134.239 108.029 li
134.239 110.265 li
132.004 110.265 li
132.004 108.029 li
132.004 108.029 li
cp
131.909 107.743 mo
134.145 107.743 li
134.145 109.979 li
131.909 109.979 li
131.909 107.743 li
131.909 107.743 li
cp
131.813 107.554 mo
134.049 107.554 li
134.049 109.789 li
131.813 109.789 li
131.813 107.554 li
131.813 107.554 li
cp
131.719 107.554 mo
133.954 107.554 li
133.954 109.789 li
131.719 109.789 li
131.719 107.554 li
131.719 107.554 li
cp
131.623 107.72 mo
133.859 107.72 li
133.859 109.955 li
131.623 109.955 li
131.623 107.72 li
131.623 107.72 li
cp
131.528 107.387 mo
133.764 107.387 li
133.764 109.622 li
131.528 109.622 li
131.528 107.387 li
131.528 107.387 li
cp
131.409 107.363 mo
133.645 107.363 li
133.645 109.599 li
131.409 109.599 li
131.409 107.363 li
131.409 107.363 li
cp
131.313 107.648 mo
133.55 107.648 li
133.55 109.884 li
131.313 109.884 li
131.313 107.648 li
131.313 107.648 li
cp
131.219 107.268 mo
133.454 107.268 li
133.454 109.504 li
131.219 109.504 li
131.219 107.268 li
131.219 107.268 li
cp
131.124 106.935 mo
133.359 106.935 li
133.359 109.17 li
131.124 109.17 li
131.124 106.935 li
131.124 106.935 li
cp
131.006 106.959 mo
133.24 106.959 li
133.24 109.194 li
131.006 109.194 li
131.006 106.959 li
131.006 106.959 li
cp
130.909 107.173 mo
133.146 107.173 li
133.146 109.408 li
130.909 109.408 li
130.909 107.173 li
130.909 107.173 li
cp
130.814 106.84 mo
133.05 106.84 li
133.05 109.075 li
130.814 109.075 li
130.814 106.84 li
130.814 106.84 li
cp
130.696 106.411 mo
132.932 106.411 li
132.932 108.647 li
130.696 108.647 li
130.696 106.411 li
130.696 106.411 li
cp
130.602 106.53 mo
132.837 106.53 li
132.837 108.766 li
130.602 108.766 li
130.602 106.53 li
130.602 106.53 li
cp
130.506 106.507 mo
132.741 106.507 li
132.741 108.742 li
130.506 108.742 li
130.506 106.507 li
130.506 106.507 li
cp
130.387 106.411 mo
132.622 106.411 li
132.622 108.647 li
130.387 108.647 li
130.387 106.411 li
130.387 106.411 li
cp
130.292 106.316 mo
132.527 106.316 li
132.527 108.552 li
130.292 108.552 li
130.292 106.316 li
130.292 106.316 li
cp
130.173 106.149 mo
132.408 106.149 li
132.408 108.385 li
130.173 108.385 li
130.173 106.149 li
130.173 106.149 li
cp
130.077 106.103 mo
132.313 106.103 li
132.313 108.338 li
130.077 108.338 li
130.077 106.103 li
130.077 106.103 li
cp
129.958 106.103 mo
132.194 106.103 li
132.194 108.338 li
129.958 108.338 li
129.958 106.103 li
129.958 106.103 li
cp
129.839 105.84 mo
132.076 105.84 li
132.076 108.077 li
129.839 108.077 li
129.839 105.84 li
129.839 105.84 li
cp
129.744 105.65 mo
131.979 105.65 li
131.979 107.886 li
129.744 107.886 li
129.744 105.65 li
129.744 105.65 li
cp
129.626 105.627 mo
131.861 105.627 li
131.861 107.862 li
129.626 107.862 li
129.626 105.627 li
129.626 105.627 li
cp
129.507 105.532 mo
131.742 105.532 li
131.742 107.768 li
129.507 107.768 li
129.507 105.532 li
129.507 105.532 li
cp
129.412 105.437 mo
131.647 105.437 li
131.647 107.673 li
129.412 107.673 li
129.412 105.437 li
129.412 105.437 li
cp
129.293 105.246 mo
131.528 105.246 li
131.528 107.481 li
129.293 107.481 li
129.293 105.246 li
129.293 105.246 li
cp
129.174 105.198 mo
131.409 105.198 li
131.409 107.435 li
129.174 107.435 li
129.174 105.198 li
129.174 105.198 li
cp
129.055 105.151 mo
131.291 105.151 li
131.291 107.387 li
129.055 107.387 li
129.055 105.151 li
129.055 105.151 li
cp
128.937 105.127 mo
131.172 105.127 li
131.172 107.363 li
128.937 107.363 li
128.937 105.127 li
128.937 105.127 li
cp
128.817 105.056 mo
131.053 105.056 li
131.053 107.292 li
128.817 107.292 li
128.817 105.056 li
128.817 105.056 li
cp
128.698 105.032 mo
130.934 105.032 li
130.934 107.268 li
128.698 107.268 li
128.698 105.032 li
128.698 105.032 li
cp
128.579 104.866 mo
130.814 104.866 li
130.814 107.101 li
128.579 107.101 li
128.579 104.866 li
128.579 104.866 li
cp
128.461 104.675 mo
130.696 104.675 li
130.696 106.91 li
128.461 106.91 li
128.461 104.675 li
128.461 104.675 li
cp
128.342 104.58 mo
130.577 104.58 li
130.577 106.815 li
128.342 106.815 li
128.342 104.58 li
128.342 104.58 li
cp
128.223 104.413 mo
130.458 104.413 li
130.458 106.649 li
128.223 106.649 li
128.223 104.413 li
128.223 104.413 li
cp
128.104 104.438 mo
130.339 104.438 li
130.339 106.673 li
128.104 106.673 li
128.104 104.438 li
128.104 104.438 li
cp
127.984 103.985 mo
130.221 103.985 li
130.221 106.222 li
127.984 106.222 li
127.984 103.985 li
127.984 103.985 li
cp
127.866 103.818 mo
130.102 103.818 li
130.102 106.055 li
127.866 106.055 li
127.866 103.818 li
127.866 103.818 li
cp
127.723 103.962 mo
129.958 103.962 li
129.958 106.197 li
127.723 106.197 li
127.723 103.962 li
127.723 103.962 li
cp
127.604 103.629 mo
129.839 103.629 li
129.839 105.864 li
127.604 105.864 li
127.604 103.629 li
127.604 103.629 li
cp
127.485 103.486 mo
129.721 103.486 li
129.721 105.722 li
127.485 105.722 li
127.485 103.486 li
127.485 103.486 li
cp
127.342 103.652 mo
129.578 103.652 li
129.578 105.889 li
127.342 105.889 li
127.342 103.652 li
127.342 103.652 li
cp
127.223 103.581 mo
129.459 103.581 li
129.459 105.817 li
127.223 105.817 li
127.223 103.581 li
127.223 103.581 li
cp
127.081 103.486 mo
129.316 103.486 li
129.316 105.722 li
127.081 105.722 li
127.081 103.486 li
127.081 103.486 li
cp
126.962 103.319 mo
129.197 103.319 li
129.197 105.555 li
126.962 105.555 li
126.962 103.319 li
126.962 103.319 li
cp
126.818 102.986 mo
129.055 102.986 li
129.055 105.223 li
126.818 105.223 li
126.818 102.986 li
126.818 102.986 li
cp
126.7 102.844 mo
128.937 102.844 li
128.937 105.079 li
126.7 105.079 li
126.7 102.844 li
126.7 102.844 li
cp
126.558 102.701 mo
128.793 102.701 li
128.793 104.938 li
126.558 104.938 li
126.558 102.701 li
126.558 102.701 li
cp
126.415 102.582 mo
128.65 102.582 li
128.65 104.818 li
126.415 104.818 li
126.415 102.582 li
126.415 102.582 li
cp
126.271 102.701 mo
128.508 102.701 li
128.508 104.938 li
126.271 104.938 li
126.271 102.701 li
126.271 102.701 li
cp
126.129 102.512 mo
128.365 102.512 li
128.365 104.747 li
126.129 104.747 li
126.129 102.512 li
126.129 102.512 li
cp
126.011 101.987 mo
128.246 101.987 li
128.246 104.224 li
126.011 104.224 li
126.011 101.987 li
126.011 101.987 li
cp
125.867 101.987 mo
128.104 101.987 li
128.104 104.224 li
125.867 104.224 li
125.867 101.987 li
125.867 101.987 li
cp
125.726 101.94 mo
127.961 101.94 li
127.961 104.176 li
125.726 104.176 li
125.726 101.94 li
125.726 101.94 li
cp
125.582 101.488 mo
127.817 101.488 li
127.817 103.724 li
125.582 103.724 li
125.582 101.488 li
125.582 101.488 li
cp
125.416 101.441 mo
127.651 101.441 li
127.651 103.677 li
125.416 103.677 li
125.416 101.441 li
125.416 101.441 li
cp
125.272 101.631 mo
127.509 101.631 li
127.509 103.867 li
125.272 103.867 li
125.272 101.631 li
125.272 101.631 li
cp
125.131 101.512 mo
127.366 101.512 li
127.366 103.748 li
125.131 103.748 li
125.131 101.512 li
125.131 101.512 li
cp
124.987 101.536 mo
127.223 101.536 li
127.223 103.771 li
124.987 103.771 li
124.987 101.536 li
124.987 101.536 li
cp
124.821 101.251 mo
127.057 101.251 li
127.057 103.486 li
124.821 103.486 li
124.821 101.251 li
124.821 101.251 li
cp
124.678 101.155 mo
126.914 101.155 li
126.914 103.392 li
124.678 103.392 li
124.678 101.155 li
124.678 101.155 li
cp
124.536 101.251 mo
126.771 101.251 li
126.771 103.486 li
124.536 103.486 li
124.536 101.251 li
124.536 101.251 li
cp
124.37 100.847 mo
126.605 100.847 li
126.605 103.082 li
124.37 103.082 li
124.37 100.847 li
124.37 100.847 li
cp
124.202 100.656 mo
126.438 100.656 li
126.438 102.892 li
124.202 102.892 li
124.202 100.656 li
124.202 100.656 li
cp
124.061 100.728 mo
126.296 100.728 li
126.296 102.963 li
124.061 102.963 li
124.061 100.728 li
124.061 100.728 li
cp
123.895 100.489 mo
126.129 100.489 li
126.129 102.726 li
123.895 102.726 li
123.895 100.489 li
123.895 100.489 li
cp
123.727 100.133 mo
125.963 100.133 li
125.963 102.368 li
123.727 102.368 li
123.727 100.133 li
123.727 100.133 li
cp
123.561 100.347 mo
125.796 100.347 li
125.796 102.582 li
123.561 102.582 li
123.561 100.347 li
123.561 100.347 li
cp
123.395 100.371 mo
125.63 100.371 li
125.63 102.606 li
123.395 102.606 li
123.395 100.371 li
123.395 100.371 li
cp
123.228 100.014 mo
125.463 100.014 li
125.463 102.249 li
123.228 102.249 li
123.228 100.014 li
123.228 100.014 li
cp
123.062 99.8467 mo
125.297 99.8467 li
125.297 102.083 li
123.062 102.083 li
123.062 99.8467 li
123.062 99.8467 li
cp
122.895 99.5381 mo
125.131 99.5381 li
125.131 101.773 li
122.895 101.773 li
122.895 99.5381 li
122.895 99.5381 li
cp
122.729 99.3477 mo
124.965 99.3477 li
124.965 101.583 li
122.729 101.583 li
122.729 99.3477 li
122.729 99.3477 li
cp
122.537 99.0625 mo
124.773 99.0625 li
124.773 101.298 li
122.537 101.298 li
122.537 99.0625 li
122.537 99.0625 li
cp
122.371 98.8477 mo
124.607 98.8477 li
124.607 101.084 li
122.371 101.084 li
122.371 98.8477 li
122.371 98.8477 li
cp
122.205 98.8955 mo
124.44 98.8955 li
124.44 101.132 li
122.205 101.132 li
122.205 98.8955 li
122.205 98.8955 li
cp
122.015 98.4912 mo
124.251 98.4912 li
124.251 100.728 li
122.015 100.728 li
122.015 98.4912 li
122.015 98.4912 li
cp
121.824 98.04 mo
124.061 98.04 li
124.061 100.275 li
121.824 100.275 li
121.824 98.04 li
121.824 98.04 li
cp
121.635 98.0869 mo
123.87 98.0869 li
123.87 100.322 li
121.635 100.322 li
121.635 98.0869 li
121.635 98.0869 li
cp
121.467 98.1816 mo
123.703 98.1816 li
123.703 100.418 li
121.467 100.418 li
121.467 98.1816 li
121.467 98.1816 li
cp
121.277 98.0869 mo
123.514 98.0869 li
123.514 100.322 li
121.277 100.322 li
121.277 98.0869 li
121.277 98.0869 li
cp
121.087 97.9922 mo
123.322 97.9922 li
123.322 100.228 li
121.087 100.228 li
121.087 97.9922 li
121.087 97.9922 li
cp
120.874 97.9443 mo
123.109 97.9443 li
123.109 100.181 li
120.874 100.181 li
120.874 97.9443 li
120.874 97.9443 li
cp
120.684 97.7549 mo
122.918 97.7549 li
122.918 99.9893 li
120.684 99.9893 li
120.684 97.7549 li
120.684 97.7549 li
cp
120.492 97.3018 mo
122.729 97.3018 li
122.729 99.5381 li
120.492 99.5381 li
120.492 97.3018 li
120.492 97.3018 li
cp
120.278 97.041 mo
122.515 97.041 li
122.515 99.2764 li
120.278 99.2764 li
120.278 97.041 li
120.278 97.041 li
cp
120.089 96.8262 mo
122.324 96.8262 li
122.324 99.0625 li
120.089 99.0625 li
120.089 96.8262 li
120.089 96.8262 li
cp
119.874 96.7314 mo
122.11 96.7314 li
122.11 98.9668 li
119.874 98.9668 li
119.874 96.7314 li
119.874 96.7314 li
cp
119.66 96.6357 mo
121.896 96.6357 li
121.896 98.8721 li
119.66 98.8721 li
119.66 96.6357 li
119.66 96.6357 li
cp
119.446 96.4463 mo
121.682 96.4463 li
121.682 98.6816 li
119.446 98.6816 li
119.446 96.4463 li
119.446 96.4463 li
cp
119.232 95.9707 mo
121.467 95.9707 li
121.467 98.2061 li
119.232 98.2061 li
119.232 95.9707 li
119.232 95.9707 li
cp
119.019 95.5186 mo
121.254 95.5186 li
121.254 97.7549 li
119.019 97.7549 li
119.019 95.5186 li
119.019 95.5186 li
cp
118.804 95.3994 mo
121.04 95.3994 li
121.04 97.6357 li
118.804 97.6357 li
118.804 95.3994 li
118.804 95.3994 li
cp
118.565 95.1855 mo
120.802 95.1855 li
120.802 97.4209 li
118.565 97.4209 li
118.565 95.1855 li
118.565 95.1855 li
cp
118.352 95.2803 mo
120.588 95.2803 li
120.588 97.5166 li
118.352 97.5166 li
118.352 95.2803 li
118.352 95.2803 li
cp
118.114 95.1855 mo
120.35 95.1855 li
120.35 97.4209 li
118.114 97.4209 li
118.114 95.1855 li
118.114 95.1855 li
cp
117.876 94.8516 mo
120.111 94.8516 li
120.111 97.0879 li
117.876 97.0879 li
117.876 94.8516 li
117.876 94.8516 li
cp
117.639 94.4004 mo
119.874 94.4004 li
119.874 96.6357 li
117.639 96.6357 li
117.639 94.4004 li
117.639 94.4004 li
cp
117.4 94.377 mo
119.636 94.377 li
119.636 96.6123 li
117.4 96.6123 li
117.4 94.377 li
117.4 94.377 li
cp
117.139 94.0908 mo
119.375 94.0908 li
119.375 96.3271 li
117.139 96.3271 li
117.139 94.0908 li
117.139 94.0908 li
cp
116.9 93.5674 mo
119.137 93.5674 li
119.137 95.8047 li
116.9 95.8047 li
116.9 93.5674 li
116.9 93.5674 li
cp
116.64 93.1641 mo
118.875 93.1641 li
118.875 95.3994 li
116.64 95.3994 li
116.64 93.1641 li
116.64 93.1641 li
cp
116.378 92.9502 mo
118.614 92.9502 li
118.614 95.1855 li
116.378 95.1855 li
116.378 92.9502 li
116.378 92.9502 li
cp
116.116 92.6885 mo
118.352 92.6885 li
118.352 94.9238 li
116.116 94.9238 li
116.116 92.6885 li
116.116 92.6885 li
cp
115.854 92.2363 mo
118.09 92.2363 li
118.09 94.4717 li
115.854 94.4717 li
115.854 92.2363 li
115.854 92.2363 li
cp
115.593 91.7842 mo
117.829 91.7842 li
117.829 94.0205 li
115.593 94.0205 li
115.593 91.7842 li
115.593 91.7842 li
cp
115.308 91.3799 mo
117.544 91.3799 li
117.544 93.6152 li
115.308 93.6152 li
115.308 91.3799 li
115.308 91.3799 li
cp
115.022 91.166 mo
117.258 91.166 li
117.258 93.4014 li
115.022 93.4014 li
115.022 91.166 li
115.022 91.166 li
cp
114.737 91.1182 mo
116.973 91.1182 li
116.973 93.3545 li
114.737 93.3545 li
114.737 91.1182 li
114.737 91.1182 li
cp
114.452 90.5479 mo
116.688 90.5479 li
116.688 92.7832 li
114.452 92.7832 li
114.452 90.5479 li
114.452 90.5479 li
cp
114.143 90.2852 mo
116.378 90.2852 li
116.378 92.5215 li
114.143 92.5215 li
114.143 90.2852 li
114.143 90.2852 li
cp
113.857 90 mo
116.093 90 li
116.093 92.2363 li
113.857 92.2363 li
113.857 90 li
113.857 90 li
cp
113.548 89.4297 mo
115.783 89.4297 li
115.783 91.665 li
113.548 91.665 li
113.548 89.4297 li
113.548 89.4297 li
cp
113.214 89.1445 mo
115.45 89.1445 li
115.45 91.3799 li
113.214 91.3799 li
113.214 89.1445 li
113.214 89.1445 li
cp
112.905 89.001 mo
115.141 89.001 li
115.141 91.2383 li
112.905 91.2383 li
112.905 89.001 li
112.905 89.001 li
cp
112.572 88.1455 mo
114.809 88.1455 li
114.809 90.3809 li
112.572 90.3809 li
112.572 88.1455 li
112.572 88.1455 li
cp
112.239 87.0986 mo
114.475 87.0986 li
114.475 89.334 li
112.239 89.334 li
112.239 87.0986 li
112.239 87.0986 li
cp
111.883 86.7656 mo
114.118 86.7656 li
114.118 89.001 li
111.883 89.001 li
111.883 86.7656 li
111.883 86.7656 li
cp
111.55 86.5039 mo
113.785 86.5039 li
113.785 88.7402 li
111.55 88.7402 li
111.55 86.5039 li
111.55 86.5039 li
cp
111.193 86.0752 mo
113.429 86.0752 li
113.429 88.3125 li
111.193 88.3125 li
111.193 86.0752 li
111.193 86.0752 li
cp
110.813 85.1484 mo
113.048 85.1484 li
113.048 87.3838 li
110.813 87.3838 li
110.813 85.1484 li
110.813 85.1484 li
cp
110.432 84.9346 mo
112.668 84.9346 li
112.668 87.1699 li
110.432 87.1699 li
110.432 84.9346 li
110.432 84.9346 li
cp
110.052 84.5781 mo
112.287 84.5781 li
112.287 86.8135 li
110.052 86.8135 li
110.052 84.5781 li
110.052 84.5781 li
cp
109.647 83.6738 mo
111.883 83.6738 li
111.883 85.9092 li
109.647 85.9092 li
109.647 83.6738 li
109.647 83.6738 li
cp
109.242 83.2227 mo
111.479 83.2227 li
111.479 85.458 li
109.242 85.458 li
109.242 83.2227 li
109.242 83.2227 li
cp
108.838 82.2471 mo
111.074 82.2471 li
111.074 84.4824 li
108.838 84.4824 li
108.838 82.2471 li
108.838 82.2471 li
cp
108.411 81.4619 mo
110.646 81.4619 li
110.646 83.6973 li
108.411 83.6973 li
108.411 81.4619 li
108.411 81.4619 li
cp
107.958 80.4629 mo
110.193 80.4629 li
110.193 82.6982 li
107.958 82.6982 li
107.958 80.4629 li
107.958 80.4629 li
cp
107.507 80.1533 mo
109.742 80.1533 li
109.742 82.3906 li
107.507 82.3906 li
107.507 80.1533 li
107.507 80.1533 li
cp
107.055 79.2734 mo
109.291 79.2734 li
109.291 81.5088 li
107.055 81.5088 li
107.055 79.2734 li
107.055 79.2734 li
cp
106.556 78.1563 mo
108.791 78.1563 li
108.791 80.3916 li
106.556 80.3916 li
106.556 78.1563 li
106.556 78.1563 li
cp
106.08 77.6563 mo
108.315 77.6563 li
108.315 79.8926 li
106.08 79.8926 li
106.08 77.6563 li
106.08 77.6563 li
cp
105.557 77.0391 mo
107.792 77.0391 li
107.792 79.2734 li
105.557 79.2734 li
105.557 77.0391 li
105.557 77.0391 li
cp
105.032 75.6348 mo
107.269 75.6348 li
107.269 77.8711 li
105.032 77.8711 li
105.032 75.6348 li
105.032 75.6348 li
cp
104.486 74.1846 mo
106.722 74.1846 li
106.722 76.4199 li
104.486 76.4199 li
104.486 74.1846 li
104.486 74.1846 li
cp
103.915 73.3521 mo
106.151 73.3521 li
106.151 75.5869 li
103.915 75.5869 li
103.915 73.3521 li
103.915 73.3521 li
cp
103.32 72.3291 mo
105.557 72.3291 li
105.557 74.5645 li
103.32 74.5645 li
103.32 72.3291 li
103.32 72.3291 li
cp
102.702 71.2349 mo
104.938 71.2349 li
104.938 73.4707 li
102.702 73.4707 li
102.702 71.2349 li
102.702 71.2349 li
cp
102.06 70.4976 mo
104.296 70.4976 li
104.296 72.7334 li
102.06 72.7334 li
102.06 70.4976 li
102.06 70.4976 li
cp
101.395 69.2134 mo
103.63 69.2134 li
103.63 71.4492 li
101.395 71.4492 li
101.395 69.2134 li
101.395 69.2134 li
cp
100.704 67.0488 mo
102.94 67.0488 li
102.94 69.2847 li
100.704 69.2847 li
100.704 67.0488 li
100.704 67.0488 li
cp
99.9902 65.7407 mo
102.227 65.7407 li
102.227 67.9766 li
99.9902 67.9766 li
99.9902 65.7407 li
99.9902 65.7407 li
cp
99.2295 64.8848 mo
101.466 64.8848 li
101.466 67.1206 li
99.2295 67.1206 li
99.2295 64.8848 li
99.2295 64.8848 li
cp
98.4209 63.5527 mo
100.656 63.5527 li
100.656 65.7886 li
98.4209 65.7886 li
98.4209 63.5527 li
98.4209 63.5527 li
cp
97.5645 62.3398 mo
99.8008 62.3398 li
99.8008 64.5752 li
97.5645 64.5752 li
97.5645 62.3398 li
97.5645 62.3398 li
cp
96.6846 61.0791 mo
98.9199 61.0791 li
98.9199 63.3149 li
96.6846 63.3149 li
96.6846 61.0791 li
96.6846 61.0791 li
cp
95.7334 59.5093 mo
97.9688 59.5093 li
97.9688 61.7451 li
95.7334 61.7451 li
95.7334 59.5093 li
95.7334 59.5093 li
cp
94.7344 58.0347 mo
96.9697 58.0347 li
96.9697 60.271 li
94.7344 60.271 li
94.7344 58.0347 li
94.7344 58.0347 li
cp
93.6406 56.6313 mo
95.876 56.6313 li
95.876 58.8672 li
93.6406 58.8672 li
93.6406 56.6313 li
93.6406 56.6313 li
cp
92.4985 54.1343 mo
94.7344 54.1343 li
94.7344 56.3701 li
92.4985 56.3701 li
92.4985 54.1343 li
92.4985 54.1343 li
cp
91.2383 51.4702 mo
93.4736 51.4702 li
93.4736 53.7061 li
91.2383 53.7061 li
91.2383 51.4702 li
91.2383 51.4702 li
cp
89.8823 48.2593 mo
92.1182 48.2593 li
92.1182 50.4951 li
89.8823 50.4951 li
89.8823 48.2593 li
89.8823 48.2593 li
cp
88.3843 42.48 mo
90.6201 42.48 li
90.6201 44.7158 li
88.3843 44.7158 li
88.3843 42.48 li
88.3843 42.48 li
cp
86.7432 38.104 mo
88.979 38.104 li
88.979 40.3394 li
86.7432 40.3394 li
86.7432 38.104 li
86.7432 38.104 li
cp
84.9116 35.2021 mo
87.1475 35.2021 li
87.1475 37.438 li
84.9116 37.438 li
84.9116 35.2021 li
84.9116 35.2021 li
cp
82.8184 30.4932 mo
85.0542 30.4932 li
85.0542 32.729 li
82.8184 32.729 li
82.8184 30.4932 li
82.8184 30.4932 li
cp
80.4165 29.4941 mo
82.6523 29.4941 li
82.6523 31.7295 li
80.4165 31.7295 li
80.4165 29.4941 li
80.4165 29.4941 li
cp
77.5625 33.2046 mo
79.7983 33.2046 li
79.7983 35.4399 li
77.5625 35.4399 li
77.5625 33.2046 li
77.5625 33.2046 li
cp
74.0659 38.0327 mo
76.3018 38.0327 li
76.3018 40.2686 li
74.0659 40.2686 li
74.0659 38.0327 li
74.0659 38.0327 li
cp
69.5713 42.2188 mo
71.8071 42.2188 li
71.8071 44.4546 li
69.5713 44.4546 li
69.5713 42.2188 li
69.5713 42.2188 li
cp
63.2446 51.2803 mo
65.4805 51.2803 li
65.4805 53.5156 li
63.2446 53.5156 li
63.2446 51.2803 li
63.2446 51.2803 li
cp
52.4229 57.3931 mo
54.6582 57.3931 li
54.6582 59.6284 li
52.4229 59.6284 li
52.4229 57.3931 li
52.4229 57.3931 li
cp
.883665 .769161 3.05176e-5 3.05176e-5 cmyk
@
144.467 121.657 mo
146.702 121.657 li
146.702 123.893 li
144.467 123.893 li
144.467 121.657 li
144.467 121.657 li
cp
144.42 121.657 mo
146.655 121.657 li
146.655 123.893 li
144.42 123.893 li
144.42 121.657 li
144.42 121.657 li
cp
144.396 121.657 mo
146.631 121.657 li
146.631 123.893 li
144.396 123.893 li
144.396 121.657 li
144.396 121.657 li
cp
144.348 121.609 mo
146.583 121.609 li
146.583 123.845 li
144.348 123.845 li
144.348 121.609 li
144.348 121.609 li
cp
144.301 121.586 mo
146.536 121.586 li
146.536 123.821 li
144.301 123.821 li
144.301 121.586 li
144.301 121.586 li
cp
144.252 121.586 mo
146.488 121.586 li
146.488 123.821 li
144.252 123.821 li
144.252 121.586 li
144.252 121.586 li
cp
144.205 121.467 mo
146.441 121.467 li
146.441 123.702 li
144.205 123.702 li
144.205 121.467 li
144.205 121.467 li
cp
144.157 121.419 mo
146.393 121.419 li
146.393 123.654 li
144.157 123.654 li
144.157 121.419 li
144.157 121.419 li
cp
144.135 121.323 mo
146.37 121.323 li
146.37 123.56 li
144.135 123.56 li
144.135 121.323 li
144.135 121.323 li
cp
144.086 121.323 mo
146.322 121.323 li
146.322 123.56 li
144.086 123.56 li
144.086 121.323 li
144.086 121.323 li
cp
144.038 121.276 mo
146.274 121.276 li
146.274 123.513 li
144.038 123.513 li
144.038 121.276 li
144.038 121.276 li
cp
143.991 121.038 mo
146.227 121.038 li
146.227 123.274 li
143.991 123.274 li
143.991 121.038 li
143.991 121.038 li
cp
143.943 120.943 mo
146.179 120.943 li
146.179 123.179 li
143.943 123.179 li
143.943 120.943 li
143.943 120.943 li
cp
143.896 120.991 mo
146.132 120.991 li
146.132 123.227 li
143.896 123.227 li
143.896 120.991 li
143.896 120.991 li
cp
143.849 120.967 mo
146.084 120.967 li
146.084 123.203 li
143.849 123.203 li
143.849 120.967 li
143.849 120.967 li
cp
143.801 120.92 mo
146.036 120.92 li
146.036 123.155 li
143.801 123.155 li
143.801 120.92 li
143.801 120.92 li
cp
143.753 120.872 mo
145.989 120.872 li
145.989 123.107 li
143.753 123.107 li
143.753 120.872 li
143.753 120.872 li
cp
143.729 120.848 mo
145.966 120.848 li
145.966 123.084 li
143.729 123.084 li
143.729 120.848 li
143.729 120.848 li
cp
143.682 120.634 mo
145.917 120.634 li
145.917 122.869 li
143.682 122.869 li
143.682 120.634 li
143.682 120.634 li
cp
143.635 120.492 mo
145.87 120.492 li
145.87 122.728 li
143.635 122.728 li
143.635 120.492 li
143.635 120.492 li
cp
143.587 120.563 mo
145.822 120.563 li
145.822 122.799 li
143.587 122.799 li
143.587 120.563 li
143.587 120.563 li
cp
143.54 120.634 mo
145.775 120.634 li
145.775 122.869 li
143.54 122.869 li
143.54 120.634 li
143.54 120.634 li
cp
143.491 120.539 mo
145.728 120.539 li
145.728 122.774 li
143.491 122.774 li
143.491 120.539 li
143.491 120.539 li
cp
143.444 120.302 mo
145.68 120.302 li
145.68 122.537 li
143.444 122.537 li
143.444 120.302 li
143.444 120.302 li
cp
143.396 120.373 mo
145.632 120.373 li
145.632 122.608 li
143.396 122.608 li
143.396 120.373 li
143.396 120.373 li
cp
143.35 120.443 mo
145.585 120.443 li
145.585 122.68 li
143.35 122.68 li
143.35 120.443 li
143.35 120.443 li
cp
143.302 120.324 mo
145.537 120.324 li
145.537 122.562 li
143.302 122.562 li
143.302 120.324 li
143.302 120.324 li
cp
143.253 120.23 mo
145.49 120.23 li
145.49 122.465 li
143.253 122.465 li
143.253 120.23 li
143.253 120.23 li
cp
143.206 120.136 mo
145.441 120.136 li
145.441 122.371 li
143.206 122.371 li
143.206 120.136 li
143.206 120.136 li
cp
143.159 120.039 mo
145.394 120.039 li
145.394 122.275 li
143.159 122.275 li
143.159 120.039 li
143.159 120.039 li
cp
143.111 119.968 mo
145.347 119.968 li
145.347 122.204 li
143.111 122.204 li
143.111 119.968 li
143.111 119.968 li
cp
143.064 119.897 mo
145.3 119.897 li
145.3 122.133 li
143.064 122.133 li
143.064 119.897 li
143.064 119.897 li
cp
143.016 119.921 mo
145.252 119.921 li
145.252 122.156 li
143.016 122.156 li
143.016 119.921 li
143.016 119.921 li
cp
142.968 119.968 mo
145.204 119.968 li
145.204 122.204 li
142.968 122.204 li
142.968 119.968 li
142.968 119.968 li
cp
142.921 119.826 mo
145.156 119.826 li
145.156 122.062 li
142.921 122.062 li
142.921 119.826 li
142.921 119.826 li
cp
142.873 119.658 mo
145.108 119.658 li
145.108 121.895 li
142.873 121.895 li
142.873 119.658 li
142.873 119.658 li
cp
142.826 119.636 mo
145.062 119.636 li
145.062 121.871 li
142.826 121.871 li
142.826 119.636 li
142.826 119.636 li
cp
142.778 119.611 mo
145.014 119.611 li
145.014 121.848 li
142.778 121.848 li
142.778 119.611 li
142.778 119.611 li
cp
142.73 119.707 mo
144.966 119.707 li
144.966 121.942 li
142.73 121.942 li
142.73 119.707 li
142.73 119.707 li
cp
142.683 119.658 mo
144.919 119.658 li
144.919 121.895 li
142.683 121.895 li
142.683 119.658 li
142.683 119.658 li
cp
142.636 119.658 mo
144.871 119.658 li
144.871 121.895 li
142.636 121.895 li
142.636 119.658 li
142.636 119.658 li
cp
142.588 119.658 mo
144.823 119.658 li
144.823 121.895 li
142.588 121.895 li
142.588 119.658 li
142.588 119.658 li
cp
142.54 119.231 mo
144.776 119.231 li
144.776 121.467 li
142.54 121.467 li
142.54 119.231 li
142.54 119.231 li
cp
142.492 119.16 mo
144.728 119.16 li
144.728 121.395 li
142.492 121.395 li
142.492 119.16 li
142.492 119.16 li
cp
142.445 119.16 mo
144.681 119.16 li
144.681 121.395 li
142.445 121.395 li
142.445 119.16 li
142.445 119.16 li
cp
142.397 119.136 mo
144.633 119.136 li
144.633 121.372 li
142.397 121.372 li
142.397 119.136 li
142.397 119.136 li
cp
142.351 119.065 mo
144.586 119.065 li
144.586 121.301 li
142.351 121.301 li
142.351 119.065 li
142.351 119.065 li
cp
142.302 119.017 mo
144.538 119.017 li
144.538 121.253 li
142.302 121.253 li
142.302 119.017 li
142.302 119.017 li
cp
142.255 119.065 mo
144.491 119.065 li
144.491 121.301 li
142.255 121.301 li
142.255 119.065 li
142.255 119.065 li
cp
142.207 118.922 mo
144.442 118.922 li
144.442 121.157 li
142.207 121.157 li
142.207 118.922 li
142.207 118.922 li
cp
142.16 118.851 mo
144.396 118.851 li
144.396 121.086 li
142.16 121.086 li
142.16 118.851 li
142.16 118.851 li
cp
142.089 118.922 mo
144.323 118.922 li
144.323 121.157 li
142.089 121.157 li
142.089 118.922 li
142.089 118.922 li
cp
142.041 118.684 mo
144.276 118.684 li
144.276 120.92 li
142.041 120.92 li
142.041 118.684 li
142.041 118.684 li
cp
141.994 118.637 mo
144.229 118.637 li
144.229 120.872 li
141.994 120.872 li
141.994 118.637 li
141.994 118.637 li
cp
141.945 118.708 mo
144.182 118.708 li
144.182 120.943 li
141.945 120.943 li
141.945 118.708 li
141.945 118.708 li
cp
141.897 118.684 mo
144.135 118.684 li
144.135 120.92 li
141.897 120.92 li
141.897 118.684 li
141.897 118.684 li
cp
141.851 118.565 mo
144.086 118.565 li
144.086 120.801 li
141.851 120.801 li
141.851 118.565 li
141.851 118.565 li
cp
141.803 118.352 mo
144.038 118.352 li
144.038 120.587 li
141.803 120.587 li
141.803 118.352 li
141.803 118.352 li
cp
141.731 118.232 mo
143.967 118.232 li
143.967 120.468 li
141.731 120.468 li
141.731 118.232 li
141.731 118.232 li
cp
141.685 118.113 mo
143.92 118.113 li
143.92 120.349 li
141.685 120.349 li
141.685 118.113 li
141.685 118.113 li
cp
141.637 118.184 mo
143.872 118.184 li
143.872 120.421 li
141.637 120.421 li
141.637 118.184 li
141.637 118.184 li
cp
141.589 118.161 mo
143.825 118.161 li
143.825 120.396 li
141.589 120.396 li
141.589 118.161 li
141.589 118.161 li
cp
141.541 118.065 mo
143.776 118.065 li
143.776 120.302 li
141.541 120.302 li
141.541 118.065 li
141.541 118.065 li
cp
141.493 117.946 mo
143.729 117.946 li
143.729 120.183 li
141.493 120.183 li
141.493 117.946 li
141.493 117.946 li
cp
141.422 117.971 mo
143.657 117.971 li
143.657 120.206 li
141.422 120.206 li
141.422 117.971 li
141.422 117.971 li
cp
141.375 117.923 mo
143.61 117.923 li
143.61 120.158 li
141.375 120.158 li
141.375 117.923 li
141.375 117.923 li
cp
141.327 117.804 mo
143.563 117.804 li
143.563 120.039 li
141.327 120.039 li
141.327 117.804 li
141.327 117.804 li
cp
141.28 117.686 mo
143.516 117.686 li
143.516 119.921 li
141.28 119.921 li
141.28 117.686 li
141.28 117.686 li
cp
141.209 117.613 mo
143.444 117.613 li
143.444 119.85 li
141.209 119.85 li
141.209 117.613 li
141.209 117.613 li
cp
141.161 117.638 mo
143.396 117.638 li
143.396 119.873 li
141.161 119.873 li
141.161 117.638 li
141.161 117.638 li
cp
141.112 117.471 mo
143.35 117.471 li
143.35 119.707 li
141.112 119.707 li
141.112 117.471 li
141.112 117.471 li
cp
141.065 117.447 mo
143.302 117.447 li
143.302 119.683 li
141.065 119.683 li
141.065 117.447 li
141.065 117.447 li
cp
140.994 117.423 mo
143.23 117.423 li
143.23 119.658 li
140.994 119.658 li
140.994 117.423 li
140.994 117.423 li
cp
140.946 117.21 mo
143.183 117.21 li
143.183 119.445 li
140.946 119.445 li
140.946 117.21 li
140.946 117.21 li
cp
140.899 117.162 mo
143.135 117.162 li
143.135 119.397 li
140.899 119.397 li
140.899 117.162 li
140.899 117.162 li
cp
140.852 117.186 mo
143.087 117.186 li
143.087 119.422 li
140.852 119.422 li
140.852 117.186 li
140.852 117.186 li
cp
140.78 117.281 mo
143.016 117.281 li
143.016 119.517 li
140.78 119.517 li
140.78 117.281 li
140.78 117.281 li
cp
140.732 117.232 mo
142.968 117.232 li
142.968 119.469 li
140.732 119.469 li
140.732 117.232 li
140.732 117.232 li
cp
140.686 117.066 mo
142.921 117.066 li
142.921 119.303 li
140.686 119.303 li
140.686 117.066 li
140.686 117.066 li
cp
140.614 117.113 mo
142.85 117.113 li
142.85 119.351 li
140.614 119.351 li
140.614 117.113 li
140.614 117.113 li
cp
140.566 116.995 mo
142.802 116.995 li
142.802 119.231 li
140.566 119.231 li
140.566 116.995 li
140.566 116.995 li
cp
140.519 116.781 mo
142.755 116.781 li
142.755 119.017 li
140.519 119.017 li
140.519 116.781 li
140.519 116.781 li
cp
140.447 116.733 mo
142.683 116.733 li
142.683 118.969 li
140.447 118.969 li
140.447 116.733 li
140.447 116.733 li
cp
140.399 116.853 mo
142.636 116.853 li
142.636 119.088 li
140.399 119.088 li
140.399 116.853 li
140.399 116.853 li
cp
140.352 117.02 mo
142.588 117.02 li
142.588 119.254 li
140.352 119.254 li
140.352 117.02 li
140.352 117.02 li
cp
140.28 116.972 mo
142.517 116.972 li
142.517 119.207 li
140.28 119.207 li
140.28 116.972 li
140.28 116.972 li
cp
140.233 116.662 mo
142.47 116.662 li
142.47 118.897 li
140.233 118.897 li
140.233 116.662 li
140.233 116.662 li
cp
140.186 116.4 mo
142.421 116.4 li
142.421 118.637 li
140.186 118.637 li
140.186 116.4 li
140.186 116.4 li
cp
140.114 116.496 mo
142.351 116.496 li
142.351 118.731 li
140.114 118.731 li
140.114 116.496 li
140.114 116.496 li
cp
140.066 116.567 mo
142.302 116.567 li
142.302 118.803 li
140.066 118.803 li
140.066 116.567 li
140.066 116.567 li
cp
139.995 116.281 mo
142.231 116.281 li
142.231 118.518 li
139.995 118.518 li
139.995 116.281 li
139.995 116.281 li
cp
139.948 116.353 mo
142.183 116.353 li
142.183 118.589 li
139.948 118.589 li
139.948 116.353 li
139.948 116.353 li
cp
139.9 116.306 mo
142.136 116.306 li
142.136 118.541 li
139.9 118.541 li
139.9 116.306 li
139.9 116.306 li
cp
139.829 116.043 mo
142.064 116.043 li
142.064 118.28 li
139.829 118.28 li
139.829 116.043 li
139.829 116.043 li
cp
139.781 115.901 mo
142.017 115.901 li
142.017 118.137 li
139.781 118.137 li
139.781 115.901 li
139.781 115.901 li
cp
139.71 115.83 mo
141.945 115.83 li
141.945 118.065 li
139.71 118.065 li
139.71 115.83 li
139.71 115.83 li
cp
139.662 115.996 mo
141.897 115.996 li
141.897 118.232 li
139.662 118.232 li
139.662 115.996 li
139.662 115.996 li
cp
139.591 115.854 mo
141.826 115.854 li
141.826 118.09 li
139.591 118.09 li
139.591 115.854 li
139.591 115.854 li
cp
139.544 115.64 mo
141.779 115.64 li
141.779 117.876 li
139.544 117.876 li
139.544 115.64 li
139.544 115.64 li
cp
139.472 115.782 mo
141.708 115.782 li
141.708 118.018 li
139.472 118.018 li
139.472 115.782 li
139.472 115.782 li
cp
139.425 115.735 mo
141.66 115.735 li
141.66 117.971 li
139.425 117.971 li
139.425 115.735 li
139.425 115.735 li
cp
139.354 115.687 mo
141.589 115.687 li
141.589 117.923 li
139.354 117.923 li
139.354 115.687 li
139.354 115.687 li
cp
139.306 115.592 mo
141.541 115.592 li
141.541 117.827 li
139.306 117.827 li
139.306 115.592 li
139.306 115.592 li
cp
139.234 115.449 mo
141.47 115.449 li
141.47 117.686 li
139.234 117.686 li
139.234 115.449 li
139.234 115.449 li
cp
139.187 115.473 mo
141.422 115.473 li
141.422 117.709 li
139.187 117.709 li
139.187 115.473 li
139.187 115.473 li
cp
139.115 115.473 mo
141.351 115.473 li
141.351 117.709 li
139.115 117.709 li
139.115 115.473 li
139.115 115.473 li
cp
139.068 115.354 mo
141.304 115.354 li
141.304 117.59 li
139.068 117.59 li
139.068 115.354 li
139.068 115.354 li
cp
138.996 115.188 mo
141.231 115.188 li
141.231 117.423 li
138.996 117.423 li
138.996 115.188 li
138.996 115.188 li
cp
138.925 115.069 mo
141.161 115.069 li
141.161 117.305 li
138.925 117.305 li
138.925 115.069 li
138.925 115.069 li
cp
138.878 115.069 mo
141.112 115.069 li
141.112 117.305 li
138.878 117.305 li
138.878 115.069 li
138.878 115.069 li
cp
138.806 115.188 mo
141.042 115.188 li
141.042 117.423 li
138.806 117.423 li
138.806 115.188 li
138.806 115.188 li
cp
138.759 115.141 mo
140.994 115.141 li
140.994 117.376 li
138.759 117.376 li
138.759 115.141 li
138.759 115.141 li
cp
138.687 114.784 mo
140.924 114.784 li
140.924 117.02 li
138.687 117.02 li
138.687 114.784 li
138.687 114.784 li
cp
138.615 114.688 mo
140.852 114.688 li
140.852 116.925 li
138.615 116.925 li
138.615 114.688 li
138.615 114.688 li
cp
138.568 114.831 mo
140.805 114.831 li
140.805 117.066 li
138.568 117.066 li
138.568 114.831 li
138.568 114.831 li
cp
138.498 114.665 mo
140.732 114.665 li
140.732 116.9 li
138.498 116.9 li
138.498 114.665 li
138.498 114.665 li
cp
138.426 114.355 mo
140.661 114.355 li
140.661 116.591 li
138.426 116.591 li
138.426 114.355 li
138.426 114.355 li
cp
138.378 114.45 mo
140.614 114.45 li
140.614 116.687 li
138.378 116.687 li
138.378 114.45 li
138.378 114.45 li
cp
138.307 114.475 mo
140.542 114.475 li
140.542 116.71 li
138.307 116.71 li
138.307 114.475 li
138.307 114.475 li
cp
138.235 114.189 mo
140.471 114.189 li
140.471 116.425 li
138.235 116.425 li
138.235 114.189 li
138.235 114.189 li
cp
138.188 114.141 mo
140.424 114.141 li
140.424 116.377 li
138.188 116.377 li
138.188 114.141 li
138.188 114.141 li
cp
138.116 114.236 mo
140.352 114.236 li
140.352 116.472 li
138.116 116.472 li
138.116 114.236 li
138.116 114.236 li
cp
138.045 114.165 mo
140.28 114.165 li
140.28 116.4 li
138.045 116.4 li
138.045 114.165 li
138.045 114.165 li
cp
137.974 114.07 mo
140.21 114.07 li
140.21 116.306 li
137.974 116.306 li
137.974 114.07 li
137.974 114.07 li
cp
137.926 113.951 mo
140.161 113.951 li
140.161 116.187 li
137.926 116.187 li
137.926 113.951 li
137.926 113.951 li
cp
137.854 113.809 mo
140.091 113.809 li
140.091 116.043 li
137.854 116.043 li
137.854 113.809 li
137.854 113.809 li
cp
137.784 113.761 mo
140.02 113.761 li
140.02 115.996 li
137.784 115.996 li
137.784 113.761 li
137.784 113.761 li
cp
137.713 113.689 mo
139.948 113.689 li
139.948 115.925 li
137.713 115.925 li
137.713 113.689 li
137.713 113.689 li
cp
137.665 113.617 mo
139.9 113.617 li
139.9 115.854 li
137.665 115.854 li
137.665 113.617 li
137.665 113.617 li
cp
137.594 113.595 mo
139.829 113.595 li
139.829 115.83 li
137.594 115.83 li
137.594 113.595 li
137.594 113.595 li
cp
137.521 113.522 mo
139.757 113.522 li
139.757 115.758 li
137.521 115.758 li
137.521 113.522 li
137.521 113.522 li
cp
137.45 113.332 mo
139.686 113.332 li
139.686 115.568 li
137.45 115.568 li
137.45 113.332 li
137.45 113.332 li
cp
137.379 113 mo
139.615 113 li
139.615 115.235 li
137.379 115.235 li
137.379 113 li
137.379 113 li
cp
137.309 113.214 mo
139.544 113.214 li
139.544 115.449 li
137.309 115.449 li
137.309 113.214 li
137.309 113.214 li
cp
137.236 113.476 mo
139.472 113.476 li
139.472 115.711 li
137.236 115.711 li
137.236 113.476 li
137.236 113.476 li
cp
137.189 113.356 mo
139.425 113.356 li
139.425 115.592 li
137.189 115.592 li
137.189 113.356 li
137.189 113.356 li
cp
137.118 113.261 mo
139.354 113.261 li
139.354 115.497 li
137.118 115.497 li
137.118 113.261 li
137.118 113.261 li
cp
137.046 113.166 mo
139.281 113.166 li
139.281 115.401 li
137.046 115.401 li
137.046 113.166 li
137.046 113.166 li
cp
136.975 112.952 mo
139.21 112.952 li
139.21 115.188 li
136.975 115.188 li
136.975 112.952 li
136.975 112.952 li
cp
136.903 112.69 mo
139.14 112.69 li
139.14 114.926 li
136.903 114.926 li
136.903 112.69 li
136.903 112.69 li
cp
136.831 112.881 mo
139.068 112.881 li
139.068 115.116 li
136.831 115.116 li
136.831 112.881 li
136.831 112.881 li
cp
136.761 113.071 mo
138.996 113.071 li
138.996 115.307 li
136.761 115.307 li
136.761 113.071 li
136.761 113.071 li
cp
136.689 112.929 mo
138.925 112.929 li
138.925 115.164 li
136.689 115.164 li
136.689 112.929 li
136.689 112.929 li
cp
136.618 112.644 mo
138.854 112.644 li
138.854 114.879 li
136.618 114.879 li
136.618 112.644 li
136.618 112.644 li
cp
136.546 112.644 mo
138.783 112.644 li
138.783 114.879 li
136.546 114.879 li
136.546 112.644 li
136.546 112.644 li
cp
136.476 112.644 mo
138.711 112.644 li
138.711 114.879 li
136.476 114.879 li
136.476 112.644 li
136.476 112.644 li
cp
136.404 112.452 mo
138.64 112.452 li
138.64 114.688 li
136.404 114.688 li
136.404 112.452 li
136.404 112.452 li
cp
136.333 112.452 mo
138.568 112.452 li
138.568 114.688 li
136.333 114.688 li
136.333 112.452 li
136.333 112.452 li
cp
136.261 112.452 mo
138.498 112.452 li
138.498 114.688 li
136.261 114.688 li
136.261 112.452 li
136.261 112.452 li
cp
136.189 112.262 mo
138.426 112.262 li
138.426 114.499 li
136.189 114.499 li
136.189 112.262 li
136.189 112.262 li
cp
136.119 112.071 mo
138.354 112.071 li
138.354 114.308 li
136.119 114.308 li
136.119 112.071 li
136.119 112.071 li
cp
136.048 111.905 mo
138.283 111.905 li
138.283 114.141 li
136.048 114.141 li
136.048 111.905 li
136.048 111.905 li
cp
135.952 111.763 mo
138.188 111.763 li
138.188 113.999 li
135.952 113.999 li
135.952 111.763 li
135.952 111.763 li
cp
135.881 111.691 mo
138.116 111.691 li
138.116 113.927 li
135.881 113.927 li
135.881 111.691 li
135.881 111.691 li
cp
135.81 111.858 mo
138.045 111.858 li
138.045 114.094 li
135.81 114.094 li
135.81 111.858 li
135.81 111.858 li
cp
135.738 111.905 mo
137.974 111.905 li
137.974 114.141 li
135.738 114.141 li
135.738 111.905 li
135.738 111.905 li
cp
135.667 111.691 mo
137.901 111.691 li
137.901 113.927 li
135.667 113.927 li
135.667 111.691 li
135.667 111.691 li
cp
135.595 111.525 mo
137.831 111.525 li
137.831 113.761 li
135.595 113.761 li
135.595 111.525 li
135.595 111.525 li
cp
135.5 111.406 mo
137.735 111.406 li
137.735 113.642 li
135.5 113.642 li
135.5 111.406 li
135.5 111.406 li
cp
135.429 111.311 mo
137.665 111.311 li
137.665 113.547 li
135.429 113.547 li
135.429 111.311 li
135.429 111.311 li
cp
135.357 111.239 mo
137.594 111.239 li
137.594 113.476 li
135.357 113.476 li
135.357 111.239 li
135.357 111.239 li
cp
135.287 111.288 mo
137.521 111.288 li
137.521 113.522 li
135.287 113.522 li
135.287 111.288 li
135.287 111.288 li
cp
@
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPG+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B854D00D> |-
/parenleft <1C60D8A8C9B81F2C027D90222AF37AF8158DABD8A6A3309F2136
FACBE1848A44C17EBCB6720936CA51DBF738C2EEE54BA4F168ED7CF54A35C3CA
C2EC5792742EF714EF05> |-
/parenright <1C60D8A8C9B81F2C3A8416F95B41DEC1B2BC8682121EE1FC7A7
6516A86A96EAF9A7B20C852F99192A17B1BC2E1C3BBEEF7820FA171548238E9D
502CFB76D8CAB7DA316A1> |-
/comma <1C60D8A8C9B854D0E112FCA8966643D972DDF4069EA1A683517CC489
AC8679957DA7C55CD598C98C32> |-
/slash <1C60D8A8C9B854D079F228A01DE49912BABB5E0DCC35A8718ABAD0B4
9BD5874C536DBB> |-
/R <1C60D8A8C9B6079F7627FE36DB81007EC91E9799402440B74F883E0E71F7
6F9B49D24FCA75B072C6EA389BCABE75262B6C5F8A70C6CE0801838B3187DCBE
B76B5A56F8F52F1F1F3E3403EF7802CE27BB130E1362790F9F11E90781F59694
A46F1107A77DF7B9D4B9C5CF3BF43FA3061CCC40E069C9A95B0C100D7A665D7D
FB9A58F221F4A7F862304DBC9AF6BADF1C566CC2137F432AD7B0604589D6A9> |-
/S <1C60D8A8C9B64EDFD79AA67B28B8030B7B2511726D47A2C647E6ADE4A75D
60FE51B70409FEA2C2A9D7923702F7072E14338647DCA5330DE50EDA2CCB0752
54DDA0450AE151E3AD2AF69F31ACB18B90B175E0A002C815586B968D823D305B
880C63E38B1F61D3E4825B28FACD70F6184988F8C8142F835C751F2AFA99C8FD
CB3C32A924504B161C26B5D49345699D3C6CC842F42B517C47936E8733FE1D65
069FA9ED0ADD81E34596> |-
/q <1C60D8A8C9B7EF3272B02106CF08D5008F2C7B5C8A9E114B257E751D0EE2
E0E889E013C54302409DAD4E6D23B15FB78D5F060BEB9C423829DC7C805B4072
3AE1214611FA3E3BE7E73C9A4AC39A13D58C83078721D53EED13089D735BBC4E
DDCEBC620368A1BF783774342A4B535057A642890CD57B3AEB75C87B92DEA681
35> |-
/t <1C60D8A8C9B854D0E39D4A6FD38FFEE65D2052948A24EB808F85141A7307
6E5305FE4B51354AB4CDEBC31E5AC6CD8CD9912464DD321E756CA23CBAFB773F
242158A04D01B1DC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPG+Helvetica /Encoding get
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 47 /slash put
dup 82 /R put
dup 83 /S put
dup 113 /q put
dup 116 /t put
pop
%ADOEndSubsetFont
/SYHDPG+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 2{/.notdef}rp 
/slash /zero /one /two /three 2{/.notdef}rp /six /.notdef 
/eight 25{/.notdef}rp /R /S 29{/.notdef}rp /q 2{/.notdef}rp /t 
10{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPG+Helvetica nf
SYHDPG+Helvetica*1 [8.56223 0 0 -8.56223 0 0 ]msf
91.2847 144.226 mo
(q R\()sh
107.458 144.226 mo
(t\))
[2.38086 0 ]xsh
SYHDPG+Helvetica*1 [0 -8.56223 -8.56223 0 0 0 ]msf
10.6577 92.1611 mo
(S\(q,t\) / R\(t\))
[-5.71094 -2.85156 -4.75977 -2.38086 -2.37988 -2.85156 -2.37988 -2.38037 -2.38037 -6.18164 -2.85156 -2.37988 
0 ]ysh
SYHDPG+Helvetica*1 [0 -6.84978 -6.84978 0 0 0 ]msf
6.37646 49.8286 mo
(2)sh
SYHDPG+Helvetica*1 [2.85408 0 0 -2.85408 0 0 ]msf
29.6606 128.361 mo
( )sh
173.604 11.9165 mo
( )sh
117.092 66.0264 mo
117.092 22.8579 li
158.095 22.8579 li
158.095 66.0264 li
117.092 66.0264 li
cp
0 0 0 0 cmyk
ef
.39 lw
117.092 66.0264 mo
117.092 22.8579 li
158.095 22.8579 li
158.095 66.0264 li
117.092 66.0264 li
@
158.095 66.0264 mo
158.095 22.8579 li
117.092 66.0264 mo
117.092 22.8579 li
117.092 22.8579 mo
158.095 22.8579 li
117.092 66.0264 mo
158.095 66.0264 li
117.092 66.0264 mo
117.092 22.8579 li
117.092 66.0264 mo
158.095 66.0264 li
158.095 66.0264 mo
158.095 22.8579 li
117.092 66.0264 mo
117.092 22.8579 li
117.092 22.8579 mo
158.095 22.8579 li
117.092 66.0264 mo
158.095 66.0264 li
0 0 0 1 cmyk
@
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPG+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7EF322448D34FC69162D5B3FA33847725A6C54ED91995E
45D690B7D0E476479D9EDB4F61F0B8E7F37F7415ECCEF12BD0BB3A993663B38C
8EEAA49F314551016ECC1F8DE4119690672560B970B6156CCA876B5A96262978
DF14B4FCFDE401A9555> |-
/equal <1C60D8A8C9B7F374CC52CC6AFA2AC69E2626E08155548B3F09D59299
6A164FA4C0B7A39FE024A3E562036F05B86028> |-
/s <1C60D8A8C9B7A73DF2FC7D7CF8DDB6CD30877299DE999D72A56E2491407E
5E9DB603A87C07C7833274D37DB06BC1585B03D1793010176CAC94215F5F838E
E9E9FCB1BE630D2F0EB931A6A4E8BD85C1E9E977D2BF9622D6DF0584BAE6A5C1
944BB5B543054E11EC2B82F9913C122731ED179BC7F4BE008E0F45> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPG+Helvetica /Encoding get
dup 53 /five put
dup 61 /equal put
dup 115 /s put
pop
%ADOEndSubsetFont
/SYHDPG+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 2{/.notdef}rp 
/slash /zero /one /two /three /.notdef /five /six 
/.notdef /eight 4{/.notdef}rp /equal 20{/.notdef}rp /R /S 29{/.notdef}rp 
/q /.notdef /s /t 10{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPG+Helvetica nf
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
128.225 31.0659 mo
(t =)sh
136.033 31.0659 mo
( 15 )sh
147.459 31.0659 mo
(s)sh
gsave
119.326 32.396 mo
126.866 32.396 li
126.866 24.856 li
119.326 24.856 li
119.326 32.396 li
cp
clp
.856223 lw
124.519 28.5977 mo
124.519 29.3857 123.879 30.0249 123.091 30.0249 cv
122.304 30.0249 121.664 29.3857 121.664 28.5977 cv
121.664 27.8101 122.304 27.1709 123.091 27.1709 cv
123.879 27.1709 124.519 27.8101 124.519 28.5977 cv
@
grestore
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPG+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B854D0E112FCA896665672EF12164189457C7632C9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPG+Helvetica /Encoding get
dup 46 /period put
pop
%ADOEndSubsetFont
/SYHDPG+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /zero /one /two /three /.notdef /five 
/six /.notdef /eight 4{/.notdef}rp /equal 20{/.notdef}rp /R /S 
29{/.notdef}rp /q /.notdef /s /t 10{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPG+Helvetica nf
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
128.225 41.6011 mo
(t =)sh
136.033 41.6011 mo
( 22.5 )sh
153.172 41.6011 mo
(s)sh
gsave
119.326 42.9321 mo
126.866 42.9321 li
126.866 35.3926 li
119.326 35.3926 li
119.326 42.9321 li
cp
clp
.856223 lw
124.084 38.1514 mo
122.086 40.1494 li
122.086 38.1514 mo
124.084 40.1494 li
3.05176e-5 .993988 1 3.05176e-5 cmyk
@
grestore
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
128.225 52.1587 mo
(t =)sh
136.033 52.1587 mo
( 30 )sh
147.459 52.1587 mo
(s)sh
gsave
119.326 53.4922 mo
126.866 53.4922 li
126.866 45.9526 li
119.326 45.9526 li
119.326 53.4922 li
cp
clp
.856223 lw
0 lj
123.085 51.5894 mo
124.512 49.7104 li
123.085 47.8315 li
121.658 49.7104 li
123.085 51.5894 li
123.085 51.5894 li
cp
.627649 3.05176e-5 1 3.05176e-5 cmyk
@
grestore
%ADOBeginSubsetFont: Helvetica AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SYHDPG+Helvetica dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7EF322BF511E331CA00D363470942D767E1013D8E7F4F5
9F447A73A07F5975B5A79C571CD13B4D3557C550D5B9A82EC34D373E687DACA8
586AE16B88F81251D9B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SYHDPG+Helvetica /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/SYHDPG+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /.notdef 
/period /slash /zero /one /two /three /four /five 
/six /.notdef /eight 4{/.notdef}rp /equal 20{/.notdef}rp /R /S 
29{/.notdef}rp /q /.notdef /s /t 10{/.notdef}rp /minus 128{/.notdef}rp]
SYHDPG+Helvetica nf
SYHDPG+Helvetica*1 [6.84978 0 0 -6.84978 0 0 ]msf
128.225 62.6978 mo
(t =)sh
136.033 62.6978 mo
( 45 )sh
147.459 62.6978 mo
(s)sh
gsave
119.326 64.0283 mo
126.866 64.0283 li
126.866 56.4888 li
119.326 56.4888 li
119.326 64.0283 li
cp
clp
.856223 lw
0 lj
121.967 59.1289 mo
124.202 59.1289 li
124.202 61.3647 li
121.967 61.3647 li
121.967 59.1289 li
121.967 59.1289 li
cp
.883665 .769161 3.05176e-5 3.05176e-5 cmyk
@
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/SYHDPG+Helvetica*1 uf
/SYHDPG+Helvetica uf
/Helvetica uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 15.0
%%AI8_CreatorVersion: 15.0.0
%%For: (APS Workgroup) ()
%%Title: (9.eps)
%%CreationDate: 11/2/2011 7:18 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!RfkB?GVY:pB7^Lo-j6_*:VX15(;[oB:"ih@\ngu:*`4o=GMJjitNAGb*<4StR)N\-@r$%a9"!oV@!EASb\Hc+1hkeGd[J`A]-
%G\TUi`&H\D\EC&dSU0a&Rd(8L`?Z7TP0m6d9;(8gGnNVS1+=@M(!EAtHlrl2c,ln/9rFgbIl*R*2bO+WL)[%m:\:NlnK@N%U]5-E
%qlS/)\k[B)S>!62WW0FalZHCrG?=D+\DNL]-=mOD`*9Y$Q`?h&TJbK^q'_#jo"nUNhWoC3k(C*!aeJcHn8n+/pZc@J\q>;5hs'aP
%Yg]4gV'bJpe85W@q^HuXHG_tMUtH0M"+fX/CSfL8A+_P'A,;htku.BE9kT[@X>_'3";oe5BKTs&IS^+dqCdt&7"mHFDPZ<?1nETM
%>3oE2N;K`F7*qMs72$V[JO?'0n#RoU2D3"IUWGKa`aginM'p6$6n/KROrLB"*'^,3Pj+>0mRdEZ7(0\TKOV2?R9fLb#9ee^a#T0-
%dT;e,^,3A<p&OoaYm`qYl)6-*;*U<mWr:Kr*?o5cq4o=>>E_isL<+/[T*'DF)eg/sR];S&5LP4Z(kA-;V;_+2(3_YWhaf$'BJPuD
%e@38P$%=*6(H-pl"qZij\^/?9H0(6u%S]5V$j7p0-CWTY8aiuEbd'F0hJ/6\=./H?Y`U7SGT>,<lMh:iT6;"[IQ!CEXT+(\9;bBT
%*#CcOU+iab&7#cM4bPq(5YWJVVkHIH6or5+CXth&3V9$urHG%3cO?!]L]3,SHmY'HRE<6WWPkBc,5`0EGUn[@<YW[1C)'eteWNKP
%L<u<@:FMN&6Et(,>%N\*1/K<]JMNW%?97QZMIeP>%)0P*'J#HA=K)F'9-ng].RBJ;(#DulaX"#qX[7SRPuJru-=%r]+u%,CW63tT
%5]Q8uMSZg\'8jW9fP&Ag(_h?a)&O'8iit:]ONK70pk3!../8Im#dR"M0IZ_7@tu`,(rc_U#u4&&TGS(H5+tZX$I@?UiQ`*1'3l/L
%_'c3S7Sa4R\kdWBi8`+hWFA<;5:?_GKMQ9=9I(K9Gt04l^-FCi,F`D!)H%Hm#bUSo#"[qX5&'3=&UZo"(aFEkaX#q6O@sm"0GuJ#
%c8/(%;b+DiE"Bnnnec8ckfEgDk=O82AC<B*2H#5,K/,,G7\_Y&>b-hD]S8/X-PRf4%V$c/+dM""b.n!SF[kJ/,n]b](kg<T3A[C<
%FGDqR8;7ZZ>9n$&$2-sj#jr"0Jiqh62DK#qV#*uI_'dKk#0;/^O*7*G<'o8KmKnJ9'34skOKu1g8KCd$X^5S00k;a!J5A:2!t$@6
%l3]DRQ*8Ci_mM6=cmOQC>[9W%lRqKYK1m11<I(1Rs55PAPs#!m#iq9AQi)L7%K7f+aZi`fOW]^L^Z6K"I.0A^0DUr0PMbW3$p@>b
%'aj#ensB8)(<LLV0DUC'QcnHPnsB9T<60">0DWZ1s!XLp3J:0`^Z7?N7K1.@Km5&<W0XK7eT*!CXVT?=FL@Vg_m^?X/Z7%dS\0Md
%#m!7bi<_!0'*<GMg;K7R@J%1U`M"E@W)dmAr"k\7i@1mh?6i\Nk]'Mg6&!%TlCXk4p^>VH$AfW)V3"HmXoG-\B!84G+[_\4l!M.q
%rfZI2%;atLh%]7"69u,'F,C]Ebm?LL0#]l4rrF`\lm[g3p^Y%=W<B'E,QkiNUX497>"U)T,A!H@+)X>7OX?ciKRbGP8d:-m%ZfjZ
%dYUnHQR@23U&S$t&YYUN:<A64>j`[3,[FIU"+pS'TNs44^Sj1hW[&7VD'=o<Y@*_AlNNn8oES*4$&0VOM*kW+BouCNRjNAX.\Mq)
%U^E?L('T5K.`TkO_$4)*;L]lh9r(]&MGhr"L3\?qH\LH96`/7IZ>fU@?joDXkpiJ7=qW%W=3/Gl!Z+4p-AYC;cNm.JG"(Rm<8\Y+
%Sef_lM2;;O5,qce5^:E?][COA;_56*):`F+Pc?/#.-<DI,/o``7#+="&_Unh@ngI-i>&)AbpZNKQ*EWuKesr!6D.lb0R2=E#\9.8
%PUr\pBnF29VZ/D?+\1^k.^KfaInI),b:lhI`E:8JB*jQ=FQie2=G)8nBQ[kiPIY=j:7E^I'<*0B)8%O4]ONL319Y1uasYjZaXF\.
%_)kl.\-tf;$<UkC8-;@6@LT%FWBu;u<(k)UP*0]O8.g$6.V#b]3/lYS,\%5gSRp5/*dn5+EE.q.<2$Ct#r9\K*G4g0[*g4fDo)r`
%QkrYr%gkr0-u=j@E!6aYis/U'C)@IY20"/!6A8A]>b82qBUge67bjf;P\d!(_)?at[jIq!Ce9s#,m5EG-On(fK(TW/6Wr`ND:B42
%G0G&5^Mq83#]GAg3f[8]@t8[+;#4doSe@0uKs7/E&d_sq68]?VW%D=B^I?]idR9e'0F7pOcmUGIH2TLSC6E#k%Q.@_I>#>#J`l!s
%;`%n58,L,YVl1"22GZC5MUE2HSgP5,?Dl0!1ArefA\jY47e4g.fjQsY;-DG*&SEf\(YEms(+YiGN+rVe=ZkX(8\lZ>M\P76R4@5[
%-&tf*9k9J_'LNZd6<2+*.KSfi$52%W1@Fs#g#)#q&JV#A<(%S&<%/8>,5Z,D;LBf':XKnB`_HYi\?c'4jX!Ka',(oohduCF))]XO
%)U!fS,_T\Cm:m@>h\_''Gr'P@kg0=lXE8[,Uf(VP_b,HP@jfa$V(FHfBM7JrAb.4l+KI26Jf,$0-tJ:b"d:ggU^LM&3b=T\bUro#
%`iOp;FQ-F0M[*?0NXH^u:F\!ZoR@a$b4Z)lK(9g0X9qq<&2J>^B35744[U0-pm9&;KWX9[=7@fg8Rlf\QRP3K&JDtP?9f-?KgJk,
%,q;;C/]3@bKHce1Z:,Jh#0V,T!0)q0/?opT8'_=F.dIfbb&F\mFJ3fKo`1cq7O02<H?*L>7nF.LXjTq`m8^Zp.QE2P/J]00O`E]F
%XA*#-OEc>6"X]tBqZ`l&q$N)8Lm/1nPU%-[iSl%cB=Q'JMD'g2igB5/#X0G=?a/o*=C;jYq(f*h*-C%Kaf-g(JM4pnU6m(RkX]:I
%!MuKfb)2BE8k(IAGtsU32EHuCp/r\)_9d1%(jAT+\2`5O(ou*OG=d(r&f:b<XC>AiR+W/TdQfKrc,W8]AEZZA[t%9HOp^EGWrYB#
%F&3\4]KCa]`G)>L)%u'O8Pg93%FD+gR.MEK_VtTF:"M;#HDh[I/*c!<@D\Ls//FC8)L1i,_XB7KMM`a74.K_(`5n-f)h"&M+dTDB
%5TT!0FQ>2Kig0_KL9"e+UJhng;daih%.ibNBnf<L*oKbU1l/3OflL=;?8AnGQW0T8Vj/.8rKGbhnj]31A]^ZJWi9D89Nb23ZN%mP
%?kg2Ra^>tj0TW15E1\:_TTE&p>EGjr:5bs;['K4";a=@9UucI0:kl"MMi*peJL.FuD@73&EZ#;sL@pRP?(,JfPbY%Es(8m%M^n#L
%P[.\U+"JH:ZO4Sq8jPb>BrV+f"[&dR=CB@K8j^=^4Vc-shroDf4jE,[Yg#")#DgMmU`:^i&07'!UN2q)Yuss"=^&_ARGQ5B@:ghG
%7H6&V[gHtAT_:FX!=MS]+hqT%FSR?0.)/"i[s:^/#V>4s1AT;]UYJ>IcnHGqg*6CNnIjY=7:hs]X#MCa75[##<%;]<kWR8#80[fV
%'ur.C.fP`4fXOBL<tIoWJW5\A/7$=cW_=#$$6eepZ71n:<m/GbKtL>%G2YE@IP$N`E.C!7O6W0t;1J40h^Uk[].7SR+++!5o)'eG
%@__N^9Ub[0T7(DuPDjob>(91aoG=RP-_h,WjA[GZXf3$3k`7((+aMdYP@me.h]#@<#^i`.qYZR)oFH6ilguNpq;A#$rAQX#-F9o'
%I+fK^@oo5PA2K6nc?jupG$k*5`QftQHos^KL'OY?r-d#jr0k_MEDcF^]P>d?dof?_G$EG!Qo)U.B"`XpMTmKMXoo!bW3N<3.&f=l
%@boG5028@X%6fo24`l&!"H@Z;&Y"eb*JBG`4P#or-IT-i&,MEI[3q^kC"R;t4FcnCFGuKGF[kD@BUb4RLG\3(HUCaq-,^AoH_"2e
%31@h#rY^2W_q5)6`hSFIfV$cGDBZB]8W&N)o-p\"T>kLC),99"Bt_n>2Z&q6P5MB2REq\]@(sIT`>F'Tm@a9qX`^FWYMVj7&K;1E
%)Q6#Uf!I7%iuY&GnFCe[R\2_2orHXC+>E#skm!al@KfF9W2TiL=A[7SJ`+![O1kSrL_VDE'(&#eJucpA\2%fqU8hO^lSV54"p*+J
%Q"e<N.^Q>2)$Ync3@>Qe8VM4cKlb\?F1L.8hOjJ\rI8;>dlu-s%3*Y'WI1J@Hm@6h+>9q57MA0AdU[kV[b[Rq=p/f&NMiVQh'/Lr
%E[*/pNg:CF0Q]j]\jT_gPffpR8ZpYiV0\q::BdI?Q]Vh?L'6Fj'HaSDNDpW^["qtjg\\Sf%gXrQV!=I8RVVaUQg=Q:?I(;\raCjN
%IpH-3#=IM7m<Uf88D/tY6qABYdX`91A_7lOX%miu9m2Ln439V(Pijct"S%_dIe;Qa&H?5,C_XIU[WMJo=JEMC(s3d!gI/QCiT5,=
%`p_>oc2J]rXA)1UEF\buo).Ui[5Y69B\$!akO!2e1CJ$okl^&%e\!i)U9393Yb7t1^GV-3aBMUas$V?$i3/@@Aa*\])(5rUVj65u
%;L^N(2(UsXA@QX2RZ*dohX%_+XiUcr+h)mJ6eoB.6HE&.=.VEe(9rTK66*.]bNM4D'MuJ`"KF?Vg*lY,;kM47PFoG3PD;o%]_Z9f
%*qam/J_ZppM>Z1<mgts.Se"CO-hHTS`q=#p<tIY)cr\@8:M-EJ^BTL!fF.b+q<r15e3\`l@UeB$?H9-qPP6gTMn4qIW.V?m##Y7i
%#%jt,mskLrroag'W!_[5$Kag10fW?S>^a$"n/+bu<@*oR'>U?m9K3YfaIY3K*Otgfroo%O=mUAmqTf`Qg;j="L*JOJfNDu4D1p=&
%X577>QfRnr`]8F.Xl9T"o$k_JrZCoXKYDl0BE-ZC\W,'tV\a6GlTm0W8^[DfC6J)&4jRIS0uSq-MnTj#k]mP-&22=T_NCEp.Qok:
%eMH'nB,G7ecROl*7X_UsKOPK"!.(tG!1:<K6Kb4"?G2,-Z\/61.^7tLh9GBpC/fg\j+'[_--;#,a@jCcTrJ&6H]B#n5IH).43bE8
%WI"4Q@h2tUiFf=rk\3cjTb$Qe:X2F8al<!MLB#!j,kuS[#[3^]?5j2LBKlmb_M-+-otT5)R\6V%FhWrrM,Y^'9%\qW&?=gCn1jeF
%=9sBCh]5JLrbbH-HY>uVbs4\JQMnGGT?DrI`RLX?&?SH+NqR(brV?IUWXoE"S7&<\lMO1Y7qc@#_uGSp[X6YjT6E%]6o.omljSrp
%_*HPif1?[W,DETsMDJ6(>4'&bBOs/kl2SL3JpXAVrS'>:J?o1bJqn>hk0r!sn1S1!J!<@-dhYJGY_SrqkaYQN2qAH'd(c\Is0n<b
%o]&19!rDnGJ<Ne+^!?Wu2D,6p`@dufheq;Ac2#,-CWiE*Mh^ncULF,m0,YNI:IYL_i"lmh97dfd7q6$truD3c#Re]HT3ca8j_/>7
%jM,28)mSC9A2g[bBSM2!'Bs!rU'MbKd9,X?,>V]:Gr;$d3YIJQrHAM]BV50'oOB#g>$WCfXe@P=Prl>&V</C\1oDftWq2&q(ZeV=
%IgV2#]\d?kQs48[7>hVgAMp&SV/C38fMI0D_-D1?lu`jrek2XPo,FtY#G6Nbd&:&\ZI,15;e`\6;AV?N#DeBm9Vb\iT3@UR)>_ko
%(@:an2<f#J`bq^taGdT2\>50`ktHILL%^r`cXelmI<3mWc7nP^38.NA1g)KT^$3&aqWG4Cq4V`f0Q'Y9bb`h(*aOpE8<_<GZj4:b
%Y6DI:(AmL30!An^N@DaI2>Wl3;'@HB&ZQ7s1f7ps2TDjRR\+;40^iMHUi+FBOVYiY#9pq9'^;Ma9JV!V>MZG'e=\\td>qZr*mO?=
%>5]LPI4<13]Am4^@@]SK4dd]T?>+-hk-NITAIHf\HiG<h5Z1:6nj"%3Q<M2@>LP+!=>H!M':.\7i&BB4l:VD&+`1Lc:mYJ?mR/hg
%#qmO3A2egJ_6mkfC/i')*&ar&a)DLTSk@HbH0fbg<D1j`^s?uLq&.Fi)kZ0oOiV%&VYTiZClCt;!3d"hb$YBQZ.Yp1S;pgloAao?
%lQT7)+32J%S4GDF?&3??@:"Qrbag)19,lL2IqK^cDK"*@p\MSV5<:E)`oBft_p<Vo;qboF`\I`AWaDpGD1'EPE.X2hq-3..:nQID
%IV[SuFD+Mli^,t`[qfQ!81.=u8aqi(1OPE[`)?jeVQYFT''!hEfUI=5$Gls\CN3M:2Q]npFef)K/]hO3<P0UMql9<7$E7RY@PH@3
%BJ_.fCP91`"#O1JU<(PhISK]d.2,f-D:qooZLZn@Z6@p9#"_Nnf!6\FfD2r,0iF!F(K;fe/>qi(NF>obDm_NlWq`Dr5<_9.&hBE2
%Mi;7953[Z2^qW0e=jWfaPtCHjl%nrn!0?9E=X+W)6&X)X3g8\XO9Hb+3*f(,$F/NSKEmaa`8.LD4JM/h=M:Mp`mSl$N>8^Ii,"7e
%JFtGB)Ojjlclc8k/mKJA2Er,2e[fAJHBga5'uX7:Lbr%M1T+3#-$;[EH"TYTI,&=gCFU+6%'!l*1h&M2i`U>_=Xu=Ab$",Q%o9Z\
%+Rqi\AMn-pX6-1#:9F)cf0HE=Z^*/*RYVaE]afl6fGAR_2H>N$V_di>A-*ll;0pHpld=V<A.1uPMe[A1]ePZP^gR0!%Ia`G%@&F@
%i^%clrC(f;8Wm%7Pmn=4WhhoF=iW=AgRInm-j#3+q@H5;gg\8IJOogMKUXco;qinH[KG*uZ`1A<?1*Xu?)_V66u9fe7PjFY?7gD%
%RTCHkFu(ae+@Y4YP1#VMPW5^Qf*ZMtJ<;%%=GqLKYS'm933hpL4,O0f^4HLEU(dg^lLtaB!(0$tD'GtTF&@S=TAI);-K?I]hn=l"
%#!/#W+;9NYA?n)1N8LRil`7<@lCRIdni(gR*0&\11pm?d2Uttb!LV0%U<X6=$<PmD%Ip.t2;2HkA$]DAeki*BiDRQ3/.<UMM[+.9
%cH;8Ak_P+0;6a?"!#.9tJ4?Xc`G6-+G=E$l@k,mtoSSu)>9gON!(5]@#IUd2A#R?c0Pc:H@q"t/VB.<<B/eVbkTt)uiE(pm;Vj:V
%82UWC>D<0;a-.o3Og\Cs:oI$g3,B,aA_Xf1T\<56b#fG.*#87ldK^[tGGG,_7X9U<ou)<u63BT7Z-EWNU[O.a.8=0nY_5YX>C^dT
%1,Km_2,3cld/g7bgUTm73gtFcm70DL0dd3tZRe!<5s]C*@DT_G\rTLDqji4Qk_9f:%&^PD7>5>e0:'jQVI]N`pk_b^:N01)G$d!1
%0SVoba_5M>muQEYg?iZga0a38hNl2/RK8mIqe5llgT@Sl[,$?\CY.``F=;RG<#0/*;FjlW@Abil6@BnuS^u$+CifiY?]]t?/ao,D
%"$(NQ9at?.?0o>dW7IDJL'glc,[m2!UCs>AB=+VUe.)Sj7!EOpj_`R,WkVqU,:N\&ANoH?@huS!CH.Q\c/u;H0"-jAG6Vfbi\-:Q
%ACoY9T%>S&@V4ZRhmb`)i.Y]('bR_Qa2OYQp74S<N@1K^?=.UTe.k=@N2-aI)TQR(erf/FiB9h\0OfPdSb:YGKOlN6'O6/mW(/A:
%-I#,YE>S,s+$/lB\EgeQ165$B+_A&Wp)qCo'LEk/5&Rp-P+jb#[3a6-qk=bS[[0URZN7Tj3?;G=j,VX?4e"T9?d;WFmn2'ck>6Tt
%@n(sRm,+[Q_mXFAP%p/g/_HN#Ha?#]N[mCu;J9N[Y$np5,=[ZGS/E;$fl\*gb5+FD1/kO4'!/Oid0,-GetP@$OroM3IZ5]S_l1PK
%fU*`O/X/Ot5PqRf"(?m!ZkG+^/hIOK43lfb,5XE-<iW-A;@-(TX>a(V+Y&j4)^pWq3[bb)Z-p;^TEt:R`jhu&6ksdJ:iM!'U3:<-
%[6q5D#GF#PAfV@R/)8$.iJCTO?;t1I6'@PqEADQ?cQ/6NHL@H1]&sQ\CO0kJ`G#N;T1\3BV[,NS<]:UHa-2S3d$>&I_/97sA\*C[
%ON]&rFRkg?=\(gl"1Q/4W`d_F7uRo<2o=0Y7^JA*6"3\s,YMhhJZ0V]A1jm>:T$+dYs^r1[%5#tG1J$@ajKHJd[]OEAt]8VDe0bX
%-qCSfhLDAN;jr))`f^P$mapYeoq#=h@4bfnrg$;N=M%PZ=h8k$k(`FB[V'%f:dpc9_Ok57,VBF_%dYKP"@+WiO20gQ\10?SksSYU
%L5T7G*@BWAU"jKH`l19BiDArX-Gh\b^427[jVJa(2uI,\b[&PPjc<+&VnR;!cmjNa%u9^[+`q[kr:9]VK%o/Ol2:\cisg.*9lF.4
%QFrph^6a`u4SUY4KXVZ*Lei`h.I'M#-_<DL589#i0qE\c%Nb?hn't;#:?9"/>H[rPPpV^4f!*`?rGEG/:G3'/n>I6l?n-Asc21VV
%n9A3:-Zc-LFY8-8O3RBrW;=nlX1pSd1=UBn<BMldYasp$mU9#iW',J8kHEJrebr,<RuR8T3gg9&Q8eI"5Jj1pr>p:`>qYE%>ifk:
%O`Z9JL;1I+]oh;AHjt_OH05GA)VY*'%A\':h&Z3@[D_Dg?[f*5?D/N^ea1J)H'EThMA4.i]"8Ja)=!SajM=3R%'qp^SuDofL(l<8
%&/[$Cs-(ltJf1(@\";SVnK^7.*S.m8b!;]+Bt>Y8+5Yc9B<=rq/+)b!mjBc>ngPB5?P,sS0Zs/ejj7Lb;of/?9n'%0$k2gj-<[d1
%R^`oY-<<t#&X^\`n*ELEXFXPi-SJ[9_%c/kIE,PXXiE4ZKc^IJX;_o4rQX/tDgO<!K0#F88%8HamE9,uW*GV2m9;hMDBU^gl+N.:
%q/G@)cWp.SG[WYac0@:#F5B!l1kf,f)P&9Q@;`H&I7G[T;_'-N9V+>_&O6dB0t_cZmNcC.<%U;^6,do/h*.WbRm*H^C?*pF=s$,n
%K8"J;$h\*%Ene=8J=:mZgiPbj(b,T^TA%o<opI,U<:&YfB+B(A)jj=*TrAo/"D4*?VI&<W?RK9giD+fV&%i(q`)j`UP\T>WisuZ*
%28btnW0l$*;u<!:^)RFAAl-&'b=g@eC3"+QB6[T8K*l[P!4TIAq#/bXadY/ji04)<#;`<BfiC(&TftmB]#BjpM]Y&kW!Ef=H2adX
%LASL,SYRGl5ReX)etis_ZDk*XX=$f)/Mj=2$m'<OVd"Qq__jb4F/Qj@N&fD-D`7VY3P.,%HF;oL0iYf4lA(ka3gQp:c3!90KY)O<
%Cmm^SY"ND'Nrd!*.Y,?cDgfN!$R@+/Y.cM:2`?4jj)0puqrU^N`1<B4IfBC+!jgkBNfQ(MU#*N62J6&ecag[CEENM]^_";ZLR#@#
%MjG5YW%[<u%83YW%uG2S!pXiqH^XRPGZusCmb.>ZE1TXZVGQ.gOeF)Naj*o-X+Q;GcrGG1<I09B;lJreaJLor&ud"PfjF^;RD5TT
%.+G[Bcn1j)j%1aljKr)tn/_Akg>SWBn%if@TS<n;ceJ3_/q<M:NM%=d%/\jopOGT$j['e6!CMY.7@SdW5V51h%4toq:Sp(+?@WqO
%ZDU0FNO:Ul5n3532rRXV!]\4B7s',54H?&IA#SC1[WJU)\ilIgg-^D5l,Ph680^gJ#jRNg6\TAOiPp`CClq'/?:8p,hAf,Uf4;X[
%>&QuLTB\AIYG82\>6O*IJficO(&1*nkK_lR/RlZ[?&Q1*&p?X=*QC-#l!$dE$7+*u)sd=l-`qk[r7\fmI%+k/ZHp+k)A5RK_97&G
%lKPM'X3^?R6.gVP=M@43:-ujg?s2E`IK$Kaq=]3Be#lof:"OUTq_qFkBck(HN3<"OW42LqWdjN-=oI+KdFHV7m;4l%jA5TR#&/9C
%m?lM2qV?3QHXQ[CIHNJqD>=ruq49IaFishN[mKW%o'PA5HMD7J((K220;0N5=Pu`++5U4&mgRrP-WY/0]t99eTFK=m.tuH\A6Jk%
%aDLKKD[Tl[4-6jpMjGem3=)pABDm1g!hnq<Bo]nZ7JCqCYMX-3K%8VZi-(.'aV\_="`f\"F*7/#pl[+\iq>g>'FC)8Y4&>X3SF:)
%?`gt@h\%uX9W*+@ZY`*F5:(7/..]\<;"P?RB2rl[Hs)&^42ghJgTpfRQjj5O\h#T`3nY3p#L/&UW_`F2oq$05-2Oj;8b=1%]W"q3
%lnglt+_C7oNg1ajn7,f0\/"<MZic-1D,rn>MWeUP2;liqn9JFC27^,;1[[Jq6]F;m>!`BiIC&dpC\A/o<3H(;G%Csp[a:$Le?/k<
%MB(@X@'oA=Y>e?1]=V8SeEPPNF=BQlFVm=?h&aXIXn<F-6rX[ZW/%F)MNE3.=@1!,Ka#ue(?cL:Wo^2a%)[LuKShHGNE\aR]tt1-
%'@fCVpbEd@m/'XAW$ac%W)uSfb6%P!Jt-k`R9D&Wi8\`t1'4;mm_D+K"=EV!*t/r$9lBpD<pn9MQ:lU&lD&a%Ldq>J@'%h]Lu8.5
%5gZ@MCj0!P:FMjg]uoZlI]U#D%4`NU@t46A)Bo`>@_1a]33YW5S+P`!%Q!eFDqp2e9^Sg<QrpBjTLFj"$/cn+G3DHkF@79[i>NQ+
%ehi&+KZ83i-D`O'8'D'nYqN)h,C`suKlO4l%i$]!R$od<b\Z-sEid_K:%WKC(skCd&4A>Vb+)IAB^TVTW(&poPh=[*+$c-9Cu*`c
%lR1.Xc\&ArDf["pi7"pgbAe!1[\GW)+tsl(_TTT:]En&s6+]olGEWX8]OiD,8CIt[J!`s*Ae)"&(XM'+4Mi591u08\Bd'bV`Wfeq
%kAZ)S>R,q^_O!u4I'EBO2/<P_^d>?Yi+k"*PeIjk;Bnn'?a]'(=4juO4VF)&)*tHbIA-G'3O2&dJi!j_Bt7'UaG!qNg;t)S-5V;;
%4<p-S`^GeR\^MH:mLh-_\NF4L16O58'X!,2#=T^heJcj0&Fl2DEVnjSm=2!cHe<Et3,2@AP/h?,bhZTtg7oT!j7+bor6h;ejcD5M
%*MmJj,rMI0PQVCO?U8(;7o"hMc"mpp+`6aUeHpLaWlb3&Y`!gO?ac?%n<e-2qs%-#>Qm'Vou?qf$6<Nsd1J2n+IT^Y4(umE.3N<K
%!Xot`@&rR#!SX_@7aQNuo6tR=Tj)p>L(D2B;b2%-@A"(:#Q$$l\g_1lP\*tT"3miTrAG8o)Bl=Q$N`?'OS_F,-HcImbur;uDhkao
%e7t@r:7C"W%+:PU>4A&\Petn2EE]r]7@Tl)/qcadPFbtG<;+b9NZsUEo/&8XV>uS08Zi(tlE5diCG*u9Bt:YY^.q2@?>S)g=mj@W
%pH63d4^'9"OZlnUH86:U\=*8*[dBoNKc5MS)M^D_dY<Z?X>L6m.5aDpd+[$s^12+#jh*J<#32Ffg&jq#g4R)%j(=ZXg056=hBqPV
%R[1Rr8(q'>DXXQ]6+`[.>4Wt3a][l0Hq&X4<7`RX[^*(#Sh1ZF^V#JLRS*E7?_4UZk5(BVnc!aeSN9ITL(1IlLXV\*B'W\?5nBHs
%:3@4=lI7'BE%:>+$geDc&n>3U%lW`cnPgN(/[[iL:D<iPZni*bJYSh#V9\2LZ@DuB0J4L:=Wr\dla%'ZmjApo,<6ZBCu^j#cP5>L
%g5`0qPgHlDd!iq;"EX/>-38V8e,j+(8LtWL_bq6n8tkio6(bU@ZN?(BPI:-?gTfY8S[*hOAd.Vh!nJUgfoH[Mg+hTT!9);qTb?rS
%P_R3Ih11^.]60(:4Q@qFdi)PYnp[o11U9j5d1Z3e*De0dis]:T(:tHu1e2cn?S3/,#%(oY@/(PI1I!V]TbmQFUgNJcb5#LN'I)C.
%LW1#iUVi5NOK7i1Kd#'tQngYLb4c[Oo3t'>)B;mV`1=rAl8p%l/phU'^^rhoAml(hnOIZf:;)<(";/O)-35X_L%G,gmBT2+&ZcpU
%],mOn3+dVA`CP[V)ha\Lej1<TYd!KpJs+Cb>/_14-4-fASY,5eCd\]/p.*n#j3[L_[Z'H\]pS0uI;1bOpLjRr3&O*[\XSgZ+UbCP
%j`YE%<i"eVekPi^YU[1*j4t8>S]dM-;5_ITqMij48E=U3c7B;:UhkZVZ2t.5c.5X!*OpC$[dR-IT\KCG`*@s<h9NKC?_V#4/>m2@
%5</-&WLZ@`>j.RhMD/7_#4k1godK+X>&H([q^^LrVqQ&o*bCMc9WYU5-<diqm&[S@R^6"-bFrACXF.s;B?kN.e=@:+Ce1UC3pr$j
%KUjs,l;An0JB"RqU?0a>)KN4t@\d/nKqpTN6)2&/<B9+_Y.^_Eaq48^e]neNW*RU:"I7G.Zc27X_=dsO';Fnj$8&OY/Hm/'P6n*s
%1^6*Lc/#6]!<[P8re+Nr2^OL"L]W7!r9pZ@m07VjXbs_QGIt-CDIiK`H3OPT/]HOfbHl@R=p&t91T08N96('_O=Ta2@HAU@Xj5aq
%Pr5)kieD90PJTaQVBKbO4#i4f>/IY1AuB:B:E[mb(Q:399#c6!O]#_oWl).XNcMQ)c%kc>PU3l&fLfhfTBgcug3E(Hl(ZaH]hUSj
%I#;^YFPT#XR&oRW]Pa5gh)=*p0QT:1.8+9Z\=nV.^L\p;pS88#mT"gB0rj',#Pj8sd[oDN2G76q7Gu`t1idBEL1$)drVhVE7@'2;
%oq^<q]UZ.-']._-0Rcljk$W\OF"7-XD2rqc/[Vs\oT'M_FdqE3gD\;+.gq`p[K[0m.K/R:J^&2bD%/G"Q2WAKm1qV@@"5Q@**(5F
%q0/,&dC;3NWK*KK@*mq6?(L3SZ[TTSQY-!A\7R1m*L?94gVd]-eCY0k3PrDC?dd#4H:EEg>@F)g4/Q<EB''>&cDsC&,>"8ninCD+
%BL8JS<kQ[3Cl,CAgR';9GMoa(l]W2h-j75.Sa"W`[)aGGD5n:-mBNc6g1mMuMYCCL%mX(F3*WuplC6]?Ru8%"iG%]D\m0TU.?h([
%AStcKnY=[RmChPD[2;gRdSfMo%LYcs9[LcU2^`nOC!C,?5M1;YJiK^+N.p)>4ujkrochk$dUWq?)r+l]FD.\!d!6b5A3R\hiPh9F
%I/@+;7LJ-*7.=2uZ$Zi$HG]LEA,0LhCC011O6+9D[Z5;jqcH$)J[L1&fuNZGrFQMtI.jgm#g@V3q2A/#Z$[U&ki-XAI.jgm0UfD&
%o9hmE@elD4Z#VgrI4QH@Z\EG5ODQP@:@VFMSBiI<7MX+EP1(2%o4]2;D'If)^8ap@?fZKN*K6dOl7M4`NIeUPfN13!/82)af;+aV
%]IiFQ@r7jn)2Op-=p`"7oGLC2bBefjd\tk-.R_HN^i3V0d.TO-8s?ucgI:fOh+=;GC\D(@$V)U8X=Ok@F$)d[U!%!&3(JA?<M-@f
%,+r06L+^)%l%8Ys8_%DMSg1[B;>a't9mWcmY*i5g&k+7VE%u?DDRQo0;`D5/)U)CrOY+bmC#!tLL>?Pa/mXhW<<S:.IK`BN.dYIA
%fZ-[F=ql-mX`dnm`kXVc[OrnP2d/gBM5*mX!LKp&*P?XWM,.@N>o8C^N.878:,QOH;kK=qg_NUi2-gC!arJ"#H0R'fEj;;IiCeAK
%Y*7<k[PgXa`h2m*B2Ls;DtFON9-8K1beu6h0WGXQUDe]+4PE,AbY:diI*$mT]mI-TTY3&YAkQXoZAt'R%`5IbZ`Q@YI0X+`<cVYU
%(GiX1%MsKK4*F9\f!JIRdtiCl0nnl6U6lpYVA,h?>?abE.W,TcS(Itc\7s3RnD,9_CR/6@BaY#ESTbK`[hY"%[204iqhL!YM5m_g
%o6[P?b++=!##hd(&&W1SmPjQ#pIt@:<<GIT$Ni,;GN"gBO*B?$?FSMk<Bdl%oYJkb@su_"!=oZD6>bBG$Mu_P0UQ\u(H`UI\edj'
%/NHJR%a@"6MThCl"PYrp!Xg_lU?@qC^BH[>;8f2b>t9oDBLnHb=VNMhXTE)Z@:lEl&-@?,Arh)\?TJMBMP.^'Y&$Bb>tQ\6=i]fq
%1Ec"fXI4Ni?Wp3?3*?(#_P\C-)HH3A5us[g-I,1UU[$%V,f+RuVf^kFHGfTtX;or3$#V:?2LU`i[F9!;#$#XJI8V0JgNC])og[CX
%6^Ek5d<[T.>)W'.,g9@?5Y0.9pu?4<]b*%>LB0`rg$%jeef06Ii+R9!%;N[sk;)$@*mUVT`a^($\@V>;K&I,(Z:i1E`gp:O4Ot,?
%8+lsM/u!t&=GC-75fbc=2Kq=E["@p)(8McBW]Lfg`S=1$bC7q^#8*-Zj->$;A@!<1FF5TCJCrecr^@mH:'Tn<CYlSY5T#uu/]pL!
%S(\`HX0&o>nT3``CZPt_6i7_s">3fm#Ven`!R-HRVoQ7A[58#'Z'+eJJ5'O&<HtrskO\W5`9D!ta?63!)1qJ2*LXD#'R*96H.Hlb
%CQ6PB3QAs>ADUd.fX4-0@36n-E8Hc<ZK1)(;WoZ(IEBPm'3?\bBq:B3l>oa<38Ia_o2I(Y%QC_j,4fntUN.;YCLj$I[UsY7">P%7
%#lKH0Df)YDW%$EmdU)3\id,l3Eo;9.J.#&#`)T5.fKF@p(J?XhXb7LRJA[,37'W,eU6a8I6YcrU1\$I/p:ObVh&t"h3l/)@^KSS[
%CgF,j^HmL1[I;^n13AH%UV6fOA3JePY%L-"PM5r=l?[gp>Gf6Ak%U.InR:e*'mbG0%QJ[6;qf2DXsMUQDTM?'Z;GU]6YhP%/B8`J
%CC;)ec?F)i$I$YtgR.GS@6-?X.?@Wsa["Klnq&8Lqi"KtC:Dc+o>,>tiHCq;[7Ss1V<uXVg7*`!<i86hXj-P@gOb'^6PDQREm];N
%$Bg*tee059EGMT[a[.Ln$'L!sS0baIoO_mr6+g$q;o-':?QsP)LmY9aqc24BH80%1S/kC0@o+4,.9u3iZslk'c.oBV-kCrMT]!!j
%Pil6E>V7GN@(\/kOe=g0o>>m,o'G^W%Q1a$4,K(T"cjfkZsE=SQ_dpQK'`5DE`sp'5]:[hiWDn$S/EIj(nREYe,4Sd8N);;at?F9
%4ShnM#DZqWG+"*tA(U+!.\o(`]%6W?feS,>MCc+]<Klf:=ikWJ?J#Z/SHj2/r:sErJ(o9"Dft6.C1]R->.m+9_SJi.2Y4ajnu7E8
%A+eflr)fBJ$h`TR;5kE"PY/pI0jM>02.j_b:1)aiC7ipDK^#5g?o4<Fc^q3?i6iFpVOGT5@<['ho2E'E=p6baiGl])IIG6,!:J\r
%m&h;6KSj[lfD;L__mA8Vns1$?G8mKg84Eb_)\M4`HO@*QW=2lNFpGKtb83A-Y*Ic6gKgMn8$sOr(3!r:DdX=HQe^<k:!TB5_X=#^
%K)H7D#Bmq4U[)\gW4OG*=4[eZ[,@OmMgK6<Q*[BW-&/maing0t4bXC_L8dU7Qbpf#.(Nt2QJ9lR@gDgaU@IC[7npu*9i@!hVC+qK
%&bSguUCO?r^4)-NZT1,:mkkB[TqUG0WOY)o:N2EuB3;iu`VN?5?i*#)4M#@?[E&m0`d'tSii_Nl]gJ!qolP@j=10N8lh-PtgHCfB
%HXb\5B6n6G9,G<p2Kuc9H>?`Sm?Y:ccZ4^$k;QrW(TfY;TnD)7S4:IY\RWTm\*PcuF1#n#P3IBgp9(e5DWUKRDd?U2Y\t8GNJkS9
%1G(n&[TcO8T35-c?A;cR@%Wi%d<scO'\K<W]V60d<XQc%%I>l,j4cTh0,`DT7*OE(A">i$ft]eXVE@V:RCEXkZd:ke*S>"JcD0,W
%f+HYJ(=d%[=BRYgccdZpdH@rB4g<8V8l(EqlO<,9'7!O]icPFuR76cd]i8&ClndD:$0ti3@%UFIadN>/bi[7s?Q-;[^co(bZui]Z
%5-WA7.>'1UH=5W^Lm<)dp:3WGP(A#s86^:Gh[2nq'A-rpJpF_c?L%m`1Y_Ob2!TFIJUM,>aR5hh$g]Z2CbbUq?S/M./?7#i`Eb4&
%cRb%"E3QWo@%US$T@n\"@UPfG3qQJG2$EW@l%m?3r07B]X>2/+aK,!Ak_KfT7\_;Z2r*MbZG+d]UE^DJE67=E?gD9A.WVW`(-a=3
%A'MLX/J:(6TkYA6\ZiA94F)l?ljtGR:tfkZ#:q\uc-r2)bH+JLR"EBCQ$_5k/[p.+!b5'9>hr=qf-c2h`WBa^K.<@;Wf?pTg"*M[
%;iX)2l;T*M4#:2^,J9kt9Y7E0h>cXnGg>N)U%>U1/?c[ur6LtfYl"H$)B?7hBf5/:@eq)>>V,N&`qTM84<su?dJ\PF?iK68#eB6^
%Ii?GKo):k/nP[r)s!c13mf#Eea%taUFl_a!F#Uc1%0eFo4HA%Ur\QgYijbgHO5n%s"<:5e<BTWNmBcD'F@;s=eo;\GMUr>'9]#m^
%C,q;^;7r[3B8H0K3/DdcG&DE\U]q)[1DZDkoYULFTS<u.hX]nuRNN?Hfr.'"=fnb8N,$UgqtMo[="?[B$[g;A]3:o*(Ak!iG-sZ=
%3HQISpS>ffE'8c>X.Q3G<m7nAX%C*86d+hI#04!LQ'W\17BP`fO&oUVg>ga"7JeRTX%oC;YDdoIkh-m')a\>@hYXBp,"MTS_V!A-
%R3abpFkF'h)mutc,?Y/$`m\?%$Ifn#c-AHmH>Q=(TCi?,5\=['ie:N6GkWbZ38c&W6:fL^VWhg$9.k1iA-dn73XBrWXXmtD<c$S^
%>r8pK1^9bL'lWlEXe<Y34-4Q,)3HOteh2VbM8S=<aCIHjg4rM70]'!Rn"3)`mqHh8hid;&kHEj+Vlb:6hZ?XqiI!6Orcq&ms/PC)
%dCk$)rG5NIpJ83!R:#p%`4/M/rR9G9*(Qp:]_BaYn6Xo3meq3s^)]PE<fcs&r`-QYXr?\c>-erm[(_0NU4&Y`h+.>\N@BDLQ1(&p
%@)l2oS@7rEb$d[*R&IQ\"#mTQ!7OllTshD6+m\o.`F[*]Qa?H>\4+bQoY&r+<ZK/EopGE-%I5b7?SEAkAhXt+JKV[\YuH_cWI+rS
%F.7#`5qJ9mAD.*;WtKpB+I4MCG8*5ZV;:I'B@cN^Grc8-nf8-_etm`M3t7up\u,]FH^iZ)^<S#oC4<[:)GB0g@asRhUgP7p'mEl>
%RO1I5^)V%NDVJ*fQXQo'27pr:F_'$cOg_^.gBY'XgLV\#p=/><R.BdIh$&BbpMm\=KaOt'.V$W$EOVlBcGQpSibka+#U\RWAIagD
%KFiK35I`?Gn>0U\#gsQS\"oe"E\;HVI5#sX-.02*PJe?q5?GIKmr5U,2BlrL<nX#-2bcEm=mf/sPssiOBZS_G[gu3@AP7A-?+0Ct
%?kJeCY`8sYbhob>N^N,!!kFt(+C]A,4*;EcZ&/d62M4V\.6%lY/=I$7?;7p%G[h'1f4[Z=/`HfE!=Vu5Ep-unRL/<$]W!QlX5'p-
%l@LVjrnLFZ#8K$6MW>Sc$h7Ct9;l+gGe[qn27^+.5:aLL/@YJ;^c*42[I'bIeCqmmUCO:o\I1&rf7\J8TjHI/Y]tP2%CK*EWG3Ho
%&E%CR&=1)YHNNBHK:&ES@Yllkk986RWhS9q0O&MCA10O.<KrIVNVXg$(J!T)*bH>=>$sr\p18O4F6K0On<sVZl_&9m<47"tFE+qF
%_,r'M/bVZ>%ZAbm_cD2KK.h&P<H=98hu'PacV8J)\fSmDK+Zc&@N).fVm</ZQK@aar\D0S#!ob>m,PMs!)T:YF+s+n"eMA<AZIVe
%dN+jg(no71%5EC9XrXb2P?K:l?T3uWn'hT$0cR`B=kf;!Y+(Q5)]7t)_%0Vf\gl$]5qUuoR+rObS>LiUD`C;V]uY6k>$4Y`3tKGY
%^VIh.EC?%V=k_[dd;*=8'Y>DlKOiasK;a^442^m'_*uaK8>9mX[#(,!%S9n_]<3dDSaMldX]ArUGA#csSNT^5MILU.gT!;oj'BT>
%WpA01>Lf"bctQpErA.U'b#*i(6sU(*2MqGC2Ei!m2AV\TYJDIB-TuGqU_$<mb;d+\lSD"3!Grn<4WZ-/<+d(CV48,W%Y;b^:;rmu
%aYa!o>I1Xr0,2qoIG3+ReX):h6n&#e?C5*8H!K@'>CWa;;"$9kXXt"tE_I(f2:0KpZV#"k/e[`#oHCt-Xm("s'p5pYR`P:YjV-"K
%+Dp)&6LKqY&q@?'bn.jq',rf"F!$S/<,D3bgZ+S08TYl3kY\2V=<]$<BfmRS#F>lk1sVe?4JL+=enmsPI/o,gg"J2)M-@?#*KOn%
%F6be2d;l:moR9ml,gg<gU;nP-b=+srSU.5!?<).%D+LDMGXR02SL6QUNbbK7$CM.h+24i'UCWOd1RAh[Qljn-=WofBZf`EG\?(cE
%cc.'@XH4Gnro)$-/^/D(^9#]87<,Gr'mcD-n%$SPKc9ObF=V(Y/_Zaa&^.&\*I?;$e`pg"=fiHHGj$?PeLD@Vl3FeYXB$Ya*\QIT
%[D[cS7bUi!G%bTCFF2u?]a78M:,3??>krDtUIA=fgg,/<J(pY`cmrFIBPTa<l3ptA?[1ccTPR=]TNL#nW7c)i\a[spE2HZrAM-)%
%p123%8(Wn?*nh.Hg)8K'Kni]-jg@nAmMn/\U3AcOfrj.:G\FFBj5EYe$2a90*np(1<)-Zr_S\aqgC?C7P@p:jG\F8kgULP$]C=1a
%-&^W'\0@au(ET^rOmhqZ6\kCMY'T'#rG@<n-h8!)4L>X]AL*pec1QdGetKp!gS)HM"1Z?+(ET#*g2Z\#LM@p0AYW`p\F@jR/FKMS
%*noLp.'$3+(N7F_Kno@ShKmB4dMEti_T6g5WACE]$b<bf3B\lk3F&_1iLp?+Y`9)%m;G)9:tdB8*kK"^E7kU0[B8YZd;kp+-5R`W
%T/PH8p.?qi4L>prRH8VR$P1KK0''urCN:Q.>Srn-%RCei2-bB>Is,\kQE\kmLBdKdc#&5/MsC-H&+*Tk/@_Ts%Ef#p41'&QGBMm'
%3`8Wg00F?*7A1$o=lI4bP<]Z/D25-DQ.7KL<"k\i[_q3OR`U8=p;.?F5cs"^6[Re4K<lu/iPItZcsVX[_8R333f_0bmD;4j.jbV5
%=iAH\(EV;>@`g`k(EP1NW_[LoeCi<:^[R>k^$SY>TpK&G=hf+5*%W"qDJRF#G\HP6ASQd"k/'Kd\KSF&g*=k]KnoBUrF0!/(29oQ
%YO(_p>O''m*>?oXG.=9)U2o4d4^!#OQ_,gWiM!s'kYWW,>3Wmkq]K1h-G@QULB_R0DEG4edi<#ZOtSq&BS9X:Knh9+RoM('[(l!)
%)m3SsR`.TN>^0p(V!D/'<k=;6?'Ro]+D.ob4PInpk;VO@,l3I%?ZS7HX[W##DIX9ep\38C;)4;D4H6"&0mOc\N)`mo.`tUjIa+H%
%*@\MW@cpWe7d6>t3U('8R0_7p0A:#u]V270D(^#3P9QhGWlr#&HJ"$orh2:%GoF`Bak'D_YlBls\-`!VK7L0#>NG(AB8*JFGqnQ3
%DKSD?m6/4ThO@Si:X=Nq<W2[Ti@1%J`]NG6l@&:a3q4OlC@V&Xjj-Z(HZbdiqmr*='#1o)l!sUn&;Z[f2m4lqJ$T%OqiR-7%tEJ7
%^H7YW0R;fo43RH.7=Qo"oC:=D"Qj&q:[ui=P\")"8"1RV>[Q<5US6;P=8;^,%IK(f4BF*U(V/g$kD6/bG:t>-pPaSW:#@h*>Hc0B
%1spbeb!Cm9Tn?J./h3H'2H^%:GAK$_*pk+)n9E-HSS1>rpE!,e154#m(cj!NO9sNUcJSGg?m1#?A;2ar%KluqH+#f&Ltc7BiQ>[/
%o!a!EF6iPiqJ^d@M,ebRpud%*ht;.9[e5H1X*WsfEVp4bi_G7g6IK):?A"MQLYJ-+k]([>($N]LAV:9>/1D?;Q'GB-35jh#0EL0@
%Ei1`I5?=V-I)Td`V07-V4=bP5o<I!J;*Ho*mSu&I5L%>V?@52/)]mT,\+e4&HICP;%Gh#hG5_24`m9Eh;@lt+n=&5rnP8S`&=C=B
%F>>Efhqbu"._#.ppkHfDlpi4`3)%j%_o0FqX&`JAjp1p@[i+/JYsd*^^@?YgF%/,\%FNL$&B>t>hUB9NL16!l0ReV^[AO?-=c0MR
%eQB4'S>K/qFY6W'n'%j3HDA<3I:$ooX2b86Mp/7K^Bc8AYbUb\W$B'8W%5QY,l'l&rF0%.P[Ep[(U`6UKJf8'e^&.2D$5TY57=OL
%IE&niM^Z=9Ofr]d3S5L`q0Jhd_@)s6&$aiJ!9c[MC<\N1?7X$:0gmW*K,MZg`(4Z%,&A"<K9SAR:SP?5G/$O300/!&g?-dQ(Ok5)
%G/`5o,$P%!"Lb'+3dhMJ4:)9eM;Q3I0pmaf-jCn3dpdW!H4>7d^67%<@R%Pk<[f8Kc.rC9TL`kPj(4eLN>fKh.?,N*CMW[!;qat&
%*+V]rS)(dPdT>]N.'7Go(uE+.O:d@G_:RsVi9=>LFRFKlDQZE^dZFr$/lM&F:Vu[3BH^Q>U34r!,jPF=-3<\>[<W]7UA>X!_,ZSE
%.mAi5fR=lpQhc(4IhT:IK,JFa1BBog*4bA/k6B&9Rl)83@2`ctNM+9!Ie'VK>rnY7q.U0#jk3*7DK>+"B:LQAa+QRD[[=\+K$3%5
%HBET6P[gioh<a=OG>m>$`4o<RLbPj_r<65Fa_3s(ASR1:a6p"MF7p<#?39d7K&g.tq'\YFWHpc*'_*t)MhNWQG7YVHUZCI.hCjBF
%9X"'b\bgX1pn$6g8J,-o@9:?-A]EkmF_5"+8,gY:naraskYE=H6F'q!E7&GGldT:dlm"$Jbu[08gnHr^19p_K&6WhgqcC-3Il=(,
%hI^hqO9"I):+Mm-h[F+af]*t+B$nqL!(U<>7-<H@2M>2PpE?cX0V2>g!Aq41W7!7&O/#h$"&GL:Si"1T)?iJr4_A,HWagOGP&*;8
%AM9)Bi*?0&LUlBUMPhI>VKX`jiPVL_1%"UA*che;\1SBZ3c)aE7/Ig?IN6mY;QbDS5N5M%F'ba!=#*'@l9q02+NOb4(;c7D'46ED
%JDoK=6K$J8=V+9Qcq!B0?@)W#8<h*D/ldlUReP+8EZtgK;=lt-NG@Eik0KJ&GLTJW#UdtoH(Gf[GK2.P2d!0%HHl$oPupV.ro^hK
%c`O&ROg"<<'u'9=ce>j:eUXY5#RkGm=$uiU6('h2*eG^)BE3ZH[?RT)\*=jUiH\2RXk]VX,Qq#$<;hS=3B-&N4l+2X2nE9F`ht&g
%UEZfiOS@`;L8#7OB$a6O#&>()Lj5O"Au^a2AS"q:<b&h\S#TSXGd2><7s8&Ob*U4[l5&:n,7#=3e(E8B[K,(YZPbet,?FFRM2R(\
%[tZg6Dnui,k3.$t<mX)Q08,[[+6J<=Cel!tB.%rj*$[`Zc0!&A)NRN>8%M]?p[2VMZ4dGOCG^e(rb8J.n63_3jeVT98pL*mc8@#p
%`au$O8bQ21K8lG!hZWAGQ3sj7EPL&?MFp%d\qhP4EARj4pFF$&LV!Mm0CF-B8Yu:as,,Nh[e@2[]?Ar>'AE\*HjZPs[Z/&\Q!o_u
%mc2lRLo-Z@6=O.r-smAg9j;(t)2L/+NuT<@X<%`;Jbq"HQ(N)EpsrYn6&,I^%2^G)OT@M]$9RJ+-'/QX*3RL5m^Uch$\:e:"I^%P
%Zt)f\Urg7MO7$m0eAfPpGF>Y*Hrcr#,g8WI4*nD\9ZrsuF*W9An%&g&J-hq/jU,DZ$>aolXR9K#!TVMtp"\XM)FO6!fY]F,WO+pi
%eh$p,MO#Gf7FfF&@Mi>RO`mc443FU6P^\kbJO"7RYc;r^IF<_O;D]uc\9!V9D\,@m$nC0FR>"cF0lu3Y7u,Y;>"`C^Is)?VMHDm4
%ekGg+-LRZ-U\4fs1PBf3gc7jR7#(K\>9d83CSahS*Z]!B)WGt5A&N20r>X[=Bg`p7R+^P*YlE];,*3GSlfUPPOIJbH`.;Gdc^u5_
%s1%"e*0g6DFt/@&B^PEYc_gm1;IJ+,Hl<1#ZFJAOf(mB^-A/mp6aK`R0*m..CWe/!&M^pT&M)kdTY2W1UjSIiC,VgYr5K>2ICsh5
%0Fr;`de^Jt\&Vuo:8X\K\b6+%8'A(6>!e1PP]DHiRE4mCPNThj^4Zt:*h&bD!CkEGga_je'\`Pn(ib'9lCS9>#d^\W3li0.72V^f
%^`l^$TI7tIU9YY2EhB>t9CjtB13>[IbbL6t@e'D5lO<g;mZ,HCns0u-+LOJGb^Wmh]BHA9<R#>+%]c#bbAQS+BWJj+s#^]+U[cI.
%i6):>>2@!?1/c*"a\bG^MUbjqOq$_@gY;O?jnCbcQHF-"ldG*?V;CS/q;4N?:i6\fdqZG>(TCt#?LFM105"[&4JUT5<2e^=;j43g
%YQ`OYBdM8Ur$kt/hG*^>biG[@2>;QrId<=JPuc'EXZUbc^TasQJP"1Em;ck3;W;09\!T[6Z_-?H/O82"j_/c9Y51&'iU_Cd5F7Z<
%7UV0bc>84FkIY'V![,&@%Vs*.9Udk9=S48AW,0BtYa%A^6jT-*`?2kp!eU^U`Y#cokhP%RmZO6Zb&P("IP05e#=!q.ZM<`(nH..-
%q1_&`f1p$9?Sl(BqQt$[QPkUAFE.ooT!C_p:jK5Cau8]O#eA$CHI^hCrml;nRig0.&(S..IB.>d\UT3m&Do*i>YHg@U7?O:HtBIm
%1G#<_RD$BAa'b4*DPmd7d.E&BS-M9V44k#MgM0JBqB^oW^pk<]P2lhZVjl(<%NX&SZD'Biqh:jTX^S8B4EZ-<1>=J.>I>-_;m/se
%Z!$M):eu<`Lm+..MA;hVcW&>`E+SU/<>hnnLJBsOq:KfeKa4S3UG'=IFbHrghlN=-N(^#,O)OeuNi%2&D!Q2Jm$D?C%`Z.:T>O3(
%3+i$g,B=`AWt1\]&oEl,f/V7GQu;&E$mY#NZKC@be4O!&_4!`!<p&r_[WT'DL3Ih8gH+9plPF+PDegk[14!1=8ool-2ZqWm)jY:G
%QX;T=<CY6A27"U;,,M983,B_G'BBq6(i7`@rC/@q&q[hC!oj`[4_D@#:,EJ'7;l;,SroXr?r?D_Sh!n!8Bc8ZkO6IT7:bBeTAEq#
%_gsp&')"fCO]QIof0AmsL)804Q\3.8kgMGuqT:9?=ILE*`(,urdZh8>6SQYQ8DgqmG+.Hgj^I\lR=D3%'8cJ#p"m0mgiuF4Tc*B=
%k4`rIW-eU8X%WS^L;%hc'-oIuBCl:M%f05Kh]<jrcobQ[/+:UO0:dUo#:lZ,`kg]dZ;?8#>;3hdr:O*N?G93-*s]]l;oo6:l6H`r
%65<$LX,<,O\3%oo_u8A]:h;J*XakJjUL)!Lk":.Zm]:2Sc`dl^]b[<Y*],\-\JM&I1#"pcY^;#+rNWH:q.2Eu/_IO&]s?PZ]<L?K
%B5T6(<7loXY'S(cDG>5/a%,T5k@Lb!%Ta%)0*Tur?mG/q*rTcQl,Tj]n6>VmIWF<7n+[AN%^bh4D!o-"EpaCLJ#'d:gXcds'>9O'
%bekOWDjFl:=QElVGE"YcS,Hr!d$<1/jX3:jNSu\X>MnOpe(kdV[A36kmXF2*X7Q8NAB]r:N0qlWG1k;_6d=G&RV??_^uCj+_Llu@
%AjUGuh&#16h=26df561ocC8_85QWjm]qT$`0/C2t\CttiU3&LV/"=d!Jd*oHf%H4E9RVT'G&jqIBe*$6JcQf=D8A8;Emt*/brT'L
%OVoQa_)cYDaG:?B2Bq?O8Mk<eV.,Z&.X/jeZU/o\jU7W;ZYDK:8fSS_UTCZs=Im,>lH/e,r5\JTY;1B;TC:n:gGF*+.d)BuZ$Ms6
%4^_bC(fRg8_Ng+7B$q_;+kLP/2\UJ@7^-3WL-&n&o>;I+)*q](j1,,9Re40C)J2>A("_#a\/lq(\A3.IbB6p)QTd/Yb1]M@e!;2*
%!)5uT#A;qei\&S7ri"r09Z8fmVsu:ie,7rr;6ZU^_p>2Y?,g]kHcQpmjt!%t8[HiHl:#a'fRH7Fj<F+/R`4aXi.mh&/uEX%ic:C%
%kJHo:pT#N&LV?VXo:d>[$;kX0Q:E]/\_R)je[M0"YZg8"^7D6#p`!rr<1S>VdOfTFD>hJ?U,a;<Xjlr+"e72'-&*c[ghlCd:CE]5
%g0VWCB*<^)p9j-Lrn-StW@)QiIrb8Qe77)*7qWo>]o-Bp-"fG1UP]!>m(5G1>]09*e.\&2T:C<loa&b`Sp_ElXmPHg_-^tkdg')l
%3V:1591D`;Cg#')mlU0n<@MS)1Qf!kTqNf8KEPrM<?([M@T6@D_Tt,5Kh_BEl;htS,\\BO)j"p-]A['bf1)^GSZ=.?Wo22cLrpS(
%Zd$b4>`EIbUS)r2Yi[mFeK(Nkj78_IR>C+]\A)qtj>M=59dC,k6&<Z+i=_F=]nj21pV\<$X;lt&$Be*i5D/0^.!C?!a"Pn##Xs*3
%Z5B=FR9kN_,MX)!0/U.5;VDEDFj<c+89PYQ4D8ZjPj^'>M`@*=$as/*jaj)+DRecu"a)\/K@nJJL,SOcijkJ(!NMJ[6@AX:bEcf!
%hS[3&8WW^,B53$E#S/B4MLje!]3;Q?'&EK"_<VIp`R-$WOn$`Andbk:Kp\PaZsTD2a`r&2j'hq/0&o6ApM!0PKVs[Z<o&A-+JJG[
%IDna-r<E!eNJH"o+Wc6i.O=(I^Zngao9Ug-#o"jQoMSE,@Q]J$R@b=I.]1L@-k_1nDbgdVdni_@,PU%lX?uD1.6]jCGjr2O0:shP
%+lHEFEbF;,Y##cF3>T(9Y\_3C"(].Q"BT:>)@5"L$T9qe.t_G;>+lTAmIFM^NMqL&NPO0V,dqG83">1YNjO&/Zq6crc.WF.>ci)-
%+qLa<$@u?_NAWDZE7gloV_\sGkSis;)jp;g?TesK)c6hr,3CQVIbI%;GHNkkL0#\'0PAr:6(6glGR)kX>9GE;-7lAZP$?'iRr6f;
%9,^p;TMfZS../tG?-i[>>;"uqdd4sgF2re:de%D?$,nL,a7N=T;k!<c+'X=hoTU-O<ZQuF"2_XIo770?G!\W30lc`hX2b`G9-Ma'
%j=m:<;Z0n*AjDeZg("ueGa2$c9j1Ya["PA@=g1WSDFOaV,*.b@BcGurhk[MTL(pgRG2b,h_P#H"1R6)BrLADCa[MrP<^8HPg*KWZ
%8C[OQK:g*%ZO@%()YAk)V+#.P!2[&$S?rOom0G-eG8Fnb+U^:!S`uP<'05SJJgU5#Ys'_*J4Zi'8h"9t"9]`X0@;99&5uXDMn>`(
%kgU4"F"qmFM,QP3BZ:9O.L\>L`%\sHh/8"Hf+>r0U>PD,Q63/gISFIB5"ZHcBTo`jjANB*Y_OJdO#%5J)"GGjdj(ZpGVnX'WgRA%
%mNCpR<+0Q-o0J'IVR85K#=*.^7k?a5M!=X.WPj4tD:]qA/<+7!HRK"@nOI>a\GqCn]7:+:D&P*UV\k"n1rB-g7WXl/hJkmO\,_@'
%"+pREqhVH=`<8aK,;g!PS2@j:;O!>hijqq@mCcc0HjkR3+jejo.CUhk)Xkr:OA%:%U`,pUC@6Rb()^^q;-2d2,Pr`4#nE7bgPY.3
%h0hhsq/?QDOq8CYMChYPqm09JYnIZi#5U6gDFrX?WuOFtAhDS\\?%uFQm;gE(<##9fEHG6!oM*o$[a<W/n<u5Tq?t-:p,jhY`(m5
%A0L`M"*$7*+f(Up\F:Pue.L2J*f"lq4'h@r@Asij9EReihUXuL?$BHGbK3&A_,:t64o)1;L!s*Ek=Ud-%N@D`RSXh6mK?Jn##3+>
%Z.04lcmM#rc:@H!9Y;6.+7ZnG2/Ih8FXMW=^0jXQAgJtNR(VYN`ce>\K5d1++lt?>;NR^1@#7te*Yp+tB!ldn'FVb$$")R]B$ej:
%A?om70ZfJrUg3gIjtt8;ZJR'X&a.,HrMDFVdR"d+%:"Gs*G:4nPfu]]Asaa[!2UlD2h@ar74)<@(+r3Tjl;*iMO`ZIeBr/Xcn=KJ
%=4cP3rV8nH%*fn<-hu?AIMfE11:Eqs0\H^C"(2NnM"q:\&$bCgFUgCa>_HsA,YYPs/M!nYgO7:/aG@BjSWh.[CA@MlN<eb%2s-"U
%5&S(FKss@Rb#16kA;HWeZL+Sc1lI^0B*OrNJLLj9'NO#+$SVk:6Q/^_#XJ7/&EP0Fr/pRtW0e2l7mrc.LP5RhBH+u@=-T7'M@k\X
%>0`@Q:TW9=C=Nm?ab(7k:'0uQ"Z[#hYci^\r&:fE#LN3u4[=lV5-iuEmWL[FHnLMtAR*555-mX"&0#!855aSPKfrl1+QcKZj#eE4
%gSWSHF8kBu0r%>.(fbl3o!OZU&M]@8]F]>1SH)IG;3ShJ;"8-I,cN"t70AkR-4\3tbtJfDTSeShS2<3<h]fM(IUV5f_DZ*Zk574W
%a2;qAK:)8nA/pXkpVWVeEH$jA'6F/CN.]F^fU/"gEC*"t16+kIq8o43`dqZ1Fu#():C^%LB>R+jn2:;P5VMu$b!]eAkBG?PIoo):
%V@5`*S/f/%U<OU"l:5@E%iHoQW@%u!/abVnPls[e%+Pt&SR_oJL9e`a&><[^^mV&6#n$r]Mm*oMU^;ZdrWcqVSp_l=K_[002,0ed
%%gqO\ZUgmY\'DLB7?5[pi=KJdp?^ES-^DF;I'%L9#cUCYI-380,Shkt1798a=iq%h:I1lGpb*_.Si=`tl;JNX('burTh:D/N;L`2
%mnCC!b(W4\.rsM6EZ00@qO<q!G=0>VHF>)3">qNo;E:HbY6pT8eMPTS85:p0SbbmK1!!+W,UjdRMSe0*DGhlI-1T;897.(ZVt_38
%9B(-'F=_@-=`ln66i%>D8FaME!j*5skV6TN2M*14rH+Q[.u\JBYSc\OSK(B2JR!Y"?8ojAXLTo+0X[7fp,C5"GlP)RkADm@XhXRa
%>D_R,q#OKI%Q+f5a.,uJ:2$C5;ZW<JT[TdeALEuBr#'k:5[G\#Em`Zi^ka-8P\tUM@@ZcqZ2_^l?$\2!C+ienb"TSG"'QF&n^php
%HX!U%`ue%3CK3DuT[o/I3Mf_P94BB2,A^5HkeUp4fANL`>@4.>Bk9fS6&5r/R#$dGCRE1!e[2XVqa+[e\NmMa6OTp+?0%"e8jq,p
%Lhp)<Z\SUFL3'q+\>/<T!E2%@^g^kjAPL?X&s8dsk16Y<@7i=j=3IRD!DCtc@n>'\&BE@q=qRB2K6FY?eVY6#NFQ9a[3BVE-E7d^
%A#<OG<NE?$[=X'OLXdATG)Ya-n.GIpb=6#Z%C6nH`cZ$nMIl&`F3pQe&N05orDA:FF_2@>EaT):`CI=)70iKsn91T=3D9uU<[mfa
%-\j\Y-l&O8ePb;=qB6RYof=+&`$^=2]Vt:eW`C7Q_p9^Z>_msdGF@nfK6<@R88:&%NiojhD'"?Q@-ad!Uo\kL&LRsJ23B:cj_HfY
%"e:/N_7qGhSU;\X;_U'JH)sIAjne.k:t`TIr>2D0eVq!.*l"jb#Pd,SO,J.P>-Umnptf8:C'EUiXT`tfeZ.1?W3^ps%cU>32HqGj
%@B,L`1$W[8l\T<$5/&3l%a-%e4c\JU^]]3Kj#SZ:5EPOTgR@PcDY>Dt,2NoOW:5dbG.lk<mqZl"R]5)<eB*!t]1)'=VGT&[@<K"'
%]3c/Yj&$''/nR2-72?mO[UUW:XI8H0KjDB:gp.q;VU&T&;%-`rB&mPO,So8*/tGNp8-MZH[,F(#%b<cPjrH$Ld5(Yul[\j\D]b0Y
%<6]8A)3AZPcn%=<+C/@K!,H@W,#2,E>`M$64[2TmlX&uo09:L%\KfqrE(NdI6c-)E-sJ3;>3&Ag?*RJ><n=W?nqFJpb1=_(Q>Gcj
%<OT7:?:*,XURC41p<&\tV?NBq_cfdX1i"clBLj-0jp9/DVWIVha8HU9qsu=,l?%$!jo50M0bEqP#CP2(>/f_V[7=>,,>T?NmGI;a
%>-$)A?Qk!!FiYSiVT6^JX%W[9\nWT]QM]4[&XIdG8o95dI"W6'i$0fI8sZR9\2hEHY@LM%k3`Mu]okg+:R=RRmZf=G!S9hDm\Lr$
%8L$"9*]ZC#dRlU+7FDZ1^`pg=BjAKB=j?T?ogh.cS6+N9cWX6#J_B3#--HD<7!<mBl+u&nlZW@aO3b*la!nJc1sF&gFUW+NN'&qo
%:p#(Y9J\^VU>b[2MM?a;`Cl]s*Jlo//3[9bJ(t,Y#<A:"X/Kq[:lb#=clUM5Bng(bl1,QH!StR8^)BC'3"0l^lNZ]$)`=+jb#GZP
%:7\Ad`-0R]8'[r'AKm6kS"g!iZ:Ik<6;;7e-pUNRBp#`PqC75`c$6<+51iA/kWsmWbeUZS0\^NuRYm/JHIch'<q@MiYj&8GPH(IN
%[2pX;o@K#9Sn1m,Zi`d<#NMub(hApr<mt'KW&>*mHn`e"[;N@l9'=;(C&="O7_?C[>.F_<k$VeH.05eXi*HKPV$)fScCGuFkHMh[
%8U5+H.ME(DiV<,VX#n5UNV*q7*2jGh\KnB6jiV[23KnIHM2-.2S^ZcZZk/%>;,>'\8.YP:n2RC)pMlCF$'A0f[@<oakR(\$JV4TA
%a/8Pd32]"+q.1F`XaC>H2Gt:H`T%=M]@9GQ,g)Xj>\K/#MW_6Nq\*tT\*5'H<M8rj?c+nbKt#+k$?u,=`O@JZAH,/VGYn`mO#(Ad
%']NZ"4AsZmH)s<Rh2aQ2D[ak06G,=7'im%-PBF4-4;4f8a8Yt7"/E,V>tM:*Gp_K?1NukY1E)I@_ET<l.)HCXCb4\9eZCcdk"\Z"
%$+Q=7G_8+gGuKRd2.Ubdmd=If[<V5XGk_?fr9\[U_sWV^b#<0so,_X$I%,lsmoe1IX>+h]6lBQ5`d5mI*DF%Q2*1o0NW(b,K/k2o
%4I(VEiH5Y]KsM`FLQZe+\D>f_UFl5SW9,NEePY0"6a>#(gksih5,50Z=G[>M`rfMH"t<UKQEZsEE0'9RbfbM1dC03nbl>5Kn!+>;
%.PnZ$ZOP^r_WK-%W4K%!M_#Sgfn9'\*CO<>8[52lWIlVC<TloF4c$\q,PC+ACN9td_Y;-nb)cXZa(9/qm;9nZ'[ndaoZ\ET]RhjA
%CJ3G[q]IE%='h=&Mi!uF2G1hj_q./Za9>Im]K+am&lr1C5&u,&$hJ)*Dj[@6P(gUokJVDBeVGp-gaYb\2'NP=`t%b<]9/\LOCAf/
%]75(sErYI]h:s)>MT-\/ip[>I]fO]5F@qb>Uq3)Qe8A:%g`Fo.:"k5g#ZIML-Jm7H6JtG:K"FTJ&T8@"`BPj/:kH,7fD+GPm?J*u
%[4<X(IhqtGC1uNqU'Ptl+&r']`=:O/gF)k8C!H63^;Od22ObOe<VZ[t)+c88S+[Ln1A8;RRO'8cqe-0#B,I[f'SQ$"QWi`slm(.f
%b%C6G+-cTHitK?Tj:;fGkoFM)@t"R.$e;et)`WUg9UeSlbr/-M;=/4PYb+1OiK'ZSd^Dd$1>Eq[Rmr9:Y^nI(P5.rqNd&rkYuhId
%&e[0X)qg6mEefYKHm?magdY%(#YH7FhOPbq@(QFN,2fk-6?rI1OSe;!)@/[m179gZY[R\MWAPQ*,&hP=@5.!ULtFlsAJ3Z`\7g6M
%%=V&)YkEdAPQ#5\"E$Xg,9R?Gr\7clBuOm'Yc)pBjIs[h>]D1dlj4WBefPG8eS/C]6,'CM#Xh[,=6EZ'3Jeec61ocZ4o#DdLE`JN
%jKs`f'bD[5a@CCt#m]n?H8(95P@_0iSH[EpY6<1W)AVTi^t4%K-aKP$</NVQKAF4U0.aqNeM1.BP*Ro?$$6q6[mD2P9UIN3,OFM%
%[pI,F5ru_'<\Ylc09Qana&U&DH;/d(TX`Gg'Y._&R`$#oiGEFrXU:?,5tA@0lXhCKnJ"OSX46+65-Ygf--e#g4aE4P_lqMjpMh*6
%6R(.TWR6f$&P;#$Jgt$.c\[G<VocpR1fN',fAf"+"moC-m_]!B`d=FoJK#a;anYnpGgAXrPp+gJmu:ebA=Sq'q&QG0AK_7iYrEGL
%/Jg]9r=k)>o_#Hk:B/SCb5>/tT1WcKI<2^JRg*ZL];aQXH=A%T4(@/"GD+4qR+^Q>-Fb):i1@fCEdG][1UE1_m\</,q&[rd^+7,Q
%+3lc"_V:9A"9T1QC6hIY-.$B];;L;B<rn;pEQE?u&R;;en9'A:f%\"ACA]rm^2-fq?'I'srT"00kW;)a3k<H.DWa1?e$0YnY.[JJ
%(EI:B\bQoo7E8T]ZG8N3MiP4/]Xue8?$*.ORt_o&QgjRd<.V8k1mGV&4%ZKmXI77N(EI9GMB(s@/uA^"qRMM\n^cZ@kqjeA:RSi1
%8T[@A>c#2b)Y&H!2TL%,k?31lWY!6GCZMQH4<?bhq,pX+=/P`tUsUX<E[\Z/-^6:'F3K!h_V?'ea_0&!B2o<$W4*kbS=jOjo(gO&
%b0rZRP,mq,"\\+!(_s;F(8JAY'1ZUa(;ll"Q=M_iM`97OYej:a+dUjt=H$k-QI:]XW,0:Z+tKmbLi,%]2j4'aZ[CpbF0_C$E"<7-
%?W.BDV(kKRhZQ7r`fOhB]iqfl(>cb=RNPKZgk$=FqGD$([=!^]W:LARfnlNGBiM9:6>_tU1\BQ!pBuAcSO(K[*c[:26!;*<e<@ZX
%]nCF_GDa9W5fTcGc,b6hcbpDCam[&Oj8:B5`G2<bjWZa`pC7\<jC9Cck?,0J=E,T'HL&]s(*:^uk?)U3YsR+%o'j:A"HqGoX)fgn
%LKHeCbFN.R3lIbJ`?sbMmHO12A$e/$*]KIZ27kHo`OUR3f^@>A_e1ZeTlu!K/2<Z&f`gsbU5*D_]FRXsi3O/peh/N@jLBrX`si6Z
%>[j5PO3L%feNhV]o-2E1;oNObCZ&FYAWoe*kG[m3KGdS.SaS'#PqN??Te@%K.Ia%'e00%+j\sr)Bj0MVq=-1ZO/=W>!?SKnXpXuH
%6o_6Ia1b"d,R-[I;M<_nmtlaHY!M&,/&>anGd#nnS&J:)a$=JqV#0jUjE?]G3Hp>#Y2(1^.iZ<N\VlKU0Tfl$gdT7ek[F#8\VlKU
%aG4)O2J,83#S(XuCjGFml2CGA#((RM":(%l<cS->GL<Z2&%OE,mG(.N>!.mXA/XeJ5tEss2rQA8Yk<aY2OGE>empr8UX[8CGnnP>
%Zj)hln5f"DK_PH*ZkB^<RfXUW66qi=5ti!ffoX,HYE*o7Y2h?r=U<*9Mi^jaVM.L0*fTEPNKq!BDS-Qa`=%Hmir6cu.%Eh8EDcX4
%@8XPhFSG]c@8SedZ"Gfdnpo9'E5(7TFa4bo2)hb,p'mbSRm@5$nDL-hLi!=\\QL#40ka/2Uq.%)a^.W'Aa!,/-$q3Mqa2#c$/u4'
%W=0^5G#"q`60apH_YNiB;GeW@/)%0c,rjRQCUGE3fefakCo`_)GPJ$*6DcS$7HjlZh(7l$UKX84\_,F"EHh_$k@0Vnj&%3ph^aI/
%ZsTP@&#pV'9]?]SgoNFk_(73i=?.p"'BkfhKdLJGcF95IE<+Qk9G<&X("GaW=?a*l3''QtS$g4C;Oc`c,fpP#UM4K/'[.j2B'>D3
%MC&$+AhkEU`j)P/!$u)o5qMI#dV:3<]+KZTpeco</^KZcB8XHg&e"/n3_i(of[NWH4"^can/4-'JRe-#s2o':)3qde\8*[<M"jZE
%LufMJ*;Mup<bW\l"BEhPID[B@Yo>?G7%Vd0@Tpi/U#4EsHPI<kn/'DXItGWV6D$B@VO4St1&m7J'?`d.BkL2oLmCXfJ_cc<FY$"1
%.&(-)$@acn/7'-N;>:OJ4]c#GIKp'aC596.0cZqG)]W'"2mShFLc.Q_'B1ujR+]`T@LdtoO=tWE5<-caNr:*WF1Esl:*._<8L3q,
%:]TCd,",$K+h0VOf6=k:*"g.1bo0-mg<VVjCCC9NZ9cK]2+D.W?^DI:-Gk#sFWlZG%&-U</4qm`@a%4WICR-tZe/qSn,F5_;>:Na
%3nGUqpau(MH^lA-$A-HS:Wm3(k92$n"IUNMYgT,e6l<dWes/hD16$rWak,c<PJfh5kg\N@)t.psj>m62_"hNbijt8f([(92WS6X<
%<]dWI/ckWZ>f.NaM]<=,MC3l+^"RalM':CE%`p.O,g%rq-^[t$+SVH=)!$jE;:VZmTd"k*?nYs,dt0G_bQ>0[/.otj.V:tf9E_5\
%fH1E];B5V$\,Mh`.J.d$%gcWMank>=oF"o3IARlT]8URo?JRHeHlcMGAXLB3NG/Ss2d1^]U,lgG-t:)GV-QRXD7?V>f7E0&02M>n
%?Pe+0;LnW."GQTmqi.TJpLX2d1<;7$$ZA"b=EbCW;=?Z(S-&Yd<[qV1Grn!9eARFR<'2PES>HNb@cfMuCYh"'pH*:'a'eJ/aInPV
%Ls`]X13^CoCKb<7qd]2U552rM#>D9qQXg3gOt=W3l&ne:>;(n3p^7/pLLW%.JCQ!sj]Ka]Y637W_>GF^R($GW"/_jr(8L@8".45:
%(ko_48mCS2ajoVg2Pr$J^ndJQn_qp+,eT$OQe9N_jZNpaII`iIb[rWP>9,CDOf[`H,:VdA>'IabWG*94(:4JnA!4M_#$C&g"rRZD
%9-+_+rF]5k_I&*![EJZ8X4&AU.W*Hl_n:+9$jQ;N=H$:6nYko6E5?#;'3D))*ppX<W4M?s;\fu\1q4(r8brD>X'A\L_o$-89-#]@
%[<!E;Kudc)0<s3CFhMp\8$@H1&u;_*;Q$M&"GsE^)6n/8h'6B@\Igj!R3\B6.Nm!@#9NEA=neHodjpspUY]q?c=.LeJjk^m8hjp%
%$o:5Q;2R(A@1\fK9/1$&$o)iaAMMW=*dGUf:!u,^J\NTGk^37IS;@kqde>_l6uL*KC`F1p?7ElfK^m-/e^l.eR!IUua[RMokQ2oM
%k^u9p-);dAJ]L\KM=hJd7H&*4RDCn6&HhSEBl[N[)Sk!#Z#`g9[83rNl!.8n"Z\0!,9TlnND%J=@4@<l;*6gr;@7,*PVd%$9?'5;
%mrsD?IEj@fm^[Af[:KhD!ld(^qYt'o4e)*oOtGY]*MNLPKPT72]68$i>6oeAV=@"l!Q#h-RYD&\OCI@$RG\!EB!*sj7fk]JBBHmI
%j*#C-o#]+`b@P7q;pXr2#Ys,;MeD8QpehC)RjU=@h%K^>40Lu&pukogB5XoV4Q3EYo\3ZhL@:%rCBQ9OQ]C*Lru/o+U<gk5/<=r=
%qOpE^\PIRp8"h!_7As^F$?,[^'0Zc"Ok&3u)D7P+Ru]%A2jQ7h#H_7ofAEB&Nn)=bY7u7H5po:fGs=uOrM;lqWOW6-B5cCIe%^[B
%%?D#rV_c(cQDaFR][,_m;`7K6;l!M*f=t7Ik1-s)*fitSanp:rIDA88Ofo8g$2]pX=8M@&8%;dl(_/,\gO:Ka=o6O7affm7OCNOR
%2d)a9nsPh?nW'cu?[Z,s`F%$=E$p9WnF?CDa1GPO]$:QQ1O!3:pr*-Th,hn0=$+bBYNbneGHUI>/(NQnFeh-LSsn%/Q^+.]9o8HC
%J%B\!eB?FOU[)p_8BnI5`G8O(:-3rIg%q?8H#CRb#@-+GeX=PY1+tGm&]g2D]^s"jFT"+qDjq##T07G_DeXNBRSuS/B7Cqn9`Xcu
%]Bu1NJ9bi#+r0sX]S)d[F5>7:f3L^lqZ!p,XWBKQH"cieU&(sZ?[^pojk%[Cf<NEUhb3EcoRTLcD!%,h0Fs.L,SkW*!R*p+QYPY#
%"u$RE?5C6Uk(i-']hY'i?L7e2l+2/[q="CHr7t$1m#.du`[!'(0@WMB5JPn_r6"K7$XfS*Eo:k#plA\jHmF5fB_6?3).!gNnu7C6
%0?='!\K$tXM14h/%`pn#5?!''g4&2U3`:J'hXLKa_`RDng-=_AIe^s1DsTgD4M)Pa,rE/Z_e)K+j`nl6$9[19Hn!k(nmiP^*]nD]
%7"7S.?%nA8s*1[>L;2QZeD)<X);\tr])@#_Ck0'C*I3tbDesQ2ZeV2ee)P]Dm-Rm'NSUgl7ATCe>&&P+p!"#ONYbSQZjH=!b;Y/7
%:V8Z2.3.\SJ,1s_J"5<]pS[sY>OH<%qQJ^qpP=+YVqlB+ftkFHbFQXecYgq^a_k0uZSU^h\(mO'^olOR/tkD"0E(D5"h]k?rS9Lo
%rcJ%,DJjR_!KV4""^CDTFna\j79f2)_r\cWDgM=5GMdmmr"@hiH)$9_NlcVN)dN^E#2erp1]l)%mOl2:0@MMjDs<H[BA_(smVnTf
%b$UuhUZfP_hd7J>^\Ra9^[J=oH()3@*d+a!h4H%[ec3If]h``ri2O3Z52,7Ps5_bfVa!=`o'*UVSpnK+hM(FMYG:hU4[KY@.C]"7
%C(A7-VYgUq#<W59l0cSa_t6UOmH;+N-Ja/##F"B(qUP,:48EaXD"s.Jo<2h$K\g:QEpNJcl2&YS?-u_#&-:=1me@NC_jfQ<S_=A5
%JX97(8,K(YW1M7F<7Ggbn33iW:HT]m1+M_@T()R1a1.)nBHDJE^hoN9I2S;fLAd$Jdo=38ff[AnRcbaf^:Rn"F!8&SlJ0cg[ngkK
%4e,Y.@&MZ%rG2%Ea:7!Aq?ZiO2.iHQ@gE"]!O\CeII,nW(Dfk3_>V%]?BH+_Yf<m'3.@8:[sm7F#IL1KmNtPKErPgeCS&:^rC@'3
%MY>)=Hi"oLE4K45!o\71"X1INQ_1I,NB:"MMea8X^VB^4lf6Ond@7f/RVZ90+6_tl2tV937Jp.]DrY0KDa(^1bre]Qk"udH[e0O.
%\X:EAZ">dfSr7mD7*IC"biFV%0oqdm72:'1>YGS8?[gKm9F*X8(K5g4VTZs.Omed_l,J&7bq9h(W/6loZ?b51bbHLoNp.">ImlT^
%M&<5o-gpQ#Oftr!aMiNfaE*P>5LY)!-5JW3mWlD(q[N00)N/"lT^M*YpZ]Zeb3'St^ns.gaILCpmblQ0r""i"b&hXI0q;[%etGbR
%`uMuKMLY0H]s8RLlpI2D(HeR5'0YAPVMeraRD1#3l/EOtSrXr84R!6;o$QaK+*94s9a5^>s-TKR(WRN5V/ssDPj.1p2Lp*sThH9C
%*;eKKNuH0fq#K.'5J27uPSn@8NpAIfoj%B)$H4a@g!JEJj0+GL^[ok(LGIcCqrUfLD7GJ!nY:dn>o[qPl)k;Y3bLC/84W4+^"3T%
%NnA^NaX;K7LX&_3\,*u@$gn+42>V-TkX7AIT%,OQMr3:&Z%%hHA?XhhM>GOs?phauST3[.l5OAdcl-9iF(`6MkGrFl9E4iLf)ncq
%S#]oI*r<g#rJ1!Br#aA;gZL6Z5O`LVibN3)hn3"?J%2ops7#.KgTTj+]J]IK7/OC0PSLK3qYFtAWr!TSlh0/<Sb7K2hsfcH'mo8:
%G/*JU2#*]g05UZ[-tajR<r2O`Mo\:mSDQO_Ro$lu2;tuspWm"tekknr#o`3ghhb;A[qXcFIlRDlM(??g%Fk;'oH)lc4@obBgh55R
%\FAI<R?C?jQK[CMrf0-JhqaYUrq,0-=3k\1DeiG?IB)Y"eipM/7&uVp&(RCQgdb=#4QpsJjl4PLSP/:8G>:[NEUq\9a3g2:qgA#n
%ktaM=3koXm_Uh\P:YrkXUOM)rc?OKp4i2m>jGR9RogY**J*$0*eG^s_h&PrlpHQDEIG358hgAu9eCF*W9KHe5n^Xbn8EHro%hmu)
%5J8qqcYEL_j^4YXoUkEoXYI?WouhRYAcFH(MZB5b".S#`>kYhZlTae)T"=RNiV.81bj?W/DhYISqBc$2DLqEPr8RZ6kW)$gr1uLa
%6SCVt1+LnLB#]=+q;qpGbE2UGJ#RYTh9-mgH0raMcQ-?gi1ht)IeDI%YC.%Dr4`,N>6Q)D\3TG=DV)/\a62_Qo\=dHnUl5=-3(.(
%l0e$<)R;ahdkBLmC6JJ%?T;^o2.3sC?'4e>og^)7dN@$.obo^6*J_cOiSTgd8OjhoTR;8RD0WidrW$6u]o2ncB83%nerTO%FG]WH
%h61e/p/X:=`'!DG)s;tOgGc)?hqW5-T]A7[cBQMdnrF0ne;3bV]?0r<DT\mdh`2]5ifjMJfNGJ/rR^Z(kg0)ilc1q:J,SCRWWI==
%]MlT6oacXphQSV`d4bO#L8Jb>VLu1Mn_i1-pOE&-[s*?!iU.4@+4Lf"j^Wd%GNk*ODZ5%HQYX?apYA?srQfglIQ>'Us6f&s#NlWC
%?2F'])fLu:b'/WUh"g@<,Jr'5F`(hW!K$OJYS@7#HZA0EmJ;l&T)[`6Dm"IPI!2c%G;u"/]Q3r:\\D&d*C"uB`s]p`^2n'OIcd7e
%r0(G8g`8V-s87Ymcb05@Q/cM4[n#-'&nA]oWD!#3CY@UVE;&U5^T='giD(2P+2`/%Qd5O*c9GW^F8PoF\T-Slh6gU-9cma@m>G19
%%8K.bkh7PR?9.)sV_Ft?K+\]#,%4*A^:\W]c]nA!?_8B(oC;4Kebr9-4auDW2pW)RJ'e5.I/N?-r*C]KdVX<(n`')F5JR6;n^E9*
%NE.V,k;+.n&%#@)08g'1gFf>;1`kT;'h@T)-6@sFc]c<M[3IbWrT;2M[MnGggS!K<bGRqm%$iI%HfM3r-NEB1.5[IehV,4KK)bR/
%)!H[WK_G?#VkUZ/S"Fn&L*p?\S^ba=NAHa@3H[?q%'+O-e]-t5h*1Z5jaSo7hShc.5LDm\qlg`.*fX3c+.R\>^12?aq[$6Y*$-dq
%r;,tKf/J2mo[0M-5N,X#^AdpWMK0:9*.DWIfLOUEg"3Kj^O=;ca)<XFrUp>bR%BGRV>O]X4SSAKr\)IPS^B#=]KfFHe:fjV^JMZ%
%hOV45@,UqPk)NJIP7;nPD<?;U2S@5:^muR^)9n^jX88<m=J5\;GLD3$>I1U1[W^BVDJ6KBf%DS:^:E`r/M6t&Rhb-BilRPZIpRFu
%p\<I$pd2'HpHGK<eB_'a]6$[Elfo;d3%b.F4MQ)!1T'u"kg"3aJ)dFWhnSqJXb"61iRL^O5J%-#S<ouVd<hucb]7`-i8X=ejnlI?
%rU/,bcel9/)6_4j?N8s4o3]6/bDE9l]`.Uh?9e87DstA_mbW!EorH!uUR,o4p%-/g5CNIo(RK"ja1mW"8rjR_kY@L8NE)Q(:r,no
%7ugT@0Mp`9]Z5h.ShNu$L:\cR2-0O:5XgIYbM8)%)'8)s<=N*iXp/&$r(\)[?atEOEiU;;j#p@a7/d*O]<CKN/^s;9XKqZ\Ye1j6
%fJ7XJhML,aa*U<u9W,&^VAklq_jqTn^@L#sYP`Dj/kg6$nA<kf:LhpWSeXAmI?m$*WS$e>nJ>P^iJQn[I-HHIf?]9`<fjJ4H9Hsm
%Qh5O.dJ*%#H1UFBRod.ldmHVA\Rd2_n\5h9m'h%#]_h;7T;h</`MNeNlfmIH'T3rtgEeMc]`3M*Fr]ZFC-)/>rS-r7D_M-4o:>CH
%A6^6LpV2/gjKO?ns6$B54ur:1D)\AreUL+Op65O8jG?r&s2dKa*F7WEaQpH&<g'*3YN9^fOk&W&p$geHBl2umEp'd+JGAn"52)pT
%IlV_\WdO5LrL0@,cC]urT(r#5&&+,W.arP1-n[+!*Xd@Ng[R@aGMhTP5lYdRIY?u]r!5NQ?hGYVQM%J;I"rLk*<03W_fX2="*sO6
%Ig>Cbro><:HN(sWocp!$2=U<$S@.ecX8Eu7/Fbeaj<M<X:Rf/uj8KW=\=J*Kr$D4MIo%"h4oaA%eF2!b^1e\J`g==#rcM.(!d>kZ
%.YHk,.&m)frKcWq6RpT<F[3dX^,tj]"ipD/W^#*$Dp:J"'?B1FO],')1+4>2rPqZ0oDE)Bhk*,Qk,H(,SHR$XrFq)#2=2I$$)mt:
%drG!W\L4I^:iQ<>JJE-rp-^rTL$=9"o07-R(^Tt]:?2/l8(I-;"l$^h:YFDtoPjYX:->U]<&7$."tqt6M2pf<&Ht,BfrdkgoSb*e
%c%U@H8,iFa<2'j`U&<R9Rs4_@%Q]%5'Q$65)*QnN<&9Rt%.X]+ddd3Uf5J=)3gSr)IK!IMGEBH9qS,fmmb5ERph7kBZkq`f./MM9
%VuF'#r=Q7!2c#):W3'cpqJCI7rc+rb2:L1.lZ]8@U-)boXheaZ9=/t.16EM/]QW`5gML0DDOeBu4;Ettb?O4>2=48qrf'uD)#qO2
%h_(KnVVoI9Dg1e>1J$!KaIcP95B>c<];JFhe-R(i+6EfMr0e\1C3<:5RDTilZVT-F&'qtqqr=m%KCg7/@Y`.g-gH5,.R'aDFXEa;
%d,s"VN_e$07Xq=]_ekr4^AYB4cbAsLbNXrRr?TK!9d"oY)fegM:/J^U*;S=e4mY2ge%LnNUHKL%;h/44P?kin-Z<7gIpV!rc`WhF
%Xm\WIU]14a?\R%62c%GCg[<a@gmb5%5J2.8d/N!?r.j%mGP2R1g8XStBI8F_WuWaf7Gg*?Z(!,T<CQAHM>qO=\mtcEj2hjT'XG5:
%c(1lr4%WANeFj/n5:Wj2J\LUMB<XMn_Km90MDK1o^(75S<%ZrkL\8Vfhk2XsI_mbp^WB(o(3ohqo:.h:D9GIrS3/l1jnU<PS+b.'
%7pW<5cMmN1<o_:@f.K1Zap71+[,&juhg4DJbtdBgV%<%0nAEd\GM]+-b=B[TEQf5KFusIcqe1lQMm'9a?TpKNAM[Y<s"a6^T:F@7
%nB!rY#&&2U8^aE_-[Z9[(](=Os##XbX"Wq.qWFue=E?Ucd_?Nh>e2ekU0B'!0oi^ps*6-8J%5(0$cqo:poiA6MT[4tkFU?#bIP@Q
%-8+Y6))=YVV3CArGQ"iHcY&kH^>[7Gs"u]-&bLN/XdOZ!4i!ieYC6B>B:#fl/gmi.]DD6A@G@FB:pf7#O)q2Zj*su:ipDffOfib-
%3j/Imrl.*bjR,cKHKEbUBDPG*:hah>DuR8pVnI9Ig^gT9H]htk[qa[p(u=(nn#[BOD,mJVTD/5Jj<&9Sp-o"8q%Q<ccH^\ok"CH`
%^!kDdWRG4K_n:6iXJGF$r;G@l?iTB$T<GYnfO3C@45Bs/^OrU5guW_N7'XAZd)FL@CPNCX4/EkK+>J->h19XGq1Y1(?;fmt!5dJo
%J#B\D\pBH='Yh6Uo:<C[8@rjlo\k#gmf1ERo2i,FGP?lbhtlKM^8i8k3fs@\lMo93Y1l5\bJ?0aooGNf\%Y$![hC<@OA6k076.NS
%c<^;6hN]/mn,;b!cenZo?O,a3qt09bDSC,Pi;A-sIoW=P4ucDf)SW62oq,"M6KVA1kuYq)2B5trs7u;:*;`qlK7D@"M]3E.0DauV
%otUK+Z2\g*L4crG56#X_\9"bNis3X(2@aGfQXMqB[_1AGEBU7_A$5jfJj0Dm:[;n(LRCF)q#eJ.o,>JoEpR_0oD?T-[N1ktH1:&G
%jP%6<5Os:gdPk^/EnX7JOq7,hm$9bMjHG-nah)!,imTsWns%=M62UIR&(4Usn&b>0m_PCR_7pJ7?/?(jLOPor?-[hBlu/fiX"T<W
%H(aC,.f>AJ^[aA0Ie[QmH!+o+D@+1tT<$:2faVLl/iU$h:JHZ1ol+l1f&pb<Sn]qYq9AoN2h&L4h>\`C:C$&H]_BTfs(08rE/oBp
%l0!CXI.Pethu*JkcZcYR:I""LI>f]PSR[.RZq<KQc2;fE4'PTh+#JZe.aU/7]5]=ff.sH']G9/FlSNdj"ua=re8m4cAa?]bfW(R1
%h7Us9-Z!0<]^;T'otgnsTO'0`=2qMG(CiXEqk`upC$pGC=R46fn()2U3`uP,jA*\:\othBYZ(SB_G=72a8\Dq:/>/n\VU6`@]s?%
%k1X44DrtI)J]h#nfoTBG#<UnHG#;1>)@j3mgUNa9Tka]>G/CZE/?,\F%R-O(D<n>5CZi3[Sbd2)euk/SG-h;23_$84[@].'bqJWa
%LYd/ISZm[+-2_j"HMHB)TuZQ(m%it1hPG)S#$D2cD`\H@H(*Hi0n>ha]GnE`<p446b@Br+e$sSl#.CNf79F=e>Qh8EcF\3J9.+Q6
%""IrTG@g%8o)Ltiqcq%R[$L+r#!U,J[``aV^5mmeKg-?%W]FF<o`+l4HMpM&oK;Kg\oi/;_=lV](f:*b:>!>e'QtMMLN2`S_ncQl
%p+l$4Xm8R]fK)EMcDdkJ%X,_DDOkk#+ru&]pM5a]VPX/L%^tZS]N`t8$QJj@W^l(?2JDR/s0;(Bea)<]:p9%p:p9mEq"U%E82Ddm
%DrL_pn@1"?d95mI=60Csb]%s@RGm2ZHH]O/A'RF@O00Z+58A(B2:F8JVJ4;[d2;SQNTMsnJ^:.>4Qc"gBl'VY0e<%fOll[)iND99
%dr&E*#9$g,@SbWsdXPXgOIg>Rn9DA_1G8UoQLk-2E7],P0d*opG(JTA>L$_Js3IM&4D&R-<48C;El!77SH%o.W?M0Yj]<DD6E;$4
%W9.MIDfmZsj_6[729@n9JU'1LgO)itB=BJcmr>h4@H,&N>3@_s*$4.:Sm8-4`R`j+c&Eo7@#odS^bS[F5u:Q+aJIIf?kE\E&8nID
%A0Ztln2nRG$%8WgInb4Ec-%s0C(J*k\#rA(\.$!We7"`+Ph5SYer[=W=r\\M.Q@p]*5tNM]1tYW,I#6R1p@Uaa8$jV.b.@1/-;Le
%\mm5PcE!ri*0kmLh"+]aOKn.m*bSb1!]X+*\/&C>;CWp3,$XG4.migEiWsltni9=iJ)hS,)$5Hg3s2OSEC^>;M-S^PHU&([;7L1H
%k.59l)1qZFm`)Y6I'0)RW86mU!JaiqF#b)h<*RX;-L.L9VlF^42NnnHaHHr@9:gdgZILU''MOc:YfILe*-\Au#Hk$-ALpJ.W!F>A
%^Kf!1=%thFANoS6]TPk_+u2f4N'@/E$`YDg<bcE<WGlT"19T(YVdXb%rQ)Tr*4I=s*@eTsAV_0cPV3K)$]=j@9sqp*TeQi6:csG=
%->'u]WfEbcY:Zgao[C)bd]i!l+2E##4$rf:]%a+Y\`hXdWGR?N1kPcQlq#[?b\IonAnshpWXOGI0JIJ%$<8i[<GM]g3\r/as307r
%Tg/j/H@d8GL0?$A79IRcZkZ_r<%.-K:Ioutg<9'E_`Em^:"C<o3L#T4/pWCbV1*KcY#+2/M_4i6=RGtNG]OGgjP<<&#D+rYLZ0Sl
%;DE5s20IE5E8IE7eIPN(Q9;9IdLOis2K/6JqP/a.C&R]_dO8+1ZW_Ei"E'I0XANf4A(\@\<JJ:5IL'nq@f^_.Y,YNSF_WH/i?+Lu
%->(PmWh,u+Y7356W)<(g#:<`K#+0U[UfLEV>,=!<>08P)_Pq@P,Of4adMg*Eg-L^X.RRSU5;]UkE:961^Q>A5+HSt\'RlHP+=*D%
%L<@.e`,-FGf5[!GZt!f/&,[a:h)82b;9-qebTe?H=_C7_7p`YVMWGbF%#l`(`8I?=1157q6&dU4WrJ<l`ZPilU%r8/k.@VX(b5(0
%gbUgcg@!!a!]S/#MMT@.[Dq:UXd-0:MFcJg6`L4WU864.c*YdI-o+37iHN)GC3N;U6.8<H94P12J:FIlR?75]ME5oQ\or]G1t7Y#
%0$C%p.fa2H'/T["Fu:cpC$*`F4487CNkg^oA#2cI:H\`0-:;21&G8]3\X'OKAPoha/ssDGR0.IXV$!npbWJrq4[8GmC-8atFdd#m
%I$).f_&DC;o[PEHAElu?,0BMM87@K77RuCX`3mn0ellt7'N@'oMtgZ[CUc*?hlNh-Z>M[+<9-k\'us"lSQAf]3%F[0.i`-NZ%!Ue
%U)UPj?D5BY"Jfn#&@9@f@UL*h%r'+Y<0\cWPek9fJZT>XPp7u=:Bn$9hRH38<HVn/f'45+!]^rjiL#J$n#E?7W4ZoQZr)lC;&2=J
%c6.YdDP:a3OE"SQ!$Ci;9Zo=TJeD0X>,#+NPA+i4)$5_"F9:#h2H!WCWbQa_PVlVIE[\*-0bZA+9i]M:\^T2,"6>\]T=9EaJ[LZl
%Gjp6Fg=+V+SnXN(7=j2Alg]_&%+\jF;G";6##0if+FXR"Nb`3lZ=?TD=K,MFH\rf#UZ.StRHp`LB;j&?GW-A*m;^>'2rIloa@[PW
%NgPGmm=p`aWiE6tp*N:+"A:'d/s^0+RA)#q?kCN_U,<0Uocr$R,$G+i.%ZIqWC=s72bcG&APQZ0('\lGVJ^9-E1g<qOH_a_YjA6O
%(06ggi91Hh@%POS`G-N^[RO7^fHS$I^p720SFdr&WYCc0YmBDe>_QZ7B$QmGStg>(0n'lFb:q,(gd)iYf8Y9obquM4)L8kb;,gC4
%5T/W<9Mp],PLO8$":"D@!7Ck<5u^h2GW\HJ!5KRlR?Y7"RX0_2]ET40_P19;]W+CZ-lP(rp;0%$f9/.X1bU]O-_o1>)?N^S@9fND
%D:6X*P65V3?VI\-4=(A.kc(tF-E+a#O@(H?G\(@H\Z+j#.e,Pcio,o&h3-"/*3:1@5_3nQq4*Woe^B%&0i8VcTIg-YWpp3&e?6h'
%R)A@m,$\u"fT<OT:4P\\*r)Ntk-jO=ffAB(%8oHj:(W[J^p20;fNX4/VHbK@Kf`+g6Rbm*#X3b*_K$?kO]BDVJ0mWk&3i"UCn&e)
%W`g,s!d0Dd%`Qm/M+U;B51%e8<9?&E(cEgnU%T)0]+uLuQF$L:>A/IRSEbbn4s^`KMP(5i#X(\_>#=hGW%nJk[E9t$EgdMjWbFDo
%6Xp]6W5C>'$]LaYkBMgM]QHt3dm.*M>pie?$t,XOcQ&(sT2Y`LOK*5^O%J<7!cV\CXf=[e(=b)tRLFa5Ho$;JC^^`P10)q>&ATFr
%8_a@a>_f2O%%[3[BYlrRXs5H<J2ALDXg.Ni[=1D.&eCIS,#DsG!!)$%7bs:8<VL,u.]K"i^moj-#3gd%<@XDMU(=]8F0MR`+\IR(
%;U@R.<C[?FnJW$X1_$DY0T<S#**@&IM,'-@PiedoGH>)m3m3j,(94!aTEIaPB,+q]\INJR.Ni1s^R/KS>P1ti-^m]?3CU_f]Q19m
%L08`eP]VoQei=;s2dib;isKXK-J#RZQBKm[AQf0;eqK0X.EMLL_s46'!fQoc";L<VVHT64g4AMnJK1D3`%Mc[haQ!kL<b17f9(LC
%b-l6(3h.glr&R\mCogQqEK^pT1BBl4rG/&g3QM>XEA^GkJ3Ej=$C5Chg&t,#eaLL#O@'_Epgmoc%oi31Q$Ei4#9"8UZeVnT)mG(m
%$Z-uh5Hd;?(s+"hGs_"n#cLC`iF93kbqu$%.RRSU56NC8-pc<[Hh266#(_:cr%^"u>rD9`Sb\^f6l7A]>%_CV0]TCfJ4*H*'l,ZJ
%jBGH]1&uH8*iLT4.HKE=-:;0;)lnQ1?NjGND>mHj#iJN!Kj,l=pcqd(:mof#S41SRNUJrJ=BG=o_UWYej?:%N.p"GjX59@=&?:^D
%N@Ck6Lo)X(8@*M$dbpSVSTJ%IDVeOJVCnj,3GiMWDU*Nu<qnO`V$r;mNer81g"ADBUpssrO-%hV*RS&WC&-2r;@T*Dic\=VLdA7'
%XO,C'd)9?a@h?_TGRD2Z/F\4jNhI)hT5'l4p9j0S"#k1\TRqVu-],7^V)h#k#NXT+9/MB:[A-`j+?%BIVP)'C=MuRCE8usE2:X@g
%N'fG##agNW/f"_LVOjJ;?_u`5;0%j8'aH5i?E#/[i%?;*iKhn:>_fhe;$>*'h\F(!/98<O7FWNK)d%>@[]-8:cf5]k.WQr?MIS7S
%(dV0J;7Y<HE98=MicSiag_EMIbX`uYI$WcnUkXP+7-fAXJG[>2X,GM'F[L;&.Rhi2IV<*uae_'6<L)&j06=@r#e5e&/f#9i<R9('
%f=AKBdB]T;\Jpoj8]k=h;J/VWJT>X9Es2.hQXPe]=[M2B.3NF<e-2r1/UZd&<)l]K`8..3T[&"sPe-:OHA9RiX^M^92la2qd9\GU
%[7=!io=WEkKN-uc]ZR^F<EM[TSX2iOC;LUeCC1=deBU\%br]Lf<!eM2^=_d$E[X@%DRl.FDOPm+c?uA&K7$ts^nkKs3?G$68-G&g
%!^0-RQRG35'Yl]h'ZE&J1.P?!^nCC$!g]Cc=(nVjnmQ,h#R&(Im;F,EY,e:WT!L'0-H4!:9(i]b3segE?RK$2S5P=]2EKVs/b8TB
%6bn%?PQ>m2M0=V);3`</#i5dVL5MY(d"[E0=p/joY/2n,$]LaYkG[2#e"GpW[s\?nn@-sYMrMm4rAs"18R+eO:]c#b/r7o[A8YkV
%aT0u2-NaY;JgP<n#mPs23W(WeF59gg%%[2<h0An@dl].%J5[J+kXai$)_,Ok\frB$muc!pqK=!S0!cl@X(.%ZmAA#;=9NhuU`hAr
%5uhcu/".t>!]^rriL#Iio;8PNkhJ+g\YbcnL&2(LoGu7rBb))2o%FE5,*'`,6'8V3R2Bdk.r/*qaK53[#2A:1g7Dm4`Y&^^!H\$I
%@Y#%hFUXQ1-DqX(Z[Dr<g7N8WO,pKr+h?muELHOYjFCp]j-6g,<K@d3c*#2#=9Nbsia'nf;lY###(_:br%^"u>rD9`Sb\^DWK+lX
%PW5lc?mM?6ef"J0T5DN+*RoHDAP!U;ES>IIUh]4c[jc&I7-oK5@;?m'%p[MpRmoGplK3U:MP'C\_u^lklM,pRW^0?.Rhs/[!@]ap
%$NGF@#N;5>8Li)mN6)\$/sJ#/WS0-!4@Mu!^`\(2cl.RPRO.20li@-,\><[&\nX:Cd$[Zi8QF9>RU\1hR\[_F3h\"T4A$(@H*\]n
%G9\d9\/=>c8rB&G#rAu>'cHg@dmU7UCGZ;"`5O<nMJP[Zcd-=K/t><kWK]7_g2WD=RjAq2P/\h*q;=F_Kb1,AV_SUIfLdrS25kPK
%m:e-a.*E>cXs_C>Y[@s^U%eqt<6RL\VN.3fY3p;==e-IA)ma%,m+1+`,om=5T3nDB0@K(b!TtY(XbkRP)p94#3<Fh:7g,o7e1F7W
%L8nEDZr@_j!Wd-tVIJ]"C?c*dn%<?hcL\'S!S7%408?-\7[#p>4r1-i)mANTJh!*f=r;4`>&:QMgbh(nK3Cn^/<[\D<E)ST:j7hT
%J2mF;;N[#R3l973Y8N$s.-%f*5i.(4hegQRM3fR2Adpb$7mMLbbbp:pdIGL>;\]nQW0Ke:g6B6B`>2J'0@4T#\#@@kC*u+*@ck>'
%3l4b)O0uluSY&kK2qdT]+Ak\b5:"I*B[C"jZiHLH.2$tGPG5qSH'`5#6k*mR;/e%$DS+>:$0D5<2s-&K'Zc*!,P7LLSi/$n=rCtL
%%?M>FMq"FXdI`g[j'8D+fQ_bN,21XF^=1&WmP^u9aq7b*+c/L"[VHYMU8jYW.Hb)9&Ps:a>YL]4<BWk8:)C?@OmF;^gFB#%=0HC^
%Tu`(6f+=*iJP-UBD$I-Y.RrO.d.Bme3<4,(:DhSjED9CsBcDgH<!9kQ0,K9(Y,S2ZX>_3ZW,=5%<S@FeG9K-gV/6LZkX?cg%7%ND
%*d18V[VHqP?&^#3L>N$5m@#4Vf0nKI@4p22jA=WBVd.CB2GH=tV4B>L)ea"`7VNf4>F%Z!kKjJO`^P-q$rIW(BR&``YlU%_dprIF
%JN,p>bdjTF3k\o4#`-AO'/S67<R9$[:Fg0(hf,o?^f<nB)J`*TO-8Wuo-cJ2Qmnf6#cR>)U`_R7V\:m9!./+VR&i-T*a74Z:MAm@
%J2k1sYs8PoH@en^f/C`,%\rb=aI<nN8JB>j.*&_f---J]5lgu>1J\c[W:i]+>,%U=YW;1W=>4l=9q*[M#(&TF`D:_i@ck5#l3Ss1
%8[d[l50hjLliL;Pn]N+@c\87=6_3t2PVVlG"pEFQ+\f'38:8Fm<>bjrp`VoV$SfZ$?"ij0)@Z`KFnfNWk.>Bn)*7@_++cUZL--u-
%J?q_I):Kd%no?]^ok^0>5i!B(H,HJA>WNHR)$5F5%PT^lW%&^FWkf<W<ccH[b]VCa1N_dN\juuVRY-FSTN,UI+Nfn`:sjfD3i]!4
%eU_m3B/"!f2Pb!r_EmWfTrD#3.Cn@@JUffZ1,8B+2>%BK\a1<6*be`A33[\;,p"*T.76GA6MkM,ok1)fBMGRgZqK,I.RV.INlQ`K
%mU8_)eP:C+g)H,@nJ$G?R/(X"3eg7SQBJIa\8T/#$PG;Njlnt2=jbO#VYUhUIhl5gUdh-r>a$<bW+0kf=NF4a2:Z#Ib=f2I"N98b
%M4*\,WFtG=1Zt;XgUE0+1']ef@]-T)Ki?X2`^,4d=0mI1+s>UiE^JR#lJ.5[k,ui<=9NaKGmf*u[F,ii'J0@eG;s2DJItlS*1cu>
%'NFJ*B'!nQU;*ZsbI#$7(-^qQ):u6P.jP\nCH:_F@UfkdV@ll4KIqd;^dX9J"]_oPJpIf_5enD#R@$!QWd9]N]aR?PAXPA&@3DDb
%(\tTmh9jY&hlrJiGu##kT=8No@O'/l\LKsS&_mCb8plkL"]^dFf:H1t!]^rriL#Iio;8PNW8)1'b9qq@JSkkl3<Ntt..ZsJ*`KD>
%7YdRR)7fD@!I*Cak>GHcoF./sJO+-'$C6jO<te<ODB='9@.o,$3SZBp^^$<SL<b/tS!;'#Z4[C3)\ZiJ.i'"'Z=LYZgQ\B:#caM-
%I9iq/NtS1T.RV,sL]aFD<(Uj!THW8JCaBu&!p5DqQOkt19i]6\M9cgrG]qmtb))0G]Z@=OH#out1A$7d3`S]W^.^*<W2QaP`7+#a
%PGG^(U;T&><QlQs&2-)Y67hVWWfEbd?^FcMKX1m[%SUsL"<hL?k!U50&kB6$(P%&3//&C)UT:c"'NG<i/S\*+i$=/3TSe'YH&NMi
%*/^e9bf%_N;q5r2mQ>W(I*#FF%HL6HRF`H,iKP,r0BR!%*!,_T/gZD*4uo=q5Z9r#TS=a!20,+K1i'%arE[elrsd]A'-te9e'W58
%cDso0_DtW&Da<#H36EW/RQCsM;F0B^apU:gkQo'lK1XT#b:>u`aUf<=(*_Z^=)GIEb$FRpAe,/\_^uNXf1f2id$[\/CgIeL%7itu
%BG$O[bKB&d3f\_uW=I4K,A;,X0Vp0Uao*2FPp*B19gh9Xr(PWdM<J=Z#e7c,'+9blWorU$q*[/i&fLcD&Z[4c/^e9N6B+WZ(*II0
%2P;'r<+qHX2M)u;?qm,GJ/!^8/InBeF/M%P!s73Gb/DeLe'tXDd_%NY3o,2den-tk5!>o!,7c_)C0]o_G7L[)["F9nbqdEE<JJ:5
%IL&b2hOpi+eqs+k\Nq?nBTs`r7YmK$Wi9X0b\9sJ]4n<YS:]WW?nJp'QF<!d=a4tET,_!YK;BbQ]$P9p6*(P_PV!0@%"Uj,_$$PA
%64diu<@tgo(o'MBTFT"9ba^Ul4\+[qgtW`a;)ci;AlbHY->@nh#uW*8;#?>21bm_MZE-og+g;7?!&O(H$CY_gc"2_9JUffZ1,8B+
%2>%BKq,G]Ro=S2)"&*a$N[p(tUOu5N#XLK_#aciPBOWb1Ml'&Hf[FFf,''?<3p<7O)@&WA%L@<s.ha_b9iY!9M=[B1pm<o*C1*3I
%B!*ip1fo&2ZnMMG)bj1`BRe@>76QC@*-_S0ZMY@meZ`ppk%G:H+duuZf7966DQ8#7:7UKB>Sh*$Z1#IoRgMs&Lf5otCB#P86Qi&9
%9]Hc).#uSW<##tQW/X3\0U+h&QBXhB#R&rAR#.7&VQ/gXgc+"d6N-GY+CmEm%Q):oRq1o&OKHLW^guC4#T+8eLa@j/FODuod_B3b
%RtsPLZr\]TadQWnCH3Z7bUF2]^J.^(cY8FQb9kn6Y]%;XgS_!i86A!q%&.J0N1e^(bD4^oWIgec&6RFo,2aluMPaCOV&V<D3\A>k
%DQ/_CDL-V\:413RI$!&UM@p.Ri$*QK/d#c2\JCXIVr0njLD\hN2/c?W+g@mWW.:XTc:lcefep)qL*W9LAn'o8WTlK)GKs!'41'DK
%"qL4C\B`Gf?J]c/KJkMO^n$s(&6j>D()>fsYXu\T)aD`AC%K5%`Eibi+W@/XAXZ`Z!`_BFB8p/4WcPgE8HY`_MmIde=YV$W)eU%G
%,_$8[j(]-01llIQ$k\+1IO_eJ^'#CKomIo>BF'tMgMC>M%odZ[6(Bn)Vn!u==<O3YfFd;r=AQR<91+)l_uHl2JO%s5A'Ja,ek!`e
%XP#$=Me#4U:X<0bns)^OH4"@.5k9BQNfio7KQ%Qg*0FL3+s8"`?!V9c@96M6`%5ZiR8MKd?t*-k:;M=CO@B3]\'2kuhOpWiNY$<l
%=eb]-2Y/E<mdmN'gTAuKjK2gRDY8V5E=>,d_^do:CmE1@>S@)p#L\@[!0VH8,C=O_Sfsc?lJtOT+raD0o5iVA"n5bO$b#mlB_u6%
%Cr\(`8)>H8#>WG&#`/);AjL7PP,>98";\CTO@]dr@Mr__aZA><Zi=Xb&5Y#@HP/&UhGkTTkhLH",CJ$Q@g?_YI7>6?:5`@\V8n[;
%=qP`:m>4,F`<J_/jTmDPh]S*sH8nMhIFdXXP4`5=kbuQG>,=uc6qi"f9h-$]o8QL-'$cR/m5pCWFbG^dRu8\7n^H,mk(%,-5oG:t
%7`XTA-)c\,>L]Tu7`;Z)=q[i[VAJUXDpW*o<(,Pc,tHT:lQl<"[_*%Xjio6:VS"q,hj8Q/9lUu[SgkG`+gJNX`o8V].r?gc[&%Ug
%+-^rsjT@+%StGV?c,C]AJ:Y2r8rgOl+.R4nDu=3MUg6-N>1u5Fg'g#Zf$gj8@m+W$WF=&#8(K7RB.`qPVIq\]]-D&7S4JN#)r3^+
%G&0#WVJUNCMB:eO3Hf4n`/Y:7kh)Q.l.F'be$#`TTjNH<TjR+'3qJc"?Y7$/@[NE@5\aaQRL).]cPa5[=hpPi(e_@U%D6f[P\Y:B
%#/QhG-8J%m;CrFFkS=U.okeTBi4<\b_U+_B)?UMVdo_hp^fhNODBtdtjcFgnjbZhQ*,1_75`@!_Lk]5B^GS07^`7T;3d45E0nVtB
%KC"%DH\NMtT1N[R&50TFU8j4bFQ+7a=U=0nr4W2ijPU?d"*jAp;B?bj=>CNL#oBAV8eWgYjiD&#G;nG,a]JpF#0FBE774jRl\#jZ
%JWZll_GRkm4W4_)Xb9n'*3;HV\>&pmUpf2h,BYUOVCd8rOh.6?>Hs&_K,sK=7$T"9ma;Ca`@2Y:TPB\N\&%'9=5*ku9['#.<C]#0
%G?N&S\-!/pAI1268%7)jQ_#j,k7s_G3foXg^d)0^"m3&@15B(b3F!*=>DCFn(Kh$QrN-Q=%i)Jg:*=F)Sg1&fKiW=)d?oOWasKSp
%QKt5ZEZjdg2/naqE6pul=3D?g!WdB;ARaf5WTk?^o9grh4;Od#.<C"i"pJ`o*4=4S2tIl54Wn-mSkm>(`=?AbRN-lEm3;bh@fO!d
%[H^CA"pD"dSc+J2H+b4<jlLl$R%]OBT;7NUU9TcKM"K:,cL6eGEbgKN;(K3Y&Yiqf;c6U1&[nVYK7GfK7(>D5luo0#mhUHoU+<O[
%ZA=q?VQ/hCge/^:&afiApV_i_,Bpm#[c`YV06#h"ASJ[o'"J)Qgn?3:LW,Q@*"1Q\I,Nk%<:1WF#9&;<rQN(]MdGG"8Ol3[@>lg*
%Of@U)lXt<<K1o!6Cd:PUWXN$YrQN*075%`M@:@A3DSCS^NgZ7pDlS,Dc98;n_YMo_I03B%S#?((@nW,k_2%ouA"iW]$jdMGOJ5-!
%^(<+=ZMNZ[%Mi4>1.@\fgD%kKG*>kob/DMF<RgV]hKd`hlZW"3`qs/?Yq-`i7S^-d2i7a;5g\6oP)(p!6#K8:9a6D6m2uO![i6#]
%5.hBap4.ZOgbLVUgf/FoS2Q/->R_HRq;n8eOW8@#JEnoh8*ojb!HIH"+=<uuJgLY%^J;hR&11V"-I6&>Y)Et^0&$+gbWIga4[CI0
%nGND/EI`W8[[+HMDEV;ODOm@2kBk&bk!3,8!!@H2c&B8WAW]%o$f']gi8/Krm]0#d1!o>-OIdFqjQB*\g6jn_E5*U'EWJ"[RXtf>
%SVAS.0a,M'?dPc6O1;'ba>H9"(6CoU6^fERR!EP+H?)cl8.:"LBA\6IgpU5Z`=\X%7LBKWpr47A^j;,C#89c$1f;V1#RkJ"T\u\g
%BrJ%q>+';u73J6eJiTV.+)'pW.e<sZ5d`*04&AiAe5CN)=61_!:[2":W6[LVV]LY3IL]hDYDWmZ*8#@2DA]B_cpRVs,tE#A^`-UJ
%R!ESLH@en>j9lJWS/g6A+PgCb0k+J!MjWUl/b2:>P:E:]A=9>D<p,Ll]LGnUXEJB+"3MnlY,]j.ku4qp"Pht'M$6@FeT5j#3A25T
%F`0MJ#7Ucs6(MR'20UU7KES$sPiNu^/7Cij<<^>7"us,%6/PZW/Gcutid1d_0bZA+9i]Ne\]]9JD=P#C#O.>hMY;WgQ8N'a12bbb
%!HgD1lXC/j$!`Z;M_>f,W.up/Podk_MrD='q.3Id\nUFI3qIVc04aGi8F<C`K>bXSN/M>gXK+gshbQ&f3)L7)M5-`d&2L0492/QJ
%Hn25_WVt>VP\:O48Acqk1XAcq_p0^7P=-aFUVf9)]&A(5RfgKGS0l0A,Npl1`fDH9G83ko<+Q=DC8\RMdOqjKdo>P]X!JYeE[Zsb
%0,%:9<Dc94=dPlX0NqT]UdK3:1ZPi5l1:/Egn2m2JMqs6W=d21>a$<bW"[C6ZK6ECJh#KH2rn?X!,08%P;:`a;pS:.ca%rBSaMFU
%@2tdp76PAYGiHo>\MKLQ=o]!SAT:t/7bO-fC(u1Qm0jeNFdQ2YCoF&H6pqV@"pD$dP)5U]VQ+:lX:n(5Tf?c&AiZg2]n-YCP8jZ4
%]dOF$*MpM.0tP>4BN,iNKA%%iW:M0G>3/)H?k<U"__2[E3hiRJkH%0;-UQd'=gHI6:l\9?[ASqePbV6+m:dFY5o2<kg4A0k,K<_b
%'bIeZh>m6$PcN6-<GjO]^iIIhba^Ul4\+\,H$)W(gO00!nu`o*%l1"UoWXe.of#']Tnl1`]M75$7_6uaMlI2:7I:]kUcpa$WA/#)
%VhR2S+MR,3#;PgTo^qL?2-.q6\k.*Hec7).%uiXUH?+`O^-sXGUd2^6IBJEdo'B(IAI'i%O'"(hYTOOX(:d:$=Btbn?['`4b^!.;
%F*-hjF,IECI08%m9CGSd^=\e[,k%NBR<4-ZJ2V.CTb0js=(;N;JN#hWHgI29Kr+ZtJit77XU0AGRGXm@VrtG='lc*<IC=&Z3i=9r
%1%BXShV=Mg`.Kgr!7HVG-:Uf2V(H@9!;<cq'TfIr?,noT=QG4O?kCC&3aqR%`6<@&eMD=0fIelT9fNVX\A*cE#alX]WU6/:f[0e8
%,A%V4fL,),%%7&DS-X-G'N?ZIR;mk;h1am,WDK5i4Zu(W^?C"H)X_RMf"kP+ng6TAIY]QL6un&4P6W4)]PLJKG<_HA6XWaf6j41`
%W2:J5b7_SC!s7J$bJXH(B^-Hro>F_?dMK1\We$A8X`>4$Mkd[2-#l!1as`?0BK!+H%oEL1L;9Nq',8rLiMLCTo8H6u$j$HPpgmoc
%OD*ns3cjYRR)6!3""AGFO9k+LN;X79V+N'_qmHd!nkW+2lcp#>AB<i$+rh#2,19KDlsSD1YU<oRjU6m4j//d<kIe'$U@ph#C*a@O
%Z;p*/YtS;9jd8rpcSM5FZhF'Rb.@>b1`6@Ig+TT7k[iADX.&/,=uQ]ebi+jZRHp`LBB[QN:Non"!(2U0Z7W=8BAN=5Q8l=eKed"G
%DA:5586b57c3A]7+KDM&c!joBE%I57S.DIQEcg^WifdL.Jlt\(9Md.^)')aZkS)iK)@O5L]Gq8!86b;sAdDT(:h@U[(1X>5A"hDk
%pJC&_60Gp6(ik!GN.G+fdu,j,Nn=RmlT4HIqd=*KcdF/)Fk9:[$oa9ipVAgKlfJr22!Y>^ZT!Yf0]nXWRHLHI-g8M1VIg`^l&MQf
%"(p=79t^\m/@R/@4n*,/M0pF,EKHF"M,!aU=(MXgC;21T$q%14L,3^e[cbGY@jYg5S#W'TEi86EFl]Dkc+X3m"U5;oqP!K@F##kJ
%n=0f8:*$dU74Gf>IEGEN+Y]k*'EMjBK3]5*&!4e=&-/*8/X%sA9iKBbRAXbjO"^eUR*W[_[EM^dB"FbOj^E#*O'?@e$d]M.iP4o;
%T"l<->2o$$&;TG"GY?D?O42Jh+/c9W(RZEMg-oUNOnL?P"?3]oUsfB`+>*,baZ6kHWWMddH+q@Id<)$9+/c9[)hQ?scPW*qbh735
%9F7\bi!_%t/]nmf;CG47Kc8B7*_^C5VauH?J?VH_&d6.W'3*6IBO7nK"O,hlM4*t4WorU$CIfuCODk-QGG#r)jN!RrLE,Db5ord3
%.KuW=5+'tJYEK/j!F^o?2[VOd_`gB:N9t"j&I>o$aq_k=GuN77FRJ`YPU#:-TU!,o,jkiIi2Z%Eh"/+a`P,pm'NXRT`*rrgMHr&A
%ELOSLe2JEAXjl<U..rn"1LE%6YP8EUI0]>?1[6**XI]WUOC^ZXU/NEWH;&.<pPiEV!8*m?<<TDk-HrH+&EB)iRh:UA6]=>mnjCW+
%2cW".B.budm=k6C8/nHbFIJBRUHJt=dLLAOAKQ?%K@GP_KkiFH#'E`R&3Z.kRLnYl4Wn.(1arbdF58\G%%Xrq/>lU>?;oQ:i/"4d
%<L:$)[O'<p5]VE@FRg\+6PGsN@7f']!:8sSTF"5\$8G6g*[#HT5eqcsPUOJoF]6gH<9?Uj($.)(O'liJX`!&qAkDUEdN#0a*U=Qi
%)2&KD&=_c]cCi;k=O_mfe!-.+.@SDt^.kpnL$bGnR#.7&VQ/hCh"a5@D2S2pdmL.b:N0J-djAKg!<W!MoU+9i['T'Q7',X?TGY/V
%TS[QL0-qM>!nq^[#u%"ij5uTf8lqHj=LpMC8TMamH8P#$aWoj:#".*YPDR\-q79$q!SK$[Cg`g[N<lqcWl@#]7lH8j^`/<%QoT)b
%HB-96:HI:6\oZcE;:jdj6$jYL&mok.K*f923i?lTUb]?%/mF?N%"U8V%MZiY+O`0h$e'!2Z6uQ&:F6gt5Z:J)BhqYICA//s,0`@+
%\_2Y4!#eJX2ERY^VOXM32WH'YX"jenFZ<2/aU;$9(]5g5=p+op[UoiN^^-rdNm:quDPjEfi5Vf'-63Z&XI$0;Qj+5GK*'GW;kB]t
%]pLY>W$rk_b`IHc<h(lib6(CTDt7Oqgas0qf1f2id$`'g?krG'IKh-8VPC:kp1'n5JeKYCOCJF;D4H5\m@Nnd2(:56c$kP(1l)TJ
%fYeTG0&Pu-?C@1+DQ8#7:0]E%gMeCh^&\nU*K>5]36?%,4H_7c`s&297QED9@^B=O*)mdWM`N%mUp">A`DtG(b9=?!"9S"1bf%_N
%;q5r2mar'uEQ5`/oE>fk+8L6MNV;Lo;ZF!&%uALKAY5QN/\7:p<#HkaF\p/H^N$%]2!I(FDD41#idR;_q/32nL/*-N0^0FtC-t"s
%ZpTm7o?;ZFGD1;R?.R+0SM9X%]Im6sBYKN7HL+G[dK)X!^&-+JA@]uBQidE<nB/\nD,\uk;q?&'$HD.$T,EHXjDaAW'cn0G3qsg)
%QE@0E[$*ol>Hi`W(&?aV^+s)`L%M5hj8&ec"pD<lP_kgcVQ-QW['9^PPYEG###)=`KR:]b8U2s63a(f0"JSg`=m7`I7COq=.RRT@
%7frpQVMI0:V4:T10iqZ&S1N?0NgX!W"B@TTkFRG@T&A]p`tH'o+>$i-D;mCu(u<f_!M(\U?5#,og-&6d(c<0Tp2hubXRJ'j2:^QO
%dtVHF!-lC3P6u-!WT30KAM<Bc/q/[#G%;A)OPL,s[CPS*nKD`:>]kP,M:(Tp.T'22Hul3:UV+M_<9]B;DD>DojGoXq3H(pDNm:qE
%((E5@Dn7u#k<qf3N%ucXUEh)(G+LSod&EaMLeXmmcB:US9npHVNWoQFHIC2?dG78bYU=pQ2k3b`o@qdeoUPW<da96td#)'dK6p`:
%S?M48*7Mi&jKan2(:bTna8q#>LFOfIZe-$R*",1Fk<kB@*!:E!(;25=J6#LV+!;7W#10fs1":pj0=%uLPW4c5_uYT*[o$@&gdZ*1
%nkBq#[D:aD..EOmPEpt7.)rX,Rt5kjJR3h*2S&dV7o3O"<2>p0\em%XE_QbRSrO!_o%5iZ^l3?1GN?5@:_D'o[7hoZY+)G_@:3CQ
%IdrGtI00tbBo9q6hF(O*GqkdYdCD60bk[fEQWeO\WbF3k#'DoHR_+\&;lY_0j>gj3VuW2pDlZHtl_^Xokfb?meH'=?J-4A<BN3o_
%U<kphFUWo7,!&BZdFQ9M2]cEMW%nJkF[4#=!cSt<j*!$!0s*1!!!;Fg1]J"Bhc3V$&Blpngc_>-.0sB&*,p6)%18WHY*>4U;a;3h
%("#&4\jRun^i@InP9DWY_h!E@^rGcq>1:.&:]^oI:R^qmYt0Wb*9$(ndu4h_iAqt!oS+t:'K?\$oFe>>08UUA'4a:%l=):#pi'5f
%Ld<$j'Z1qsWbJed][YjTY59uh9J#`H<BW\s4t^R:M$".(AcGaU?LlnAf(j=H4n/t&OZ/AV[pe331[VuijS9'ulj=--NK)>'pc31r
%m"JkkhgkAiH'GRR*G;@fo9M*?iXK(K1m;DcZg5>!Pp*B1q,.BAU^cq^;4c9WMi*%r3+cW^Of1=XdCE$\!Xdd$\So7aM\r5GrBi_k
%*bHADp$ZL5lpC?[8'Xto+g@m)JV#k.D528+bqaPa+b,)$2MFFB;@tKNa>rL1ebO9TXM>8b1^]<jqm%@[9I&bc(IsqYZ&@!u.<C?G
%!l>^q/.aMWBo4UnY-VfP!^eOh!p[3A6,_Q(<HWtiF'g3W556?H#1BHg07W&6s58*4H2-Im^*:hofYpm-<&Q=_W%k,S&BRX?_e7\F
%Z,r)[77@^>b95b+<6Gkcc<.4_kt9\q.3e$jq9-b*c6V;6[`"!,[,lb$=PAMJdKUO\>?&Si(5oH)c*:C)E'BM0bL*lDKq8u`:nhPD
%6#*<^X5T(Y^jqt&Zo:1;YCKB.H,#V;eKJWG`h:Eb25k$CL;ZSg&>Y.4.aMOFHh\PmEHqn%S;aI.6I0@adh;MJI0?NZ/tt"?f"MjS
%QYp;Z$/='K=>qrq(cE/]A:WC_&Q$9=Hd6K@::`+7#4(@)f?Gr^F$?Vh#X`/u\%Z:PiB7GC#Z@3^j<M:5$[JO(*Z<IYkgVT<;+e$r
%;agnh3?8,8oSL=8b\`.R(L=X\"M?*fiXiB97Pl.EkIa_[-6_pq0_4AE8&K[@iC;\::=0UpQYC/i$d]JEd"mUWLA?QbcnLf>9OMac
%N-WT#0^%IA'OBoPMLj;bd7iSO`+&u*2CND"e=e'\9#/F2R$;[=Uk%1J0b?/H?2?g$+^lUNR8X7,B3j7(0rLeHNY$<l@mN"efPgr!
%JQ,Gaq8b-lV;SU+MB$k86P7QLnC!)M'm]Dl<>hMHFW=?lVbpG/Q0&A?7FuDC;(-M0`$-F'FbHN2cPpm0]EMa$Jb$0/%1<f2($s)<
%d"1d5MDU.j(Sg`6&atRVLp0;g$lPia=11Y&NhLb_D8@=p0OJsFLP<rndrU28';$%7*U)mU%dKmS1beD[0/4@]q%U+B;3<1Y?t(rH
%nO'@Sb)pXmV1BfQK+*B=9kaeH!H[TE0er?,2'$,hbi]/9XN2Ah?nRp),'2FkfJ,n-+u!AnDeMDZH]?<sFs55PT#[/*m6*2Xicq-P
%dW=-4Q)88+>"3):@,.%s!0%<uPSH<?9YggLXAPe8$()P=9Up&Y<K=kf%YV-%J&"K,SmJ&j.0kJ*%PdBDJ>Y_Qgsku_SFi8Jkm2'T
%OZ&hFNjLC6M6nk7ESC>NE^P1BCtI$G0[dCS7;5u-&nu8T>psR[4S!@r3q:(&.hl.N\s\0S6O4,-P$fb!I6i=`MZ_+kQ[DJa7O;@V
%1/3dFiJ`MC9sR:@U#b]s)H6^TPHJUc8mOAM7i4:.fuII:HgD4XIa+D'"0!uT]RV%i)BbIWOf1agBM@Ds+k>X=G`^as9qP;WE+Qh=
%G93db!V90(2T4*f;g!b%@(p)Jh(TYlRHH]A`"CA'`"CH$i_oK$3.R=)J<;h.Ps?=o8kV;0\`59NJ4/6'5NPU<fbK]']d:S4+qJ>V
%GT]ST3cF0X00Gs0U?N3qC/f$!.nEC",I"+VTRqQ^Rg1GGma^u$"ULLUU/DX4KNQ\8L<c;r.d,<tMS&d+/3)7MjnbrCO-V>4N+RTR
%/joaZ'r*L?(PPPF,I"'jTIqr.S2U+<V&Ic"kGkR_X3F:W/!^L@j/2#G5Ng;M%`,QD.;cn?(ESPAK,-((HfM@>&<*OnB2jibE9sHj
%*.U%\Xe<>:i,K+c:W=56.0A)QfkP!A#+@T!c<?5\csX3=)SZP)NVI#pBj%\Aha<g^\*85rULH%oDeLmtK2=qfU(7/A.\l@5pJ>G:
%%Xa=9#2c@tNk(N;DlS,Dc<Y=)V;B8@Ws5_/H6s<<&Z<ub`ukJpg_6_ZP7]N()OHb$$E>(s73)[N`3>H&7ZgrT`K0@7/uB@KRHm$]
%&Mh[,:JWYUk;B)ncaJ"-i$o9+n7X4Y-p;I2&C\_#)%\)HX(EhNj&/A&.(Tfj";Z,&bdkuGN4Qc9OC]RmW!JdF:*YR_n#E@"kfi-&
%G/kS1@*V9K,B5`gfFcG.,=^]+T.5o?J[E>r3cWO]M2T31psr'*kK^^$kId,b3MkD0;%06>9h20LZ@B;,_kqK[r[1,k,9k<C.Rq;g
%hpcD@*.^O!#6bMBJ4Wi#2H_(UMa.b,o'1NB`6<L*eT5j#.k`GrboEB6F1l21S%2$HZ'AO$A$'#(^5oB98DD8fL/r18M_nfP=0.P=
%h/D/kiHJtr/Np";EXF[BhgebXorcM@f4?#MeTEn!+7$LC1`YgBOLD:ooX^'`!CC)4"eN!%O1rZW.Q`%Pb2+l^bVpf4ZE5PmW;!(9
%La_5\hP!])8:E/GZqgVk0]HQlUM8GV.RRT@UOWY<DUO4=W7">gh.!m0h&S:+F5Bmh*1cuHX(m;`f_+=`MG4@Z0+4nXj;JhokO<\Z
%$$)_#-mqt'-o(r!1^loG9?JCFW]&Z!UA"(8G\:7$'HqPQ'_VBgGK(5c&oLlsE5`_2RGbb[7IO(IO=jeGmSTO3%6._UWXK28XZO&3
%fPnafQQ$%$[)FC+1V^DOUWf75>SKVhQ(CHb:iD&_&OCZc.E6@cSON'>:5&ll.WQhi'L.Kg_*5Q?iKT2Rg\``4>V_^4"F>B/:0H0#
%\j?T<$<\/$@NcOj/<#:!H)XW]Z>(3a)+[uQ!4S?O$AD`,AMP%lU'm>haRFO<36KG_b9bYk:O'7q_,YYWO`JPJdZGmc-$&=Z,#.@C
%`TRA?D'15m!3iB=rOg'rZYS96@*f@#I]h&r1,3k+<:pY%o+eM\hB$l3DtTp2:D/KlNm1FW`%*U#1oVQ5X(*e)06C3KYWX#ma$-Df
%FRPH1?>t6V^`.0Z=C;52/O*Zll=U"pqa+<.,LPG<B<18$b2nC8$?5?1M+tWgbQB.6RK/M4b/=L#IrSHh@>jsc[N#oY0fU,=EK(0R
%hugbJ'/SNG;pWh6?$:md<Aom))fWX]YS$c_(@4712^Fq"7.WV_RCLn"rGAFQ!1;4YImIHsl1uGXD:k0:#(\1@CnlWI3Gt:3Ia20#
%*nR*.hgc+.'5"qs]HXZCciZ6MRfAKecG\r'FG)AFAI'jPQnKT%f:]-O-_afrIdG,r1GNt-<:q45pOXq7^ZN.H_!:DCbGUQ8>3N8D
%ASORl7[1MSE=a)MZ;T;M!:8s;&"4_+2Au/61JumBblKgmO>.o@%5IJ0<:pBb\=CJ%L]\((Z"kp&QVA59ESb?U&E!%@\'0E1e,]dA
%:_gLX@`pq!nuZneo7;83dCC(M)Q&/S^&dmbHl<mu,*kP3k-$O;P<D?lBEh-gJ!jE%8%+%"6XWar703'FHrm.gk.ATO[D"_7@ck>&
%l8^nL\[%WX+$FN(+CFn8qK^[fAL-H[&3%j_f$)#^P=`92)G9ABe^'[E=E$OLob8AiK<=,<c.jD)0o&J!cR\M@B$@CAU[9">d7n(Q
%2s\lOn5@bViXJ/:pG/FqUN<TY&=Coh5eu[PJCP]SWac\!g#MdVJ2k1s1%X1"o`UQTKHk.>E<?=5M(d0]`21bf`0$($iZk0]j"3Mh
%Hc4(3YqEVtCoeFYK9!%lP)5U]VQ+:lXQ>lD&mgT;E5?pW9Q4m\kaN+t3,pmR8BcCj<5P-rY/udpE^U%A]8LAQ3&]gjJ11!uRh6bY
%pcqd(d$`(^]7Pfqp)Squ@TcJKd.NJ+BQ3SDLbe-N&f7=0&XG;S$4'kc^h6h[3mLaU_0?u!Zj6fiiL#Iio;8PN(q;5f4N,W6`tfZg
%U7kC=WA>$;;:*5tD^qIf5Mff/@WaY*N@"h[>mPNeZD8Pk'V#eWCW0'b\l0pka?W`qcWSGHC0:WHXQAJ2ei8!&ZBeCJXJOu&D'0:+
%_`XDK,6qr$@B_$f^B/E8A&K=@:4/Lba^^6W"6+?")?D.'T$\H*?K)o$("&84Cu71V8r;H'1ee1iSe;hN_*u^McpZ\4&.jV(->'EM
%Wh,n?QZ(D/#8ij"pM6._nL/B0ejs$Udg"e3>2fN,nI:&.'1_uVn6QZu)/hJUGdmSPDcnf$r)BAB1TnsEH8BG-jM7FDM6ig)oRPB.
%kU?q"iC&qSMk;MA0P#2U2W[;Y0eV!tL$k66RHLHF-g8K[#V=s%#R>#'HY>AY(9%B+.RX\OmI>uL^HsKnJF8j?#Z!r-(,C4PPn)i?
%UH'HPLc1!a6o";g<:pBb\:f/B:$-9*)o+KWo<p\8+gV?`'p^3g+a@QDjS_b!+_Gj[L;9=64U]u?>Rpp"FY)[WG]!nFZ<i[2KUB;e
%H?sacFW"b@Ze'.9e2M1l#1+fS]Q4bH=*kE)`ip#TA+<[PW614k*0,Xph$$f#):uAdMa5&uNgZ7pDlS,Dc<VbQ'O+G/C>XOt-gbUr
%Pj-&<=33R."JY-FM(;:O@</6&lu-!)hAaU9*\VS'/"S53HU,Ane4g8]1WN3icd-lT1K&mrgt4RDXBX^34`rM':I5YWjF;`f#s]0)
%J]P8O;3`</W*ta=P"p!s/!;8t&I>na0bXqRTW71Rh!)h$jNG6\%C@mW[od+-bEFM`R3V<9@X.f>p#r$Q`"`X`%P=Bi@B;&"pgdjr
%[AiH5"k"?1KAOZY%#nN_G-R1ir+t-/-1PVGFYr6u$*MC3fZ"@/D7lrEgGO=p'8Kd=B!.W#StRs,2bnK*Z#;n?\A3_??Y_oL=OtAA
%=If:oTnem[2WE7f=(TJ4k6`HDkt:ZHgC!#gTG_#%A>-W36@fX=oE:`[3$P-=Z\!T-lD;a95r-(EQGFJL=918E-UFR9<BB@*Tgf&"
%;pN2$Pa^6hY#.nl1^6?>Mb>B4\3O'?0!OJZ8nA;6BFUJod&.F?-4CQ.rZ3OaIXp!Y8s>uZXdIe#\qpR2ioar!=GCr)dHR[o@a3cp
%a(O3['+92\WFtG=j]JXn_0lF6__VRIE-/UM+%Wjb;A>eKFK3]D)[fr4+Y]gh^OU!N5u[0FL-.tQ5X6;qR@&8;Wd97lI*.7=Q>'Tg
%3'\A`OjK6F^53MqFnJiK8=Sg"YtAb"c%%92?r=IM(i+CLW*8kiW**BC=]0=b`6<L*eT5j#1]"Aakh-oo-J])5rK[aW*C8gM`t0"W
%S+8D@)N!tB8loR0$u4iZ+cS&c>7=EM@>tHp!,oBD6L)([l.?0flYs5.!t7%-B;W'L>GTp$FG,lbe)_isXQ`"(RLV%$F:1i@KgTAh
%CHB*82'&9DRbe[!ipo4F6l5_)R]ts#$Q7W\&n>!4g17+<l+9]n`=Or(PRA73ZEEIZd=QcrD@[$QE/kRnY\@fS3S,"p7_Xaj+0c.(
%e^L0E;Zs+-R^_:1(e*-uVhrs6A&aje.RRT?"._Gr#sG5eKXaI^73I?kXVQkD&6%I\;b&P2?8W*/M$k/f-_5)kEu^riR3TTeR*4op
%a;dao*+3.a<Im.][`m]4AA2N^PuDT\3qkBQ%E]XdpC4&sZI&q+H#2b@2e96mEM1QsRae9+`(cF=0W<J[oL%Yp=V"KZX)1cF"p'67
%gbL="h)+d5Sb\RlnpkK4J<QRpeXPnu`f\oT05i;6e2NCG9MF@5E`Ik<IWj;Y78LRbW^T_&R`-QmSi+P^ba^Ul4ib?d_W8O/a;]qJ
%fkC#E8WpgCk-8oNi6?mf'?f%9CRPY;&%jn><\7A.7Y7E(AhZ@:k'i_c\SeEnL<?#M%45JqpqCZ3]m;p/K47fD-d;5EJ.2M'Fn2di
%Q_F`/Q5hb"!eVEX$&CN/K;o+P0$PL=0S`jZAZhN"StRs\EVT%KR=c/2LhFE?^ZYc3=eD`DiLMb3.:pt_M.JgqDlO3Pn!lgCe(C/X
%,a#4jDD8_Ek'i_#+=*D%L4OV9\BWF^^&nTJI:SrRNNnk?j#e1jAM1SQ9J#4_]P2D:m:k(&A2Hf?5u0'mcBPk"+Q,EKSeR!KkGG7,
%keuQ`1`CUT(P%,N#g`TG,*QSd?XI#97$F0?'V\+P\:iR#`/9TT!m]H^TfT4LKEP`2*Q!bc/c7=XF4V-!X9)Tl3JcHL&2lDl(knpT
%Q>qh63fl8/CLZs$nhN^8!F^>t>/66V)0F%q:?rTG!`@f14qGTi\g_CI3TiM7Ea[3O3iMKTA:89m:mPm4,'>#F?J!-Z,#k,LALmi^
%$1BcAd$?/S8mc+NMrEVaGKdu,,H0lf3qm@,>ValJ"bjD/M6,^^7k-EKk>8R!ft5]3d8Xt5Tk[d;N`nLdWRpVbe8%#^l?18tn<>F(
%-L(L'%@D.%9%N/R8e%X)iW7^6X,&Ns9+O]IlP0Z%aq.\)#Y..+3>AMs:dqjl@iU4l+Q*aM9['"c<BWk85%dPD\bk8CT\_D!-@"NP
%oPldHM.JbjGf.dIfHs'@&^D]&1'AAXqhk3Jjm\p8+(oYQi=._ibf%_N;q5r2mW-g?U8[.H$G_V@5Uk-Dkn3$hjt-f'5W#1(8sIIX
%3pN.BJO,:`"Iu_aeMPYWo%P/O!<MddpYJ0Z>W5A?_n^XcjD90J'[+SL;4Jl3'U7V,1nC^Y!,3,"-Dk]8\gg'T:kQB5o!Ah&V<Z6]
%2@#.*%M;EqCQ;lh]4pO93q"q9c5B7pTU!tM\%smIDNT5rE=:@"a@egs@7:[%/TQB8aIt)J3@r0*2oe7Q_td-k/P"u1L:eSd%PVkB
%#5Q>gI/rql:sQ$"VM@DW84st2Ub8Ykp%9a)Uh_m.*3KP//]5A/[_GM;Gi)mHk%Xb>4P^t8,"9GURK93YB:IP,HLIjB&VD"m,d7n.
%Y%bnH'lFQgR):Qj1Z(o,a3]Z]ZMgU($Zq>;hgcS[D`%I:K#P6(V_$'Rc!s2rI("l+."#*-#V7HJ"ZI^+=5>B[]+*!B*3MO\^J$0i
%&ktMVAZh(q;HRKLHjm)RA.j$j]L@cilOMbh;kVBHRhS#t3Tm'VJB@6]LnH&r=5>?Z6iLh=%T`[u=!e[75Z>u^nA`nt@(SQ9bD7Jn
%(6Aj]Lkrr]"[Fo2/b92\RrH3'X"je^Q+2E7pLunCN%i1%!Wd@%An'$jRQ?&G>Fm@BhFDLHNZbdB/p\Xjp)>07JHMH.Pe!=I1U.5s
%0Y=?8XEof3K:8,]9sh?a"T]GCU;U-h;(#i8]5$UK#3KqD7`Sb"@m3[?DnZFUk:OaK,&b$+.e5JCncn<jTdfJc_3R%"/nZbb#M'>G
%B.\=9jDZ5H0muV;lYCKoFqeCrYn3K=c"h)/%l&KCeQ!KMrBRlFPFghFiVA!1P(i%A,2CsO+a)SiFR0'Cg$t9fR](W:Nk2iHdF/W$
%?3)`iO\_)tSSqufrj](-Pp*B1!T/]"P09iaP(d/1kn\guEF#VsQoT)bHB-8k2h9iZVgS[,!@SG,A>2W8mZF0-jW"<TFM8+He$?-s
%&=?DURk?%&0$dQL2I4kjC`AWkrgQt9AtGKlStHah7YI"T$%RT%?37@PE[#Rf9)rdW0SW4#CaNS"PMTSSWXR!u$%RXANp_Z_#u:5M
%$&N!j@"+N2q6$04L4OWdr$bZjJ>'R71kaE>7IN3MX#mW_Tt9:TP#0tc[+-1)W:!Jnp"1h(e\12+PuW#f+0'\2dCJ9Q&6a2tZ>p10
%er#8WV&Y7][CM80']YJm+I^TB%J(o)l1H@"aUf<=aCi:tNMUTfC6FiG2^eZ^D^ihrhkm9K(MM!HV]:_P)`[,NmR<3'-9_*?dt8?p
%L[.(>UaFkUl^A7(iH2S\;j`M;HKs6Y:#U'$H":CHolP/;Qh/1M-TTt'@3E7MZH1ARI2XTNU<-#q'Vo]oKhWX_Csq'A9U-b]giHn3
%aQ$%(-Yu+LK>f:pF(()sQoT)bHB*RRL:EHq&,QPNZ!/pJCW;(RC!SQ9j,uSKmHTC^l2/T*aq.ZSmK-i%&QI.jfp6:`LiT,mL'o_W
%hGj.fS\(u(Pq;[?mMetE&>eS\Ar(\Ae>ENM&?/AI<(7s*Fu>#iR`9X\b-c&_L`RDXF0l,S[$0o5K305u9g(Y;NU'oVh$@C"S]jO@
%-YlWeY86o7!(a_^@:GF,;kocia?.^;)cUXK7RH0nKDoJ#$MORg=!e]m5ZPu[E0b9G_V;+$l@Z&MpW1dI5-!mhK(/K6cQ5c=SrB8M
%W614kp1a_A7cLH?;,t(BhHk?F9IqlLWh,u,a&Odt]E*;'j3!`chXbibZnZh[Tc/2&F;,sC#m9\F%Zlr6oRtYaV^#a^O$Ztg%kHte
%9_m,Ab#-;jZb7C\P\l%`?pTL4-V;Ae=i:Bi/np^*N/%F=<BrIslsX9m@B[*K::>/073Kb.2V!YO3H(pDNe+h/mgAOM7M)'"=$?+@
%BCc_@@o`Rte+thL0X2L"(L:$+m%I\ij3iWV7<0Ht5r0$["PbB\=U-[&hGj.fSU28/^P^eUFRCn5NnepMZ0*`4)NhW9m7&*]_]3G)
%rL-G+0'54S$eAgH3'7_i>CqG$MTW^XoY(@jTpSD4[ooTI#s6.@=s,>"5]fEsT*J89Y&)9YP9DWYEF.?c&FGo5lm$_$5en@WR@(O&
%RX0_6*7t-3]%ArL_LpAQ!6CU/Ool=R.7i[ZoViX6cVPd5)r:0(!cuLg^lZYYoI.m:VE*?4!oi^l`6<:$eJ!&a\F#%mBjIjD"&*sC
%RS<5J^kL'Q&+HB&(;`VSTOD:eq>pXk$G`6&HO+)#Q`]MO76*9W"AmgQDB'[N2;C)Q4hJL5meXbX]__oOUV%TAA5q2m>3C(/_FV;+
%@:HQL<+N!;JOPRk'U1`jEAfSIVV=dTp53aCR:ariUB<YB5pniBbS5tPA..=G1`]>c-QEc?q@KeRb'QLW$F*3:f#^"^`#2Bf,Fa6m
%D%`9aS/cL#5a8e(e0/G,S#W&g@*Z<OY(Zrd/\L<.=rM=HY_3d0;\j6/bIDG,$O>+gE.FX9gJe;M2p=Wu$SOP:[h]J"6ORf=3cWqn
%K]Kq_!UDRpDmmpei*b!6C?TV^fc4_XE(k*!X-lYF+Y]kEQP:&F5ujf[_A4^);<h8CK9WoaRX0^>GmR@D5%7)YQu_C<;raR3YL=Jh
%BgCBP*#"f]]ZO4l!eVEbAZRBAl=NspK.tNQ?r-jML0H.'NglJtSWdCB0dK3]%@HeQSYG;;#/-U@Q%qI2d?T[7P@kPunHc+p11Ug&
%p_]Ckl5`fgom.[cR):L>k*V!no;8PN(q@c'5++k+)_BsM>I#A5":)Spl]WM8m37RIc+&kX1asR01tp,2D$`fihT0hD5a8WnV1b5H
%%7M9pB.VAnC.Pc$^ndNq*:4[:g(Ji!=V4rROeY,f2WNIjf+\cSW2,cf>I8p\XOic*`>ibS;85fI>W5A?_n[64/g]<I%><Qm2;"*e
%JqMiFiY*L:PdJZ)</>]C/9B;S&2pE5D8r<Em(@O:)&JLH4Wr[QFAF4$i3t.MWB&oma4]Id!U5`U,b6)RF:Io\NGG&Z!GN?g9Pi+'
%[nN&1Yc&_:JoXE-<Fst:i"glopLnn'74^-EWh,u,a#-mLGCYg&.B2Dm+!HZ`Rn.oqkNKicoIgYn"c`;WRj!ddI$Acip0_BI>`<gK
%0!O1dX,;nk5\o/ChiE_uHX9<0g8,`%X&7K5QDc8UhRX.)XW+9,l\<BeFi1K2]]"6OhCV7Z:=kU<\`4_rk:VtX^`AW4Q91s<Oo($h
%WH2.:iP*U6jUP:Aqk@:B)t(;T&n:"9WTlJJmW+4eP'D3.J-.!*$M\.KOtNf-V7,Df"sE<EQ&3n[g8G:,_jX');G?\VZb6Yg]A,:*
%[X`lc>V\$TgJmk4S2G3RU0!rY]S1n=-@fVnQ6h;IUI><p%SLi<=gTr`75#`=9npHV&mqmd3U)hTh$5F!QHU<[-#T2E7Edkq76Nlu
%NSD'C\BDn-6$IJ+qriZ=;Id&,+l$X=o-P,To]i\)C_.C.L"gDPZulRO<B6$b7uKVt*KHPT3H(pDNe)Q.BdJI4qZ\$T0XMtrQ#m#>
%^4M@\pJCp)Q`j)aP*2B(VTKHP<:0qUmhua('A_r6=;;$k..n%k%#C>?Wi9VJR*4T&*HM5`EuaM(bU9cRL:Ktr"7mtd/TCephG]kI
%g7fqBSkt=iD)`8EMrTA36dKK0N8V]j3fjB;.B2L.TSO#;\25)_-cm+N24SZD;O%\U@ca$e+`#61[##Z#1L^o=@mH9apgdjr[qTTe
%3T3Q$nOhai(B]F5H?.]:Z>OtY$f,ShhbTAHe]PkpC_s[n\bS=@b?PGaR;4@'NI"<Wg/A-M`@Vl^a%]R[0CW;QZGlF+I00tH(?L-X
%I$ISqi_!fL!1Gbq'<2Z-M#%*7L;9>!\0FUdi.jICnhjl;jYJP4+HF?n->&j=Wh,jsa'EO6EIa02-NPE2RL42MH--hHccB*GmhpHT
%)W!8.3]h99oBNun1Ua!Zqe(mHr!p)<H@bcndS\_68M0=hP5p0Bb_B<X12RB2EPYo<%A`(p0_!'b/F^[GX!KB)28n+03oUT7-b^kM
%*rMTZ"76CbIGqYU>*k3$.50='U=?YpNa`AK=`m`!Ui9+0!-,Q6WZk>]!L6hf7(MV)>)3>O:t9Uqg^@0_pf3i4"4AES#]hAmkmK^t
%9lm$HopV"Th9*]ObW2gT-o(eb1qZi8eg`$&p,Z!G"G;RO,+tN*PR;6"WTWHWEDKjLU!oaC%?iACA:X7P/%qd64M=Dm("$Tn.'r.)
%HDW&42?Xs7o!c\&ne:IUmf]AL,su*Mk-aI<\-:%(k!A(B`<P"TZlqA2fuR&,9nR[,K-JQ,SVo'jWk,3\PiPD<J-[C;RNK5?Ve[Ha
%-[='XXH'iYqJM`_K$M!tq9l^M%C;ekB2P+lQI*)kC,$JsHfG47Z*XrHV%"u?2WgO'^bOea$XEUe"V0EWJN!u>nUd.?fXjQQ*-=(d
%7gFjuM"#7J4.bft,$h3iW>]M`A0[`r+N5BS1=3>O[d$qPEn,FhRepbO(N"V9'2mu(C$HQso52uKK3d'(+H8s5_pX94<@WT)Quit>
%LoskipcoBpZ#o!*'N'c\?,36p/D86ge6A;Vg,Xo2Raa&.1Ie7Ak8:_PNJ&>H)*PKLc^Y,pguT$aSi\T)7datUZS:g!FPHmdmWlu-
%GMKd^EYlb7mP>VkSU86dgaDB6EgV(=,=i<2:$+L)hhNLUF-rK?hn!F=P=64[-ec]YPpiB8Pk@qkgpEJli[1NVjn&qMe0PcL/un1B
%]>.VDZ?E;eN3)+lVmD[^&6m_$6X"A*N21I&@S7VI,e\AkET(BM)2Cj0k7)3jcFMorSC9G>Tq'Ie46*X-L+uI))oaX5%$]@#GEg]=
%%p-nhS;T=I:?S\lcA$Dfl'HEcj4mOMW!12HF*5iF\I>3/'2pnTWB^IOg^<XN^R?ZH9d*O^c&DJOWga"[B%'WeD"AESVI@VM_lX*a
%Nn&:S08g9JZY^Ok1$>:23d/ddpFd#*@?H*t&nu;Ho;_CSZTbHEbL$VbRWV1<X-?d^!7[V2?CSnZ>Mi,#%?[)X6ttuP]8/Hf<HWt&
%+>3P6&P_X;89IpMVV&+a@P)nQKhY04\E#t(VC&][[te`s6k*lrYFq^G#Mh!VG?<FM1PI>3e1D>lHplEqL<_no,R0FG<Ft*gcW'0[
%m?Q*LY>>thWM>8%eF?jS(L+.scSR)Dp6<(=\2@PL;.`@jTi-N#.!+2p/Rjj'W&hdL0OM&CakJ<=&ZkuSH!H5IH-)UlnXAKk>_$F?
%dY(ZVRH]#3;0*Z--S3fj;d;N@VCUYKXXdmk59h:'?C@20;,p*l3cSCdfb,+*+YL;>jg=!<bEfXh;+BOqZ8>=(`BKB<pkjB6`3Is/
%`780iI)DDR&I4jl]HnDN0-s:OpCX2>.L4Ad:c+n@j5MMYO-afKPtf@pC;nADY"93_W0+cF)g6"U]!o9UGcTRt!5ui,PDXHad1LiQ
%Hfc?lPQdV[]F@LAAn81\Nk-g6625OA8@(GE@Ol='F]AIq4L2qSU4Zd;D\MP".[?t9K8M'sh(10fk.@VX)$](?dV<m/n%^b&(GGLe
%<D$73AuF*7445\*\l]EHdorKGJ?VHOlI-Z'Wj'cQ3@.B&9UMb7!pZ9C'c/TGhGbNSkhP8$cF2(/PEMAh[_-1\:flMZ5T.aL:6WZf
%2C+MG/f"oXNMXoshRM)aPW-,eM]13'L8&R1"hLbc!8Xst6$\H]i`f!Mcl1]h9ZM]4l+'3])IY"aQeCdk7CLI%K*b*:l;"r_GJ)+2
%4I]sc3Q18MpP4Zo\Sdjr0QcGtnr.&"ZIfGcTEKV)6n*EcQ-Dck\>dUtUaEP0(u;b\Iu#*k/3C)8)GXe4A>WP?itdS&!ldh+Ko;>/
%CoWLL$]J/_"7.3J#7D#VO9nZdX@9=+fl4F",0al(MljK9ePnQ7Kpu<]e7#4WEQ0"NC/GT)Y+#nhba^Ul7lWPR\SIFm^1k$%%T&d0
%V/U?<Xd6"9BI8t$"3n-I93"_k)M9A,?r3gY(pimnT"F+].F]F<#&eKRA^#'kF+dkm]pA%VOTQ"\0(F'8Em2DT,0*[<`9:Wt.FoP1
%@Z`/XM]=P?:un!U[mc<mS3i?ro<HA@Nm>>X\B1XCqZ\SWJ]S%52'>dQ!ZB5&9=U\>-KQRDs04.APp9MCThIbC4#P4,\9cArgOnB[
%Ar`:H3H(pXE"(M0(2t5\"g\g$/uQ!"G>-7cm[0OMmYU\)8+&WGmK,lGR!Ar)ZgK5tgp?E3E:1$r4E>@".eeT("#+rQ2d!mr94WTp
%8@8=5Mc#k4"4;fpR@p$O_>OV9acXh$D,O%T:LWZSk\X!OnK.VV-?[M-b]D7_o*_p<AC@=]Hat,lNQh0X;hG%ZFffg)j5`J30'uO?
%(ZUr27po/MDlCcf7`E.U2mq,!gu/4Qgq2n=P4RI[q$6OTFD+ISU!fV[jaZF6*Z0&aM.'@&0HM(Fr=R.?MGgDn9Jf?8ITJ*BUdq7[
%8YcD9GLhB__D9_;e#S/.j:Ya!(D-Tti:rj8_Rs6aP@tK.pslnTqN4\,k=TKFMJIMb!cpE9^N&2id^->`GZ.r1md2Ht"g9nB,;f#I
%<4rY&$Jr!A`3ZLo(6Is^aEo+NC+C=)_MV=0fda:TSt358JT4\Pr=*O'\PI*$kJ$N8KJR^_9bA)Okg=XKq8.rf=7Kn-A&K_1PtKS9
%"4WRaA:c=k5%\oO0Gd!h;p*g!8IY]Z9[,t59oH,]O8.KFlps413h/i\+BiYG+3uKF(t%t*Sgu^kNS/btJFhC,Y8Z#")s_PEC[9F(
%rRa-Kp"'DPrnI_;pXV42qmiui?@Qk_b5^6t)Z.(so$)3QLl]'[g]1WjjcG*J\"%D>bDd%Q^>O4=CV^2,$Eg$:*++#?aZFZ;Q]a:L
%$s%C!O-P)ETdtE)IXjjuRil"D/2Cq):qa8O]JWo]<u71I(?\/&#S([N-IQ1%2?tFnR]X/R``obqGF2glbV>mg&rEVi)-tpB]'#%K
%T+)2aJ!"OBUI[CQKdQ?-'NmUp:Dth-Yue@5h<[+jJXBEKYM9.qea+`ZjXtfLKf0rQ<Nku<E_BE[N*=-)Gu167dA0j(44(g=48L6a
%OQGf8d:i(gYhh`T2M]MlC^,%c<3u7A5g6XHp^T)6S,"pUjuYE59'An(Z1d1b`'4W3EJK)raEA1:28`BGn<EuBQ>b5AUE]49DQ5#b
%Mct-%h2ZC&q[=:u"uD0pB[QKr"DHr1Wd9qMQ<b[Dlg3o/"k7q4A4"Rfd"So/r#Q$'jkI/iW)+54"Tm-j!fL7U>20P0D*j1*\)[r!
%d$!_N#U,W!WomAI=)]2cFZTKI!`i!`Bs',$Bb_<I\P#e*PVV!l:`?Gp/uM8?DD"6nT_ZjP[N8tNmIqVP5+-[QC$%90]uoK[gp*DZ
%n]<+Kk7=dVlUCZY^_[*o%lrAG7#NUO"I)C;aZ?lr'HBYbiQ2Mp)H4kN2itOZdpes.ailDJRHpm;<Pho0)`p^la1h(*ijZW5MnoAD
%fUc2pC[=m-hcf#+qd1;`qKk1"!3a/Im6'#SDVGZm(K\BL0.sER++,No/9MES*9(W4s"%QCJ,u`Y2Uj2hcciKt+Bi[9SPU4>-t@K8
%<>0pP/U,3(Uo<qk&,I"oD\7d@r5N.Id*-c8odZ^e40NC45-;Z4-<LjgMl-?VUNRjhfA)h)?*Gs9SPU4V2_M;UJEB1@.H\@tfDu*]
%_)9L1)6%CtAMj#6^'*d+S->7HdPSG5h0O0n(#ec*KP[XD#dJ"]'=S@fB6t<7U*=RgC""mN(t=^]*$mlR4]BlWaI_)N(5HfhV&])2
%e\$e&MI!K*R)\F1MI#bP%duhkK#1B9GU&a0_0c\t&cGHV#7$J_bDcncUo9^f/F)fg6C24)X.Y?1?\[br!^Y5mR*j-'<V7j%/A(7K
%D/C;dC[89WjkDh>-J#Vch$Il_*P66rYoD\,]7I,qhg1j2RX<V\286Uk4bR=i*R;:Z^6[034^W),o$7A<q3j[7hJgS0h6)JCF'$('
%U*$Grm6E:&]DL)7!SGka\(e#kS>M=M5gphePT5,ic!4=MY7bTl,9gmG;W=;PWcC[fo[b4(\V)-4c&(0Y/$fZlA^PgVmoQH^$+)p7
%EMF(/4d_hg^["1_K)MIGa.9)'`c<BAkE*)fY/D2^ACNd?ZXR!/dWBNFqcn1,IV/_<I\i@T$)LLE)?pFDjcOGc64Fq+R*q;l#@fa]
%BO%bI"QbAJ7T82Edp>:@DSDLC(L4dZE]N@C9.n7i[Z\hE!E\j5[n;%i%Ik_LkY&)1=D#\JZHH-d]b3+o??%B%(4@Xl/A":^ho]ip
%/A#^BqQ`&mi(Ma7CW;^3Dj;kb=(EblJA1ArO(FV_YIc>sf39t1Fu\s5^6[034VtIiNRHt*93:`uM5&idQ8LU5DAT.op1BOYL!nYV
%DDN[pUU2I^+'_K88,0K+Y0SM5djq2]kOod,0AnC+]Wg\$G-94X9eK3gjLiZ!9].FKQ,>4>ADQ/\[+;bW9%_Z9+>B[nRi;UNF;J:R
%,<`#.opX(##9'L%7PgB*b?cr*if#JKFBNN7(o<2,>Z]ph;eZ<Y7q+C]#hDT"OAQp]L2W?EWenNa(:rN?N<GH7Wi37Bd9?a*P2CR9
%"uQ#/1i3Ddjd+t>\qKik!H24A+p55EgQe^QF%>5]_:dtJK[OP1_=pPqeO6DFcXn;#&Pc>mj2TPU\+jdg/L?hJVIqQT.sSn-cr+f`
%?,>WsY:hkY,dr<JVM$T^7l+<UhQ\H5'YIpc@MV)^FX]9Y/d7#7Y2BIF>-m-[!GB4pGktH[JA0qN/UJ7<m[gK`a12LXE/FJ[$P$]!
%3'^R7W7P.Qi-O(q(L4/^BYiZ</,3;`6bt?:RkK$8/IX0)KfPB_>JmfC@UHXGD5D-]WFD]qiRqJ8-)R+a[DZAB`O>8P^>,BlJj\'p
%5Z_n7),E4tK_f<^Da[j'eW&phNA;f-OM^i9L_d[5"Xc-1AahoXeO3eBf/3W@%s<$sUUR[JK`FElS";qJc($^mHPpJL92'CQo$;pD
%&gi5_1mC6XK97B!06GR9IC*GnW1fk3!:Llmo@oR9GFJsU/c"6#kE`)]bdccmSf%[*-#]_;d*-]4[?])R]\o<4"_jGKV0OSs-KVqY
%=qH'uDLI`eUMXn3.#jN2I#-B29r,?;D$Dng>kBC>>/jb;dR.#nT]H&T=Q[2/g.OCuIResQVNs)U9KRA9U\":s.M8S;,ranT%hKEp
%LF/6T-)u2;MJfKqJO(l4774dK,HO+Z;4DG(l,f["a^qA[7T82=doJ_8DN7;he&d(T:_V+&7%XRB<!qfJBcOQFJ8!&9P=0+AiT;8p
%VJ7<ZW)J'I]:MlPW\GC5d2NeXs1r_Jges:c%eT)kP_/pBs7rjJKtmZbhq-ccqlfN^BItU"E,m6=S7PReEF?MMV"Y_!M'##:rnm_O
%f73V^?iT/iJ,RF&rmh&JGQ7[2s#U/WT>R)sp"-s]^]09UqG6-9@hg#_rH"<#_$]G!_#=Ejs81^OnS##iaSQSqcpss\Io1)%N91'>
%7rP!JkRHMg(`k<<_`c[0/EB&K`HsGO0`96Wa^n&,\1-.l9ctH-X\I>AglkIM7](-@UFG=fIXMN4*q(hk8Y_j=9XjE/S"a0**S9@R
%DS9_c'E?@3P2R].ZcA.^hShrlPl5hQ)t(hF@3ZR\m@"79,R6JrW@,dj;C'@=D-!t$Sno<'1*+gc5KB/<;D&3R3;P*c<\+=]1+<6L
%if6,Y]Z>;lR_&rU47An(8d']mF1toX8[oADLL.jI/.t5pC+\H^^+"^&%I^V3m,TI"3a$:O6SDk_(5^*m+E#$!&2#,)I]L?)jZ1(r
%(%tUjIrWLK\aV8jM.2k-jO6!b66$J[.B#E%&uK9'(p=XEVSBZUNTQX_9KU5hk,)/Eh2Q6\-_#i,H'Es:TKOgY4-'9&''J'6mRpQc
%iLXj(Fu!?9)B=($`WSSVq]=iH+!%XlMY4aFI-;kMbp"<rfP-Nm;h'lTS2O#:lKL8H"SM#-$l"U/HfubLbp!bL/,lEeI87MN8E9g.
%j0e%0$)t'co\h!fC0$1!?;XD(bXXlCHW'3!/ja1XDj6u=]G($Me$+t@`;[i*i>c+Vr1Z[)$&VAYS[XAL^m$AOjN/6@0?2&l=C.+b
%o0DU2BO'b@X%[m(,tuQ-6*<VeP!\4H1W\'+,uN!nFVj6.TpIGjMZijm@k?TH=*[SfQOD>#JCWN.c=oK7&uK9'+FL6q$fcWX!:!c[
%",sT"bH(72C_9JqMa5Y;E_+?CBQ!rNbn+EB2^Z)@60V(eLJD<Y=XC/jHj59MG\`(O>S<Bl,WH<c85.g$VhUI131k#aP)U(%1ilLW
%*%UD^H-O,PfkK*[XpS&5Z@*Ra>R_T]joCTb%JF%*i45f'90s'7ZU'`l?5Sk@8o?FSBr]?gg(!dee$+pdWiu%t1Ik%P>u`uD/K(St
%\T+kK@h5,\.9Qd]JHDZi1!e`j=b<sU;>1Zt7,qWJfL%<#C).,^_23?VJQ-W11Lt3@3RVcLR!'EnkTrpI+q_3?H)tB*!T$adM8H`(
%EXXc@R(orDSndg82p!*iiU+46lK+(G6d#I.EJap,aJrYrB=TZZbf]W6PK3#a1fFmaXlA`9(GIFI+D<?I#^N`2bAA$k21E7)jpQF'
%!I<bjVSi#!T5r-&qW)BHM.QcLi^^32Fiu=>MefgMRtcnrGt5n.9OnWl!mP4dOdO@b^_bnqTpIGjMaYq?7[aibc#Lg(QCr:%@j78C
%+ql_SaDap5%3,-B;gAjph/[9HRe^X>p]^]QjiXXup<ZI"RRJE6GqV5!9+q0%N$Z&?F<QLf_K<k<:GrY$R6jR^EO<3F<AVrG`r'Cu
%me&9hP>/qaY'e]d\=#[?6ZK$r'uY7\(5I7B.bM8ka.]hI`9$$U`4^bU!$j<AP5"W4+$,7XAs"4+0C.aNNTiW9JR*AiPK*FaOs@"+
%a-dI/`)O'6:e:c6prP)5nl\+b?K<WX%O/t-GN>`3-&4+P6+FWINcSNK8!R:Y(gp_Jh>,Dh9Jq_2g**nj80T>Go3?AUWJNtcX`JCS
%cq-ngMhG(X7t75$$P[Q2D+&ZG1R4Pl;J6Lg^5u@4:(G^^a=JEkLZZukPNF3=`)F##$X#@RADEq'MnS*-eOB:ZBpU4*#3Jf:p<ZI"
%RRJE6:%G<J,VD6_HR7qV8E),T>4KNofedMUD$SQFF[W\Y)M[a+Xhua"_A;V-TpIGjMhHB%M%3(NdCfY7i/bo06"(8$pV8rF1i25$
%EQ3j*1mAsPEYPXDa?6k7]XNZ&_UL+L6%:K#dn_if2-rB;-5STsb!0(YD?CE_KW/*"bf25!fe)f$fT;@CNQb><iLXj((:#g-eo%HN
%rl,'5]ZJJ4@l!)o"8??TY`OLG#X5Z.3`IBcf@_<okTrpI,%3AX_E6:SO0PaB9F'*'9tXqM]*UUl&uoLT0FMQ=[)"Xp<8*!N#nDis
%RD;0C@;6R7@',K-[]C++G9VL'ctAqg9$S43?#Gsa_$i_h\4Qi#%7>VZ_]@@i2f=pC3V;?j5/!oS6JFg-_.BNNJN_QE2f9\m?C#c(
%Y`'Ij<W%`;lYGbhm^OUYEJkg.->q13Yfa(eic:(,V5EXR'/1_j5gWk&MWH*0Jr+_BEq,==([@%>Sno<'Efhb!ge9NThA8UH-"\fO
%i=4/_9Qjn]3F9jfVW)&KXX"O'L3-UugeKG?:GrXifj4hG<C7C/E+l8cf-9>*Y8[H8JpXe;=NEd8K;c!4A^s:XjH:4BO63Ef_`c[0
%Cuhi@M-YQI^1%2h3B$[J6bSZ3%,@%@_a^M!ZV;?MalY?!rlH;lXKF&UHfk.(A)UX_E4-#NV/*Zm5bh>$U-4Zchp-;_=0e\EgrWR)
%8?E=U\K`%VOls=5n<FCk063>ZL"t[qBB]+;h)jM+=R$%8(-ZiAr1G]_OdGk>U\>R[NY:Tt7]-?&A_58S(-ZiAI+,jE0JFV8e9[G`
%G-bct?cg[a,*-r"pHlucM@YMEQRZQJg=:B(q;Ee(24I"\(<0^%8V4G$8Ks0$Et2*=OZ\7`MD&MjY`g`Y8YUrCDbS,[OG98d`F.>1
%Ons$Z:c4_qGqU,doJ.\5^1992f'-AJFjPkiY0-4gMepeMWY"5-JRUX73QSaK];bXGO\dp)K_`nZmRSO:m%9t@mRm!:opjM]^5u@4
%:;/be(t"fg0U%BhO5nkcS\ANN/)pBO8PD""7'O.^,P)A$Jo<$47ZM]d.UO;V)gLQlVOBpt/8l_*A6dY'C?-'P8JM&2k\s%`)HQFZ
%EKHi;BiNI';\LAHr*f1<&"UX<ZUgJX&eYCs##'!?f1tj%n*YQ>GVZ2h7\s=]?2BFDhdKW(7.=a`r_V27Y3r!M0K"bVd'bK.>WT7m
%$k0LKR^1Q_CZr(Y^dBb`C).,^O^jN?M(`qc#+qJ)9lY\8mPaR]9:2/:_JGGX7AAeo!3%ELMaX,V#0[8mH3mNV8;-*<hee=dr?^Fl
%<BW0TA3+L_)CcI(&T+c$S=dlM^j,Gl&&!Xq=X8U4pO(\aqS.X(92*Dhhf$UJV[aU4aeiJk?b!;p.K%J6WFj7\3lmP?AoZ\!GlcCR
%"jD/s8_5CP+hi3?KS\s-893_7"<Mjq;mT#^%1,a$rJ/CY*GWql.%tWR]+$mp&uK9'0H4[><Mo#b;+m$lnE9$2)Z]VCe$+rfSCXMQ
%:ihT7KZIeYbY.9$\SL;#Z>%t4&YZ)$qp:;M0dECZ+GX.PID>U)9:2/:,&D["S`r%e)Mu@!%`P`C^b[WO>.fBUe+u"Q=KBRtP:@RR
%`%;'PgN?6WE>Y7h\h4l)9_\lSl/P>e3i;TMjb+CnL`As[;gJj_r#M%FGu/f.@%?\\iLXj(2KG%'Dq$"S<Qi48#BBbtAWJ0@`UiDj
%'_QuB]!&_YF."\+%f5#MZn%JUT!(0j^?Lt@\g.h]^RX%(!G_`HG#T,^WM<tj7EQIL66pG@VrZWQG8edSh)'A&cn7[\foIK&VpnkB
%8DKccP6=N[<t+h6e$+t`=;E2+>99!%61,U#EkCJ#Ll$JaC"UM%/*2-PK5A#;@Zdce,4iPA;CV=d9:2/:,&CO6H=keXI(cg5\QuYs
%^dBb`C).,^;7/W^G[N3K3NPdphQD;-40".@eAS6kXh0?h\Ze`)F-7Ij%JOC5Y]8n]+W]bggsgGoI3T@i:Qf'sW=aL@,tuQ-&[_(3
%"68#bYT`2qLBL,7;MP\Tj?/q"6I&+[WP&`t7uikf.=qF]Ts9AZ_UL+LjunIo/:mV)6NXUf.%_rdpV8rF1i263E3eQJ<D7JEH$p8N
%Xj#9'glkIM7a?#YP0""P:POV9EDJF43VXKtm`D>7,7dP^B28rTHl/3[Hp`*-#4AuJ^Mu'X[1@/L:B45H3<DAbh4nAt;_`5e2@UV9
%i:]##P;b\E`/7*X4j(_b,oc9oVI:\c>]-5;CaE*3/.mHt6llNoSsk4WZ>%t4"W'D%J@?"d'a[A*+JZ>BLO6=@fZ9i6]]l<X+CA-(
%&l&-YaIMjDC'O+JVI:^15)cBteFDN4:Sa(WF=XcJiO-=9L!PNL^m$AO62P-W7C`q]#mpN)V^td;[0#-I9uBFQL`o*UDT-a]8?"\]
%?7uU,1c5C0ACIcFa-\?aPpA6m1eVpBEhhFa?7gEc,tuQ-&ZeLR!K97(Z384RAV#6jD18>-4PuAS!bMK#FA*''^&\WoO`.uC#u47-
%RD;0C@;6PaZ]Xl=#Xue!L6TlPc7.9=;B,&GVI:_,L]fuW'Eg4J%1-D*eF@2[:,?ib2@UUNFNW$;?sJ<Gd\I2)d$mrbYc!rf`hek[
%7;=JXj)&gaLWM![l5L8IKW/*"XM-!L&G>Op=aaA3.b8S]FZL&gP>/qa7`K*+e=?,P'TB!Pi4D,CI+>LkK>&LlUR)*e5l7C.(>Q>H
%."n(o)Xb_E@3\i6b!9Ll_p^jbK?H!O(YA&J'/1_jJGCh^e>Qa*TWV/0%FJn^4MP8uglkIM7](9m7HOZ!nHt`*h`$a/fFE_]LL.jI
%//%).+4t!.4bj_#gesF.mcV:>6SDk_(5]7)$Zrl>2B*:<YB:/=^"JL&MhJ*5--V)Q)Z@Z7kt"*?3$^3^5BKg;`>>gpfZ@,g#kBt5
%IK`+Mm.-H;c%7TZeZb5f!jrTMkgU6!,P#,\g?V0K/eY0rPmB9%aEoWe,!P]G$]*Hm07Z4X&uK9+0H57"S6(*44/Lc6M(_:o%3(_T
%*;"D\Z%TGFe;lfJFL.!gg6'`;*>(eL5XOTkM@!s3_23NEC"ULU0T*DIW`c&#1es&hoa9u`-GNC55]jOY;ZcW83NTdA#=%g-eZn\I
%4sW;m\^If%OA$q\$4Rm%Do"Ti1i-\@DPZ=1^]huj7VV19c>RG5glkIM7cm>LkR_M8VHM?O2^IkFC.01i#ue0&=M;dEm`e4f=SQMJ
%no1oYC5t3`KVYCuVVop5U5VS^CqN@=C98Vt4]rM9go-oS45(Pd?h0\\SP@(THa7A<a>B9(atXgD//.@r7q@J#EFYnY_*-I.Ch,cO
%nW@d(k#EOfCY7oV+*n5lZV#mf*5en-fT;a7FPEt\]\AO'?Gb3n&n[os2\"#\d\8rTNFoMCMZ0>B<U#c?A#&r?'MN5lNPn2$F<>Xs
%e=O/p:CShBL.-M2^#mIW101^2#Tg/6Tk9Fk)IXhNKs=aLBcQ`R@18aa"*`h*@3sCTW1>G7*h^&b-DuU?_ra*'3f0hJOU*j'E[8iI
%q^?*X2hteY*dS,kZUgICFl7q4X7-s5,qA:o!tW(uWECL`1/9`b>(h<o'P6n[JbSJA&&!X2WUI;H@4H'1$qqqg)+,2J@bXW8TpIGj
%MhKcF0O[!d^daX^P4a7-Hp708VP_'<QD^D/Zq'#%j!IT[Ehsqe>?:He%6X7qVIkrE)a)Ll$(a;s`m*0CDE5tCYCscaC@W;[6P#B-
%ZIX?r-D#2=E2QfW:GrY$H/RDuF4`fmXrN=BXANJS]a"&Oo1d=N&CrSId;A&a(3lfN'#f9FRCFW6L5kPSD-u&2n`4/Y6?=1Yf1Lge
%73ZEk@cMXTfZZlr*A8iRDqS8sCtM*.@;6PaZQ[/sBtOuOdQZ/c\P"qB_NktkE)/A$)u7?tm;"L$I*5icL3p3UfXR:1b/&$*`C[An
%h?2Oc'$c8=_UL+L<\%<.%lHqQ%NE&27M=\:^'N&??Gb2C&n[nXYfTr%)c$.G3<pZbp,3k7kTrpI,%3D)=qGtu*?T)?`B?DabT?kq
%-_#jMCf>p[F%pL!S+h0;W>@FM7+gW*<B_88#2e^>nh/a_iLXj(2DW6PMGfX<F)92\E+pYQ^BAK#j-^];/RH5?mlGu<T*G`eAbb-*
%Ws.IUQS::T7'Kh1]*2b?b]7Gap9610;#"ooRLkr8!4>n9+eaHkOfq&SXbM2.C"UN!R/d?(hE,?ZP0^@'0R9S,@QlZkVI:^1Ba2VV
%*b>98#0g$"%EAjGR\R<\8N%"sfhFVSZON?LaQ"E7kJF29\0mc#NU.u3??=]kZ>%V<<4q@p9kDdi]ggMn8k,%=ig/*g7T-UU`&SpF
%I`Vmu)nEA97(nbKZJ5^0$3&SlRD;0C@;6R7Bqo,E(Rd4I>8msJo\E5TM_P62Z3Zg$8KFhK,YUb[J;,9gRgD4L&uK9'0H9r;e7M%O
%+aMC*@Lo"`+*n5lZUjR"K.^!SC]`lJ+<cm-p(;X8oFe$5O]\J>4Om@&P,L"V!JSdF4S08`As!AR%)trubgtI%4nKAaAs&b(=E4]4
%htCbZ_?W/[2'N?_7fuB<Kn0!G9:2/:_JDbdX*2\L;:p[@AQKc_fu7fq\0mc#NLV7\/rcAq[nY#;-k2#c$?*)f^9L\U68uZC:6K,+
%q>5i/*@/Hun>G0Z4kVZ.A@_mkSg9::Op]XpAr0PNok$l--<8#DC-ocPEZlPJHbqcZG%!J54J-m"e)CP47Vpes=*rIakM;pbERgrL
%^cg@-CudFbV<4f=k-J][U=8IU%ee7BR$pI\]LQ=_5oqp6`>B_S:?fKipV8rF1i-\]D/+BnQ/_/+$Lc12C5R9",tuQ-@GZ3"QT,>T
%iF%D/*kHTGht(@6`')d1Cug.+cH_7!M/$ojD+kRHHh/9h]nE@f,cm1=*/9mDM$5oBdZ(U;NR$5&PI)"tACIcFZ\3t-$.,O'6?IZ:
%0t$dGVQctupdQ8Xk>e4,3;9D\B@32T^Sj<f&uK9'YWB&R(_?>E_7)X3,,Dg)^dBb`C).,^0dgS9hNPCl=QYaNM0lOBfZ9g<Q=4hC
%4u_n,$k6@o,@?)U][,:[VhD$P,g?.e/X+N-W=;FkR3^h5oH(LiRtco]P=Ag,'[6Fuq+!qP;p7umE)/A$)d1Il&sku/6h-00G[2cc
%[;r$>:;6!qpf8bP>+Xm#6k)]IMiu+h[ic3pKW/*"bQ`hmYc._@<,$_iH:L7`2]I#*,tuQ-&[khJVMKCr;90^r.AC*g^Ar4K2@UVY
%c1\e^^9Ou+c$MQXeO.S*&[kg_7J^fKL:"`E0q3A+o$C$sRRJFQXKKLQGuZ^lm\q3"cqBap;`P3Bo\c]:c"_gUo+O@=3Q;s'W%,J9
%#HBB*!dg%h8*21:flrJCTpIGjMhLmHAU#7/;83H>$2V[TYID:gH3mNV8=5BYj^L"hQq/u=:cp702aAD4U_fnt5$mY9Pq6`'b+50L
%D`mY)VIkrE^NCmF;;Yc5@kk4']l+D76SG-:('1aLP=f0h^4PrV$9VQd!B'%<@/>\iQJ17JF,_eL?hJ!*[p?l#/.uQI&$E6,^9&B&
%?&9luFtISqoFe$5OY@`qLq8n)0;!ZX!tX"(5g?hZ(s_G`ViiC%;8.SZ0S;N1!`6/K9maMNF:&4Ui>(6-I`-O$GN,31)E+mj^3\%e
%DsFGBpo52MhO8T`aoMZG1FF4eni`%e:Y_.._a\g5<fSBAA4i0;jk%VX2Id92KW/*"K$>T=iCO^A-=#%FJJA"J;%320<NpHJX:$Kc
%B#9DjS,Du-]@/4CgJ0X9)k"S+7en?U9a].-'<2X)>hNfqm`D>7,Ms-Va6$OOS1a_!I,SnBD`mY)VIkspqNdX-1eVYr(J"3PdD@og
%k4CiO$_LtYY`Wi1^h6S+B[2c$RBCVfd:igQaeiJkhal/-BeJAu\Q1<QCfLrkMh'>MdA]V$h.jZ7Uiu38hhSLm?Gb2C&nXKlL+(.I
%@H*;5P&kY5NEJE[4]rM9>g:F<jSG>1Pm/6SLPjQ-[uG1o)gBMIFc%ocMDh?@a;rFn>dlc16SDk_((%%*-;>3g2V;]kW$q`=qkqD#
%04AT2M.o?2lV]sL+N:T9o/%U$QV)jm7DLHrBt&*H-[Y4$).(1\'R1I]IM-B2M.o=)gmi:SD/bZ?(*kj+DF5Ik#ue0$KPaII]W)7$
%O`7k']rLrfUHS5^VIksX2Its%WNOt5#VP1<ftWd)6SDk_((%<eko7H!(gqu[fMF9u1kS::m&;>HENA.&?uj_7qAm\dLtkn`IE+].
%@;6Pao0'N7Dgp(*adf+Fl,bq?c>GujH3mNV8=5A^9?^$AY/5pj#&T-fJ=eE@<O)t!Ke08u9]9BqEYJ03:AH?QOB'1n[L)jX;:SW%
%#GNA^F;m/r04`V;PAT0*8ZG3mQM<RAb'?q,i.\3=2XZ*2NcW(:H7Ml6eLPgHR.5m3)KrEU^<aNt%ko.1kZ,=>JhLZbY`gN:'RoTL
%:0&0T8(trZI^K`4[Krgt7DN(4#<(6eE-RsS@)ACR;6Y&@KLk79<PM83UjT"TTY9`abHjW&[4D@fb6%@"hG]]K+>:U!dVRa15$T@4
%bppPnF.Fk-ofXMtgHnqgdlc)+DOP].?r>';"%A+,1h/-^SDaiY2=+k_*8onC7&Gol)6%B2]cF8[LL.jIX:i?M'tm4:@m^fO;U^ci
%RNq:i2Y`u40K#nafs%:R:Cgmo6@Rb6]c@H,Wl]0a=o_g(bul"X>0=i#g:dB$",][;RT74PkKo)K3@W4%K.-1dPIG26+`EU/0K#na
%fgqK=ERYeli8h_=Z7O9q0nhbj`A_P[Zu/joU'\5_Hpc>k2U`73glkIM7\1!H[GJ7&91pj3I&h;8Y`WdB&L;Q8'Gk;d.__=8Q):8p
%d4[?SmjA^c5(5_A\G^lNk2Z1dS9g0li>E_"8<(8L#ZnIhOE\c;R$q$lCtPcJG41Ngh58+Bbu`2MRHs7s+\O!A\HtQ]GXC)gT?6n:
%'=*,UNlr)32][or?<;Q%;QWtU&n$\4%u+01a?qUhC/tYI@7qMGqb?\B\[n=+<q2nm,88ode4m_r,AF*t2OD=i5A:YAKW/*#b^3R:
%b\V>$al4f0k\W6=TpIGjX2MB=9:>##!K9iLqQ!ad(nhr&1i-]+5K"a=[nm0AkSdinlL]'Q%JOD^Y`Wd6U2s;a/FQPDi`o76Of*r!
%9WO>Hb=f0pc$O41^1rCW\)r_#n$V-4AA2Xco%NMSbBuKq&l[%!@?[;(qZ&ZaKah?]Z,F%=*hEn5`)O'6QjqaE_Xn?cODqM:@%@e!
%e1&+.$0J(6V-&5d4QeWHBfGX,n8(:1&l[%!@@l4/W+\G"cJ+BGg`44Nq@;;CVhTn!a.8<_DcmZl>Ym;p@3$lXJo1b.6ROV=/.ttp
%e:29-"6?UVBt"O-Hfk+MYct%nN,7C^>9.\mF0WW`OlG'T:E?$FqX:IXrG]#MJ/:M7A^mm:3S]apL6\8S:b9r.$hhBA"I,0^Q?.Q3
%?q3*EPtF]B$i,p1mL$?mOBc?)@&jm_Sno$<bp$S=@]Q]rg.X(=&ukbg'"B/^%4g,8^O-jQ!`GMB)IKTY&,Xcc6d6gk\A#A`Zr$Gl
%eqWu13o#jqL4sI:de/=UNY^ol^9HD?:A%n"=<gTN/(q,AGh>m<25?Bmltl?HLJD<Y=X8SNKk(F`c.KLqL_L/%?dWoW6SDk_(5Z`m
%Fu,S'"/lZh"A7?g?bM"RoFe%`IeO,Tk`Y\B8ZGbBi"[*li==TW\,"BDR$pHQg:0"K0fEB0b:PU%p8H(+bk"iT_DhG%m]1'!-'+LC
%SR\7,9/>:d9uBGDX$-Ij7!V:hqK2L9q9Z@."!V.%`7&93k<0&F&DZ_UqnYWQ@;6PaWtu)]]\DA#c<iKjiF\i-5P`D*:Malf!?2k^
%l.a?C-TH*A2@UTckf?=g$WUDmOLQjV-t"9gkXs@dA99IU04d*HrLKri.C^a`pr7FAaih('$#*+Zc?jrPUNkuK9[+biFaWL:)I<6S
%oc9$;q[bM)H3mNV85't9>]Y:hUrcaBpk.[G66:FZeZoIJ"^>,9Y,1W:/=1^#.DS+"1i-],<Rr#sRl&4@=F;rALO6=@fZ:LeX:bUW
%R[^sGK1oM+;_rAg2@UTcaM,eiF5d(fKkqKaLRWTeZUe2XGJ'EFSj/if%f5;c!Bc^(qEfqumHH[VjTVQ^baS>i"oeW)pLMaWOXYfq
%Ik-gDE8au#i8LP=PL$.DX-6S@3lc(uA>Oig&SPn%,VgH&!E6909FE\NZGhHbi&pJ9]]6'=LL.jIP]qLt=u%]DC"U4?N+=r<%6X7q
%VIksX2DD$]@9U1)r"T#EfD3Y\<J@??p*aiuSO)-n8U->Cog.I_m`D>7,@@am]fFA"i?+*?g#@8+?JsbP/V86O!<YpaeJC6Y0g/=$
%a*s1G_a\h8@%Q2TAf6D_*'/219A[df@3`D7mhKK3A9lpf*64S<JU=\:fZ7sPl[@(4(H=@T^9_tghXRZfJs3DWf2XKmM5UaWR)K!r
%m0)s,kTs3O,%)1j\u!aIp`_N$'^kn)I+$n''Qf:tDb:drBn6r#OG%sj$\r(6M6a<<m@fk#22d.@\2j@TjWi&cio^.MPtj=-44*]J
%$(-lE?s8YoW`sX>eH@7%+Gi7gpO)0N9[+bi2QBO(]a`0ec8KM(i,(a(LCKfa><%+1,99(9o9&Wm!:It+@3aO<)RFg)DUJo'3Bk3'
%O,%&Ye1;6p4]^4"FYm;3n^.B'fX!]aLL.jI/.uQilbpKh##Q9]J"Y*$b;C5`kTrpI+u*ru/3[iULlCt-,f*PEFrU#!9:2/:@bT1S
%4b(LM)q$rI@,$+1e/ioB;mT!t>AJ$C_-aQO65#?a;e`l$A'[9pPUlmbJhH^V?]80MB`gdNIi4><So74@ht1:!&d%nU5m6_!N4T6U
%oFe$5OdJ%E[qnqUF<I(WmddA(4S08dAJ$U([a5PR_-q#.JM?[S)!Zr)]hrW$Ntm4\jhqTcae<.@=)^qn%3*tPnjC[!3GDh4C@RaV
%Fq^'U)E)V(EZQFZ]9q\V09aSndp`j$KW/*"rr848!W2DR\APioDMgR5B**fF(PBoK&.@<Y)-*(R/jtoR6S)@eS!gEUhG)dn9Y/Cr
%q(?-eA5;m8K[)7?2t3<>YhfJZY9ag_Dm\doJNiO8RQVm<Se5\9;!$n>]I@/Srue>]%ucKl3=\'hK@*93(/M#uXOf9,<4BdnG"gW<
%Q*E1&oW=\4/t\QYq#uo`eC2f8bVA^Q%.W]"=Aj,gYqh'i.VgQTUcYO'rPhGAI`!NH3kmq'TZX7A>],CY`X^A9!m5@d-tM3=[E?.7
%>\Rg>VJ52k_,Qt4+?;]b$YgEa=-lp2Un`ljK0#&8Gg$3La.CLCbPPMnWiKbZFFJf-!$tX@Zu\1Fere]bO`#OMb0>)W3TTrd9[<>]
%je>+a-%7VCo*](6MF?hN6Q\`CQ:=E=#Js,d1,iESPl?<73kmq'TM!#T>UZgF'`1TQoYYi'cmEa3+^_@+epI=f+&&X2^j]al;PYXS
%_]d.Xm7?2^CEut;7r3Vi+sh$8bu!EdZpu;sIXs_g'^66VcD0\oEnAC+eYrX%P\Nn+G"cMAHV#t9-+3-O^R2%m$iGi5^/DpU"1BR%
%`R^n`R<o^>2L!@l$!A<V;eIG!IY$iNP]Q#UAk+/_JP<Bsl#&SG^,T`0j%>H/c;LCW1D;ga^n96dOh+CN!/N&nYnu)hTe<tNJ3$XV
%J(Bj'^SFoY7j"/!o*bJQ/]eMqf8(?V!(o7@pN2d-3n,(3cJLPXge#d*I5%Ad$iGi55.HaN>/%]Q2#b[CX$bY&<G?V)($AOZnt>FZ
%r/$u+WNC.o)i5"E3U(%bR9WF<0ko3F[7Irmr]u4[0+di(VL5]ipT;;]k<#n)YMc)=cU+FO]bE%5I\n>'._ick'U@"7A.$M[T`uoF
%ji,`*&:fs7iE8M7Wg'u^c:ld`"ob<nS6mjh5\PgWU=?dk\*<F/-]Ic=V"e+0VEgAcNi!k1VX"'\Io95UVN<fr$A)mnMK:[V8t!Tq
%90f/ljS7!Rr0jEa4#9n"(\g@+WU%cmHU<c`#Q!^Rc(C_pX&^Hg$<glW\eF0Z4qaRZ$iDSF/b>n]AIGC=&u8Of1cQh9!gQU%Y#In<
%FFJd*'UA72ABJtj-eUhLe4N\C0dUKe-ERrUfoidaAnJZfEWgl$.o:8Y9Gt/ddcZ<=A*c#SU!tfn_3Qf)m\qa:a8q<!oYH4+0+\V4
%@\?EZdI\PQ(pbcNr^bo&QsDd#D6Y?:=/6Z[+3\CG@?9>B$HpP[11aDnf\d**U1%\0n#..`8X$r3Wrj?0l[oM7?Q^?H<%jY[Vd;?)
%&T.p29]Wg@Xr;sb\\W#O>-9%%5FAJB$iES)'1E#HSG*iY>f&(D7<8lZM*ht*OYZ#efgR7bSHki%;)NfR0Mg0,b^&;i)`^a+Te*?]
%%TXgobKcg*VKsGd`XhD``QXRG+CAV4lhEe/X>^Ke:ZR+mKk&Oc/aZXg6;"7b9^)BUiBX:`rIeB)R*[+]5H,)@Qj,76jbtJjaqa4Y
%'0<nDT+mS$&e3_D>WM.l0Zm(gk,eiQ8;X\=XD(;4E@,;@O`eNi92-doccX6V!^#MV-V%ZHEVi0a@G>+bDk\ZX^j`6C(s)G".4eks
%G<!Z@9m5Zd\#"!'(PF!CIk[WD"?D'QT[o$-#hg*B[,aMN)3M6FC&D,$7@#^Tnr=]Xd.mkE:t*)*]IoU;_1A'p'F!nl!K<BF+SZjX
%kI(5UGM.Z9#f?A@6U,XZiBrH#Z<2%d46)^GI+07L8`lBN-?O]f5:L9=W7ZcEVAM9Xqp;.(hnWkJAdLI-q_r)Oq-ZPN(C9o++sZ58
%CN@?4)"r6#9sp6t+++^#rH<&U9nGMMM5p(RKR'/O:ud@FrE#5NJ`Nh#RQ'5NR%$!_MRe2V1Jp#Y?p?+&7H*>6kCC[YIL#9d!p<(!
%4E3KrU<Y(O,s;f>iti!m*-*N-f:YFiW$,(F+fZq"r]Q\$,m!g=..2/;6rj$d_EJ3d,CEO@P+Z6Z<b#K4-N2/j=c:E:o^^4*SR::c
%5;[N7KL_#q1`YGWD5?klI/_7[n+:RL@tpSCWq-Vrl#0;NZJh*p+Zk3m%n+uc(<>bSMg>80O%ed8!oZC?[*#5ET#S43d>>=]L>)OA
%^c@fgjr4*>;I%re-?O]f5H/ML9UXj/Xt4d#\[pkkN[&_h)u98Xi^bU9KBWZY]PIo%XO,1PktJ18/$$he8k3]\7h174&B\Wp[QnLr
%&E`du:o<Je78gI#ShGMUYH<I^21XrGFd-Q]+&(nr!e4+sO`q=Mrp1W_&&_^U7=/$E<XDq7#PdW&R0]'b+RBoDC<FMbZeFl4Pa^+Y
%Lf`c,<S#,;eg8T;aFqhl&.\1RJFK6+^h=XQ\A-=pBE'MVb/H=*Q*[360VS(Gr1UCck$=Y+b>%@?RbDC\"2g;lMWB\Nq3r#/T8B<3
%"+tHN"\/!`kNFQ=THKfed["K=>/"ZW9:mBm(D/.35hMEO6eWC()bDlq273^<j-Z&D[Eh<2?^O'FQeg[dK"n.Y?$<")U&\no1f`;@
%n4h@)3..2V0JC,iI_pPIAos>l?os^%<='g68p*5M0e#+Cf(V!3Ui.@tbff^iO!#F8dr#<CZ.c8$Q1l8;XRbo"Ccb>?V!&KaR0SEf
%(i8eDc5^e_OcAB41b$uE4-#`j*0E-.kp2>6?oOa>i",46r<a/H!qrr9Se%b_SsV,)'q$^YqDT!)5;3q8]Y4YnPJIUP-_a-Z*s6d(
%@WEIt+$'9DMT-/8`[.iY8%8n.kMs)E4-bW8&nQ*mNEAhQTmXiZa>BGp+<9>*/VJn^`U@gNP(0B59LG'X7/8):#?(C@R`[:Fm8G&`
%>dB+K*-iGi_0!%=27AsDeO#naGEQZ$r%5q.43+nOg-"V@aXp*4Q%Dbp5pWKLrPA0H#H"Ku!b"=b`MJ.?\Z`'WD&mM\\qd+UDU]iT
%#+SmZ1JR$K#RBF`5(.oORUC$?83UM8ESp,&9HGR_#&oLga>BGp+<9;V1k]p@?T90@BB_bk/ccl3m60d-&"4sF!e4n8FBYXg$k/*d
%78qXWDoa_k4@k-9[]B>)Dk^tD^gN\AR0cXq(\&[N0T]0R(EUUBo:]qi;ruZrO_Hkk5WBmA<I:"%8ToWm/q[-'m9qK.?Y_0APD``p
%U8e%l@:'LAFp-$@I?)uN/[a@1"")]>mS-'R%SY@I"ob='je<iFV^n)o+QoBq$`qSN<L3[t-`6/+!oZC<S/dZ/ZQVk/7$&L>=)iN*
%R,#SfPMni5N[)qNIY"^V(U=>8C;!X2]Zke8EAs(oUC&a;,8'4d&F@QUB)Y&Qfi<tD'qD<<2\V0B[e7KifoB/#B;Xqk!oZD.*bKPF
%A!H@qjh0()5aME1^t]rTJNpeZHu4T,TQsooLg6#G`CF,Sa(,Ddeq(ji^):s#Ra*Pt%e/X8_KiI-%c!&M?8jn(nLRAhimh+fNujm\
%pY:9`J\U;0/$`!'!t?o`*_1Cl/i1<9NB/hgndC,!r\R8m]l5hX-M\(nC2p;p1&IJHcn!(jg<WIVquYgWLJB(aj5Rt-=Gj&:%9jO1
%.DblQ`St)EB-L<(JNpec([&aio#1\(F641LFF=u&e!&JOm^!i[O3BAoJt,(cE(Oi??1VI=!/EAnp=dpC:+"4qZsb-McNb+E^Hac?
%\@!Kd&aXSS;:9c#Sn5R3[uJJ=>amh&T^Do7jW]+YQ<c85mQI8I]W0Lqd9b4tZK!=GZs,UGZQ4QXJoH7XoFjFG5/[S2a"Clu;=;;8
%k;+p+fC&^VJKD?4c]V'0%WG*d;QFHC*OFIb:O]A?(;Q=ESR::cY<%C0-(M_C_LWnpRN`UMSqW#/gA4jn.",Xgq5s5krg$WV;W6m,
%1J=#K;VNhJhL2;@j)3B;=s'-Yq$"Wd*&#.oh9>sa/\p2=p#3nYLdsG?#Q6iRd.mkEQ?Sn6%jE9/*1]K`cI/RC`Z+$[jYlj2+.:LN
%"i<ADGp+.fMs-6n\>;lh$KYE8'Y*eD`m3>=+&(71L1%T.NGp@D(f.]!8j*b@M6pCtm@DC'o5>g0IXs`ZO[Eo9LNH\<F/g3pVmAf2
%F&(toU_N[`6/raeo6_g<E4q8CM]@1K7h-cH@n`Yn%Nio*[i#YmXBTK$KShJ03UKp_8Q?LUH-_a,od<r=#:=PAJT.8Y3kj+=Hg`A(
%(2ElX^<;mm8kCse;?$l5FRS#dKEF+%)NVT@j$_@8J.E]ag=_"8H#rfmfM=7h*f3_h"i<IdnKU.THs%<['4n6g[E2`\A);B=M7XFh
%-6JZ&q$$b&*u!ggP"7UsDX!uXa3s!mIQD88aak8kEKW9Q>Pa[7kKRH3:-=_4Ot,tSHD7\2Yb0c5P62IZ^VJaTa/fd#b*.KYXn>0?
%!UEPlbgh7\#RC,<&`Ku!F+CIB0&sAPr<T$<IXYfojVJ4"2k<?J^S3?,8*>2*1-su[Z-U9,(!qiOkRgPX5_R95&GB>$i8A_:]cbfO
%S^*2L:.NdA@G@06?D^h_VMmVZ7&^"b@@obS':p.<oL;GBcWs.`Dj2u=3Cg[qR33N<d.mkEd*^82>]qYASDJ48%uG;:/fio18]_sS
%T=JNjH6bi=(C9mmnnM^Z@=,4#i%DLO=OF]U@i"h<O"M_`m>D:A?Q^?HP9,CtSui1IhV'l<(ip^43h;K5?pa#m#R:\_BcKn<_'mt)
%q2u5gp1+LqoFq(qom1-Q4)8uSIS4Sq`k3%ARNg19PL@'eqZXeUNNV7sQLEH99^)BUInO\rjF@paL`p'Yn6sPR1j83;%SZ*a!e7qn
%$UYSZZ4Hg]o7C_!=#!hcZ>MC%p0Q'om6u]J&+$cIF[==N_)`[oiQfRqeTZnRqId;2AjYYs#R@NP>prtg\ukaOW7(T59i]^DVI.O]
%\^L2fK[)4^%]%1hlsTQjaFROU<TsheeruKb6Aou%Hq!RX)=7(>&VU+Q@t*)Q0@eeX0YIQH;*6U8#@8Mm-l`W.s/?#HgL;7..JaqT
%Q7Z@AJ;J/$A!=h5:%`pB0[6NH$-sK%M>>"TOIeMdgT+$5k'FB.4N\Uc@]I^,&.\19F2IC%gB>Cp^3dqt$Jh/30PR?3!us-j]NY>C
%Wm37/%ZKQ!?8[gj]O0b5k#MS37.SRWC>]9pUnqApW\liV>ce3&.e:2X'd&Wu8]s&>eS\ZjSX?GK$\SU:EhqaCk)ul27P0TsH6#88
%\;`>4f,TUHnI,9jT!m%K@"]8i4$.ObR'`0D9nW,\@r/N_L3BV9U8n+m@6`WhhS.,1"k[blP-M<I?ttBeQO)Ej2ATZO#?,boJT.9$
%-GD*"*na>aLU_rKrh8SS,S5b,DEZ,ge"d(?omL4%c+O/X-5V]LdG;%Jn'i2PD=XLHAN`[61e[gUWm37/%Q+,]1pKCb9(CBV[o[iS
%oqC&cT(1:EM5'JJ_/d:N-p*tUee%^gB[iZ&:)fG.9JAqcW^$BMWB.f0+*r228]FP)]%J_QL<-H_!L-,J=1pIFkJmh%CAbkT4Nd+I
%hTDu%bGcQQ_p;1aRG7LConS#Q<Tb0s%eNt?KkHinTZ/6_7!GI?k%Nf"orsDl84TQBquYgWa!`=MibWpgM1pk!5:VIG]\?V)o]7hm
%3tPEP#PRcF4#s-/punj]/`is&\+ZtB*+7ClNr7.Taq*k%qf[Sa&k>8!_FcIs4;\4(dG\_b_lOr0&QRj-q"&o\X7I57?*ipg9QKd<
%3EOa];;dUlZ1d3*VX"'\J%fuB=QI;LF>^&I]/ETG@DK)-XWKb^<Tb/(#P_1+iI!m2%e-.":>;#DbjY$RT:)_N$iH]V&"Hg\VIeFa
%5`n/XSHk(n'5>qR%b:]kgde)RquU:j`Zk(RDQJ)<q7FSP:7@-P9WpoUg2$^rWm37/%^7k.GtJPOpl5WZ9fcr,PLf)<GisuiB;Xtl
%!o^ps"%q%LRmb-p^6QZPmr!7r9QED%'%uR.aAe^;+<9>('&coLp't1@A4*g\QU/@30'LPZSR3KZ5jpBRE*X,!7uDC2UIB7cZDhN^
%f%Zl33Y>BR(C9o'?fKW6<HX&YZnf'nkF_^ogPkS<D"I<d_HY5rS1cVf4@/.I`h_k$:%6NrcV2mb"oagmAum%G1C&Y(R3ra:`/R>%
%NQVM`)ckf`<VZgtQGI/a+H*,KTW)4^g7QV[R2n*CI:RUZ<Tb/(#C,)lpfJ7hFl3b";[Pn9j-^UE-"^rle/$=t<VZg8I]T%SNg=TC
%C-hQ?MsCMkR+k;qD_RcNWq-UO"8j0mnY#,UUYJKg[Bg*8-LDc.D%8+@llSpOq$"V9hM!<SE_WcFl!!6^P;t!1#s0OW7&^"b@D?L!
%R._ss(7Lmt>P=HsNGPd)cV*@9#lAftdP@P'ki6%o;-MnSZae-Do7ATSD!7i.7&^"b@D>EY;d:E/#)C565DgD$)=E]1/4X/h?-iV*
%r?go`2@qaF<0AO;WP.,G%;(sWOcF5*!09h;quYhBDk&Sh:opjr%e*O.<iagd-PIMmNbbKJ?VK\]!e8C$=6>dni;bpT3j6Y#AtN-c
%kJ27OQ?i/j"TF_GNac'h[=8G*R7f>]n:l3oDqNE[iebA[%&Wi1%DdG56#Chi<]TTcZS8X5W8edLeBUbOquYhBP.=V]EI<KC'pCKa
%cf9ge-F5b9l)a0c//GST#f;%V2L2]Dem#3GnqB/odOa3Z\!cY1!=t5RkW;-c>RG,k/+S*1VE8(DjRUshCs;n!FYU0\F='?9(C9n^
%\`@U`p>477NHT.p7q;BUjs=A;5+'^m"i>hZ3B]),,JX>oSP$TVHuY/1[Lq[`n]6C/0+\W_<G9C)DS"g!_E)o\EujDJ:-:<']Pr,t
%i;eA+@,.1NI8[sF\V=S./=<eoBMF#$i')rnq$$aOb#3Hd_Q.GR)8jsC"2ClKRs^7I!KGAXHn_nmq%"V7o=+)fj*NkC,NG#Hpn$u"
%RbQ+3j0DC!,-np-U1Rt_kO%-2]X?uTd+bZ[HnlMU.g4%XqmGr5pL^;un2&AuX;rg2bUQkMa/\c"KZ4N2`j)V\Bi\@!1QnOj,[E\R
%Zi8?&WcLaX,XUT/#l>V<JFJ@f/I<fd==[jE3MP7qU9V&[pD6b-IUKBdUh?HI`;6dg6+JP#\scACNTkU>C&!ofm)Xk*0+\W_TeuHn
%+^@&g:b*lh)N.uYX+]]anMA2]`IuMi&.\2$lU8!JM^BPcK2TDZ2GZ'i3hnujHXoJ+(C19@Uc%*H[p_835n6HQmE,U0ha*)3%HW51
%B&&+S#R<>b`a/ap9Q`!)Qtm.ARm4WTCCRql+,8BdMdq/.)@khmU^$Ssc*K)SKjD'*UssjA0qn1HKEHU0@]oe==hU'CQtm/d275*7
%YCQeS%`nF:,kupOd'5@10F<q7B<ZssD]$WXbVTDOSA=#;^*gIU%gU,01i5$<A$0lG%-9ukRMYou+<3Xn96*iI%WGZ1Sg.sBMTMq4
%;btGSI1$P/1h0^Z5WFj((<8Bc!$#ZrPT%o!P`Alm<gjN\Z7n<pdgS*Q!oZDl`lSHtiBZ#(@*Y:%l"AW_8fVccJI.lS+<9=T1AoVR
%CP^H(r6)[<$V[(YdBR!7JccZI^Hcp,)s?E`Df\2$JoE+7AT++MpRL@G:ZmX#R*bX4_LX2MDKHm2-#Uojmre&59L$^sGXm1SjmG1E
%5WI,dEK1j8laGCs\Ij(XW*tK/e*gr'p:udsSR3KZ5^T7g?b5QB9+[e>p2!DecaN4l,83,Q^u$pALm$d$%ce=$"#cga=j#OFF46'M
%'0<ln3,hIL`(_L:J?^6?EUIIJ;W.>nIKGH37j`>,Ja.d04X)7";Z".!"n3O`B-E9>U>]PC/E=ecPogjEoANu,/Vqk0cOm1D$)J6c
%R3s(=3tpW_icG6ObHrL7b[ahZgA^o"`j65slfj^<Qs^o%U@JD=Fj;taY\SWV'Q0I9)KVHn@[lAuK[)5I*GE*G)A?nt":>An3[Ug8
%(ID"p-64ckf%C40-Q\]&q$"Wd+uA[\@[+)!FI+CIGM-dH0kQOuBKEhg8bS9lc+#,Kn0bb;,U#*!M=GYHUJ-\Ir`DZFP,s*uoUDj`
%_Z$*_f8QJP!`9Ju#)_oIm?#0scj_b!5J,JM,#5_Lq&[;,Qc4/0?u!=^(lI",=-YN;[UBTW;3c%/_`#Vf#CU4jLABO;iNr!JX9>eE
%o13Ao1JZUJ3>/Nll[+2ehtcKS,se3RHqS=G74N;JDAHC5T8;)-.s8XVb=q)^"C\O[R2!2*$.iniS7q?O\k1.t$(YFr3Zp5L97eD)
%!PUikCADK0ZS4o:CTp&gWAuZ9)0"gC_L[V#71c&sIWMMMoH`%:)m`YN^6IgWp-=;R0+djQdMCf3HkQ-5hA<.#fbAt(jaN=eBk5QP
%7"iQ5&EYuX-/j5Q+6MmKffEK`I2:tLIlD`=Z"\8i6K]-j#;@V9]LAlN$pV8BpFK"P2Q#WkQ+qRjp][\ng8-H]mKMOUhlPC`:Ld;0
%khCEO:h'B46K]-j#<4UDiPE5-]f$b-HG*!(R(.UH1E%<_O$orE!b#FOHXXQ&](=c(IhkhDgfl)C/2?A=\h'.C6tlM6e@7%cJtrL'
%Fj>cT:)o8(:,/NH-k8r7quVAk2!^Uh'?PfSTi,b#i[/2WS`?SH#Ndn]-_A-21=6H(#eC2q,Zu+d]eAd<gls@6*%(8uWWNnq^VJ_^
%d97JS9',`Pg5O67!1Qk,Qtm(SJSJQKM]fh;?pDgBkiV;&>UT>9hS0^9)Sa'0AlnP,"Nd")k4SD:doU%^'AXV2hgl&u?Qe]V.U'iM
%m_h'+5.Rg;N4CJqDLMNp7&^"beUH[5o!SC>%+hO^@'8T]ZT^.r$@%,@+NdeRnX#=IP8qq.n?QYC9Z-qY=d9CG7j`>,JT)arMo!LK
%iBYpP0QaF6@oBT82qcV<nA'_&0+\V(I5<i_+WP0?"/GgrfiCMC=o7[ark3PQpB@R6I4[D[&SuZ>qrZn[R!tHG92<G:Ash7>:*:NA
%;\,$A>TKcPFI(`0:rZ0AgH]CO0msY-ndC,!%LY2KOCWWJqd!Y8nmp9_&B^fZY+'37TBsKqSR8$NT^N%SCOuYT]RZ>ZZ[W`;DRf#F
%:</V%'0<ln3)DE/T'[.V;]WBQ7al.l7O7k>:A(bh5)?6/$\\>!d:'P9=*stZ">Ju[\pLK38S]=U,"iF0Wp7i.SR8$N^h^&%0eHfu
%>sX?JC^=,%ZE8IH)Ncfh.R,Uhn%@3q=@3phq1c:DM89mJ?'W\']=(4R@]I^,n;"Oq74':M!s$1=cJ>q3TTm!h[BNOi0idBQW")X?
%0`G?q4n=8FOf[+p(1iX2Xp`*)h2/*l^HabtjX^icC(t<$TO)?%6S!5ID-,De3&+Fr(C17*3$mOMCBGPsQIX\BX3>-Zqj'4aB;Xtl
%!nDkQUi"=I^o4(;DcX/hZngl-NdYEN,q\&CWB.dZ35?D9?Oep*>$e<b2[?p1Q(OG5"#'0,-_(:2_[sfUP7Fp7N+>./D/R1.PKPm`
%<ITL6T4a\%8aoR/k?*<uA[fLpbt[YRNqkTFHo"dc(\mT#c@NHVFOK4M8&S[K&oMaTHX*%H^6u"m$iKf\B5KGW=:UR8Y]!Hc2`iV:
%^(,%!U8n+meNRo^<(%-pq]*:k=ii(5=n@U*A\Rjqc`ZjIKEIL[]ZgJ;,dM,!ias8OQ7(g,rrp8'7r%1Dd:hr.+=K%FeJR\nCf(8X
%W<4n:SsZPL$WIAp5TAb;&!I*t8A0$l`Q'dV!UGNAK\edH<Tb/(#C<0ToL].WU\t7ngsWKcc)$Xrb9#u).n)Yg+&(5\"o^4E7+:3n
%eZd@#4aGjoP=Z<)U9U_Dq+blOWl>QCNUrsT,%Rl\f,e=CU,G/@(O_YlT9uYM$\SVK^6r+Kl=Ye!jb8W4ae.&BBUO+3q<aZN3kmq&
%i"j'[p[]3g!Tm@-cAqjn)meQ,;)Nf10HTnpo[[rnra)MINP0JYNDIdCr!S2VUi.Q7d"Qms6V/kb4+BB!+_Kt"3Bf/tk81',kZd:%
%T^(k3b9bB7#.hPJDrt(&0+\V(Gq5r.SoB3MWHB\kb^Ip_YQ'`a3kmq&J=!s7.Pk03fL&Eg<*#FaUfU%:'2s%&JT.:'S%7+#9EMYC
%'jW![)RsmGqds_'n,h,@r_/$*pe3Kt-o:!dRsAB5>Lr_d7"Nons'R<jr>QO@)a?b[_u[0dml]j_e>l2H53\%BXD?N+;)Nf10J6:?
%qAh9S)od/<cG-*5=Df`tg`"'Wdr-R4IUHo]kL[,QiJtXt,cO:,No=X1Q:AbfV;Ftsq$"V9SmPP;\Y9g';VU:>]'UO%7/WJk9`.T\
%79#6g(lZZ!Rdc=jcGM^#i`MKT2@Ek.(RR[aR&]]b<;Rt6V/X-i[Emh.BnbbW@:@T^46p(>Uf]Z6<Tb1nPP7--'"_0^&`<Xj-Edt6
%`"=mS/T3IG:-to@1K/FFJa*4gZ"oWm80'r!,[E/BYp&Re:8;qdrFW(P0+dh1?=@d>O)skEc,uDX"0B)$IPZB[4FubtAIILTBfPOC
%01;q?HCZ>nipoN0\#<(jebB<b4HI71>8A/5:K_LYIAk8%N4F=6_[c@%W%,PIfM@_BKlI%J#5c%n\#c$X\ZN%S2<QboFaeo,!,o2\
%'d.cU[W5eDDQNoaMKNNK2=L\+JB[EH/U9t<!?+UUI?ps;nO/Y/fCh@9cJr7o<VW)c39r?(;i2Ot\]U9*:33+N_X(>)btY<W)ZOEL
%c7]_=aP<@,$b*g"]k46n>I=9-^g,a.C&FI"3kmq&5R.'hhIUjQ,&;d;ZhS*^n*bBGs!Fbg0+di&H=(Sn4/mL#)*hA*=r.4*V9R?G
%=-i.J^gL46%+X*THk?[EBMha'.1kY4/ZBtgd?1Ch^Hcp,#'noccW9On2D.O;8lNQc8UY^JSqH-sGcL6@K_<?;4FOiXeWWZ5kclWQ
%2#!CMrF_'a=l7[5&K3kf2(g+9En\>jY?4r,:)kUEG2[%sPE#Aoo:B*F:*:P?g-tKS"*K,MYkW@(0t.nJ(JPWnJSH3#V$eBWL@H5k
%<l@.'oeCI^L8TCh-_bAR^ja_>E4WTnfl9@)V)]uECNfI&Y;:04G6^shCG1d4Q+^jD'/,lO1a3[kG-Z2rE?[a0#6s4Y?]1?tXcq6o
%a6BA=A=^+@];,PX#s@YX*f88=J\cT\IUEYmED5;BN!d!io#hQYU9aI0JU+kYp&M)pg(eQR*d'_/S2t`bq"7/-@FZqQ%`E]@pGmf/
%cP`uc/Wu\-p3E^/e5i'?):O!pm'97`+I8GcirlB1kmWGs.tW1@UING4=b4!].@Q^QY9;[iB`%p??;a)>Z4(i<ond;"_%_EUFDUM+
%IrL8akmj@iQJ"Zog$=B(hDSiFRZq\Fqb1@0h]L.f1@s+g5WF91]ZC)F3l$SlW']Mq(RX"kYM/`+1D)+O5dep`jT]V5"*6g.3a*/2
%;S^E@o?`GFIlJ+bbT;!1@39DJEp0P%]4".&\WS;gIBfTUK5Os7R*bX4WWTQ".:_)+9ck6cGssDk1l,FdoR6,t-:6`/#kM0E'_t"i
%juG()BluY@Y'f*,Q8]-8^-L>j;J%M,e6^1\#fO.7[V0q"f:p#F2(o?*+t'SD4FNl5XdXNV1:uoIXim"T'0<ln3.SD1OcO!k+JjV"
%[hYVlf<qD+>7O?jquYCL:@)&E^KMZ)-(:^qRRHnH1a?Gn#88T%5daDb26#_(\?,dB%T?@&7&VOGUAIVRp15c87"iQ5n0d$3-:2hE
%%`peRdeT29+;o6+8n#SZA4#Gq#RBjfB/f0(rbBY\)`G#LZ13]Cc-%&S,\B"#*^DU/Z_9MQ`oa(</gSGb4HYXec?ZO>H8uW0bdDN-
%@%=-tK_*T(=I1jkb::c(gNnlE]UYD:q$!c#ZD=3/4L`"Pr4.@.C-kn7prXbpel2ku<.9D&O%%T&!L5I=DT/pCQ`gBn596,,"h[*C
%5UJI[".VSs=0'Ltmsm!`%a<1K*J=Ms=Ck&1"paqc-`[^-J8GIUoHTK&7(mkkjqp12C0b.fb"P\!jm+'\rQbYrs(Md_-:6f1#lBu$
%AN?Ngp?A(qYDu5aAi1B5H:hUK8%k>;q$!c#2t,.1%WG1W?1!X-*:Ekk"<Eo""$6bnDXEcAJSWP\!kLV>auYC(D&ZiFchrE`B<nWQ
%W:o[2j$L>\BqLDWo?KUm%1CCbZG2i&CSFL<N_J[7!oZE+r1c-qjNYSn9DcN8E&6Xb`+qA^1%WWGHihh!m@/^@"'H*cn04tKCYE1A
%mrnC^lH"Ut0+d98p.Tl2%d'PQT9WsnZaJ_s`73o(JXL/nW=u3?'`LXb,X7SU+C1XI^DM#tl.E$(^e?QIed7!3=R*!un7@G^XXskr
%#BWsi@'1!P5]o>XHHAmtZ6VQ77IK5!$aIk+>1g;ah1;!L*:*[*I@6QNM*1k9Qi\$`2Y&EC.[Mg<!LX$2RF(a5rhRGqgr_M!o\JRn
%j^j]a_]*Z"m,Mm6OdK`]b7b0YR%.$8!^0MF0aB6c0sY."Aj**NQZWN[<.9C5?e0O=q29?HCU%\U=:XZ1"*#pm$\WrM_7Z'5Q:8ku
%XJgQ?YCJ*Ni/tQN^^F*Hk`c;1=hh:UjNsb-PI50N<k"':+c#cZ.4RP9=I1;G"6Q*$0[I"sGdG7J2Ik<L&EM:c+&(nr!n@=>S5GN2
%gOB1&?!t+Dh3dkrShQk7Q1f_5,#j#BYb/=5nq1o1*cQ!A(j"MPkh6+[R)ofS#>cGfSr#*nWWThDT\3d%d=43bYAm'ERX&I?T\>_M
%f6BY<,44KNKZCH/[\;NErnHCN5UKQ&-?O]fE'QIR.$p4L5,[S>($cl6JZVW%?t3uq2\?rm0K";\q,M5=,U5B$'e(E/4qMZ.Y-->u
%;sh@oQ<Es4_>8Qpq+ZGurk_aef.@+M]"J=F+F#.uitnZVDr/!aE_Tia2b]P"cF#Ck3f+Rm4(UokS;DYi+RE1s&qb<j'J&L8T>%oi
%"jD+q!V=V^'0<lnF[/",0gE7uF?hlo$=5DnBe]M[j!\8_5FBgn"i>g;]cs;N]$u1nhD`X.SS',&E^)hV9CI4<MTQH'Xijn7U7UW[
%,jeJ6=Y2M_IVi(I-U2K[HXK2'(C18MgncFe\D<])pb'"ujr3).N;[MKQF7#FFFJf+J?3rDNr<f(5c10&($udVI_BSKgB/*=^Hf1[
%I3M*r]W;-El$OpjN6,ke423,RFmY(lI:(o.qRM,/ENuVdYNhW.@W0tdZocN:IUd+pVK\7gTld]dQe$DDWd21BeZaHapWM5K'0<ln
%3.NmSk.luUbcA/%Y]mmKZNoXX^^F*HA;qNS64=iq[*["YKe_1r%U7:$R*bX4_?"c"^APH`]Y7A/p6X4N-]/"E/c,aOiH!+;&gOP8
%P3J::54763#ICr=rUKm0kD:Ds3kmp>OL-\%!8_Yp1L@h.2!2B\Cimh`K*e)UTK8a:+UA!G#<7`*WHGs(R)8t!gNVn)O3BT4]UhAJ
%OL6kQ-/25BibQqVb\_VU^$_!hSR8$NODB0mJBVWV@Y*_n^qS)8R;2u=5d`6Y]X7ed/br^(SI3XLYg9XGk#MLE#R=lqH:_p6[4aZr
%7J'Z$?&&78h:Bt8%GF!"215"<ND"loWTB_U2"/#dB?VRoVUTkMDluUm2)EIJ5WHPf^^.,)j1G>E/1keCQAr@j/4aDsA;\A;9T@4X
%FMPA7Dkp3`GbK%[Wu/06W%FCWK_NQ@c7]_=<'`NY"O(AelPHV[Xc$A1(d@G^mgQ1(kmT5%Gcdj>fCeHO@r<fCl#i%\kkkM@5R[M#
%i0%30E.B10YhF-N8-1+AHbO:t.Jkhi,#j#BC0t$6'T2prT0APb5J8..D=*tNMUE:/#:=PAJNo!")#jND^]&BSrP/Ai\]\/:h-FL]
%ZStTFQ5]NX0].79R(Y6E,O!,HgL(!W07WrdJ,JuCs7k3\qVV>@huEX^a.NB1U+(i3s3p`Rh+FG`<-/n_?Xl&'@j)d>6'qQ15;94p
%ED0)]mj6)lY=tW!Wam7j"7;^7?Hid?$TJ?b/7"&F5D!5>!03KfAYe[hIqP2Sid>LRDi$>gi3Rr"\%JU-!V2t'N(hhGhiMoi/.4kA
%-2ftr/d!1+AkE%KKDuWMJrBC)A-Zd^0U<6E>G)t1E1fgAA)O\Dag)pInK[8:%j3s\A7I%Fe7)t^'^=UO)7*QM*tK.0\0a_0VYCbq
%i[=4CC?oQ5"4)#,L`OR"D8j;'!MdSuI2;>tkf"(j:Xi^9$_-M$=QC/4@pNm.Z[e8E;.e-Lr!7W="8EP;EV.FRKq)M&m5Km,CuDXM
%Pjgb9F\8H*Qkt3]5LFaR^,]pEm?V.eOg;&7lD,,A(6B#+aHhSp5CuZ."L8,o`\,H(OaD``QcoRAHosCF2N=\"`K-Z.5Cl$r)`'?%
%R^-:@$U%C2HYOc04psp]O9LRV5D!5>!3u](6HW-f<!#+rT(rYp@?8ImOIhurEPb5m9-:sAPcC!,h?uO?gL1#Hdf9S9$Wn]@f<^8T
%5qdZefn%$7H:U?EZ=+i%Q#GUc4ptIDj7/?t@:&_grK]39^Y$JLPM)(-c[o"iHe#5bNhDSb@m;D=TKd/W*5)ER^<<'/".oaUQGhI5
%+$hQ/!.RlrreO)`>0#7C&7i]*^h3Zsj]eij.1e^q;u?p<JPKQa1F4p,'X6PZi2-]B*i-`P>mm^m8'm)7_4O[XJ!m#Tj@]^8'V[uX
%2=U,YV7pgaCJF^43q4HiPDUs!4eF`-H8Pq2*,>TXT*;lAp[utl"l`&!M]]a,<,=$Mau*f"E+$o5.Gh[fcN9CM>^M>M5qdZeJ#M!]
%(G:;n,7h07'&!J\"f1Udc$gFj5%.dm!5^k=mj84G?jRdX,g/(7=hm"lMbNXckf"(j:TB[!7#j*U'\PVT75?nBpak>\Y8^:-,O!)W
%i(qM7)+LP1<C7?$au</o"J5i+G"?LCT.hpG!+DJ*CJY$k";oAWb@-ILXtIO2+"r!E([2%sP=cjDB4h24LooE.a+U&O"+34UdBPub
%LH"`J\;24l37,[fO,HgR2DE&40LogcHTY=T#jel'+$hQ.!.RnIM%YYd!KqUk'K(cfC'C45]]YmA'L.1UquH`oc[*nN4/%_S``SiO
%pafgE$Ykkh@:&_grT#p!4P#05h*;p63+&e=cN7]MAbmt;8'm/95WD"8IIgJ$#2U(?j-kPF!iDB?gS@W4'0]egq*ca+[T+B-hdXXV
%kQKp>^M;1Ebl8Z$%)t:^3'#kKFM-3OfnU#a(6B.HRo2eL0IM5LJ+@r,;E(bjd$pKe,`Dpk$V6,UZS_uD+$h9'!oZDHW'AQVbRR%_
%?=r-%J3gc.B+[@[:Ab7od%YiM.]a3gE9YE=0=h?O*Xm-l.p/8PnKYQ"+$_f)bO6AK+;4D`-"dg_a$YD5E+W#tU.<Q:^S%4sU7B;_
%l`MH@n<IMh_8+*DeG3h\%MM'YMtd=+".[;dlAh&5_ZA%]@c4SCFhIbN3h#gUo\p)e%b*,G>t>fR/f\I\n6*PR`dp)5'BY#+fM?rn
%:/FIRB6h7q/-ED5cN;t`/]Yos.=ME5p]6$Mnj\]:Zi%EONkH;)/0KAI$)SKt8'm/95WHOaB*chm2S^NIB+0/'Yfm*?;u?oInH8Pj
%g3*@h?Yuuur=*/\K&mjOFp]<W-iM%mS<G"7ql*_Xdm5C9*Y7?MoP9=*5puTM@%'H\;U+b+;7;IJ&-b<+Qt?c,.=ME5p]::aKAlm^
%<d/M5:;F%*WE>B84O54!"MOF.KR*Rn7sNM4?PfkM)>GajSFIo'p_!/X#7qAeH)%]W5.dft$rZFp0Y2.Ti+c3c#Wh3/p6-92)4'LL
%j)<eYc7pXSHku4?+gn6C&bP&f&.W['9YrCY`3@5>"q5kpn=&=%VYCbqiWg#)nBil*q+Nn4J1q344q!1)1!_%m"MOR2r(46SW7:GQ
%npPaB5b#fK4W^A6OdP'$i?RQ_%j9)od2W<##f8GmYr2]V"Ul#uj&s<]TGKhCE.AF'g'\&\*:n,tWsfF.0"OWH0JE@D@(].5VR*-/
%Q/C]$2"5Kml3N.63:S6'MBBX+Ztd>4DJp(+i"R3tCB]f9l0SJ95%1M]!JG`YLdj?G22-=90kK;'5Vg;eT,oA/"BY*qptOY?^A/3C
%prp:"Nrr=!o7X3&+2LtT!3u^TGV%cn$uuQh^rM":VGm[%ThE&Qhi#kT[ht=u+G=eM+]us1EQ5f7JRh&B]rUc3>D,cpb]@U6hW9DL
%X@j*;"ePt"1W"i;T.hX?^gLEA1%d`j/]N=)RgM=e=Q]^=.=MDjp^)TU*I_/<X,):X#!NDcpFpR*gn[`5'0]egBt\PRZ$2%e$L;^?
%9#5-@Doigj/E01HM4[$mOI+Q(%\Sg7bG3EIc_4%[,O"$t"8H(]O(Lm#aH@M\<q'6WjOIB0Sg3I;:EUX=1PJKdl/I*GbAZ<B=GS'8
%[0Bsq:YPH[7s_S`J-0h>d!$]J]Osm,i^_@R+$_e.8*PAiZ*,>qp`&uZi%9#YB+[@[?Mjf?!?QLm&&B_\c=@!'(5u-ah:;Top]rqF
%2[8;_5ID`B,[6V"M2"/7)tVTt"bQ(Io<JVj-Z*&4F)'S5j)R!"G:4+mRcJ)n5D!5>!<0D:c!o&h2\1#/G-Ph7oQ@[2>)47d07Eo[
%J6^@aFl(#r8ChP6Z[d=-YF4B?d#/u23$<2oqE72c`$>S.'mi'/kM:kAHj%.T!JGa/*\q]HK,KfkbJ7`kZg9A0MtdnViWns#0,;Ne
%[FZ3)`7jo$h*=#KN6c]Hr!7W=!sf.Y1@BE$4_Df=CZ)OLM>,/a7J_[_i<'AWE_s=l?Q..0%VGm9"f,q@`O\Hn+$hQ/!9&H5\F#La
%=D'jdG@Cu-4>pN!'!.rRHj%.T!W;>U.^!4!,($_T4UXaB:pVU)n.BcjD[aYI]&?P1g8IBB2Vg<2/L\Pui*,snplh'@P"qjp*Y]U8
%1%Yc9$^g(5j!fE[^%_V]"0"mqZeb\AF;a45'7:RW2@?jcWUpMg_J]k&jk:5fhmM1!hrs-OJ^4Be3EZ,/i^_@R+$_e^q%PXp?s)F9
%iJ>*(_k%#NQ5[1eVsk:?dVfQ6H(Wd0%^o,FdOA;S18#ID?D<mjTFa>>?Mjg&[N>CudZ7O9/CC\7_;_*:E:IQJ+$h:Q`aCpW&ITO<
%?p467DSq<^@fi_R.]<%Ro\p)e%WJRO_QRYHmo#ohc[q,gbS:i/8'jiB0c2Qko7;WJ>QU[16':Se!.,K?50"tu$/m,mUu*#J=/h<=
%&*22:Ri^PlT*;mIde:+QLA2AQiWg#)FR.,WlKRomSIBi\Cfou=PX>-N3pATs_a$OYUBk`D+-VJVUik#AZ[d.i+BqnInK[8:%j2jJ
%=t@-,QdW+'>>Go[(6Hh:cE8j9ocHFPIK4lP:r;$H*4WEUB4#O!I2ng>b5)2[5VIQdiBXrKN#Qr'A([gRg"!lN!J`6i2)3(2TGKhC
%E1lK0Ia&)Ln'VVk(2POpXK@o[&TlH>%)teu+WYcdpoHl=&nTr1i3RrBr.$iA2t8-V`=Lm&hJ3&.b6-@MO*YorYN@s`B*#n4ZnfU]
%TGKhCE8YIF5A[BObaV7@"UO7KC;NKf9-6Ed:Uu@^S93$-7Ua``*fl">0jHUP6hgq5kl^_8`j:'YP,f$.msBZ4!Y/H)2&mZ'07Eo[
%!2$=RTf_RX/"OB<f*%]L%!H19M'##:IK8=lXgb[FOq@DBcFR=q!";%!8;At_TEt'4kf"&T*9]BiSm0M*^fC(%CA;7"_-nj`.7g'b
%073bLd]J1'AF^?G!\_s3k]ip14s$LM&R@=o<;["SiWg#)n1""J(H%)8T?i60piqnhA=+g.5%0B=!JL8J.<rmFrXSj1Xl]dl9o8KK
%gW[FJh_qR](U2).-NbG$%T?5c8=B5b>f7-q*4VhPVZUYS2)&jS]>Y(?*c,pLVqA1&i^[r"5Cd^Gero29MB#/q]PG0tjsF+52EK6B
%:\H,a"IFDe!JCQ'YCK$=-<")@@,P):IOK\1'S"/Pd]8'`8@,rQ_EK:29/*PZnF9n%o6uCM+$hQ/!oX,d0;B#Q2bbhEpunP_O2H^K
%C."/?*[!+]!b".;D,S7>P0A"soq(+%_+'']N<^YU_S#@EK__.A49oel^[&R-Ess%cU<Y,dqLgHLJHP[O#P?M!C\E/,eA0+WF;M(o
%e&p)dbR5LH(p>+*@%(Q/ZM2kk"<S.43_"!c0p+Y.?MFZ?I%u%tCXlo!]iMguCGh%B$/;KZ"i>YRd:KhQEHPeoil/N\NsGJ%i[h*c
%+$hQ/!e6S0i)^52KQigCo=bDm*c1&Q*[cBQ]^PrSnYe7S9@$K^)ATD=_8h1&3j6RsT.hpG!b":S/A6:He]aA7EKn:P!CoHKG;e\!
%k(HOgDjs.ZKNPR&]1[TbJBn:WWC-,T</;V^-[l-UJ@rGQs/"Uf^WFe1n6&#Xr?!\@_OU)rK5nQ7?#EZXH;Bnq1&*:BD1#<h"S!`#
%`(qKqBKD"24$i35KgiQ@#sJ`!jT<f8L`\o1IKJIn:L+<S"jPt##C^``i3RrU'JrutKD6%#i[=5N=\NNbQ?Bdm!=*((Qbq[eJ7IgT
%d+G8k&bP&f&.Zc:JoE8c'1M%UQXS3lh/W\a=bMj/PC@#VI28St:(sac@[uA_J@EJ2==6C)d#0!]h`?bUp&Y&<9uXn\!U7+=Yt:<R
%T.hqr`aHHT/-W.5gM^Hf?7,Fu+C3?4p+o)6#^Z"C#R>78_I>M9#Pad>J^4C,jo-gj8'm/95WDSUPer`>5gLn$FU&#@"h\JD42m8R
%(I*FhJFE1#[*`3p,WCDcHkp\REc2l7O.[:RJ8g#d_1X1_"4A#;Y<'L4!Ui8)2:Y%k#^Z"CpqrVV2N&H639$2OZqkTRHku4;mGhgk
%5D!5>!3-,ZWRBPU_\R/a)>Ga*D'*Ma1D<!)?Mjg&[TQV2_&=JH[PdPW5`1Gc9eF;ETGKhCE$4K)l5eeZ7CrX%='H5#Ju\u,&.TBa
%RSS1H5q<:4E4:1GcN4mXJFb>O8'm/95WE_L-j)JJlbe;$jjXT#$]#i$B+[@[?Mjf?JP'9##VWY>qs!$.bS,@>YfO;oB+[@[?Mjf?
%JOX"J#gYG->c'']@1@T"&0LnD7JmF;nH0%%]$B_b`c4AO73Ct-Hkrs=*M"X-_S#@=r,)&;q#aG5dC<2L@_S^6p]u31"8H)4GL^h&
%GmrFN:@ME%4E"n-nK[8:%j2jJ3l9M*c%-Mq2Sj#,.@OR$>7a#N?Mjf?JY_ZW>Y&k'ZGZu*n6*Oh#1[>W,D[F-07Eo[!:N<3Y."]N
%"g706K$OM\H#mq^+$hQ/!9$2:'0%n:L'-h[pbjMP#3L2&DMfN%07Eo[!.&iMeprY^#q$r+Hkm8`(nO1o#^Z"CptM[64J-3jkQ#,L
%-eS]%<fVTkHG[>a!W6eu9V,%tr"\sO[piKlJZLZW,Nts7+O'F;4eBl_B]c(s21X!S;DbXn[NL#%^%_X+aj:[-?0&&S"%aFSK?jU2
%M:VGQi^_@R+$_f)BtNjEjNur1!J%5Q9,ldi>TJ'?E54N4(m0&!d4I135R*ha9G48q=i?Ao(I*Fh+Pg2?[[r\r!IP:)^h3ZsCm.Ri
%+aq5?n,\2f8YJ7SN?^7gEE#p?T*<0dhoAB^0JE@D@,,A'/`>Z)U/Qm^H5r.pR-Qdf5([,9!5^]c"smN,.$>mj\7+=%J4X4&5E#:K
%o\p)e%ZH[X9]9e0''E+,HPS/(AF*q@5(ZQ+NPTk'V%lFH<pR6UV)%OC5Y><j/KE1dbR5LXR-+JI]D7@[6gs.</uBb>_H-7]n0au6
%8AS$X@@lp/YB,!lEG4uI`/gQ-5Cd^gVUU!X(CkD7)$?K7N:WA+'L.1UquE`!18W8PPeaMgkre;nWAH;$.*m$*IK[@Z!JCQ[]@e.i
%Qe9_EV)'gZ4_YQn5[O)B_/thTh-0M6m_13[()"JSE%UknK_aCWRGbEU0OM$;-MT-"PajVW,(9[.p]6$M*8Q0bmQ8pLL9Z,L-jG\\
%FRQ(Bi^_@R+$_g$JZB['UAalNAH=t&(ch0XZUg]B073b.*aN5u4[3NH`E[G,h$-a_RV"36`/gQ-5Cd^'6c5u8N3tsrERS=RC('#k
%E-:(B_?$.No9!9;^`bcJHknD.d.;B7E!3lL!W:',B!_<3!SA'g,8p8-+Q$>TecI5C$QhVk?`X)Yd9aX==eQ:P(@[c4!iPf*o\p)e
%%UAZ>a"D]@W^Mh$n6&$!EE6p6,17j_$QhX$O*?kLStc\14NCb^n6*P89(1;)nK[8:%j2i_dP/]I:%sIn!GUm#T*;#PnT-/gnK[8:
%%j2k5'Mj_Y)!qdBD^EG;DZIRGOs3,Kp_!/X#7q@ZD48+^K*.WACgGF+GY,o=FZ"1B^%_V-#BVt7+_=Q:'I*fG$[Bq[0iRuUHLV(C
%#B$$a\JjCrDX4[`^e:sD4H&tHo\p)e%TK"R(#AfG$`Vm&e$)JC83`%%&TlH>%)uMgWeQ^*W-*Lj(jm+gRcBr1T.hpG!+ETWZ^d<<
%,^.O<HNpYGgpR)&^pW`?i(o).:0"c'I[$/4<.<?J5O7!UO._\c@qo9#1h1i<eU"g2c=69G^e:u84H&tHo\p)e%bRe9,@SE>XDQk3
%@neXJk14/W5D!5>!5a;Sj1>LTC=Z\n!8#(Sr!9G_n,hQ6\rt_*#j?5XZcX0\/0HQ?5E#:Ko\p)e%U_Y<i49&-A&amo@F'OZ)(92+
%s1cgL?]X'`FiNkRm!!\m"P>uQk)_AdZFQ.V">FR5XlQ4j1D\D.<]\rWG;j[Bm5nt+J+BOlW^:A#,k3Pb]]XQ3cFe3.aZ1M$l8.JY
%/(KV+^%tgoVol)$2X)8G.Lr.LT,@eS]kes@jQNh]W_Y&I::a#Xb!Tk(!IVg4,gcBtjB$WG`T=$?OccmlM8893K_t'l-P)o9#EXt!
%,ZnOs5mI$Ll[)oB#c'%ZRZiNRaof]h35HNdj=gQc<(an"'N<qCm1,VLLX=0G8-VPudZI1%IN5?-g<6M#3B1HZal_Y-[.43[J^H?'
%UpHI>62PfY;c_NjS?D%>1daWU#d$4>O1;]eAh%ANL?E)TY%^ng*1ZkE.[m')4G6`V5W5ib=C@Q^.]6ZrIqR=@>G2YF/>"r0&TcY+
%;XafP]gaK<Z@)PS+d'QP+bX#X9b3"AKMERR1*HC`4oDg"e`$!2oLGA2+nUQi"N^XTGk8<Q^]OCD&S`)`Yeej6lV`t%d"kJR!`N^o
%chlAVqfq*4qQl.GL`Oe=$$(:gETg!\PU-1jC+leofL+1=Gp014k/7:rnFEVD\l`utkij\'=h)<PTLTm]+a!8TP(D"HG9ejuD)MDX
%50>8k&Sr6V=S#SS=JJ!3:*)YYYV5f_T`:gj-NaX8Z1]J_jZ`9GO:83J=)T3W?4?j]Lk)32*l=KkKp?b#F9fXdIA*/HL!@JWa$q2r
%b!Tk(&L7IA:0I`K;at7+,T_1g(<T!h0Q;V[J="d:^s#0l)OPg6\QD3?_P;Z,I)ORZ,YRDr"\=HWEE8:6M`AUsdlm:j*^VB<+;m^0
%-75:21@,KRZbg<_O2Y<qM)o*H*'k'q98RP%V]1]DMiEMK`"``4n5W-3Nudd&>'U7m^h@7/q(im:8t$;Nc+1st7:?I-2BG*j^"C8[
%,HoSUZRLGUA-#+_Ff6PI;R&$Qi0)@-5,LJ>c)LPe7c:lBQDGc9ThC.Ba9HTO9Xk<J)<`0N.r6!(+=[/l3:nD.jUia?oQ)itmqOb2
%6]YW]E.o&JRZ/((H=ppQ&S(uj>r?=>"5>U.7#'C+iNfpqE<ohg'L3"$j]'mcIZpHa2N8I(/;03MCEA6$&6a>^ahYLS<)DPuPTeU]
%Wkr?k>jTW`<u]:LkfNo,,Qf!OPi*2;VV;EDY6(2IE4*fI%[Mmsas4t3>V]"X;Hd^ebsFDG.Ed92GmI\.*^DJ'an2me9/r?JAes#M
%m'0H[ja3[`KN9/17pJk^1;/oMfDogEb-5"SZ$>SHOb_<+,KL'i)K>;Va=15gXX\-&Y-bHVZgnZ2Gm)5Sii:Q\o,na2pY@4G!`rJt
%nFXlo&@u+/J7O1r41#_L)&W7'$Z$SFXI8PCYWRS>*^M]7\OKq;c:P0i18gkN=kI5D9Vbg:#d$4@A:W/)IA0qr&.3o.#rW%I<g7u3
%'F2]M"%JtAQ_.<HK#T>bYW95Ym^XeXTohj,%?+Q+F4jAO-e]?%@<6CQc*LCj0dD]$KpQW4N4p%8]XA-SZ;l*$<cJC>3dtZ\Hkb#E
%P_m++PYSA.4@.%sFdS@TKLR"K1/KL\9[A.MK\$I8k1JDN^feB!C*TV01SV[p%sZ-K[h4BL.j^F6pAn@*io"NG*^V*4+<06:6A6Mi
%@:7)`.BkhBp2sE!Dmf/'&"o%TO:4Z/@?H,m@u];`))_`Y&J,sm,S-T28!"-M.3[du##[%qRUm4Tf]L*q2!P?eG[+-Domjp*4RT&A
%TQ#$<E?l'gX[iTa&_D+LD&UF(PlSb^TeF(Z'N.k[k2[\mnc4i(rj?_8,(kC5Mh>8f29.1!Umi$Qd&>9LK@d-V)[4PIbY:^-Y[SBq
%X?'fkHtF(?`^'n_,3Y%G"G4%d^ucd5K4n"#0e3_VLZ`d%L8UYe+.f,9L$FI7_B0qTQTBjap>ah_j09uqO#+mFk`>]LOo_OmN"."A
%TN55g94nlke-r-5GmLN7J8Bbb.2d?),)`6W;R(PqS1oVj4VA**E#@<%:_*"]Ond6U4OO=FJpP:"Tl74^W>'Q/<m31;<S4'_RWt#Y
%KN9-Z1/MZfNZnMC+!iUB3D`iJ3PT1V&[UIQUYo$0)*cRiI;J`(YW5gj9\>jtKN9-Z2S_\!?Kd\a?>.r5L<[OaHdf#V@TFI6$I<jY
%[*oE>&?'JL@<8[2XiY2*&[UIQUYo$,=Vghur@h5[bq\EAUq\0#%\Zal)$e2UNUgP=^=As^3=,(Sk\NTV&6a>Z+*#sn]#I9E8d=F`
%DASY?.P1@:?$#QJ>'U,$!7sn7Bn?aE;cshn#Q'@L<fMh(&6a>Za["jkl*trS#1cdWZ`N(ZP30\+[-@X3Gc]Ln>#+$H.kR*g.kKBk
%7-,T!nc4gRWn1Wfbjfm\[WAaU%%bd=E_o=I6DH_#$;RuI\E-5ae`UMVUEHX@<r1%N8@h7L&6a2V3BYfY#2bWg4LCP"fGs6b<+[#1
%LX=0G8-\peLp<aq;NE[V3"ad_/GN=4F7KlGGlZLtViBAgIp,b^C^q4tN1oeR>'U+i5f&?FWpP]ees6g-&r#h.ZApf*LX=0Ga9LRg
%i(-]YhqhL\PsMW7=R[3Ik2[\mnc4gR.2Yc?"NH?RKUP=IT8mb`)F>Z41C?jQ,"g-/2RY)U)4Nm9Z$V\>7e.*oGlZM_g$tFT1]DTi
%I?Kuu#\NH<V=G1$GlYt%W3VBia[312jEs,<">j5eXPi]Tc&"f$eH+b#UT"gWOpMD#4XdYRk$[UIYfaF!GmLN7J7N'.Gl_7,Tf9S+
%(="c?RtL3jNXg2pLX=0Ga9HTiW7P8,jTn]XJXSmO#%3`M9%"8SE<&MuR;Wm=H%pt34C`+a$@==lBgj(0.h<aA^m\9Bob/3Fi7UnW
%bsBud@aS:+&##6nO:3D)(omB8KZsN+CR/OK<Mnae>'0for64baoIoO(Yh'<$k$Z2!A=Jd<d)lI3#&mnA0">_*oNPbV*/''UVWPl3
%:]RU[J7N%MO$AS'^:B\H[6q#uf)L)'jg$(M#d$.<*+"M7;VUW3[SOqiMSP/i)`/oQTp5kE%#j@g#G6oZJ<_LT!Ln`2Ot(r0M$%:b
%!T`0D2Cgibeg.%/6CjF3'8FkIc\qou_/*98W`okUONSga*O5V8ZgSN^`$$u&1ZRD9a3/6Q;slP@$"YiT/j\\cU:!0a8'Hhm8Du)F
%"g]*<gM0isXFEr^:8m.`>'0g*r+Lem;VuC"5@-2\fGn/cNL].l+gge?Oo]Acb2jO"0H/HO)NMT:2m[3n*^V@f+<08(*Hs'Y"^cCn
%2&p%_2CDID#`\])./6gY.Ni`O6AW"rj>_/66&!Z*NB`WF!OC,R;K+,B;71q+VkkI#$3D%26DsAc>'U,$!7pV3CGt':n$+cC,6r#p
%p<7T[qQVFZTp5kE%?1:u:pAXJ6-=dt3XKU40%q7DjWV#%!"K,#@SOjq:"O_Tej`XZ?*jok%Qmnp7!6GL3.N!?o6=P[_3SWu2=&dg
%E5C-lS!/WSaob0=;I(tWjbC;WCT"aUjc6eWQg9?0_5TPM<ZXL]0QS;-bo"O4/de)#$bd>2S32I**^DX!KuDYLK!`*5fGs5_ZcquO
%8KL2K%j2aO6K287-)r#ejB5Wl%#WoR<WQ&;6E:S=LW>YkPq4mW:3O(++`Pg=W@AFPPm<BZA=f=X$)frog(R;.(:;+Co.1_DIf`B,
%%IiF8_6TU@CeId\*/#@u7E.7-6YPQ^,Qe5=@_aU-ZQ+P(:amhb3[kV`,h#X>a[9b'!Fu<%B$'QKN*Yt67t@94Z6TsS56<3'#-*n$
%bUfu`<#%:r@7N@!n0AO<Pm<B[n7mE:0%^/!H+':fE5k$ES!/WSaob0=W1N77^lD?b56:udQR-n_r=M"T2Ls6ilo@sT*Z2M`$#C*s
%\?07^ndnuM!6N$2',9eua:B*'=tqIAQGKGSS!G9r*($\9+GV%%I?3>We%oOAKSNYX&)k@?&X%]nF<p&/'cEZuT<2c5m'.n.?:c2)
%.h<aAi1fMXT%O*=GrDK73+#JDbE=u@<ZXLa^dV7=?u3Jr1dLOA$frNo(c]B@J?,]*q!5Yaj!1q)=<0+H4u3\o'oe?o;tOY(Zbkk_
%N4Y92-P)o9#ET@id8h3F<PJ-.a3L3lRUrh4KiN!.X>YSK*,d6<mG?\%@Dbrsc+t:,7Vba?67WQh)49qk>CZ4a`iR4E:XG_IP)%DV
%rY&fE>gnu+m6+KA<)SqRlO),6Ss%)[GmLN7J7Lo[\ms><2GgBK2G&cL0]D0Nc,i=djT/lo[_bB$a4=V3_BKOpSCBnt3+>p9Ae^d'
%B4nku`mO*/.r5\BD31dg&6a>Zfta'-e)A?1Ma.'Zr,F''#lVS(5mguIDCS3t^+@<nPJEuR\lBe<.h<aAW0Ji(Ad0*!IL9m$-LK-[
%ndnuM!6N%/@:tgGngmkX<i2n$3LKY]m4'KQj<:o$!3uW1)_SYj*?3Y1_DbkD0O8<IfL[,N.h<a?i"Er?bP]-<Z7'N!VX%CR8?OBe
%<d6qN(<ai.mPMn6GH1!E.4Yd"\/fI.ndnuM!6G3UQDp$*%)=+1MOHiX'VWTY9%"8SE<&!YAi'n`1rd@ONCg?7#^n-[\X5o/67WQh
%)5-Z\JpXV^J[A6^@DM"JFQUr>![J;MPm<B[i6AV4GKOP#gKYIO#8:t[h4-T\<ZXLa^m1J'nSP`Mq]Z;^%OQ$%Xn!$,GlWVN1A:H&
%Sq2/5Zh=e=Zj3)N&[UIQj5<heRH;W@&p)InS?N=/6Z5^>6DH_#$D)Jp*;(P:T(f7h3=(UaMAF3/*^V@f+<.9$<;"nZkVhgc8cgAW
%$a&t2>'U+i^e>KeBe"/kF3]]\k2:p)iA[ftQkc52#Np]e^@;[,*XHC]K$D+Q.;LYkj<:o$!0Vo<X-aSTaZs3@,_aLZ*c#-DCQU`4
%<ZXLa^]gR>f/+E`mHtiM#H,;SfsEAmndnuM!8.>gPj2T:#`Qbc!h4hk[J<W5#KTL>8AVVHPO^?h^Z$e;YW4[O>IWbU+gge?Z2pI-
%]`Dq-IkX.W&.@SC4;^%E1/RJKif'?IZ[jn#$CcY]G%GD`*^V@f+<.8u'Q1tl/TGVb8)VmH"XY,R,S-T6#ET?j2Dnhp>EpG;jfL"K
%%RNf`*SD\KTp5kE%H,HT0X+JFmgS\"lsfK!*5I2X,:!@APtmXVa9Wc6('HN#H`24Tj,3,X=n.o"E1Rr6<+H-uUYS)Nk2=a=9;gf%
%JIl"1!8.A/fsCsllRA*Fp]Q/'===^=_8$YGJIV'b*Xl!tW&b"dI4UP:cl4s\8)2EE?%0DS$To.72^rPBZ(lLnbCog!R5Mm&B.;f6
%8&QQ-l<g]crS,l/];oTEEqO7`I.d0oVuDb7^A'mg+)h2YFSWtXB@Gts5<[fYrp/Cpqo_4N5MgdtrVl6PmG@s:9AnRV:\PC7$g@Z0
%0CGFghmE,:O72Po!WL!e1QYD!TAEm;X8fe6kmPM"^0Ic<bD"Y6/(A\:1K+#B^Vbd%e#Rp(VX6F2T#,.($_M.`+:p;ZP]>,%42).8
%6^G4F1HYLB"Fm6XrWsSBo`EsbqhUZSXI7\MmqB:[a+b3DMW74!qE"3?i?Q'C6]gb#jm0U?_YuJ9T0E8E+*%>FL-@c?s/.(E;tD@G
%[e8)RgKuUJ>fNBl^?]Ekn,I>//Em/h8qik7^KiF4_5HC9mAkJX-sg&RXCNsY/:TmY;!$mKNB-%=.mi*CE5@lnc(@9gPdC<:+W-;_
%`8LGW8-JRK\/q[OM7c-Pj@fJG]ZWec^>U$B[d`o?o7WV*pC%]V1rB]AhQT5W^ujS30-c2q&#%-1s/3DT\Y#/b\X+=1V0M61:]4XK
%PldG;pG?m%_#GYq?&oBUEdb`<&+$i7FX!/@)R[`[U]75laN$7D%/C3BpuCTlYb)\rkN#;mFJllirDKMhTZTX#o$9Q!bEk<hT=5#h
%=m*BACJT`YI/?k2:-6,[;#:!>LZc-Xd<Q!EH+9nWkluqB-+ne(G9UDrJS$h_q+LS.O24=kU?d)Wh#b%F[D:-p$]m3hrhN%TV>gcN
%oIkD/I,:;pYCg[r?m"<(7SM?;"WtDt(47;`6^+7WCj\5W8C.Jt#N=>Yb)fUE67WT)l#N0crbG!X?d"jMkUm+md!2<XTu]T7jP_E4
%-`Z>oJ,A6al+?\.T&/A^h)tTFBC,H??f<`/VQ\t>4MVj0lK-2*Dr1EZ_lN[4)u/0kiLE%1q&@sqYO"CkH$+J_/ml<eI_U:1iRds^
%Vp!9\^YQSO]_laGQRDXi$GG)4T>3Yea04@7qaLK&?>YD.&Kgu;+7F]U^J-Tc%tFKIror\H"9&$;i'5G:pu,ch0>9)(s7,OE%l_8\
%5()rr#LEGGk2#Ec%l`t3mDIJ\GE4]_H$d*4]7U3)qeQ5H0(0j!+8_m]H[5PNr\krB'#F2&J,Jo1Y+GS.<DsKN~>
%AI9_PrivateDataEnd
